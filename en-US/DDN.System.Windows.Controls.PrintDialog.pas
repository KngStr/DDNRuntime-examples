//----------------------------------------------------------------------------
//  PresentationFramework.dll: PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Framework: 4.0
//----------------------------------------------------------------------------
//  UnitName: DDN.System.Windows.Controls.PrintDialog
//  Author: ying32
//----------------------------------------------------------------------------

unit DDN.System.Windows.Controls.PrintDialog;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDN.mscorlib,
  DDN.PresentationFramework,
  DDN.System.Printing,
  DDN.ReachFramework,
  DDN.PresentationCore;

type


{ declares }

  DNPrintDialog = interface; // type: System.Windows.Controls.PrintDialog, namespace: System.Windows.Controls


{ objects }

  //-------------namespace: System.Windows.Controls----------------
  DNPrintDialogClass = interface(DDN.mscorlib.DNObjectClass)
  ['{CEB0CE94-EB6B-51E6-AD2B-52258638203E}']
  { constructors } 

    ///<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialog" />
    ///  class.</summary>
    {class} function init: DNPrintDialog;

  end;

  ///<summary>Invokes a standard Microsoft Windows print dialog box that configures a <see cref="T:System.Printing.PrintTicket" />
  ///  and <see cref="T:System.Printing.PrintQueue" />
  ///  according to user input and then prints a document. </summary>
  [DNTypeName('System.Windows.Controls.PrintDialog')]
  DNPrintDialog = interface(DDN.mscorlib.DNObject)
  ['{1ECA845D-0AF9-3702-AFEE-75CB6B682526}']
  { getters & setters } 

    function get_PageRangeSelection: DNPageRangeSelection;
    procedure set_PageRangeSelection(value: DNPageRangeSelection);
    function get_PageRange: DNPageRange;
    procedure set_PageRange(value: DNPageRange);
    function get_UserPageRangeEnabled: Boolean;
    procedure set_UserPageRangeEnabled(value: Boolean);
    function get_SelectedPagesEnabled: Boolean;
    procedure set_SelectedPagesEnabled(value: Boolean);
    function get_CurrentPageEnabled: Boolean;
    procedure set_CurrentPageEnabled(value: Boolean);
    function get_MinPage: UInt32;
    procedure set_MinPage(value: UInt32);
    function get_MaxPage: UInt32;
    procedure set_MaxPage(value: UInt32);
    function get_PrintQueue: DDN.System.Printing.DNPrintQueue;
    procedure set_PrintQueue(value: DDN.System.Printing.DNPrintQueue);
    function get_PrintTicket: DDN.ReachFramework.DNPrintTicket;
    procedure set_PrintTicket(value: DDN.ReachFramework.DNPrintTicket);
    function get_PrintableAreaWidth: Double;
    function get_PrintableAreaHeight: Double;

  { methods } 

    ///<summary>Invokes the <see cref="T:System.Windows.Controls.PrintDialog" />
    ///  as a modal dialog box. </summary>
    ///<returns><see langword="true" />
    ///  if a user clicks Print; <see langword="false" />
    ///  if a user clicks Cancel; or <see langword="null" />
    ///  if a user closes the dialog box without clicking Print or Cancel.</returns>
    function ShowDialog: DDN.mscorlib.DNNullable<Boolean>;
    ///<summary>Prints a visual (non-text) object, which is derived from the <see cref="T:System.Windows.Media.Visual" />
    ///  class, to the <see cref="T:System.Printing.PrintQueue" />
    ///  that is currently selected.</summary>
    ///  <param name="visual">The <see cref="T:System.Windows.Media.Visual" />
    ///  to print.</param>
    ///  <param name="description">A description of the job that is to be printed. This text appears in the user interface (UI) of the printer.</param>
    ///<exception cref="T:System.ArgumentNullException"><paramref name="visual" />
    ///  is <see langword="null" />
    ///  . </exception>
    procedure PrintVisual(visual: DDN.PresentationCore.DNVisual; description: string);
    ///<summary>Prints a <see cref="T:System.Windows.Documents.DocumentPaginator" />
    ///  object to the <see cref="T:System.Printing.PrintQueue" />
    ///  that is currently selected.</summary>
    ///  <param name="documentPaginator">The <see cref="T:System.Windows.Documents.DocumentPaginator" />
    ///  object to print.</param>
    ///  <param name="description">A description of the job that is to be printed. This text appears in the user interface (UI) of the printer.</param>
    ///<exception cref="T:System.ArgumentNullException"><paramref name="documentPaginator" />
    ///  is <see langword="null" />
    ///  . </exception>
    procedure PrintDocument(documentPaginator: DDN.PresentationCore.DNDocumentPaginator; description: string);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    ///<summary>Gets or sets the <see cref="T:System.Windows.Controls.PageRangeSelection" />
    ///  for this instance of <see cref="T:System.Windows.Controls.PrintDialog" />
    ///  .</summary>
    ///<returns>The <see cref="T:System.Windows.Controls.PageRangeSelection" />
    ///  value that represents the type of page range to print. </returns>
    property PageRangeSelection: DNPageRangeSelection read get_PageRangeSelection write set_PageRangeSelection;
    ///<summary>Gets or sets the range of pages to print when <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" />
    ///  is set to <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />
    ///  .</summary>
    ///<returns>A <see cref="T:System.Windows.Controls.PageRange" />
    ///  that represents the range of pages that are printed. </returns>
    ///<exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Controls.PageRange" />
    ///  object that is being used to set the property has either the beginning of the range or the end of the range set to a value that is less than 1.</exception>
    property PageRange: DNPageRange read get_PageRange write set_PageRange;
    ///<summary>Gets or sets a value that indicates whether users of the Print dialog box have the option to specify ranges of pages to print.</summary>
    ///<returns><see langword="true" />
    ///  if the option is available; otherwise, <see langword="false" />
    ///  .</returns>
    property UserPageRangeEnabled: Boolean read get_UserPageRangeEnabled write set_UserPageRangeEnabled;
    ///<summary>Gets or sets a value that indicates whether the option to print the selected pages is enabled.</summary>
    ///<returns><see langword="true" />
    ///  if the option to print the selected pages is enabled; otherwise, <see langword="false" />
    ///  .</returns>
    property SelectedPagesEnabled: Boolean read get_SelectedPagesEnabled write set_SelectedPagesEnabled;
    ///<summary>Gets or sets a value that indicates whether the option to print the current page is enabled.</summary>
    ///<returns><see langword="true" />
    ///  if the option to print the current page is enabled; otherwise, <see langword="false" />
    ///  .</returns>
    property CurrentPageEnabled: Boolean read get_CurrentPageEnabled write set_CurrentPageEnabled;
    ///<summary>Gets or sets the lowest page number that is allowed in page ranges.</summary>
    ///<returns>A <see cref="T:System.UInt32" />
    ///  that represents the lowest page number that can be used in a page range in the Print dialog box. </returns>
    ///<exception cref="T:System.ArgumentException">The property is being set to less than 1.</exception>
    property MinPage: UInt32 read get_MinPage write set_MinPage;
    ///<summary>Gets or sets the highest page number that is allowed in page ranges.</summary>
    ///<returns>A <see cref="T:System.UInt32" />
    ///  that represents the highest page number that can be used in a page range in the Print dialog box. </returns>
    ///<exception cref="T:System.ArgumentException">The property is being set to less than 1.</exception>
    property MaxPage: UInt32 read get_MaxPage write set_MaxPage;
    ///<summary>Gets or sets a <see cref="T:System.Printing.PrintQueue" />
    ///  that represents the printer that is selected.</summary>
    ///<returns>The <see cref="T:System.Printing.PrintQueue" />
    ///  that the user selected. </returns>
    property PrintQueue: DDN.System.Printing.DNPrintQueue read get_PrintQueue write set_PrintQueue;
    ///<summary>Gets or sets the <see cref="T:System.Printing.PrintTicket" />
    ///  that is used by the <see cref="T:System.Windows.Controls.PrintDialog" />
    ///  when the user clicks Print for the current print job.</summary>
    ///<returns>A <see cref="T:System.Printing.PrintTicket" />
    ///  that is used the next time the Print button in the dialog box is clicked.Setting this <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" />
    ///  property does not validate or modify the specified <see cref="T:System.Printing.PrintTicket" />
    ///  for a particular <see cref="T:System.Printing.PrintQueue" />
    ///  .  If needed, use the <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
    ///  method to create a <see cref="T:System.Printing.PrintQueue" />
    ///  -specific <see cref="T:System.Printing.PrintTicket" />
    ///  that is valid for a given printer.</returns>
    property PrintTicket: DDN.ReachFramework.DNPrintTicket read get_PrintTicket write set_PrintTicket;
    ///<summary>Gets the width of the printable area of the page.</summary>
    ///<returns>A <see cref="T:System.Double" />
    ///  that represents the width of the printable page area.</returns>
    property PrintableAreaWidth: Double read get_PrintableAreaWidth;
    ///<summary>Gets the height of the printable area of the page.</summary>
    ///<returns>A <see cref="T:System.Double" />
    ///  that represents the height of the printable page area.</returns>
    property PrintableAreaHeight: Double read get_PrintableAreaHeight;
  end;

  TDNPrintDialog = class(TDNGenericImport<DNPrintDialogClass, DNPrintDialog>) end;


implementation

end.
