//----------------------------------------------------------------------------
//  System.Runtime.InteropServices.RuntimeInformation.dll: System.Runtime.InteropServices.RuntimeInformation, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 3.1.18
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.Runtime.InteropServices.RuntimeInformation
//  Author: ying32
//----------------------------------------------------------------------------

unit DDNC.System.Runtime.InteropServices.RuntimeInformation;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib;

type

{ enums }

  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.Architecture')]
  DNArchitecture = type Integer;
  DNArchitectureHelper = record helper for DNArchitecture
  public const
    X86 = 0;
    X64 = 1;
    Arm = 2;
    Arm64 = 3;
  end;




type


{ declares }

  DNRuntimeInformation = interface; // type: System.Runtime.InteropServices.RuntimeInformation, namespace: System.Runtime.InteropServices
  DNOSPlatform = interface; // type: System.Runtime.InteropServices.OSPlatform, namespace: System.Runtime.InteropServices


{ objects }

  //-------------namespace: System.Runtime.InteropServices----------------
  DNRuntimeInformationClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{457363F1-70A9-5754-A509-BC4F6DD248EE}']
  { static getter & setter } 

    {class} function get_FrameworkDescription: string;
    {class} function get_OSDescription: string;
    {class} function get_OSArchitecture: DNArchitecture;
    {class} function get_ProcessArchitecture: DNArchitecture;

  { static methods } 

    {class} function IsOSPlatform(osPlatform: DNOSPlatform): Boolean;

  { static propertys } 

    {class} property FrameworkDescription: string read get_FrameworkDescription;
    {class} property OSDescription: string read get_OSDescription;
    {class} property OSArchitecture: DNArchitecture read get_OSArchitecture;
    {class} property ProcessArchitecture: DNArchitecture read get_ProcessArchitecture;
  end;

  [DNTypeName('System.Runtime.InteropServices.RuntimeInformation')]
  DNRuntimeInformation = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{FCC1B60B-A241-3F91-B826-A84A30AFD36A}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNRuntimeInformation = class(TDNGenericImport<DNRuntimeInformationClass, DNRuntimeInformation>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNOSPlatformClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{5E1F6665-0D3F-5D87-953C-09EC630D762B}']
  { static getter & setter } 

    {class} function get_FreeBSD: DNOSPlatform;
    {class} function get_Linux: DNOSPlatform;
    {class} function get_OSX: DNOSPlatform;
    {class} function get_Windows: DNOSPlatform;

  { static methods } 

    {class} function Create(osPlatform: string): DNOSPlatform;

  { static propertys } 

    {class} property FreeBSD: DNOSPlatform read get_FreeBSD;
    {class} property Linux: DNOSPlatform read get_Linux;
    {class} property OSX: DNOSPlatform read get_OSX;
    {class} property Windows: DNOSPlatform read get_Windows;
  end;

  [DNTypeName('System.Runtime.InteropServices.OSPlatform')]
  DNOSPlatform = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{630E77E8-BD95-30B0-84E2-B1CD2329B342}']
  { methods } 

    function Equals(other: DNOSPlatform): Boolean; overload;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean; overload;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNOSPlatform = class(TDNGenericImport<DNOSPlatformClass, DNOSPlatform>) end;


implementation


initialization
  InternalTryLoadAssemblyModule('System.Runtime.InteropServices.RuntimeInformation, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a');

finalization

end.
