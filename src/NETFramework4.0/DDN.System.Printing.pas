//----------------------------------------------------------------------------
//  System.Printing.dll: System.Printing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Framework 4.x
//----------------------------------------------------------------------------
//  UnitName: DDN.System.Printing
//  Author: ying32
//----------------------------------------------------------------------------

unit DDN.System.Printing;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDN.mscorlib,
  DDN.System,
  DDN.ReachFramework,
  DDN.PresentationFramework,
  DDN.System.Windows.Xps,
  DDN.System.Windows.Xps.Packaging;

type

{ enums }

  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.EnumeratedPrintQueueTypes')]
  DNEnumeratedPrintQueueTypes = type Integer;
  DNEnumeratedPrintQueueTypesHelper = record helper for DNEnumeratedPrintQueueTypes
  public const
    Queued = 1;
    DirectPrinting = 2;
    Shared = 8;
    Connections = 16;
    Local = 64;
    EnableDevQuery = 128;
    KeepPrintedJobs = 256;
    WorkOffline = 1024;
    EnableBidi = 2048;
    RawOnly = 4096;
    PublishedInDirectoryServices = 8192;
    Fax = 16384;
    TerminalServer = 32768;
    PushedUserConnection = 131072;
    PushedMachineConnection = 262144;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.LocalPrintServerIndexedProperty')]
  DNLocalPrintServerIndexedProperty = type Integer;
  DNLocalPrintServerIndexedPropertyHelper = record helper for DNLocalPrintServerIndexedProperty
  public const
    DefaultSpoolDirectory = 0;
    PortThreadPriority = 1;
    DefaultPortThreadPriority = 2;
    SchedulerPriority = 3;
    DefaultSchedulerPriority = 4;
    BeepEnabled = 5;
    NetPopup = 6;
    EventLog = 7;
    MajorVersion = 8;
    MinorVersion = 9;
    RestartJobOnPoolTimeout = 10;
    RestartJobOnPoolEnabled = 11;
    DefaultPrintQueue = 12;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintJobPriority')]
  DNPrintJobPriority = type Integer;
  DNPrintJobPriorityHelper = record helper for DNPrintJobPriority
  public const
    None = 0;
    Minimum = 1;
    Default_ = 1;
    Maximum = 99;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintJobStatus')]
  DNPrintJobStatus = type Integer;
  DNPrintJobStatusHelper = record helper for DNPrintJobStatus
  public const
    None = 0;
    Paused = 1;
    Error = 2;
    Deleting = 4;
    Spooling = 8;
    Printing = 16;
    Offline = 32;
    PaperOut = 64;
    Printed = 128;
    Deleted = 256;
    Blocked = 512;
    UserIntervention = 1024;
    Restarted = 2048;
    Completed = 4096;
    Retained = 8192;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintJobType')]
  DNPrintJobType = type Integer;
  DNPrintJobTypeHelper = record helper for DNPrintJobType
  public const
    None = 0;
    Xps = 1;
    Legacy = 2;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintQueueAttributes')]
  DNPrintQueueAttributes = type Integer;
  DNPrintQueueAttributesHelper = record helper for DNPrintQueueAttributes
  public const
    None = 0;
    Queued = 1;
    Direct = 2;
    Shared = 8;
    Hidden = 32;
    EnableDevQuery = 128;
    KeepPrintedJobs = 256;
    ScheduleCompletedJobsFirst = 512;
    EnableBidi = 2048;
    RawOnly = 4096;
    Published_ = 8192;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintQueueIndexedProperty')]
  DNPrintQueueIndexedProperty = type Integer;
  DNPrintQueueIndexedPropertyHelper = record helper for DNPrintQueueIndexedProperty
  public const
    Name = 0;
    ShareName = 1;
    Comment = 2;
    Location = 3;
    Description = 4;
    Priority = 5;
    DefaultPriority = 6;
    StartTimeOfDay = 7;
    UntilTimeOfDay = 8;
    AveragePagesPerMinute = 9;
    NumberOfJobs = 10;
    QueueAttributes = 11;
    QueueDriver = 12;
    QueuePort = 13;
    QueuePrintProcessor = 14;
    HostingPrintServer = 15;
    QueueStatus = 16;
    SeparatorFile = 17;
    UserPrintTicket = 18;
    DefaultPrintTicket = 19;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintQueueStatus')]
  DNPrintQueueStatus = type Integer;
  DNPrintQueueStatusHelper = record helper for DNPrintQueueStatus
  public const
    None = 0;
    Paused = 1;
    Error = 2;
    PendingDeletion = 4;
    PaperJam = 8;
    PaperOut = 16;
    ManualFeed = 32;
    PaperProblem = 64;
    Offline = 128;
    IOActive = 256;
    Busy = 512;
    Printing = 1024;
    OutputBinFull = 2048;
    NotAvailable = 4096;
    Waiting = 8192;
    Processing = 16384;
    Initializing = 32768;
    WarmingUp = 65536;
    TonerLow = 131072;
    NoToner = 262144;
    PagePunt = 524288;
    UserIntervention = 1048576;
    OutOfMemory = 2097152;
    DoorOpen = 4194304;
    ServerUnknown = 8388608;
    PowerSave = 16777216;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintQueueStringPropertyType')]
  DNPrintQueueStringPropertyType = type Integer;
  DNPrintQueueStringPropertyTypeHelper = record helper for DNPrintQueueStringPropertyType
  public const
    Location = 0;
    Comment = 1;
    ShareName = 2;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintServerEventLoggingTypes')]
  DNPrintServerEventLoggingTypes = type Integer;
  DNPrintServerEventLoggingTypesHelper = record helper for DNPrintServerEventLoggingTypes
  public const
    None = 0;
    LogPrintingSuccessEvents = 1;
    LogPrintingErrorEvents = 2;
    LogPrintingWarningEvents = 3;
    LogPrintingInformationEvents = 4;
    LogAllPrintingEvents = 5;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintServerIndexedProperty')]
  DNPrintServerIndexedProperty = type Integer;
  DNPrintServerIndexedPropertyHelper = record helper for DNPrintServerIndexedProperty
  public const
    DefaultSpoolDirectory = 0;
    PortThreadPriority = 1;
    DefaultPortThreadPriority = 2;
    SchedulerPriority = 3;
    DefaultSchedulerPriority = 4;
    BeepEnabled = 5;
    NetPopup = 6;
    EventLog = 7;
    MajorVersion = 8;
    MinorVersion = 9;
    RestartJobOnPoolTimeout = 10;
    RestartJobOnPoolEnabled = 11;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintSystemDesiredAccess')]
  DNPrintSystemDesiredAccess = type Integer;
  DNPrintSystemDesiredAccessHelper = record helper for DNPrintSystemDesiredAccess
  public const
    None = 0;
    EnumerateServer = 131074;
    UsePrinter = 131080;
    AdministrateServer = 983041;
    AdministratePrinter = 983052;
  end;


  //-------------namespace: System.Printing----------------
  [DNTypeName('System.Printing.PrintSystemObjectLoadMode')]
  DNPrintSystemObjectLoadMode = type Integer;
  DNPrintSystemObjectLoadModeHelper = record helper for DNPrintSystemObjectLoadMode
  public const
    None = 0;
    LoadUninitialized = 1;
    LoadInitialized = 2;
  end;




type


{ declares }

  DNPrintPropertyDictionary = interface; // type: System.Printing.IndexedProperties.PrintPropertyDictionary, namespace: System.Printing.IndexedProperties
  DNPrintSystemObjectPropertiesChangedEventArgs = interface; // type: System.Printing.PrintSystemObjectPropertiesChangedEventArgs, namespace: System.Printing
  DNPrintSystemObjectPropertyChangedEventArgs = interface; // type: System.Printing.PrintSystemObjectPropertyChangedEventArgs, namespace: System.Printing
  DNPrintQueueStream = interface; // type: System.Printing.PrintQueueStream, namespace: System.Printing
  DNPrintProperty = interface; // type: System.Printing.IndexedProperties.PrintProperty, namespace: System.Printing.IndexedProperties
  DNPrintBooleanProperty = interface; // type: System.Printing.IndexedProperties.PrintBooleanProperty, namespace: System.Printing.IndexedProperties
  DNPrintByteArrayProperty = interface; // type: System.Printing.IndexedProperties.PrintByteArrayProperty, namespace: System.Printing.IndexedProperties
  DNPrintDateTimeProperty = interface; // type: System.Printing.IndexedProperties.PrintDateTimeProperty, namespace: System.Printing.IndexedProperties
  DNPrintDriverProperty = interface; // type: System.Printing.IndexedProperties.PrintDriverProperty, namespace: System.Printing.IndexedProperties
  DNPrintInt32Property = interface; // type: System.Printing.IndexedProperties.PrintInt32Property, namespace: System.Printing.IndexedProperties
  DNPrintJobPriorityProperty = interface; // type: System.Printing.IndexedProperties.PrintJobPriorityProperty, namespace: System.Printing.IndexedProperties
  DNPrintJobStatusProperty = interface; // type: System.Printing.IndexedProperties.PrintJobStatusProperty, namespace: System.Printing.IndexedProperties
  DNPrintPortProperty = interface; // type: System.Printing.IndexedProperties.PrintPortProperty, namespace: System.Printing.IndexedProperties
  DNPrintProcessorProperty = interface; // type: System.Printing.IndexedProperties.PrintProcessorProperty, namespace: System.Printing.IndexedProperties
  DNPrintQueueAttributeProperty = interface; // type: System.Printing.IndexedProperties.PrintQueueAttributeProperty, namespace: System.Printing.IndexedProperties
  DNPrintQueueProperty = interface; // type: System.Printing.IndexedProperties.PrintQueueProperty, namespace: System.Printing.IndexedProperties
  DNPrintQueueStatusProperty = interface; // type: System.Printing.IndexedProperties.PrintQueueStatusProperty, namespace: System.Printing.IndexedProperties
  DNPrintServerLoggingProperty = interface; // type: System.Printing.IndexedProperties.PrintServerLoggingProperty, namespace: System.Printing.IndexedProperties
  DNPrintServerProperty = interface; // type: System.Printing.IndexedProperties.PrintServerProperty, namespace: System.Printing.IndexedProperties
  DNPrintStreamProperty = interface; // type: System.Printing.IndexedProperties.PrintStreamProperty, namespace: System.Printing.IndexedProperties
  DNPrintStringProperty = interface; // type: System.Printing.IndexedProperties.PrintStringProperty, namespace: System.Printing.IndexedProperties
  DNPrintSystemTypeProperty = interface; // type: System.Printing.IndexedProperties.PrintSystemTypeProperty, namespace: System.Printing.IndexedProperties
  DNPrintThreadPriorityProperty = interface; // type: System.Printing.IndexedProperties.PrintThreadPriorityProperty, namespace: System.Printing.IndexedProperties
  DNPrintTicketProperty = interface; // type: System.Printing.IndexedProperties.PrintTicketProperty, namespace: System.Printing.IndexedProperties
  DNPrintDocumentImageableArea = interface; // type: System.Printing.PrintDocumentImageableArea, namespace: System.Printing
  DNPrintJobSettings = interface; // type: System.Printing.PrintJobSettings, namespace: System.Printing
  DNPrintQueueStringProperty = interface; // type: System.Printing.PrintQueueStringProperty, namespace: System.Printing
  DNPrintSystemObject = interface; // type: System.Printing.PrintSystemObject, namespace: System.Printing
  DNPrintFilter = interface; // type: System.Printing.PrintFilter, namespace: System.Printing
  DNPrintDriver = interface; // type: System.Printing.PrintDriver, namespace: System.Printing
  DNPrintProcessor = interface; // type: System.Printing.PrintProcessor, namespace: System.Printing
  DNPrintPort = interface; // type: System.Printing.PrintPort, namespace: System.Printing
  DNPrintQueue = interface; // type: System.Printing.PrintQueue, namespace: System.Printing
  DNPrintServer = interface; // type: System.Printing.PrintServer, namespace: System.Printing
  DNLocalPrintServer = interface; // type: System.Printing.LocalPrintServer, namespace: System.Printing
  DNPrintSystemJobInfo = interface; // type: System.Printing.PrintSystemJobInfo, namespace: System.Printing
  DNPrintSystemObjects = interface; // type: System.Printing.PrintSystemObjects, namespace: System.Printing
  DNPrintJobInfoCollection = interface; // type: System.Printing.PrintJobInfoCollection, namespace: System.Printing
  DNPrintQueueCollection = interface; // type: System.Printing.PrintQueueCollection, namespace: System.Printing


{ objects }

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintPropertyDictionaryClass = interface(DDN.mscorlib.DNHashtableClass)
  ['{C8321301-CD28-5D2C-90FE-9759DA988651}']
  { constructors } 

    {class} function init: DNPrintPropertyDictionary;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintPropertyDictionary')]
  DNPrintPropertyDictionary = interface(DDN.mscorlib.DNHashtable)
  ['{35D0C565-A93C-3961-9AE8-A3A16C051876}']
  { getters & setters } 

    function get_Item(key: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject;
    procedure set_Item(key: DDN.mscorlib.DNObject; value: DDN.mscorlib.DNObject);
    function get_IsReadOnly: Boolean;
    function get_IsFixedSize: Boolean;
    function get_IsSynchronized: Boolean;
    function get_Keys: DDN.mscorlib.DNICollection;
    function get_Values: DDN.mscorlib.DNICollection;
    function get_SyncRoot: DDN.mscorlib.DNObject;
    function get_Count: Int32;

  { methods } 

    procedure Add(attributeValue: DNPrintProperty); overload;
    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure GetObjectData(info: DDN.mscorlib.DNSerializationInfo; context: DDN.mscorlib.DNStreamingContext);
    function GetProperty(attribName: string): DNPrintProperty;
    procedure SetProperty(attribName: string; attribValue: DNPrintProperty);
    procedure Dispose;
    procedure Add(key: DDN.mscorlib.DNObject; value: DDN.mscorlib.DNObject); overload;
    procedure Clear;
    function Clone: DDN.mscorlib.DNObject;
    function &Contains(key: DDN.mscorlib.DNObject): Boolean;
    function ContainsKey(key: DDN.mscorlib.DNObject): Boolean;
    function ContainsValue(value: DDN.mscorlib.DNObject): Boolean;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; arrayIndex: Int32);
    function GetEnumerator: DDN.mscorlib.DNIDictionaryEnumerator;
    procedure Remove(key: DDN.mscorlib.DNObject);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[key: DDN.mscorlib.DNObject]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsFixedSize: Boolean read get_IsFixedSize;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property Keys: DDN.mscorlib.DNICollection read get_Keys;
    property Values: DDN.mscorlib.DNICollection read get_Values;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
    property Count: Int32 read get_Count;
  end;

  TDNPrintPropertyDictionary = class(TDNGenericImport<DNPrintPropertyDictionaryClass, DNPrintPropertyDictionary>) end;

  //-------------namespace: System.Printing----------------
  DNPrintSystemObjectPropertiesChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{B9B1D768-C687-521F-94FD-F887A36D4730}']
  { constructors } 

    {class} function init(events: DDN.System.DNStringCollection): DNPrintSystemObjectPropertiesChangedEventArgs;

  end;

  [DNTypeName('System.Printing.PrintSystemObjectPropertiesChangedEventArgs')]
  DNPrintSystemObjectPropertiesChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{A190E5AB-D048-3873-A91A-F56718BE248E}']
  { getters & setters } 

    function get_PropertiesNames: DDN.System.DNStringCollection;

  { methods } 

    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property PropertiesNames: DDN.System.DNStringCollection read get_PropertiesNames;
  end;

  TDNPrintSystemObjectPropertiesChangedEventArgs = class(TDNGenericImport<DNPrintSystemObjectPropertiesChangedEventArgsClass, DNPrintSystemObjectPropertiesChangedEventArgs>) end;

  //-------------namespace: System.Printing----------------
  DNPrintSystemObjectPropertyChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{C25C35E3-1A7A-501E-8EAB-1607C91A2866}']
  { constructors } 

    {class} function init(eventName: string): DNPrintSystemObjectPropertyChangedEventArgs;

  end;

  [DNTypeName('System.Printing.PrintSystemObjectPropertyChangedEventArgs')]
  DNPrintSystemObjectPropertyChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{88DF1A0B-45D9-37D4-B0D0-3DBB96F956D9}']
  { getters & setters } 

    function get_PropertyName: string;

  { methods } 

    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property PropertyName: string read get_PropertyName;
  end;

  TDNPrintSystemObjectPropertyChangedEventArgs = class(TDNGenericImport<DNPrintSystemObjectPropertyChangedEventArgsClass, DNPrintSystemObjectPropertyChangedEventArgs>) end;

  //-------------namespace: System.Printing----------------
  DNPrintQueueStreamClass = interface(DDN.mscorlib.DNStreamClass)
  ['{C4B32F22-7FBC-54B9-A991-6CCA2E49DB58}']
  { constructors } 

    {class} function init(printQueue: DNPrintQueue; printJobName: string): DNPrintQueueStream; overload;
    {class} function init(printQueue: DNPrintQueue; printJobName: string; commitDataOnClose: Boolean): DNPrintQueueStream; overload;
    {class} function init(printQueue: DNPrintQueue; printJobName: string; commitDataOnClose: Boolean; printTicket: DDN.ReachFramework.DNPrintTicket): DNPrintQueueStream; overload;

  end;

  [DNTypeName('System.Printing.PrintQueueStream')]
  DNPrintQueueStream = interface(DDN.mscorlib.DNStream)
  ['{21C8E2F4-A074-3A09-BB57-74E34A0A4A97}']
  { getters & setters } 

    function get_JobIdentifier: Int32;
    function get_Position: Int64;
    procedure set_Position(value: Int64);
    function get_Length: Int64;
    function get_CanSeek: Boolean;
    function get_CanWrite: Boolean;
    function get_CanRead: Boolean;
    function get_CanTimeout: Boolean;
    function get_ReadTimeout: Int32;
    procedure set_ReadTimeout(value: Int32);
    function get_WriteTimeout: Int32;
    procedure set_WriteTimeout(value: Int32);

  { methods } 

    function BeginWrite(buffer: TArray<Byte>; offset: Int32; count: Int32; callback: DDN.mscorlib.DNAsyncCallback; state: DDN.mscorlib.DNObject): DDN.mscorlib.DNIAsyncResult;
    procedure EndWrite(asyncResult: DDN.mscorlib.DNIAsyncResult);
    function Read(buffer: TArray<Byte>; offset: Int32; count: Int32): Int32;
    procedure Write(buffer: TArray<Byte>; offset: Int32; count: Int32);
    procedure Flush;
    function Seek(offset: Int64; origin: DDN.mscorlib.DNSeekOrigin): Int64;
    procedure Close;
    procedure SetLength(value: Int64);
    procedure HandlePackagingProgressEvent(sender: DDN.mscorlib.DNObject; e: DDN.System.Windows.Xps.Packaging.DNPackagingProgressEventArgs);
    function CopyToAsync(destination: DDN.mscorlib.DNStream; bufferSize: Int32; cancellationToken: DDN.mscorlib.DNCancellationToken): DDN.mscorlib.DNTask; overload;
    procedure Dispose;
    function BeginRead(buffer: TArray<Byte>; offset: Int32; count: Int32; callback: DDN.mscorlib.DNAsyncCallback; state: DDN.mscorlib.DNObject): DDN.mscorlib.DNIAsyncResult;
    function EndRead(asyncResult: DDN.mscorlib.DNIAsyncResult): Int32;
    function ReadAsync(buffer: TArray<Byte>; offset: Int32; count: Int32; cancellationToken: DDN.mscorlib.DNCancellationToken): DDN.mscorlib.DNTask<Int32>; overload;
    function WriteAsync(buffer: TArray<Byte>; offset: Int32; count: Int32; cancellationToken: DDN.mscorlib.DNCancellationToken): DDN.mscorlib.DNTask; overload;
    function ReadByte: Int32;
    procedure WriteByte(value: Byte);
    function CopyToAsync(destination: DDN.mscorlib.DNStream): DDN.mscorlib.DNTask; overload;
    function CopyToAsync(destination: DDN.mscorlib.DNStream; bufferSize: Int32): DDN.mscorlib.DNTask; overload;
    procedure CopyTo(destination: DDN.mscorlib.DNStream); overload;
    procedure CopyTo(destination: DDN.mscorlib.DNStream; bufferSize: Int32); overload;
    function FlushAsync: DDN.mscorlib.DNTask; overload;
    function FlushAsync(cancellationToken: DDN.mscorlib.DNCancellationToken): DDN.mscorlib.DNTask; overload;
    function ReadAsync(buffer: TArray<Byte>; offset: Int32; count: Int32): DDN.mscorlib.DNTask<Int32>; overload;
    function WriteAsync(buffer: TArray<Byte>; offset: Int32; count: Int32): DDN.mscorlib.DNTask; overload;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property JobIdentifier: Int32 read get_JobIdentifier;
    property Position: Int64 read get_Position write set_Position;
    property Length: Int64 read get_Length;
    property CanSeek: Boolean read get_CanSeek;
    property CanWrite: Boolean read get_CanWrite;
    property CanRead: Boolean read get_CanRead;
    property CanTimeout: Boolean read get_CanTimeout;
    property ReadTimeout: Int32 read get_ReadTimeout write set_ReadTimeout;
    property WriteTimeout: Int32 read get_WriteTimeout write set_WriteTimeout;
  end;

  TDNPrintQueueStream = class(TDNGenericImport<DNPrintQueueStreamClass, DNPrintQueueStream>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintPropertyClass = interface(DNObjectClass)
  ['{8F32D3AB-674B-5DFD-A992-9A5F5297AC16}']
  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintProperty')]
  DNPrintProperty = interface(DDN.mscorlib.DNIDisposable)
  ['{6D8082E6-2DC0-3AE4-A6E2-BD72FB313BEC}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintProperty = class(TDNGenericImport<DNPrintPropertyClass, DNPrintProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintBooleanPropertyClass = interface(DNPrintPropertyClass)
  ['{D1F96E5C-7A1A-5242-B7B1-C8AF78D8D4DF}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintBooleanProperty; overload;
    {class} function init(attributeName: string): DNPrintBooleanProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintBooleanProperty')]
  DNPrintBooleanProperty = interface(DNPrintProperty)
  ['{C5C69579-1C8D-3EEC-88C5-44D0835614DA}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintBooleanProperty = class(TDNGenericImport<DNPrintBooleanPropertyClass, DNPrintBooleanProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintByteArrayPropertyClass = interface(DNPrintPropertyClass)
  ['{C976F79B-B497-553B-B17B-9995EEC6EDE9}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintByteArrayProperty; overload;
    {class} function init(attributeName: string): DNPrintByteArrayProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintByteArrayProperty')]
  DNPrintByteArrayProperty = interface(DNPrintProperty)
  ['{F01BDE99-17A7-33DD-BCC9-2EFAE91F5F91}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintByteArrayProperty = class(TDNGenericImport<DNPrintByteArrayPropertyClass, DNPrintByteArrayProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintDateTimePropertyClass = interface(DNPrintPropertyClass)
  ['{31F2A3AA-98B6-5670-8EC4-EFBF044C3E11}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintDateTimeProperty; overload;
    {class} function init(attributeName: string): DNPrintDateTimeProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintDateTimeProperty')]
  DNPrintDateTimeProperty = interface(DNPrintProperty)
  ['{E7A1C45F-0145-3039-93FA-6D163D25E27A}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintDateTimeProperty = class(TDNGenericImport<DNPrintDateTimePropertyClass, DNPrintDateTimeProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintDriverPropertyClass = interface(DNPrintPropertyClass)
  ['{820601AF-B282-5847-84F2-1D5A895E7B6C}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintDriverProperty; overload;
    {class} function init(attributeName: string): DNPrintDriverProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintDriverProperty')]
  DNPrintDriverProperty = interface(DNPrintProperty)
  ['{A67A4F49-0B24-30FD-9CD2-636FD8DB105A}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintDriverProperty = class(TDNGenericImport<DNPrintDriverPropertyClass, DNPrintDriverProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintInt32PropertyClass = interface(DNPrintPropertyClass)
  ['{2CFDD4BD-CF4C-52A3-BC18-550A3D8132D8}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintInt32Property; overload;
    {class} function init(attributeName: string): DNPrintInt32Property; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintInt32Property')]
  DNPrintInt32Property = interface(DNPrintProperty)
  ['{B6269A58-62AE-3FEA-950F-B507FAF084DE}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintInt32Property = class(TDNGenericImport<DNPrintInt32PropertyClass, DNPrintInt32Property>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintJobPriorityPropertyClass = interface(DNPrintPropertyClass)
  ['{CED8CBD1-469C-5475-9187-43131457AB9B}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintJobPriorityProperty; overload;
    {class} function init(attributeName: string): DNPrintJobPriorityProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintJobPriorityProperty')]
  DNPrintJobPriorityProperty = interface(DNPrintProperty)
  ['{A8A172E8-20A3-3918-94E7-502FBC7297CC}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintJobPriorityProperty = class(TDNGenericImport<DNPrintJobPriorityPropertyClass, DNPrintJobPriorityProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintJobStatusPropertyClass = interface(DNPrintPropertyClass)
  ['{E2FE5683-2D58-5AD1-BC48-B5D2406A66A8}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintJobStatusProperty; overload;
    {class} function init(attributeName: string): DNPrintJobStatusProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintJobStatusProperty')]
  DNPrintJobStatusProperty = interface(DNPrintProperty)
  ['{A990B357-38E2-3909-B094-F8802E4F9603}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintJobStatusProperty = class(TDNGenericImport<DNPrintJobStatusPropertyClass, DNPrintJobStatusProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintPortPropertyClass = interface(DNPrintPropertyClass)
  ['{42BACE57-DFB5-52AD-9A6C-88CA25F4C47E}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintPortProperty; overload;
    {class} function init(attributeName: string): DNPrintPortProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintPortProperty')]
  DNPrintPortProperty = interface(DNPrintProperty)
  ['{CAFD843C-6453-390D-8C58-52CB7B2F821D}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintPortProperty = class(TDNGenericImport<DNPrintPortPropertyClass, DNPrintPortProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintProcessorPropertyClass = interface(DNPrintPropertyClass)
  ['{EFAE7012-5758-57C9-A5EC-568D5B646A2D}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintProcessorProperty; overload;
    {class} function init(attributeName: string): DNPrintProcessorProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintProcessorProperty')]
  DNPrintProcessorProperty = interface(DNPrintProperty)
  ['{5044E74F-5C15-3D37-9546-ED6A557FFBFE}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintProcessorProperty = class(TDNGenericImport<DNPrintProcessorPropertyClass, DNPrintProcessorProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintQueueAttributePropertyClass = interface(DNPrintPropertyClass)
  ['{69BF687A-3AAE-581C-B1C2-8AD752C01A1D}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintQueueAttributeProperty; overload;
    {class} function init(attributeName: string): DNPrintQueueAttributeProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintQueueAttributeProperty')]
  DNPrintQueueAttributeProperty = interface(DNPrintProperty)
  ['{8BCDE6CF-93DC-3EEB-9B8E-794C22EFCD8B}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintQueueAttributeProperty = class(TDNGenericImport<DNPrintQueueAttributePropertyClass, DNPrintQueueAttributeProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintQueuePropertyClass = interface(DNPrintPropertyClass)
  ['{CFD9B131-42F7-5A65-806C-6788B880A20F}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintQueueProperty; overload;
    {class} function init(attributeName: string): DNPrintQueueProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintQueueProperty')]
  DNPrintQueueProperty = interface(DNPrintProperty)
  ['{3D372BDA-A151-385E-82DE-FA81E96AB269}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintQueueProperty = class(TDNGenericImport<DNPrintQueuePropertyClass, DNPrintQueueProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintQueueStatusPropertyClass = interface(DNPrintPropertyClass)
  ['{A922C761-583E-5EB4-BC21-47EC01834D89}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintQueueStatusProperty; overload;
    {class} function init(attributeName: string): DNPrintQueueStatusProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintQueueStatusProperty')]
  DNPrintQueueStatusProperty = interface(DNPrintProperty)
  ['{B9A67BD7-9892-3B3E-80FB-5B7E75D3A327}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintQueueStatusProperty = class(TDNGenericImport<DNPrintQueueStatusPropertyClass, DNPrintQueueStatusProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintServerLoggingPropertyClass = interface(DNPrintPropertyClass)
  ['{EB47DBFB-EDF3-5C8E-98D7-57D52EBB7E3C}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintServerLoggingProperty; overload;
    {class} function init(attributeName: string): DNPrintServerLoggingProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintServerLoggingProperty')]
  DNPrintServerLoggingProperty = interface(DNPrintProperty)
  ['{FA5AAD09-F15A-3B80-8A76-064C526B2A70}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintServerLoggingProperty = class(TDNGenericImport<DNPrintServerLoggingPropertyClass, DNPrintServerLoggingProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintServerPropertyClass = interface(DNPrintPropertyClass)
  ['{025C86D1-63D6-54AE-A556-A8D7BD2B1B2F}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintServerProperty; overload;
    {class} function init(attributeName: string): DNPrintServerProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintServerProperty')]
  DNPrintServerProperty = interface(DNPrintProperty)
  ['{2A752E70-1A17-3C64-833B-3319B6DA0DFE}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintServerProperty = class(TDNGenericImport<DNPrintServerPropertyClass, DNPrintServerProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintStreamPropertyClass = interface(DNPrintPropertyClass)
  ['{1CB2BC27-3197-5A35-A43B-125E9BCE5EBD}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintStreamProperty; overload;
    {class} function init(attributeName: string): DNPrintStreamProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintStreamProperty')]
  DNPrintStreamProperty = interface(DNPrintProperty)
  ['{DCBFC541-263E-34F2-B9CC-CBDD43C0A4B6}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintStreamProperty = class(TDNGenericImport<DNPrintStreamPropertyClass, DNPrintStreamProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintStringPropertyClass = interface(DNPrintPropertyClass)
  ['{B2098F15-244F-59E4-8D64-9526738ED252}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintStringProperty; overload;
    {class} function init(attributeName: string): DNPrintStringProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintStringProperty')]
  DNPrintStringProperty = interface(DNPrintProperty)
  ['{0DFA4FDB-E35C-394C-AD0A-ACDD909A9075}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintStringProperty = class(TDNGenericImport<DNPrintStringPropertyClass, DNPrintStringProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintSystemTypePropertyClass = interface(DNPrintPropertyClass)
  ['{CD702CFB-C136-5789-9EB5-1E31B52EE88A}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintSystemTypeProperty; overload;
    {class} function init(attributeName: string): DNPrintSystemTypeProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintSystemTypeProperty')]
  DNPrintSystemTypeProperty = interface(DNPrintProperty)
  ['{5F9132BC-CACA-3755-8A6A-85A37C987DF6}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintSystemTypeProperty = class(TDNGenericImport<DNPrintSystemTypePropertyClass, DNPrintSystemTypeProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintThreadPriorityPropertyClass = interface(DNPrintPropertyClass)
  ['{7CC87BAC-80CD-5770-9D04-63A761E3F520}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintThreadPriorityProperty; overload;
    {class} function init(attributeName: string): DNPrintThreadPriorityProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintThreadPriorityProperty')]
  DNPrintThreadPriorityProperty = interface(DNPrintProperty)
  ['{71879EB8-41C8-3A23-904D-EC9FCECC543C}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintThreadPriorityProperty = class(TDNGenericImport<DNPrintThreadPriorityPropertyClass, DNPrintThreadPriorityProperty>) end;

  //-------------namespace: System.Printing.IndexedProperties----------------
  DNPrintTicketPropertyClass = interface(DNPrintPropertyClass)
  ['{E23E93D6-D4EA-5C1C-A37C-6F8A3D41DED5}']
  { constructors } 

    {class} function init(attributeName: string; attributeValue: DDN.mscorlib.DNObject): DNPrintTicketProperty; overload;
    {class} function init(attributeName: string): DNPrintTicketProperty; overload;

  end;

  [DNTypeName('System.Printing.IndexedProperties.PrintTicketProperty')]
  DNPrintTicketProperty = interface(DNPrintProperty)
  ['{759773B6-A939-3457-B837-BA1CB1BF70D4}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(objValue: DDN.mscorlib.DNObject);
    function get_Name: string;

  { methods } 

    procedure OnDeserialization(sender: DDN.mscorlib.DNObject);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Name: string read get_Name;
  end;

  TDNPrintTicketProperty = class(TDNGenericImport<DNPrintTicketPropertyClass, DNPrintTicketProperty>) end;

  //-------------namespace: System.Printing----------------
  DNPrintDocumentImageableAreaClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6317BE83-A6C1-51A3-A976-37CFA4A4E2D3}']
  end;

  [DNTypeName('System.Printing.PrintDocumentImageableArea')]
  DNPrintDocumentImageableArea = interface(DDN.mscorlib.DNObject)
  ['{CEEDE8BC-852C-3267-AC3E-E11E717A8150}']
  { getters & setters } 

    function get_MediaSizeHeight: Double;
    function get_MediaSizeWidth: Double;
    function get_ExtentHeight: Double;
    function get_ExtentWidth: Double;
    function get_OriginHeight: Double;
    function get_OriginWidth: Double;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property MediaSizeHeight: Double read get_MediaSizeHeight;
    property MediaSizeWidth: Double read get_MediaSizeWidth;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property OriginHeight: Double read get_OriginHeight;
    property OriginWidth: Double read get_OriginWidth;
  end;

  TDNPrintDocumentImageableArea = class(TDNGenericImport<DNPrintDocumentImageableAreaClass, DNPrintDocumentImageableArea>) end;

  //-------------namespace: System.Printing----------------
  DNPrintJobSettingsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{54298164-3898-5585-8A04-ECA48BE5A862}']
  end;

  [DNTypeName('System.Printing.PrintJobSettings')]
  DNPrintJobSettings = interface(DDN.mscorlib.DNObject)
  ['{38A85713-FED5-3C22-9366-C13CF3C20464}']
  { getters & setters } 

    function get_Description: string;
    procedure set_Description(description: string);
    function get_CurrentPrintTicket: DDN.ReachFramework.DNPrintTicket;
    procedure set_CurrentPrintTicket(printTicket: DDN.ReachFramework.DNPrintTicket);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Description: string read get_Description write set_Description;
    property CurrentPrintTicket: DDN.ReachFramework.DNPrintTicket read get_CurrentPrintTicket write set_CurrentPrintTicket;
  end;

  TDNPrintJobSettings = class(TDNGenericImport<DNPrintJobSettingsClass, DNPrintJobSettings>) end;

  //-------------namespace: System.Printing----------------
  DNPrintQueueStringPropertyClass = interface(DDN.mscorlib.DNObjectClass)
  ['{A379A27C-9D6F-51D8-8DEE-BAD9FC746B2B}']
  { constructors } 

    {class} function init: DNPrintQueueStringProperty;

  end;

  [DNTypeName('System.Printing.PrintQueueStringProperty')]
  DNPrintQueueStringProperty = interface(DDN.mscorlib.DNObject)
  ['{2931EAA1-2656-3D23-927D-D26C418C98B9}']
  { getters & setters } 

    function get_Name: string;
    procedure set_Name(__set_formal: string);
    function get_Type: DNPrintQueueStringPropertyType;
    procedure set_Type(__set_formal: DNPrintQueueStringPropertyType);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Name: string read get_Name write set_Name;
    property &Type: DNPrintQueueStringPropertyType read get_Type write set_Type;
  end;

  TDNPrintQueueStringProperty = class(TDNGenericImport<DNPrintQueueStringPropertyClass, DNPrintQueueStringProperty>) end;

  //-------------namespace: System.Printing----------------
  DNPrintSystemObjectClass = interface(DNObjectClass)
  ['{C443CE8F-6948-543D-8450-3266BE1F3F2C}']
  end;

  [DNTypeName('System.Printing.PrintSystemObject')]
  DNPrintSystemObject = interface(DDN.mscorlib.DNIDisposable)
  ['{C217C8CC-2887-3BFD-9A60-B7476189F695}']
  { getters & setters } 

    function get_Parent: DNPrintSystemObject;
    function get_Name: string;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Parent: DNPrintSystemObject read get_Parent;
    property Name: string read get_Name;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintSystemObject = class(TDNGenericImport<DNPrintSystemObjectClass, DNPrintSystemObject>) end;

  //-------------namespace: System.Printing----------------
  DNPrintFilterClass = interface(DNPrintSystemObjectClass)
  ['{6335CBD9-48B1-5DED-842D-AF7DE92C25CA}']
  end;

  [DNTypeName('System.Printing.PrintFilter')]
  DNPrintFilter = interface(DNPrintSystemObject)
  ['{E36AD9F7-BA4B-3BB4-9BAD-85DD7163A2CF}']
  { getters & setters } 

    function get_Parent: DNPrintSystemObject;
    function get_Name: string;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Parent: DNPrintSystemObject read get_Parent;
    property Name: string read get_Name;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintFilter = class(TDNGenericImport<DNPrintFilterClass, DNPrintFilter>) end;

  //-------------namespace: System.Printing----------------
  DNPrintDriverClass = interface(DNPrintFilterClass)
  ['{B8B5EC5B-201C-53CD-BA08-E611704FAC41}']
  end;

  [DNTypeName('System.Printing.PrintDriver')]
  DNPrintDriver = interface(DNPrintFilter)
  ['{6BE07925-6009-3454-9BED-30439425E0B6}']
  { getters & setters } 

    function get_Parent: DNPrintSystemObject;
    function get_Name: string;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Parent: DNPrintSystemObject read get_Parent;
    property Name: string read get_Name;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintDriver = class(TDNGenericImport<DNPrintDriverClass, DNPrintDriver>) end;

  //-------------namespace: System.Printing----------------
  DNPrintProcessorClass = interface(DNPrintFilterClass)
  ['{4889B664-09F9-59CC-A249-E5D6FF791425}']
  end;

  [DNTypeName('System.Printing.PrintProcessor')]
  DNPrintProcessor = interface(DNPrintFilter)
  ['{AD308001-EB8C-3FE6-B5F8-5B06D6D62CD8}']
  { getters & setters } 

    function get_Parent: DNPrintSystemObject;
    function get_Name: string;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Parent: DNPrintSystemObject read get_Parent;
    property Name: string read get_Name;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintProcessor = class(TDNGenericImport<DNPrintProcessorClass, DNPrintProcessor>) end;

  //-------------namespace: System.Printing----------------
  DNPrintPortClass = interface(DNPrintSystemObjectClass)
  ['{DF1D94AA-5B3E-5E67-B5F4-4E789B9076F6}']
  end;

  [DNTypeName('System.Printing.PrintPort')]
  DNPrintPort = interface(DNPrintSystemObject)
  ['{84D4A992-718E-3562-8E7A-2BB727A6DB07}']
  { getters & setters } 

    function get_Parent: DNPrintSystemObject;
    function get_Name: string;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Parent: DNPrintSystemObject read get_Parent;
    property Name: string read get_Name;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintPort = class(TDNGenericImport<DNPrintPortClass, DNPrintPort>) end;

  //-------------namespace: System.Printing----------------
  DNPrintQueueClass = interface(DNPrintSystemObjectClass)
  ['{8F9AAD15-824E-572F-B686-D0D718CD8CF4}']
  { static getter & setter } 

    {class} function get_MaxPrintSchemaVersion: Int32;

  { constructors } 

    {class} function init(printServer: DNPrintServer; printQueueName: string; propertyFilter: TArray<DNPrintQueueIndexedProperty>; desiredAccess: DNPrintSystemDesiredAccess): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string; propertyFilter: TArray<string>; desiredAccess: DNPrintSystemDesiredAccess): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string; printSchemaVersion: Int32; desiredAccess: DNPrintSystemDesiredAccess): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string; desiredAccess: DNPrintSystemDesiredAccess): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string; propertyFilter: TArray<DNPrintQueueIndexedProperty>): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string; propertyFilter: TArray<string>): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string; printSchemaVersion: Int32): DNPrintQueue; overload;
    {class} function init(printServer: DNPrintServer; printQueueName: string): DNPrintQueue; overload;

  { static methods } 

    {class} function CreateXpsDocumentWriter(jobDescription: string; out documentImageableArea: DNPrintDocumentImageableArea; out pageRangeSelection: DDN.PresentationFramework.DNPageRangeSelection; out pageRange: DDN.PresentationFramework.DNPageRange): DNXpsDocumentWriter; overload;
    {class} function CreateXpsDocumentWriter(jobDescription: string; out documentImageableArea: DNPrintDocumentImageableArea): DNXpsDocumentWriter; overload;
    {class} function CreateXpsDocumentWriter(out documentImageableArea: DNPrintDocumentImageableArea; out pageRangeSelection: DDN.PresentationFramework.DNPageRangeSelection; out pageRange: DDN.PresentationFramework.DNPageRange): DNXpsDocumentWriter; overload;
    {class} function CreateXpsDocumentWriter(out documentImageableArea: DNPrintDocumentImageableArea): DNXpsDocumentWriter; overload;
    {class} function CreateXpsDocumentWriter(out width: Double; out height: Double): DNXpsDocumentWriter; overload;
    {class} function CreateXpsDocumentWriter(printQueue: DNPrintQueue): DNXpsDocumentWriter; overload;

  { static propertys } 

    {class} property MaxPrintSchemaVersion: Int32 read get_MaxPrintSchemaVersion;
  end;

  [DNTypeName('System.Printing.PrintQueue')]
  DNPrintQueue = interface(DNPrintSystemObject)
  ['{C187B99F-1003-3809-A31A-FD19FB6FC45F}']
  { getters & setters } 

    function get_InPartialTrust: Boolean;
    procedure set_InPartialTrust(isPT: Boolean);
    function get_ClientPrintSchemaVersion: Int32;
    function get_IsXpsDevice: Boolean;
    function get_IsPublished: Boolean;
    function get_IsRawOnlyEnabled: Boolean;
    function get_IsBidiEnabled: Boolean;
    function get_ScheduleCompletedJobsFirst: Boolean;
    function get_KeepPrintedJobs: Boolean;
    function get_IsDevQueryEnabled: Boolean;
    function get_IsHidden: Boolean;
    function get_IsShared: Boolean;
    function get_IsDirect: Boolean;
    function get_IsQueued: Boolean;
    function get_IsPowerSaveOn: Boolean;
    function get_IsServerUnknown: Boolean;
    function get_IsDoorOpened: Boolean;
    function get_IsOutOfMemory: Boolean;
    function get_NeedUserIntervention: Boolean;
    function get_PagePunt: Boolean;
    function get_HasToner: Boolean;
    function get_IsTonerLow: Boolean;
    function get_IsWarmingUp: Boolean;
    function get_IsInitializing: Boolean;
    function get_IsProcessing: Boolean;
    function get_IsWaiting: Boolean;
    function get_IsNotAvailable: Boolean;
    function get_IsOutputBinFull: Boolean;
    function get_IsPrinting: Boolean;
    function get_IsBusy: Boolean;
    function get_IsIOActive: Boolean;
    function get_IsOffline: Boolean;
    function get_HasPaperProblem: Boolean;
    function get_IsManualFeedRequired: Boolean;
    function get_IsOutOfPaper: Boolean;
    function get_IsPaperJammed: Boolean;
    function get_IsPendingDeletion: Boolean;
    function get_IsInError: Boolean;
    function get_IsPaused: Boolean;
    function get_QueueAttributes: DNPrintQueueAttributes;
    function get_QueueStatus: DNPrintQueueStatus;
    function get_FullName: string;
    function get_HostingPrintServer: DNPrintServer;
    function get_QueuePrintProcessor: DNPrintProcessor;
    procedure set_QueuePrintProcessor(printProcessor: DNPrintProcessor);
    function get_QueuePort: DNPrintPort;
    procedure set_QueuePort(port: DNPrintPort);
    function get_QueueDriver: DNPrintDriver;
    procedure set_QueueDriver(driver: DNPrintDriver);
    function get_DefaultPrintTicket: DDN.ReachFramework.DNPrintTicket;
    procedure set_DefaultPrintTicket(newDefaultPrintTicket: DDN.ReachFramework.DNPrintTicket);
    function get_UserPrintTicket: DDN.ReachFramework.DNPrintTicket;
    procedure set_UserPrintTicket(newUserPrintTicket: DDN.ReachFramework.DNPrintTicket);
    function get_SeparatorFile: string;
    procedure set_SeparatorFile(inSeparatorFile: string);
    function get_Description: string;
    function get_Location: string;
    procedure set_Location(inLocation: string);
    function get_Comment: string;
    procedure set_Comment(inComment: string);
    function get_ShareName: string;
    procedure set_ShareName(inShareName: string);
    function get_NumberOfJobs: Int32;
    function get_AveragePagesPerMinute: Int32;
    function get_UntilTimeOfDay: Int32;
    procedure set_UntilTimeOfDay(inUntilTime: Int32);
    function get_StartTimeOfDay: Int32;
    procedure set_StartTimeOfDay(inStartTime: Int32);
    function get_DefaultPriority: Int32;
    procedure set_DefaultPriority(inDefaultPriority: Int32);
    function get_Name: string;
    procedure set_Name(objName: string);
    function get_Priority: Int32;
    procedure set_Priority(inPriority: Int32);
    function get_CurrentJobSettings: DNPrintJobSettings;
    function get_PrintingIsCancelled: Boolean;
    procedure set_PrintingIsCancelled(isCancelled: Boolean);
    function get_Parent: DNPrintSystemObject;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    function GetPrintCapabilities: DDN.ReachFramework.DNPrintCapabilities; overload;
    function GetPrintCapabilities(printTicket: DDN.ReachFramework.DNPrintTicket): DDN.ReachFramework.DNPrintCapabilities; overload;
    function GetPrintCapabilitiesAsXml: DDN.mscorlib.DNMemoryStream; overload;
    function GetPrintCapabilitiesAsXml(printTicket: DDN.ReachFramework.DNPrintTicket): DDN.mscorlib.DNMemoryStream; overload;
    function MergeAndValidatePrintTicket(basePrintTicket: DDN.ReachFramework.DNPrintTicket; deltaPrintTicket: DDN.ReachFramework.DNPrintTicket; scope: DDN.ReachFramework.DNPrintTicketScope): DDN.ReachFramework.DNValidationResult; overload;
    function MergeAndValidatePrintTicket(basePrintTicket: DDN.ReachFramework.DNPrintTicket; deltaPrintTicket: DDN.ReachFramework.DNPrintTicket): DDN.ReachFramework.DNValidationResult; overload;
    procedure Pause;
    procedure Resume;
    function AddJob(jobName: string; documentPath: string; fastCopy: Boolean; printTicket: DDN.ReachFramework.DNPrintTicket): DNPrintSystemJobInfo; overload;
    function AddJob(jobName: string; documentPath: string; fastCopy: Boolean): DNPrintSystemJobInfo; overload;
    function AddJob(jobName: string; printTicket: DDN.ReachFramework.DNPrintTicket): DNPrintSystemJobInfo; overload;
    function AddJob(jobName: string): DNPrintSystemJobInfo; overload;
    function AddJob: DNPrintSystemJobInfo; overload;
    function GetJob(jobId: Int32): DNPrintSystemJobInfo;
    function GetPrintJobInfoCollection: DNPrintJobInfoCollection;
    procedure Purge;
    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property InPartialTrust: Boolean read get_InPartialTrust write set_InPartialTrust;
    property ClientPrintSchemaVersion: Int32 read get_ClientPrintSchemaVersion;
    property IsXpsDevice: Boolean read get_IsXpsDevice;
    property IsPublished: Boolean read get_IsPublished;
    property IsRawOnlyEnabled: Boolean read get_IsRawOnlyEnabled;
    property IsBidiEnabled: Boolean read get_IsBidiEnabled;
    property ScheduleCompletedJobsFirst: Boolean read get_ScheduleCompletedJobsFirst;
    property KeepPrintedJobs: Boolean read get_KeepPrintedJobs;
    property IsDevQueryEnabled: Boolean read get_IsDevQueryEnabled;
    property IsHidden: Boolean read get_IsHidden;
    property IsShared: Boolean read get_IsShared;
    property IsDirect: Boolean read get_IsDirect;
    property IsQueued: Boolean read get_IsQueued;
    property IsPowerSaveOn: Boolean read get_IsPowerSaveOn;
    property IsServerUnknown: Boolean read get_IsServerUnknown;
    property IsDoorOpened: Boolean read get_IsDoorOpened;
    property IsOutOfMemory: Boolean read get_IsOutOfMemory;
    property NeedUserIntervention: Boolean read get_NeedUserIntervention;
    property PagePunt: Boolean read get_PagePunt;
    property HasToner: Boolean read get_HasToner;
    property IsTonerLow: Boolean read get_IsTonerLow;
    property IsWarmingUp: Boolean read get_IsWarmingUp;
    property IsInitializing: Boolean read get_IsInitializing;
    property IsProcessing: Boolean read get_IsProcessing;
    property IsWaiting: Boolean read get_IsWaiting;
    property IsNotAvailable: Boolean read get_IsNotAvailable;
    property IsOutputBinFull: Boolean read get_IsOutputBinFull;
    property IsPrinting: Boolean read get_IsPrinting;
    property IsBusy: Boolean read get_IsBusy;
    property IsIOActive: Boolean read get_IsIOActive;
    property IsOffline: Boolean read get_IsOffline;
    property HasPaperProblem: Boolean read get_HasPaperProblem;
    property IsManualFeedRequired: Boolean read get_IsManualFeedRequired;
    property IsOutOfPaper: Boolean read get_IsOutOfPaper;
    property IsPaperJammed: Boolean read get_IsPaperJammed;
    property IsPendingDeletion: Boolean read get_IsPendingDeletion;
    property IsInError: Boolean read get_IsInError;
    property IsPaused: Boolean read get_IsPaused;
    property QueueAttributes: DNPrintQueueAttributes read get_QueueAttributes;
    property QueueStatus: DNPrintQueueStatus read get_QueueStatus;
    property FullName: string read get_FullName;
    property HostingPrintServer: DNPrintServer read get_HostingPrintServer;
    property QueuePrintProcessor: DNPrintProcessor read get_QueuePrintProcessor write set_QueuePrintProcessor;
    property QueuePort: DNPrintPort read get_QueuePort write set_QueuePort;
    property QueueDriver: DNPrintDriver read get_QueueDriver write set_QueueDriver;
    property DefaultPrintTicket: DDN.ReachFramework.DNPrintTicket read get_DefaultPrintTicket write set_DefaultPrintTicket;
    property UserPrintTicket: DDN.ReachFramework.DNPrintTicket read get_UserPrintTicket write set_UserPrintTicket;
    property SeparatorFile: string read get_SeparatorFile write set_SeparatorFile;
    property Description: string read get_Description;
    property Location: string read get_Location write set_Location;
    property Comment: string read get_Comment write set_Comment;
    property ShareName: string read get_ShareName write set_ShareName;
    property NumberOfJobs: Int32 read get_NumberOfJobs;
    property AveragePagesPerMinute: Int32 read get_AveragePagesPerMinute;
    property UntilTimeOfDay: Int32 read get_UntilTimeOfDay write set_UntilTimeOfDay;
    property StartTimeOfDay: Int32 read get_StartTimeOfDay write set_StartTimeOfDay;
    property DefaultPriority: Int32 read get_DefaultPriority write set_DefaultPriority;
    property Name: string read get_Name write set_Name;
    property Priority: Int32 read get_Priority write set_Priority;
    property CurrentJobSettings: DNPrintJobSettings read get_CurrentJobSettings;
    property PrintingIsCancelled: Boolean read get_PrintingIsCancelled write set_PrintingIsCancelled;
    property Parent: DNPrintSystemObject read get_Parent;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintQueue = class(TDNGenericImport<DNPrintQueueClass, DNPrintQueue>) end;

  //-------------namespace: System.Printing----------------
  DNPrintServerClass = interface(DNPrintSystemObjectClass)
  ['{0D52BA78-FF3D-59D6-9242-C6ABCDB15BC1}']
  { constructors } 

    {class} function init(path: string; propertiesFilter: TArray<string>; desiredAccess: DNPrintSystemDesiredAccess): DNPrintServer; overload;
    {class} function init(path: string; propertiesFilter: TArray<DNPrintServerIndexedProperty>; desiredAccess: DNPrintSystemDesiredAccess): DNPrintServer; overload;
    {class} function init(path: string; desiredAccess: DNPrintSystemDesiredAccess): DNPrintServer; overload;
    {class} function init(desiredAccess: DNPrintSystemDesiredAccess): DNPrintServer; overload;
    {class} function init(path: string; propertiesFilter: TArray<string>): DNPrintServer; overload;
    {class} function init(path: string; propertiesFilter: TArray<DNPrintServerIndexedProperty>): DNPrintServer; overload;
    {class} function init(path: string): DNPrintServer; overload;
    {class} function init: DNPrintServer; overload;

  { static methods } 

    {class} function DeletePrintQueue(printQueue: DNPrintQueue): Boolean; overload;
    {class} function DeletePrintQueue(printQueueName: string): Boolean; overload;

  end;

  [DNTypeName('System.Printing.PrintServer')]
  DNPrintServer = interface(DNPrintSystemObject)
  ['{8B4C09E2-3D6D-3892-AB39-F38E3B771EFF}']
  { getters & setters } 

    function get_Name: string;
    function get_SubSystemVersion: Byte;
    function get_RestartJobOnPoolEnabled: Boolean;
    procedure set_RestartJobOnPoolEnabled(value: Boolean);
    function get_RestartJobOnPoolTimeout: Int32;
    procedure set_RestartJobOnPoolTimeout(value: Int32);
    function get_MinorVersion: Int32;
    function get_MajorVersion: Int32;
    function get_EventLog: DNPrintServerEventLoggingTypes;
    procedure set_EventLog(value: DNPrintServerEventLoggingTypes);
    function get_NetPopup: Boolean;
    procedure set_NetPopup(value: Boolean);
    function get_BeepEnabled: Boolean;
    procedure set_BeepEnabled(value: Boolean);
    function get_DefaultSchedulerPriority: DDN.mscorlib.DNThreadPriority;
    function get_SchedulerPriority: DDN.mscorlib.DNThreadPriority;
    procedure set_SchedulerPriority(value: DDN.mscorlib.DNThreadPriority);
    function get_DefaultPortThreadPriority: DDN.mscorlib.DNThreadPriority;
    function get_PortThreadPriority: DDN.mscorlib.DNThreadPriority;
    procedure set_PortThreadPriority(value: DDN.mscorlib.DNThreadPriority);
    function get_DefaultSpoolDirectory: string;
    procedure set_DefaultSpoolDirectory(value: string);
    function get_Parent: DNPrintSystemObject;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; initialParameters: DNPrintPropertyDictionary): DNPrintQueue; overload;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; printQueueAttributes: DNPrintQueueAttributes; printQueueShareName: string; printQueueComment: string; printQueueLocation: string; printQueueSeparatorFile: string; printQueuePriority: Int32; printQueueDefaultPriority: Int32): DNPrintQueue; overload;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; printQueueAttributes: DNPrintQueueAttributes; printQueueProperty: DNPrintQueueStringProperty; printQueuePriority: Int32; printQueueDefaultPriority: Int32): DNPrintQueue; overload;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; printQueueAttributes: DNPrintQueueAttributes): DNPrintQueue; overload;
    function GetPrintQueue(printQueueName: string; propertiesFilter: TArray<string>): DNPrintQueue; overload;
    function GetPrintQueue(printQueueName: string): DNPrintQueue; overload;
    function GetPrintQueues(propertiesFilter: TArray<string>; enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    function GetPrintQueues(propertiesFilter: TArray<DNPrintQueueIndexedProperty>; enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    function GetPrintQueues(enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    function GetPrintQueues(propertiesFilter: TArray<string>): DNPrintQueueCollection; overload;
    function GetPrintQueues(propertiesFilter: TArray<DNPrintQueueIndexedProperty>): DNPrintQueueCollection; overload;
    function GetPrintQueues: DNPrintQueueCollection; overload;
    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Name: string read get_Name;
    property SubSystemVersion: Byte read get_SubSystemVersion;
    property RestartJobOnPoolEnabled: Boolean read get_RestartJobOnPoolEnabled write set_RestartJobOnPoolEnabled;
    property RestartJobOnPoolTimeout: Int32 read get_RestartJobOnPoolTimeout write set_RestartJobOnPoolTimeout;
    property MinorVersion: Int32 read get_MinorVersion;
    property MajorVersion: Int32 read get_MajorVersion;
    property EventLog: DNPrintServerEventLoggingTypes read get_EventLog write set_EventLog;
    property NetPopup: Boolean read get_NetPopup write set_NetPopup;
    property BeepEnabled: Boolean read get_BeepEnabled write set_BeepEnabled;
    property DefaultSchedulerPriority: DDN.mscorlib.DNThreadPriority read get_DefaultSchedulerPriority;
    property SchedulerPriority: DDN.mscorlib.DNThreadPriority read get_SchedulerPriority write set_SchedulerPriority;
    property DefaultPortThreadPriority: DDN.mscorlib.DNThreadPriority read get_DefaultPortThreadPriority;
    property PortThreadPriority: DDN.mscorlib.DNThreadPriority read get_PortThreadPriority write set_PortThreadPriority;
    property DefaultSpoolDirectory: string read get_DefaultSpoolDirectory write set_DefaultSpoolDirectory;
    property Parent: DNPrintSystemObject read get_Parent;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintServer = class(TDNGenericImport<DNPrintServerClass, DNPrintServer>) end;

  //-------------namespace: System.Printing----------------
  DNLocalPrintServerClass = interface(DNPrintServerClass)
  ['{FAA50997-9999-5CCC-8160-8F200AE3074F}']
  { constructors } 

    {class} function init(propertiesFilter: TArray<string>; desiredAccess: DNPrintSystemDesiredAccess): DNLocalPrintServer; overload;
    {class} function init(propertiesFilter: TArray<DNLocalPrintServerIndexedProperty>; desiredAccess: DNPrintSystemDesiredAccess): DNLocalPrintServer; overload;
    {class} function init(desiredAccess: DNPrintSystemDesiredAccess): DNLocalPrintServer; overload;
    {class} function init(propertiesFilter: TArray<string>): DNLocalPrintServer; overload;
    {class} function init(propertiesFilter: TArray<DNLocalPrintServerIndexedProperty>): DNLocalPrintServer; overload;
    {class} function init: DNLocalPrintServer; overload;

  { static methods } 

    {class} function GetDefaultPrintQueue: DNPrintQueue;

  end;

  [DNTypeName('System.Printing.LocalPrintServer')]
  DNLocalPrintServer = interface(DNPrintServer)
  ['{7822A26F-5EE1-3533-99C7-A054F018CFBB}']
  { getters & setters } 

    function get_DefaultPrintQueue: DNPrintQueue;
    procedure set_DefaultPrintQueue(printQueue: DNPrintQueue);
    function get_Name: string;
    function get_SubSystemVersion: Byte;
    function get_RestartJobOnPoolEnabled: Boolean;
    procedure set_RestartJobOnPoolEnabled(value: Boolean);
    function get_RestartJobOnPoolTimeout: Int32;
    procedure set_RestartJobOnPoolTimeout(value: Int32);
    function get_MinorVersion: Int32;
    function get_MajorVersion: Int32;
    function get_EventLog: DNPrintServerEventLoggingTypes;
    procedure set_EventLog(value: DNPrintServerEventLoggingTypes);
    function get_NetPopup: Boolean;
    procedure set_NetPopup(value: Boolean);
    function get_BeepEnabled: Boolean;
    procedure set_BeepEnabled(value: Boolean);
    function get_DefaultSchedulerPriority: DDN.mscorlib.DNThreadPriority;
    function get_SchedulerPriority: DDN.mscorlib.DNThreadPriority;
    procedure set_SchedulerPriority(value: DDN.mscorlib.DNThreadPriority);
    function get_DefaultPortThreadPriority: DDN.mscorlib.DNThreadPriority;
    function get_PortThreadPriority: DDN.mscorlib.DNThreadPriority;
    procedure set_PortThreadPriority(value: DDN.mscorlib.DNThreadPriority);
    function get_DefaultSpoolDirectory: string;
    procedure set_DefaultSpoolDirectory(value: string);
    function get_Parent: DNPrintSystemObject;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    function ConnectToPrintQueue(printQueuePath: string): Boolean; overload;
    function ConnectToPrintQueue(printer: DNPrintQueue): Boolean; overload;
    function DisconnectFromPrintQueue(printer: DNPrintQueue): Boolean; overload;
    function DisconnectFromPrintQueue(printQueuePath: string): Boolean; overload;
    procedure Commit;
    procedure Refresh;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; initialParameters: DNPrintPropertyDictionary): DNPrintQueue; overload;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; printQueueAttributes: DNPrintQueueAttributes; printQueueShareName: string; printQueueComment: string; printQueueLocation: string; printQueueSeparatorFile: string; printQueuePriority: Int32; printQueueDefaultPriority: Int32): DNPrintQueue; overload;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; printQueueAttributes: DNPrintQueueAttributes; printQueueProperty: DNPrintQueueStringProperty; printQueuePriority: Int32; printQueueDefaultPriority: Int32): DNPrintQueue; overload;
    function InstallPrintQueue(printQueueName: string; driverName: string; portNames: TArray<string>; printProcessorName: string; printQueueAttributes: DNPrintQueueAttributes): DNPrintQueue; overload;
    function GetPrintQueue(printQueueName: string; propertiesFilter: TArray<string>): DNPrintQueue; overload;
    function GetPrintQueue(printQueueName: string): DNPrintQueue; overload;
    function GetPrintQueues(propertiesFilter: TArray<string>; enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    function GetPrintQueues(propertiesFilter: TArray<DNPrintQueueIndexedProperty>; enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    function GetPrintQueues(enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    function GetPrintQueues(propertiesFilter: TArray<string>): DNPrintQueueCollection; overload;
    function GetPrintQueues(propertiesFilter: TArray<DNPrintQueueIndexedProperty>): DNPrintQueueCollection; overload;
    function GetPrintQueues: DNPrintQueueCollection; overload;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DefaultPrintQueue: DNPrintQueue read get_DefaultPrintQueue write set_DefaultPrintQueue;
    property Name: string read get_Name;
    property SubSystemVersion: Byte read get_SubSystemVersion;
    property RestartJobOnPoolEnabled: Boolean read get_RestartJobOnPoolEnabled write set_RestartJobOnPoolEnabled;
    property RestartJobOnPoolTimeout: Int32 read get_RestartJobOnPoolTimeout write set_RestartJobOnPoolTimeout;
    property MinorVersion: Int32 read get_MinorVersion;
    property MajorVersion: Int32 read get_MajorVersion;
    property EventLog: DNPrintServerEventLoggingTypes read get_EventLog write set_EventLog;
    property NetPopup: Boolean read get_NetPopup write set_NetPopup;
    property BeepEnabled: Boolean read get_BeepEnabled write set_BeepEnabled;
    property DefaultSchedulerPriority: DDN.mscorlib.DNThreadPriority read get_DefaultSchedulerPriority;
    property SchedulerPriority: DDN.mscorlib.DNThreadPriority read get_SchedulerPriority write set_SchedulerPriority;
    property DefaultPortThreadPriority: DDN.mscorlib.DNThreadPriority read get_DefaultPortThreadPriority;
    property PortThreadPriority: DDN.mscorlib.DNThreadPriority read get_PortThreadPriority write set_PortThreadPriority;
    property DefaultSpoolDirectory: string read get_DefaultSpoolDirectory write set_DefaultSpoolDirectory;
    property Parent: DNPrintSystemObject read get_Parent;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNLocalPrintServer = class(TDNGenericImport<DNLocalPrintServerClass, DNLocalPrintServer>) end;

  //-------------namespace: System.Printing----------------
  DNPrintSystemJobInfoClass = interface(DNPrintSystemObjectClass)
  ['{7A8A1CE6-1206-539E-A570-1F4C5FB18C20}']
  { static methods } 

    {class} function Get(printQueue: DNPrintQueue; jobIdentifier: Int32): DNPrintSystemJobInfo;

  end;

  [DNTypeName('System.Printing.PrintSystemJobInfo')]
  DNPrintSystemJobInfo = interface(DNPrintSystemObject)
  ['{A28863F8-FA1F-3DFA-8450-858EFE8692CC}']
  { getters & setters } 

    function get_HostingPrintServer: DNPrintServer;
    function get_HostingPrintQueue: DNPrintQueue;
    function get_JobName: string;
    procedure set_JobName(newJobName: string);
    function get_IsRetained: Boolean;
    function get_IsUserInterventionRequired: Boolean;
    function get_IsBlocked: Boolean;
    function get_IsDeleted: Boolean;
    function get_IsPaperOut: Boolean;
    function get_IsOffline: Boolean;
    function get_IsPrinting: Boolean;
    function get_IsInError: Boolean;
    function get_IsSpooling: Boolean;
    function get_IsRestarted: Boolean;
    function get_IsPrinted: Boolean;
    function get_IsPaused: Boolean;
    function get_IsDeleting: Boolean;
    function get_IsCompleted: Boolean;
    function get_JobStatus: DNPrintJobStatus;
    function get_TimeSinceStartedPrinting: Int32;
    function get_TimeJobSubmitted: DDN.mscorlib.DNDateTime;
    function get_JobSize: Int32;
    function get_NumberOfPagesPrinted: Int32;
    function get_NumberOfPages: Int32;
    function get_UntilTimeOfDay: Int32;
    function get_StartTimeOfDay: Int32;
    function get_PositionInPrintQueue: Int32;
    function get_Priority: DNPrintJobPriority;
    function get_Submitter: string;
    function get_JobIdentifier: Int32;
    function get_JobStream: DDN.mscorlib.DNStream;
    function get_Parent: DNPrintSystemObject;
    function get_Name: string;
    function get_PropertiesCollection: DNPrintPropertyDictionary;

  { methods } 

    procedure Pause;
    procedure Resume;
    procedure Cancel;
    procedure Restart;
    procedure Commit;
    procedure Refresh;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property HostingPrintServer: DNPrintServer read get_HostingPrintServer;
    property HostingPrintQueue: DNPrintQueue read get_HostingPrintQueue;
    property JobName: string read get_JobName write set_JobName;
    property IsRetained: Boolean read get_IsRetained;
    property IsUserInterventionRequired: Boolean read get_IsUserInterventionRequired;
    property IsBlocked: Boolean read get_IsBlocked;
    property IsDeleted: Boolean read get_IsDeleted;
    property IsPaperOut: Boolean read get_IsPaperOut;
    property IsOffline: Boolean read get_IsOffline;
    property IsPrinting: Boolean read get_IsPrinting;
    property IsInError: Boolean read get_IsInError;
    property IsSpooling: Boolean read get_IsSpooling;
    property IsRestarted: Boolean read get_IsRestarted;
    property IsPrinted: Boolean read get_IsPrinted;
    property IsPaused: Boolean read get_IsPaused;
    property IsDeleting: Boolean read get_IsDeleting;
    property IsCompleted: Boolean read get_IsCompleted;
    property JobStatus: DNPrintJobStatus read get_JobStatus;
    property TimeSinceStartedPrinting: Int32 read get_TimeSinceStartedPrinting;
    property TimeJobSubmitted: DDN.mscorlib.DNDateTime read get_TimeJobSubmitted;
    property JobSize: Int32 read get_JobSize;
    property NumberOfPagesPrinted: Int32 read get_NumberOfPagesPrinted;
    property NumberOfPages: Int32 read get_NumberOfPages;
    property UntilTimeOfDay: Int32 read get_UntilTimeOfDay;
    property StartTimeOfDay: Int32 read get_StartTimeOfDay;
    property PositionInPrintQueue: Int32 read get_PositionInPrintQueue;
    property Priority: DNPrintJobPriority read get_Priority;
    property Submitter: string read get_Submitter;
    property JobIdentifier: Int32 read get_JobIdentifier;
    property JobStream: DDN.mscorlib.DNStream read get_JobStream;
    property Parent: DNPrintSystemObject read get_Parent;
    property Name: string read get_Name;
    property PropertiesCollection: DNPrintPropertyDictionary read get_PropertiesCollection;
  end;

  TDNPrintSystemJobInfo = class(TDNGenericImport<DNPrintSystemJobInfoClass, DNPrintSystemJobInfo>) end;

  //-------------namespace: System.Printing----------------
  DNPrintSystemObjectsClass = interface(DNObjectClass)
  ['{F171EE2C-DEA5-59DA-B326-AD0083BC0075}']
  end;

  [DNTypeName('System.Printing.PrintSystemObjects')]
  DNPrintSystemObjects = interface(DDN.mscorlib.DNIDisposable)
  ['{91B37FBF-B9FD-3196-B6C0-913E4197E91D}']
  { methods } 

    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNPrintSystemObjects = class(TDNGenericImport<DNPrintSystemObjectsClass, DNPrintSystemObjects>) end;

  //-------------namespace: System.Printing----------------
  DNPrintJobInfoCollectionClass = interface(DNPrintSystemObjectsClass)
  ['{EC38D05B-7535-527D-842E-A8B208E18031}']
  { constructors } 

    {class} function init(printQueue: DNPrintQueue; propertyFilter: TArray<string>): DNPrintJobInfoCollection;

  end;

  [DNTypeName('System.Printing.PrintJobInfoCollection')]
  DNPrintJobInfoCollection = interface(DNPrintSystemObjects)
  ['{E770F674-237E-3104-910A-955E6DFC96AD}']
  { methods } 

    function GetNonGenericEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator<DNPrintSystemJobInfo>;
    procedure Add(printObject: DNPrintSystemJobInfo);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNPrintJobInfoCollection = class(TDNGenericImport<DNPrintJobInfoCollectionClass, DNPrintJobInfoCollection>) end;

  //-------------namespace: System.Printing----------------
  DNPrintQueueCollectionClass = interface(DNPrintSystemObjectsClass)
  ['{613638B1-198A-5E4E-9AB6-AAE6974F3585}']
  { static getter & setter } 

    {class} function get_SyncRoot: DDN.mscorlib.DNObject;

  { constructors } 

    {class} function init(printServer: DNPrintServer; propertyFilter: TArray<string>): DNPrintQueueCollection; overload;
    {class} function init(printServer: DNPrintServer; propertyFilter: TArray<string>; enumerationFlag: TArray<DNEnumeratedPrintQueueTypes>): DNPrintQueueCollection; overload;
    {class} function init: DNPrintQueueCollection; overload;

  { static propertys } 

    {class} property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  [DNTypeName('System.Printing.PrintQueueCollection')]
  DNPrintQueueCollection = interface(DNPrintSystemObjects)
  ['{7B152755-3B52-3782-9942-86C71A3ACB91}']
  { methods } 

    function GetNonGenericEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator<DNPrintQueue>;
    procedure Add(printObject: DNPrintQueue);
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNPrintQueueCollection = class(TDNGenericImport<DNPrintQueueCollectionClass, DNPrintQueueCollection>) end;


implementation


initialization
  InternalTryLoadAssemblyModule('System.Printing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35');

finalization

end.
