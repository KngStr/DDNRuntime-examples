//----------------------------------------------------------------------------
//  System.Runtime.InteropServices.dll: System.Runtime.InteropServices, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 5.0.9
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.Runtime.InteropServices
//  Author: ying32
//----------------------------------------------------------------------------

unit DDNC.System.Runtime.InteropServices;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib;

type

{ enums }

  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.AssemblyRegistrationFlags')]
  DNAssemblyRegistrationFlags = type Integer;
  DNAssemblyRegistrationFlagsHelper = record helper for DNAssemblyRegistrationFlags
  public const
    None = 0;
    SetCodeBase = 1;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.ADVF')]
  DNADVF = type Integer;
  DNADVFHelper = record helper for DNADVF
  public const
    ADVF_NODATA = 1;
    ADVF_PRIMEFIRST = 2;
    ADVF_ONLYONCE = 4;
    ADVFCACHE_NOHANDLER = 8;
    ADVFCACHE_FORCEBUILTIN = 16;
    ADVFCACHE_ONSAVE = 32;
    ADVF_DATAONSTOP = 64;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.DATADIR')]
  DNDATADIR = type Integer;
  DNDATADIRHelper = record helper for DNDATADIR
  public const
    DATADIR_GET = 1;
    DATADIR_SET = 2;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.DVASPECT')]
  DNDVASPECT = type Integer;
  DNDVASPECTHelper = record helper for DNDVASPECT
  public const
    DVASPECT_CONTENT = 1;
    DVASPECT_THUMBNAIL = 2;
    DVASPECT_ICON = 4;
    DVASPECT_DOCPRINT = 8;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.TYMED')]
  DNTYMED = type Integer;
  DNTYMEDHelper = record helper for DNTYMED
  public const
    TYMED_NULL = 0;
    TYMED_HGLOBAL = 1;
    TYMED_FILE = 2;
    TYMED_ISTREAM = 4;
    TYMED_ISTORAGE = 8;
    TYMED_GDI = 16;
    TYMED_MFPICT = 32;
    TYMED_ENHMF = 64;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.ExporterEventKind')]
  DNExporterEventKind = type Integer;
  DNExporterEventKindHelper = record helper for DNExporterEventKind
  public const
    NOTIF_TYPECONVERTED = 0;
    NOTIF_CONVERTWARNING = 1;
    ERROR_REFTOINVALIDASSEMBLY = 2;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.IDispatchImplType')]
  DNIDispatchImplType = type Integer;
  DNIDispatchImplTypeHelper = record helper for DNIDispatchImplType
  public const
    SystemDefinedImpl = 0;
    InternalImpl = 1;
    CompatibleImpl = 2;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.RegistrationClassContext')]
  DNRegistrationClassContext = type Integer;
  DNRegistrationClassContextHelper = record helper for DNRegistrationClassContext
  public const
    InProcessServer = 1;
    InProcessHandler = 2;
    LocalServer = 4;
    InProcessServer16 = 8;
    RemoteServer = 16;
    InProcessHandler16 = 32;
    Reserved1 = 64;
    Reserved2 = 128;
    Reserved3 = 256;
    Reserved4 = 512;
    NoCodeDownload = 1024;
    Reserved5 = 2048;
    NoCustomMarshal = 4096;
    EnableCodeDownload = 8192;
    NoFailureLog = 16384;
    DisableActivateAsActivator = 32768;
    EnableActivateAsActivator = 65536;
    FromDefaultContext = 131072;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.RegistrationConnectionType')]
  DNRegistrationConnectionType = type Integer;
  DNRegistrationConnectionTypeHelper = record helper for DNRegistrationConnectionType
  public const
    SingleUse = 0;
    MultipleUse = 1;
    MultiSeparate = 2;
    Suspended = 4;
    Surrogate = 8;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.TypeLibFuncFlags')]
  DNTypeLibFuncFlags = type Integer;
  DNTypeLibFuncFlagsHelper = record helper for DNTypeLibFuncFlags
  public const
    FRestricted = 1;
    FSource = 2;
    FBindable = 4;
    FRequestEdit = 8;
    FDisplayBind = 16;
    FDefaultBind = 32;
    FHidden = 64;
    FUsesGetLastError = 128;
    FDefaultCollelem = 256;
    FUiDefault = 512;
    FNonBrowsable = 1024;
    FReplaceable = 2048;
    FImmediateBind = 4096;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.TypeLibTypeFlags')]
  DNTypeLibTypeFlags = type Integer;
  DNTypeLibTypeFlagsHelper = record helper for DNTypeLibTypeFlags
  public const
    FAppObject = 1;
    FCanCreate = 2;
    FLicensed = 4;
    FPreDeclId = 8;
    FHidden = 16;
    FControl = 32;
    FDual = 64;
    FNonExtensible = 128;
    FOleAutomation = 256;
    FRestricted = 512;
    FAggregatable = 1024;
    FReplaceable = 2048;
    FDispatchable = 4096;
    FReverseBind = 8192;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.TypeLibVarFlags')]
  DNTypeLibVarFlags = type Integer;
  DNTypeLibVarFlagsHelper = record helper for DNTypeLibVarFlags
  public const
    FReadOnly = 1;
    FSource = 2;
    FBindable = 4;
    FRequestEdit = 8;
    FDisplayBind = 16;
    FDefaultBind = 32;
    FHidden = 64;
    FRestricted = 128;
    FDefaultCollelem = 256;
    FUiDefault = 512;
    FNonBrowsable = 1024;
    FReplaceable = 2048;
    FImmediateBind = 4096;
  end;




type


{ declares }

  DNIAdviseSink = interface; // type: System.Runtime.InteropServices.ComTypes.IAdviseSink, namespace: System.Runtime.InteropServices.ComTypes
  DNIDataObject = interface; // type: System.Runtime.InteropServices.ComTypes.IDataObject, namespace: System.Runtime.InteropServices.ComTypes
  DNIEnumFORMATETC = interface; // type: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC, namespace: System.Runtime.InteropServices.ComTypes
  DNIEnumSTATDATA = interface; // type: System.Runtime.InteropServices.ComTypes.IEnumSTATDATA, namespace: System.Runtime.InteropServices.ComTypes
  DNIDispatchConstantAttribute = interface; // type: System.Runtime.CompilerServices.IDispatchConstantAttribute, namespace: System.Runtime.CompilerServices
  DNIUnknownConstantAttribute = interface; // type: System.Runtime.CompilerServices.IUnknownConstantAttribute, namespace: System.Runtime.CompilerServices
  DNAutomationProxyAttribute = interface; // type: System.Runtime.InteropServices.AutomationProxyAttribute, namespace: System.Runtime.InteropServices
  DNComAliasNameAttribute = interface; // type: System.Runtime.InteropServices.ComAliasNameAttribute, namespace: System.Runtime.InteropServices
  DNComCompatibleVersionAttribute = interface; // type: System.Runtime.InteropServices.ComCompatibleVersionAttribute, namespace: System.Runtime.InteropServices
  DNComConversionLossAttribute = interface; // type: System.Runtime.InteropServices.ComConversionLossAttribute, namespace: System.Runtime.InteropServices
  DNComRegisterFunctionAttribute = interface; // type: System.Runtime.InteropServices.ComRegisterFunctionAttribute, namespace: System.Runtime.InteropServices
  DNComUnregisterFunctionAttribute = interface; // type: System.Runtime.InteropServices.ComUnregisterFunctionAttribute, namespace: System.Runtime.InteropServices
  DNIDispatchImplAttribute = interface; // type: System.Runtime.InteropServices.IDispatchImplAttribute, namespace: System.Runtime.InteropServices
  DNImportedFromTypeLibAttribute = interface; // type: System.Runtime.InteropServices.ImportedFromTypeLibAttribute, namespace: System.Runtime.InteropServices
  DNManagedToNativeComInteropStubAttribute = interface; // type: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute, namespace: System.Runtime.InteropServices
  DNPrimaryInteropAssemblyAttribute = interface; // type: System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute, namespace: System.Runtime.InteropServices
  DNSetWin32ContextInIDispatchAttribute = interface; // type: System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibFuncAttribute = interface; // type: System.Runtime.InteropServices.TypeLibFuncAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibImportClassAttribute = interface; // type: System.Runtime.InteropServices.TypeLibImportClassAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibTypeAttribute = interface; // type: System.Runtime.InteropServices.TypeLibTypeAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibVarAttribute = interface; // type: System.Runtime.InteropServices.TypeLibVarAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibVersionAttribute = interface; // type: System.Runtime.InteropServices.TypeLibVersionAttribute, namespace: System.Runtime.InteropServices
  DNComAwareEventInfo = interface; // type: System.Runtime.InteropServices.ComAwareEventInfo, namespace: System.Runtime.InteropServices
  DNHandleCollector = interface; // type: System.Runtime.InteropServices.HandleCollector, namespace: System.Runtime.InteropServices
  DNRuntimeEnvironment = interface; // type: System.Runtime.InteropServices.RuntimeEnvironment, namespace: System.Runtime.InteropServices
  DNSecureStringMarshal = interface; // type: System.Security.SecureStringMarshal, namespace: System.Security
  DNFORMATETC = interface; // type: System.Runtime.InteropServices.ComTypes.FORMATETC, namespace: System.Runtime.InteropServices.ComTypes
  DNSTATDATA = interface; // type: System.Runtime.InteropServices.ComTypes.STATDATA, namespace: System.Runtime.InteropServices.ComTypes
  DNSTGMEDIUM = interface; // type: System.Runtime.InteropServices.ComTypes.STGMEDIUM, namespace: System.Runtime.InteropServices.ComTypes


{ objects }

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IAdviseSink')]
  DNIAdviseSink = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{0000010F-0000-0000-C000-000000000046}']
  { methods } 

    procedure OnDataChange(out format: DNFORMATETC; out stgmedium: DNSTGMEDIUM);
    procedure OnViewChange(aspect: Int32; index: Int32);
    procedure OnRename(moniker: DDNC.System.Private.CoreLib.DNIMoniker);
    procedure OnSave;
    procedure OnClose;

  end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IDataObject')]
  DNIDataObject = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{0000010E-0000-0000-C000-000000000046}']
  { methods } 

    procedure GetData(out format: DNFORMATETC; out medium: DNSTGMEDIUM);
    procedure GetDataHere(out format: DNFORMATETC; out medium: DNSTGMEDIUM);
    function QueryGetData(out format: DNFORMATETC): Int32;
    function GetCanonicalFormatEtc(out formatIn: DNFORMATETC; out formatOut: DNFORMATETC): Int32;
    procedure SetData(out formatIn: DNFORMATETC; out medium: DNSTGMEDIUM; release: Boolean);
    function EnumFormatEtc(direction: DNDATADIR): DNIEnumFORMATETC;
    function DAdvise(out pFormatetc: DNFORMATETC; advf: DNADVF; adviseSink: DNIAdviseSink; out connection: Int32): Int32;
    procedure DUnadvise(connection: Int32);
    function EnumDAdvise(out enumAdvise: DNIEnumSTATDATA): Int32;

  end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IEnumFORMATETC')]
  DNIEnumFORMATETC = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{00000103-0000-0000-C000-000000000046}']
  { methods } 

    function Next(celt: Int32; [out]rgelt: TArray<DNFORMATETC>; [out]pceltFetched: TArray<Int32>): Int32;
    function Skip(celt: Int32): Int32;
    function Reset: Int32;
    procedure Clone(out newEnum: DNIEnumFORMATETC);

  end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IEnumSTATDATA')]
  DNIEnumSTATDATA = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{00000103-0000-0000-C000-000000000046}']
  { methods } 

    function Next(celt: Int32; [out]rgelt: TArray<DNSTATDATA>; [out]pceltFetched: TArray<Int32>): Int32;
    function Skip(celt: Int32): Int32;
    function Reset: Int32;
    procedure Clone(out newEnum: DNIEnumSTATDATA);

  end;

  //-------------namespace: System.Runtime.CompilerServices----------------
  DNIDispatchConstantAttributeClass = interface(DDNC.System.Private.CoreLib.DNCustomConstantAttributeClass)
  ['{7522752E-F894-5950-AF13-910A5DCB8A18}']
  { constructors } 

    {class} function init: DNIDispatchConstantAttribute;

  end;

  [DNTypeName('System.Runtime.CompilerServices.IDispatchConstantAttribute')]
  DNIDispatchConstantAttribute = interface(DDNC.System.Private.CoreLib.DNCustomConstantAttribute)
  ['{422D5E9D-B3D9-3564-8D2A-5D81BB644693}']
  { getters & setters } 

    function get_Value: DDNC.System.Private.CoreLib.DNObject;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDNC.System.Private.CoreLib.DNObject read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNIDispatchConstantAttribute = class(TDNGenericImport<DNIDispatchConstantAttributeClass, DNIDispatchConstantAttribute>) end;

  //-------------namespace: System.Runtime.CompilerServices----------------
  DNIUnknownConstantAttributeClass = interface(DDNC.System.Private.CoreLib.DNCustomConstantAttributeClass)
  ['{68F63837-DE23-53E4-ABD8-5C06736D6295}']
  { constructors } 

    {class} function init: DNIUnknownConstantAttribute;

  end;

  [DNTypeName('System.Runtime.CompilerServices.IUnknownConstantAttribute')]
  DNIUnknownConstantAttribute = interface(DDNC.System.Private.CoreLib.DNCustomConstantAttribute)
  ['{F032ECD9-FA9A-35E9-89B7-FFC40FA4133B}']
  { getters & setters } 

    function get_Value: DDNC.System.Private.CoreLib.DNObject;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDNC.System.Private.CoreLib.DNObject read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNIUnknownConstantAttribute = class(TDNGenericImport<DNIUnknownConstantAttributeClass, DNIUnknownConstantAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNAutomationProxyAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{AF150E54-180B-562B-9B89-855D6D2A2498}']
  { constructors } 

    {class} function init(val: Boolean): DNAutomationProxyAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.AutomationProxyAttribute')]
  DNAutomationProxyAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{D2403048-ED92-304D-A3D3-98CD9CB63DDB}']
  { getters & setters } 

    function get_Value: Boolean;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: Boolean read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNAutomationProxyAttribute = class(TDNGenericImport<DNAutomationProxyAttributeClass, DNAutomationProxyAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComAliasNameAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{5270BB2A-5352-523C-A87E-E1F36DC9A0B8}']
  { constructors } 

    {class} function init(alias: string): DNComAliasNameAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComAliasNameAttribute')]
  DNComAliasNameAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{C96C63D8-186A-3844-B0D9-F5D5BCC5D31A}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComAliasNameAttribute = class(TDNGenericImport<DNComAliasNameAttributeClass, DNComAliasNameAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComCompatibleVersionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{AE7EF70A-51AC-5CBC-883C-140D999B4C4F}']
  { constructors } 

    {class} function init(major: Int32; minor: Int32; build: Int32; revision: Int32): DNComCompatibleVersionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComCompatibleVersionAttribute')]
  DNComCompatibleVersionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{9D0CB1FF-1964-3472-A0F9-C5749B8B2C41}']
  { getters & setters } 

    function get_MajorVersion: Int32;
    function get_MinorVersion: Int32;
    function get_BuildNumber: Int32;
    function get_RevisionNumber: Int32;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property MajorVersion: Int32 read get_MajorVersion;
    property MinorVersion: Int32 read get_MinorVersion;
    property BuildNumber: Int32 read get_BuildNumber;
    property RevisionNumber: Int32 read get_RevisionNumber;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComCompatibleVersionAttribute = class(TDNGenericImport<DNComCompatibleVersionAttributeClass, DNComCompatibleVersionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComConversionLossAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{ABEAAF90-F978-5047-A27E-E2D6CFBACB3A}']
  { constructors } 

    {class} function init: DNComConversionLossAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComConversionLossAttribute')]
  DNComConversionLossAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{05924FE3-867E-3136-AB18-E7AFEFF9EE3F}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComConversionLossAttribute = class(TDNGenericImport<DNComConversionLossAttributeClass, DNComConversionLossAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComRegisterFunctionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{506334BE-2421-596F-8077-9C7BABD745C4}']
  { constructors } 

    {class} function init: DNComRegisterFunctionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComRegisterFunctionAttribute')]
  DNComRegisterFunctionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{2120505C-A633-349D-8009-95909AEF81BC}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComRegisterFunctionAttribute = class(TDNGenericImport<DNComRegisterFunctionAttributeClass, DNComRegisterFunctionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComUnregisterFunctionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{E0B19893-362B-5B16-A79B-AC360B8E2A40}']
  { constructors } 

    {class} function init: DNComUnregisterFunctionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComUnregisterFunctionAttribute')]
  DNComUnregisterFunctionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{A5FCE2DC-347D-334A-B9F2-C9B1B8C09F46}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComUnregisterFunctionAttribute = class(TDNGenericImport<DNComUnregisterFunctionAttributeClass, DNComUnregisterFunctionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNIDispatchImplAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{2D3E61B4-06C9-57D1-B732-23C177A23D90}']
  { constructors } 

    {class} function init(implType: Int16): DNIDispatchImplAttribute; overload;
    {class} function init(implType: DNIDispatchImplType): DNIDispatchImplAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.IDispatchImplAttribute')]
  DNIDispatchImplAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{1917C70D-2204-3E6B-BDB5-91CF612C79A7}']
  { getters & setters } 

    function get_Value: DNIDispatchImplType;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DNIDispatchImplType read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNIDispatchImplAttribute = class(TDNGenericImport<DNIDispatchImplAttributeClass, DNIDispatchImplAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNImportedFromTypeLibAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{196B32BF-B598-5B2D-8196-15B00AD630C1}']
  { constructors } 

    {class} function init(tlbFile: string): DNImportedFromTypeLibAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ImportedFromTypeLibAttribute')]
  DNImportedFromTypeLibAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{074EA6A4-53A4-3AB0-97BD-A3FFD83F29A7}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNImportedFromTypeLibAttribute = class(TDNGenericImport<DNImportedFromTypeLibAttributeClass, DNImportedFromTypeLibAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNManagedToNativeComInteropStubAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{1AE589FE-3F15-5885-9804-27D458E3552B}']
  { constructors } 

    {class} function init(classType: DDNC.System.Private.CoreLib.DNType; methodName: string): DNManagedToNativeComInteropStubAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute')]
  DNManagedToNativeComInteropStubAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{256351E1-023F-31A6-86D1-C3A5538FC559}']
  { getters & setters } 

    function get_ClassType: DDNC.System.Private.CoreLib.DNType;
    function get_MethodName: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property ClassType: DDNC.System.Private.CoreLib.DNType read get_ClassType;
    property MethodName: string read get_MethodName;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNManagedToNativeComInteropStubAttribute = class(TDNGenericImport<DNManagedToNativeComInteropStubAttributeClass, DNManagedToNativeComInteropStubAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNPrimaryInteropAssemblyAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{77D49F32-DB3F-5ED5-8DDC-937983C47C38}']
  { constructors } 

    {class} function init(major: Int32; minor: Int32): DNPrimaryInteropAssemblyAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute')]
  DNPrimaryInteropAssemblyAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{78F8F5E3-C0DB-3A02-A7FF-CE330303627D}']
  { getters & setters } 

    function get_MajorVersion: Int32;
    function get_MinorVersion: Int32;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property MajorVersion: Int32 read get_MajorVersion;
    property MinorVersion: Int32 read get_MinorVersion;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNPrimaryInteropAssemblyAttribute = class(TDNGenericImport<DNPrimaryInteropAssemblyAttributeClass, DNPrimaryInteropAssemblyAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNSetWin32ContextInIDispatchAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{C575E4DC-EC8A-574B-A54D-23DC77BC025F}']
  { constructors } 

    {class} function init: DNSetWin32ContextInIDispatchAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute')]
  DNSetWin32ContextInIDispatchAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{E2FCD15C-4B0F-3576-9179-3CD231FC229F}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNSetWin32ContextInIDispatchAttribute = class(TDNGenericImport<DNSetWin32ContextInIDispatchAttributeClass, DNSetWin32ContextInIDispatchAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibFuncAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{CCEA8997-7EA3-5B3F-8FCD-1A7CE9D27785}']
  { constructors } 

    {class} function init(flags: DNTypeLibFuncFlags): DNTypeLibFuncAttribute; overload;
    {class} function init(flags: Int16): DNTypeLibFuncAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibFuncAttribute')]
  DNTypeLibFuncAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{BCA63569-968F-3148-ACAA-CB37BB6AE21F}']
  { getters & setters } 

    function get_Value: DNTypeLibFuncFlags;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DNTypeLibFuncFlags read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibFuncAttribute = class(TDNGenericImport<DNTypeLibFuncAttributeClass, DNTypeLibFuncAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibImportClassAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{0BC81256-C8A8-531E-9607-8C786C134D44}']
  { constructors } 

    {class} function init(importClass: DDNC.System.Private.CoreLib.DNType): DNTypeLibImportClassAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibImportClassAttribute')]
  DNTypeLibImportClassAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{F959DBAB-173E-31B0-8702-15C7B79B5531}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibImportClassAttribute = class(TDNGenericImport<DNTypeLibImportClassAttributeClass, DNTypeLibImportClassAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibTypeAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{FA681089-6ACD-5C21-9914-02657E45D803}']
  { constructors } 

    {class} function init(flags: DNTypeLibTypeFlags): DNTypeLibTypeAttribute; overload;
    {class} function init(flags: Int16): DNTypeLibTypeAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibTypeAttribute')]
  DNTypeLibTypeAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{14ED9218-676F-32CE-8E21-DAEC60F520E5}']
  { getters & setters } 

    function get_Value: DNTypeLibTypeFlags;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DNTypeLibTypeFlags read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibTypeAttribute = class(TDNGenericImport<DNTypeLibTypeAttributeClass, DNTypeLibTypeAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibVarAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{16A2622F-4E47-50B5-BAF4-D424F49BEE04}']
  { constructors } 

    {class} function init(flags: DNTypeLibVarFlags): DNTypeLibVarAttribute; overload;
    {class} function init(flags: Int16): DNTypeLibVarAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibVarAttribute')]
  DNTypeLibVarAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{49269E2C-7AB6-3E7D-BC08-63EAB6BCD099}']
  { getters & setters } 

    function get_Value: DNTypeLibVarFlags;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DNTypeLibVarFlags read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibVarAttribute = class(TDNGenericImport<DNTypeLibVarAttributeClass, DNTypeLibVarAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibVersionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{2163A615-C8E6-5E6A-A8B9-94D4AAC9820A}']
  { constructors } 

    {class} function init(major: Int32; minor: Int32): DNTypeLibVersionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibVersionAttribute')]
  DNTypeLibVersionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{46D997AF-FDD0-35B4-81F5-FE53665523FC}']
  { getters & setters } 

    function get_MajorVersion: Int32;
    function get_MinorVersion: Int32;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property MajorVersion: Int32 read get_MajorVersion;
    property MinorVersion: Int32 read get_MinorVersion;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibVersionAttribute = class(TDNGenericImport<DNTypeLibVersionAttributeClass, DNTypeLibVersionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComAwareEventInfoClass = interface(DDNC.System.Private.CoreLib.DNEventInfoClass)
  ['{85BDA9B5-6603-50A2-940A-0013CFC805D3}']
  { constructors } 

    {class} function init(&type: DDNC.System.Private.CoreLib.DNType; eventName: string): DNComAwareEventInfo;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComAwareEventInfo')]
  DNComAwareEventInfo = interface(DDNC.System.Private.CoreLib.DNEventInfo)
  ['{9B50B1DC-A288-3FA0-AD4E-9FA5799B4BDA}']
  { getters & setters } 

    function get_Attributes: DDNC.System.Private.CoreLib.DNEventAttributes;
    function get_DeclaringType: DDNC.System.Private.CoreLib.DNType;
    function get_MetadataToken: Int32;
    function get_Module: DDNC.System.Private.CoreLib.DNModule;
    function get_Name: string;
    function get_ReflectedType: DDNC.System.Private.CoreLib.DNType;
    function get_MemberType: DDNC.System.Private.CoreLib.DNMemberTypes;
    function get_IsSpecialName: Boolean;
    function get_AddMethod: DDNC.System.Private.CoreLib.DNMethodInfo;
    function get_RemoveMethod: DDNC.System.Private.CoreLib.DNMethodInfo;
    function get_RaiseMethod: DDNC.System.Private.CoreLib.DNMethodInfo;
    function get_IsMulticast: Boolean;
    function get_EventHandlerType: DDNC.System.Private.CoreLib.DNType;
    function get_CustomAttributes: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNCustomAttributeData>;
    function get_IsCollectible: Boolean;

  { methods } 

    procedure AddEventHandler(target: DDNC.System.Private.CoreLib.DNObject; handler: DDNC.System.Private.CoreLib.DNDelegate);
    procedure RemoveEventHandler(target: DDNC.System.Private.CoreLib.DNObject; handler: DDNC.System.Private.CoreLib.DNDelegate);
    function GetAddMethod(nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetOtherMethods(nonPublic: Boolean): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    function GetRaiseMethod(nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetRemoveMethod(nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetCustomAttributes(attributeType: DDNC.System.Private.CoreLib.DNType; inherit: Boolean): TArray<DDNC.System.Private.CoreLib.DNObject>; overload;
    function GetCustomAttributes(inherit: Boolean): TArray<DDNC.System.Private.CoreLib.DNObject>; overload;
    function GetCustomAttributesData: DDNC.System.Private.CoreLib.DNIList<DDNC.System.Private.CoreLib.DNCustomAttributeData>;
    function IsDefined(attributeType: DDNC.System.Private.CoreLib.DNType; inherit: Boolean): Boolean;
    function GetOtherMethods: TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    function GetAddMethod: DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetRemoveMethod: DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetRaiseMethod: DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function HasSameMetadataDefinitionAs(other: DDNC.System.Private.CoreLib.DNMemberInfo): Boolean;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;

  { propertys } 

    property Attributes: DDNC.System.Private.CoreLib.DNEventAttributes read get_Attributes;
    property DeclaringType: DDNC.System.Private.CoreLib.DNType read get_DeclaringType;
    property MetadataToken: Int32 read get_MetadataToken;
    property Module: DDNC.System.Private.CoreLib.DNModule read get_Module;
    property Name: string read get_Name;
    property ReflectedType: DDNC.System.Private.CoreLib.DNType read get_ReflectedType;
    property MemberType: DDNC.System.Private.CoreLib.DNMemberTypes read get_MemberType;
    property IsSpecialName: Boolean read get_IsSpecialName;
    property AddMethod: DDNC.System.Private.CoreLib.DNMethodInfo read get_AddMethod;
    property RemoveMethod: DDNC.System.Private.CoreLib.DNMethodInfo read get_RemoveMethod;
    property RaiseMethod: DDNC.System.Private.CoreLib.DNMethodInfo read get_RaiseMethod;
    property IsMulticast: Boolean read get_IsMulticast;
    property EventHandlerType: DDNC.System.Private.CoreLib.DNType read get_EventHandlerType;
    property CustomAttributes: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNCustomAttributeData> read get_CustomAttributes;
    property IsCollectible: Boolean read get_IsCollectible;
  end;

  TDNComAwareEventInfo = class(TDNGenericImport<DNComAwareEventInfoClass, DNComAwareEventInfo>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNHandleCollectorClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{13583888-1C2A-5E03-B8DD-7261D889C918}']
  { constructors } 

    {class} function init(name: string; initialThreshold: Int32): DNHandleCollector; overload;
    {class} function init(name: string; initialThreshold: Int32; maximumThreshold: Int32): DNHandleCollector; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.HandleCollector')]
  DNHandleCollector = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{D1230DC4-B5B3-3FF5-A905-0A68C74BD77A}']
  { getters & setters } 

    function get_Count: Int32;
    function get_InitialThreshold: Int32;
    function get_MaximumThreshold: Int32;
    function get_Name: string;

  { methods } 

    procedure Add;
    procedure Remove;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property Count: Int32 read get_Count;
    property InitialThreshold: Int32 read get_InitialThreshold;
    property MaximumThreshold: Int32 read get_MaximumThreshold;
    property Name: string read get_Name;
  end;

  TDNHandleCollector = class(TDNGenericImport<DNHandleCollectorClass, DNHandleCollector>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNRuntimeEnvironmentClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{9B534291-8B74-5BDD-A3FD-AEAA41DDF945}']
  { static getter & setter } 

    {class} function get_SystemConfigurationFile: string;

  { static methods } 

    {class} function FromGlobalAccessCache(a: DDNC.System.Private.CoreLib.DNAssembly): Boolean;
    {class} function GetRuntimeDirectory: string;
    {class} function GetRuntimeInterfaceAsIntPtr(clsid: DDNC.System.Private.CoreLib.DNGuid; riid: DDNC.System.Private.CoreLib.DNGuid): IntPtr;
    {class} function GetRuntimeInterfaceAsObject(clsid: DDNC.System.Private.CoreLib.DNGuid; riid: DDNC.System.Private.CoreLib.DNGuid): DDNC.System.Private.CoreLib.DNObject;
    {class} function GetSystemVersion: string;

  { static propertys } 

    {class} property SystemConfigurationFile: string read get_SystemConfigurationFile;
  end;

  [DNTypeName('System.Runtime.InteropServices.RuntimeEnvironment')]
  DNRuntimeEnvironment = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{966B3B5B-A781-369B-8296-4CE475AD79CC}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNRuntimeEnvironment = class(TDNGenericImport<DNRuntimeEnvironmentClass, DNRuntimeEnvironment>) end;

  //-------------namespace: System.Security----------------
  DNSecureStringMarshalClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{038CFC1E-91E1-51E3-8BEA-097F27BB42A6}']
  { static methods } 

    {class} function SecureStringToCoTaskMemAnsi(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;
    {class} function SecureStringToGlobalAllocAnsi(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;
    {class} function SecureStringToCoTaskMemUnicode(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;
    {class} function SecureStringToGlobalAllocUnicode(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;

  end;

  [DNTypeName('System.Security.SecureStringMarshal')]
  DNSecureStringMarshal = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{5C02AEDA-E9E9-30E8-8403-FC689B01E7FD}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNSecureStringMarshal = class(TDNGenericImport<DNSecureStringMarshalClass, DNSecureStringMarshal>) end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  DNFORMATETCClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{79AB2691-BA53-5FF5-A31A-1347629AEAB2}']
  end;

  [DNTypeName('System.Runtime.InteropServices.ComTypes.FORMATETC')]
  DNFORMATETC = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{86A030CC-4979-30BF-8DB9-BCFBE6BB5A49}']
  { fields getter & setter } 

   function __fakeFieldGet_cfFormat: Int16;
   procedure __fakeFieldSet_cfFormat(value: Int16);
   function __fakeFieldGet_ptd: IntPtr;
   procedure __fakeFieldSet_ptd(value: IntPtr);
   function __fakeFieldGet_dwAspect: DNDVASPECT;
   procedure __fakeFieldSet_dwAspect(value: DNDVASPECT);
   function __fakeFieldGet_lindex: Int32;
   procedure __fakeFieldSet_lindex(value: Int32);
   function __fakeFieldGet_tymed: DNTYMED;
   procedure __fakeFieldSet_tymed(value: DNTYMED);

  { fields } 

   property cfFormat: Int16 read __fakeFieldGet_cfFormat write __fakeFieldSet_cfFormat;
   property ptd: IntPtr read __fakeFieldGet_ptd write __fakeFieldSet_ptd;
   property dwAspect: DNDVASPECT read __fakeFieldGet_dwAspect write __fakeFieldSet_dwAspect;
   property lindex: Int32 read __fakeFieldGet_lindex write __fakeFieldSet_lindex;
   property tymed: DNTYMED read __fakeFieldGet_tymed write __fakeFieldSet_tymed;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNFORMATETC = class(TDNGenericImport<DNFORMATETCClass, DNFORMATETC>) end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  DNSTATDATAClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{46652B3C-6585-54D0-8933-EC494C97EA28}']
  end;

  [DNTypeName('System.Runtime.InteropServices.ComTypes.STATDATA')]
  DNSTATDATA = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{34B613BD-7B4C-3002-AB87-841EADA8D476}']
  { fields getter & setter } 

   function __fakeFieldGet_formatetc: DNFORMATETC;
   procedure __fakeFieldSet_formatetc(value: DNFORMATETC);
   function __fakeFieldGet_advf: DNADVF;
   procedure __fakeFieldSet_advf(value: DNADVF);
   function __fakeFieldGet_advSink: DNIAdviseSink;
   procedure __fakeFieldSet_advSink(value: DNIAdviseSink);
   function __fakeFieldGet_connection: Int32;
   procedure __fakeFieldSet_connection(value: Int32);

  { fields } 

   property formatetc: DNFORMATETC read __fakeFieldGet_formatetc write __fakeFieldSet_formatetc;
   property advf: DNADVF read __fakeFieldGet_advf write __fakeFieldSet_advf;
   property advSink: DNIAdviseSink read __fakeFieldGet_advSink write __fakeFieldSet_advSink;
   property connection: Int32 read __fakeFieldGet_connection write __fakeFieldSet_connection;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNSTATDATA = class(TDNGenericImport<DNSTATDATAClass, DNSTATDATA>) end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  DNSTGMEDIUMClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{0BF05DC2-6FFE-5E1F-B32C-2CB8CF61E410}']
  end;

  [DNTypeName('System.Runtime.InteropServices.ComTypes.STGMEDIUM')]
  DNSTGMEDIUM = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{B00B3B4B-F361-3D12-AA27-3F9F253F6C92}']
  { fields getter & setter } 

   function __fakeFieldGet_tymed: DNTYMED;
   procedure __fakeFieldSet_tymed(value: DNTYMED);
   function __fakeFieldGet_unionmember: IntPtr;
   procedure __fakeFieldSet_unionmember(value: IntPtr);
   function __fakeFieldGet_pUnkForRelease: DDNC.System.Private.CoreLib.DNObject;
   procedure __fakeFieldSet_pUnkForRelease(value: DDNC.System.Private.CoreLib.DNObject);

  { fields } 

   property tymed: DNTYMED read __fakeFieldGet_tymed write __fakeFieldSet_tymed;
   property unionmember: IntPtr read __fakeFieldGet_unionmember write __fakeFieldSet_unionmember;
   property pUnkForRelease: DDNC.System.Private.CoreLib.DNObject read __fakeFieldGet_pUnkForRelease write __fakeFieldSet_pUnkForRelease;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNSTGMEDIUM = class(TDNGenericImport<DNSTGMEDIUMClass, DNSTGMEDIUM>) end;


implementation


initialization
  LoadAssemblyModule('System.Runtime.InteropServices, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a');

finalization

end.
