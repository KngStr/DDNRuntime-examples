//----------------------------------------------------------------------------
//  System.Linq.dll: System.Linq, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 5.0.9
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.Linq
//  Author: ying32
//----------------------------------------------------------------------------

unit DDNC.System.Linq;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib;

type


{ declares }

  DNIGrouping<TKey, TElement> = interface; // type: System.Linq.IGrouping`2, namespace: System.Linq
  DNILookup<TKey, TElement> = interface; // type: System.Linq.ILookup`2, namespace: System.Linq
  DNIOrderedEnumerable<TElement> = interface; // type: System.Linq.IOrderedEnumerable`1, namespace: System.Linq
  DNEnumerable = interface; // type: System.Linq.Enumerable, namespace: System.Linq
  DNGrouping<TKey, TElement> = interface; // type: System.Linq.Grouping`2, namespace: System.Linq
  DNLookup<TKey, TElement> = interface; // type: System.Linq.Lookup`2, namespace: System.Linq


{ objects }

  //-------------namespace: System.Linq----------------
  [DNTypeName('System.Linq.IGrouping`2')]
  DNIGrouping<TKey, TElement> = interface(DDNC.System.Private.CoreLib.DNIEnumerable<TElement>)
  ['{9CCECD6C-7922-345E-A182-6626F99CC460}']
  { getters & setters } 

    function get_Key: TKey;

  { propertys } 

    property Key: TKey read get_Key;
  end;

  //-------------namespace: System.Linq----------------
  [DNTypeName('System.Linq.ILookup`2')]
  DNILookup<TKey, TElement> = interface(DDNC.System.Private.CoreLib.DNIEnumerable<DNIGrouping<TKey, TElement>>)
  ['{6B51090C-E837-3318-A840-0B5D95886587}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(key: TKey): DDNC.System.Private.CoreLib.DNIEnumerable<TElement>;

  { methods } 

    function &Contains(key: TKey): Boolean;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[key: TKey]: DDNC.System.Private.CoreLib.DNIEnumerable<TElement> read get_Item; default;
  end;

  //-------------namespace: System.Linq----------------
  [DNTypeName('System.Linq.IOrderedEnumerable`1')]
  DNIOrderedEnumerable<TElement> = interface(DDNC.System.Private.CoreLib.DNIEnumerable<TElement>)
  ['{6EEB1E7D-F438-329E-BD25-428DAB0608A7}']
  end;

  //-------------namespace: System.Linq----------------
  DNEnumerableClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{72E6CFA0-44A3-5166-8ED9-CBC2D1EA85B1}']
  { static methods } 

    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int32>): Int32; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int32>>): DDNC.System.Private.CoreLib.DNNullable<Int32>; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int64>): Int64; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int64>>): DDNC.System.Private.CoreLib.DNNullable<Int64>; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<Single>): Single; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Single>>): DDNC.System.Private.CoreLib.DNNullable<Single>; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<Double>): Double; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Double>>): DDNC.System.Private.CoreLib.DNNullable<Double>; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNDecimal>): DDNC.System.Private.CoreLib.DNDecimal; overload;
    {class} function Sum(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>>): DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int64>): Int64; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int64>>): DDNC.System.Private.CoreLib.DNNullable<Int64>; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<Single>): Single; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Single>>): DDNC.System.Private.CoreLib.DNNullable<Single>; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<Double>): Double; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Double>>): DDNC.System.Private.CoreLib.DNNullable<Double>; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNDecimal>): DDNC.System.Private.CoreLib.DNDecimal; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>>): DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>; overload;
    {class} function Range(start: Int32; count: Int32): DDNC.System.Private.CoreLib.DNIEnumerable<Int32>;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int32>): Int32; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int32>>): DDNC.System.Private.CoreLib.DNNullable<Int32>; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int64>): Int64; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int64>>): DDNC.System.Private.CoreLib.DNNullable<Int64>; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<Double>): Double; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Double>>): DDNC.System.Private.CoreLib.DNNullable<Double>; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<Single>): Single; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Single>>): DDNC.System.Private.CoreLib.DNNullable<Single>; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNDecimal>): DDNC.System.Private.CoreLib.DNDecimal; overload;
    {class} function Max(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>>): DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int32>): Int32; overload;
    {class} function Min(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int32>>): DDNC.System.Private.CoreLib.DNNullable<Int32>; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int32>): Double; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int32>>): DDNC.System.Private.CoreLib.DNNullable<Double>; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<Int64>): Double; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Int64>>): DDNC.System.Private.CoreLib.DNNullable<Double>; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<Single>): Single; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Single>>): DDNC.System.Private.CoreLib.DNNullable<Single>; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<Double>): Double; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<Double>>): DDNC.System.Private.CoreLib.DNNullable<Double>; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNDecimal>): DDNC.System.Private.CoreLib.DNDecimal; overload;
    {class} function Average(source: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>>): DDNC.System.Private.CoreLib.DNNullable<DDNC.System.Private.CoreLib.DNDecimal>; overload;

  end;

  [DNTypeName('System.Linq.Enumerable')]
  DNEnumerable = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{E6BB0178-984F-3413-AD04-1831C78E8F8C}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNEnumerable = class(TDNGenericImport<DNEnumerableClass, DNEnumerable>) end;

  //-------------namespace: System.Linq----------------
  DNGroupingClass<TKey, TElement> = interface(DNObjectClass)
  ['{AFB568DF-0637-51AD-A708-E642AC207DC3}']
  end;

  [DNTypeName('System.Linq.Grouping`2')]
  DNGrouping<TKey, TElement> = interface(DNIGrouping<TKey, TElement>)
  ['{B08678BD-CA7B-3B46-A180-1A1A778A0C1E}']
  { getters & setters } 

    function get_Key: TKey;

  { methods } 

    function GetEnumerator: DDNC.System.Private.CoreLib.DNIEnumerator<TElement>;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property Key: TKey read get_Key;
  end;

  TDNGrouping<TKey, TElement> = class(TDNGenericImport<DNGroupingClass<TKey, TElement>, DNGrouping<TKey, TElement>>) end;

  //-------------namespace: System.Linq----------------
  DNLookupClass<TKey, TElement> = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{45B17176-5C64-52F3-88A0-E8848CF6CFE6}']
  end;

  [DNTypeName('System.Linq.Lookup`2')]
  DNLookup<TKey, TElement> = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{C67087B8-13AB-34E0-A11E-50B70BCEB391}']
  { getters & setters } 

    function get_Count: Int32;

  { methods } 

    function &Contains(key: TKey): Boolean;
    function GetEnumerator: DDNC.System.Private.CoreLib.DNIEnumerator<DNIGrouping<TKey, TElement>>;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property Count: Int32 read get_Count;
  end;

  TDNLookup<TKey, TElement> = class(TDNGenericImport<DNLookupClass<TKey, TElement>, DNLookup<TKey, TElement>>) end;


implementation


initialization
  InternalTryLoadAssemblyModule('System.Linq, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a');

finalization

end.
