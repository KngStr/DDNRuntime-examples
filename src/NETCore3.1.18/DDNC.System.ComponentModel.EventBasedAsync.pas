//----------------------------------------------------------------------------
//  System.ComponentModel.EventBasedAsync.dll: System.ComponentModel.EventBasedAsync, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 3.1.18
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.ComponentModel.EventBasedAsync
//  Author: ying32
//----------------------------------------------------------------------------

{$IFNDEF DDNCSYSTEMCOMPONENTMODELEVENTBASEDASYNC}
unit DDNC.System.ComponentModel.EventBasedAsync;
{$ENDIF}

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib,
  DDNC.System.ComponentModel,
  DDNC.System.ComponentModel.Primitives;

type


{ declares }

  DNAsyncOperation = interface; // type: System.ComponentModel.AsyncOperation, namespace: System.ComponentModel
  DNAsyncOperationManager = interface; // type: System.ComponentModel.AsyncOperationManager, namespace: System.ComponentModel
  DNAsyncCompletedEventArgs = interface; // type: System.ComponentModel.AsyncCompletedEventArgs, namespace: System.ComponentModel
  DNRunWorkerCompletedEventArgs = interface; // type: System.ComponentModel.RunWorkerCompletedEventArgs, namespace: System.ComponentModel
  DNDoWorkEventArgs = interface; // type: System.ComponentModel.DoWorkEventArgs, namespace: System.ComponentModel
  DNProgressChangedEventArgs = interface; // type: System.ComponentModel.ProgressChangedEventArgs, namespace: System.ComponentModel
  DNBackgroundWorker = interface; // type: System.ComponentModel.BackgroundWorker, namespace: System.ComponentModel

{ delegates }

  [DNTypeName('System.ComponentModel.AsyncCompletedEventHandler')]
  DNAsyncCompletedEventHandler = procedure(sender: DDNC.System.Private.CoreLib.DNObject; e: DNAsyncCompletedEventArgs) of object;

  [DNTypeName('System.ComponentModel.DoWorkEventHandler')]
  DNDoWorkEventHandler = procedure(sender: DDNC.System.Private.CoreLib.DNObject; e: DNDoWorkEventArgs) of object;

  [DNTypeName('System.ComponentModel.ProgressChangedEventHandler')]
  DNProgressChangedEventHandler = procedure(sender: DDNC.System.Private.CoreLib.DNObject; e: DNProgressChangedEventArgs) of object;

  [DNTypeName('System.ComponentModel.RunWorkerCompletedEventHandler')]
  DNRunWorkerCompletedEventHandler = procedure(sender: DDNC.System.Private.CoreLib.DNObject; e: DNRunWorkerCompletedEventArgs) of object;




{ objects }

  //-------------namespace: System.ComponentModel----------------
  DNAsyncOperationClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{738C008D-EB06-50A2-86B2-803F50A15AD1}']
  end;

  [DNTypeName('System.ComponentModel.AsyncOperation')]
  DNAsyncOperation = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{C5BC1312-D2C9-3885-A45D-3B619AC574B6}']
  { getters & setters } 

    function get_UserSuppliedState: DDNC.System.Private.CoreLib.DNObject;
    function get_SynchronizationContext: DDNC.System.Private.CoreLib.DNSynchronizationContext;

  { methods } 

    procedure Post(d: DDNC.System.Private.CoreLib.DNSendOrPostCallback; arg: DDNC.System.Private.CoreLib.DNObject);
    procedure PostOperationCompleted(d: DDNC.System.Private.CoreLib.DNSendOrPostCallback; arg: DDNC.System.Private.CoreLib.DNObject);
    procedure OperationCompleted;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property UserSuppliedState: DDNC.System.Private.CoreLib.DNObject read get_UserSuppliedState;
    property SynchronizationContext: DDNC.System.Private.CoreLib.DNSynchronizationContext read get_SynchronizationContext;
  end;

  TDNAsyncOperation = class(TDNGenericImport<DNAsyncOperationClass, DNAsyncOperation>) end;

  //-------------namespace: System.ComponentModel----------------
  DNAsyncOperationManagerClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{5BF41588-C77A-5909-8D95-C9E1F5C24358}']
  { static getter & setter } 

    {class} function get_SynchronizationContext: DDNC.System.Private.CoreLib.DNSynchronizationContext;
    {class} procedure set_SynchronizationContext(value: DDNC.System.Private.CoreLib.DNSynchronizationContext);

  { static methods } 

    {class} function CreateOperation(userSuppliedState: DDNC.System.Private.CoreLib.DNObject): DNAsyncOperation;

  { static propertys } 

    {class} property SynchronizationContext: DDNC.System.Private.CoreLib.DNSynchronizationContext read get_SynchronizationContext write set_SynchronizationContext;
  end;

  [DNTypeName('System.ComponentModel.AsyncOperationManager')]
  DNAsyncOperationManager = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{0394B570-8951-3EF3-AE5A-96D5016CB49D}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNAsyncOperationManager = class(TDNGenericImport<DNAsyncOperationManagerClass, DNAsyncOperationManager>) end;

  //-------------namespace: System.ComponentModel----------------
  DNAsyncCompletedEventArgsClass = interface(DDNC.System.Private.CoreLib.DNEventArgsClass)
  ['{407A4F26-D9D6-5CAE-8C9A-B4AE67E286CA}']
  { constructors } 

    {class} function init(error: DDNC.System.Private.CoreLib.DNException; cancelled: Boolean; userState: DDNC.System.Private.CoreLib.DNObject): DNAsyncCompletedEventArgs;

  end;

  [DNTypeName('System.ComponentModel.AsyncCompletedEventArgs')]
  DNAsyncCompletedEventArgs = interface(DDNC.System.Private.CoreLib.DNEventArgs)
  ['{0797AC67-C4C5-38E8-BD5F-5D0130673F9F}']
  { getters & setters } 

    function get_Cancelled: Boolean;
    function get_Error: DDNC.System.Private.CoreLib.DNException;
    function get_UserState: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property Cancelled: Boolean read get_Cancelled;
    property Error: DDNC.System.Private.CoreLib.DNException read get_Error;
    property UserState: DDNC.System.Private.CoreLib.DNObject read get_UserState;
  end;

  TDNAsyncCompletedEventArgs = class(TDNGenericImport<DNAsyncCompletedEventArgsClass, DNAsyncCompletedEventArgs>) end;

  //-------------namespace: System.ComponentModel----------------
  DNRunWorkerCompletedEventArgsClass = interface(DNAsyncCompletedEventArgsClass)
  ['{CDEA0CEB-DAC2-57C9-AD03-77BED19CF299}']
  { constructors } 

    {class} function init(result: DDNC.System.Private.CoreLib.DNObject; error: DDNC.System.Private.CoreLib.DNException; cancelled: Boolean): DNRunWorkerCompletedEventArgs;

  end;

  [DNTypeName('System.ComponentModel.RunWorkerCompletedEventArgs')]
  DNRunWorkerCompletedEventArgs = interface(DNAsyncCompletedEventArgs)
  ['{9661A0FC-A40B-3981-8E4F-1518ED4D77CF}']
  { getters & setters } 

    function get_Result: DDNC.System.Private.CoreLib.DNObject;
    function get_UserState: DDNC.System.Private.CoreLib.DNObject;
    function get_Cancelled: Boolean;
    function get_Error: DDNC.System.Private.CoreLib.DNException;

  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property Result: DDNC.System.Private.CoreLib.DNObject read get_Result;
    property UserState: DDNC.System.Private.CoreLib.DNObject read get_UserState;
    property Cancelled: Boolean read get_Cancelled;
    property Error: DDNC.System.Private.CoreLib.DNException read get_Error;
  end;

  TDNRunWorkerCompletedEventArgs = class(TDNGenericImport<DNRunWorkerCompletedEventArgsClass, DNRunWorkerCompletedEventArgs>) end;

  //-------------namespace: System.ComponentModel----------------
  DNDoWorkEventArgsClass = interface(DNObjectClass)
  ['{FBA80873-45B9-51B8-8A89-ACC2BF7CF70B}']
  { constructors } 

    {class} function init(argument: DDNC.System.Private.CoreLib.DNObject): DNDoWorkEventArgs;

  end;

  [DNTypeName('System.ComponentModel.DoWorkEventArgs')]
  DNDoWorkEventArgs = interface(DNObject)
  ['{84C3CADB-0193-3099-B6C6-8E6A63E7592B}']
  { getters & setters } 

    function get_Argument: DDNC.System.Private.CoreLib.DNObject;
    function get_Result: DDNC.System.Private.CoreLib.DNObject;
    procedure set_Result(value: DDNC.System.Private.CoreLib.DNObject);
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property Argument: DDNC.System.Private.CoreLib.DNObject read get_Argument;
    property Result: DDNC.System.Private.CoreLib.DNObject read get_Result write set_Result;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNDoWorkEventArgs = class(TDNGenericImport<DNDoWorkEventArgsClass, DNDoWorkEventArgs>) end;

  //-------------namespace: System.ComponentModel----------------
  DNProgressChangedEventArgsClass = interface(DDNC.System.Private.CoreLib.DNEventArgsClass)
  ['{11180B33-DC29-51D4-BEA3-6702C192D2CC}']
  { constructors } 

    {class} function init(progressPercentage: Int32; userState: DDNC.System.Private.CoreLib.DNObject): DNProgressChangedEventArgs;

  end;

  [DNTypeName('System.ComponentModel.ProgressChangedEventArgs')]
  DNProgressChangedEventArgs = interface(DDNC.System.Private.CoreLib.DNEventArgs)
  ['{AD3B66D6-BA88-3827-9C0D-0E400924348E}']
  { getters & setters } 

    function get_ProgressPercentage: Int32;
    function get_UserState: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property ProgressPercentage: Int32 read get_ProgressPercentage;
    property UserState: DDNC.System.Private.CoreLib.DNObject read get_UserState;
  end;

  TDNProgressChangedEventArgs = class(TDNGenericImport<DNProgressChangedEventArgsClass, DNProgressChangedEventArgs>) end;

  //-------------namespace: System.ComponentModel----------------
  DNBackgroundWorkerClass = interface(DNObjectClass)
  ['{1AA123AE-C54D-5750-B845-B032465695CF}']
  { constructors } 

    {class} function init: DNBackgroundWorker;

  end;

  [DNTypeName('System.ComponentModel.BackgroundWorker')]
  DNBackgroundWorker = interface(DNObject)
  ['{4051824D-9608-39DE-A979-4DAE7C614E92}']
  { getters & setters } 

    function get_CancellationPending: Boolean;
    function get_IsBusy: Boolean;
    function get_WorkerReportsProgress: Boolean;
    procedure set_WorkerReportsProgress(value: Boolean);
    function get_WorkerSupportsCancellation: Boolean;
    procedure set_WorkerSupportsCancellation(value: Boolean);
    function get_Site: DDNC.System.ComponentModel.Primitives.DNISite;
    procedure set_Site(value: DDNC.System.ComponentModel.Primitives.DNISite);
    function get_Container: DDNC.System.ComponentModel.Primitives.DNIContainer;

  { events } 

    procedure add_DoWork(value: DNDoWorkEventHandler);
    procedure remove_DoWork(value: DNDoWorkEventHandler);
    procedure add_ProgressChanged(value: DNProgressChangedEventHandler);
    procedure remove_ProgressChanged(value: DNProgressChangedEventHandler);
    procedure add_RunWorkerCompleted(value: DNRunWorkerCompletedEventHandler);
    procedure remove_RunWorkerCompleted(value: DNRunWorkerCompletedEventHandler);
    procedure add_Disposed(value: DDNC.System.Private.CoreLib.DNEventHandler);
    procedure remove_Disposed(value: DDNC.System.Private.CoreLib.DNEventHandler);

  { methods } 

    procedure CancelAsync;
    procedure ReportProgress(percentProgress: Int32); overload;
    procedure ReportProgress(percentProgress: Int32; userState: DDNC.System.Private.CoreLib.DNObject); overload;
    procedure RunWorkerAsync; overload;
    procedure RunWorkerAsync(argument: DDNC.System.Private.CoreLib.DNObject); overload;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDNC.System.Private.CoreLib.DNObject;
    function InitializeLifetimeService: DDNC.System.Private.CoreLib.DNObject;
    function GetType: DDNC.System.Private.CoreLib.DNType;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  { propertys } 

    property CancellationPending: Boolean read get_CancellationPending;
    property IsBusy: Boolean read get_IsBusy;
    property WorkerReportsProgress: Boolean read get_WorkerReportsProgress write set_WorkerReportsProgress;
    property WorkerSupportsCancellation: Boolean read get_WorkerSupportsCancellation write set_WorkerSupportsCancellation;
    property Site: DDNC.System.ComponentModel.Primitives.DNISite read get_Site write set_Site;
    property Container: DDNC.System.ComponentModel.Primitives.DNIContainer read get_Container;
  end;

  TDNBackgroundWorker = class(TDNGenericImport<DNBackgroundWorkerClass, DNBackgroundWorker>) end;


implementation


initialization
  LoadAssemblyModule('System.ComponentModel.EventBasedAsync.dll', True);

finalization

end.
