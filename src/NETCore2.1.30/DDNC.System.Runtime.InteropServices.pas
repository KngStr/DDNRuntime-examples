//----------------------------------------------------------------------------
//  System.Runtime.InteropServices.dll: System.Runtime.InteropServices, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 2.1.30
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.Runtime.InteropServices
//  Author: ying32
//----------------------------------------------------------------------------

{$IFNDEF DDNCSYSTEMRUNTIMEINTEROPSERVICES}
unit DDNC.System.Runtime.InteropServices;
{$ENDIF}

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib;

type

{ enums }

  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.AssemblyRegistrationFlags')]
  DNAssemblyRegistrationFlags = type Integer;
  DNAssemblyRegistrationFlagsHelper = record helper for DNAssemblyRegistrationFlags
  public const
    None = 0;
    SetCodeBase = 1;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.ADVF')]
  DNADVF = type Integer;
  DNADVFHelper = record helper for DNADVF
  public const
    ADVF_NODATA = 1;
    ADVF_PRIMEFIRST = 2;
    ADVF_ONLYONCE = 4;
    ADVFCACHE_NOHANDLER = 8;
    ADVFCACHE_FORCEBUILTIN = 16;
    ADVFCACHE_ONSAVE = 32;
    ADVF_DATAONSTOP = 64;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.DATADIR')]
  DNDATADIR = type Integer;
  DNDATADIRHelper = record helper for DNDATADIR
  public const
    DATADIR_GET = 1;
    DATADIR_SET = 2;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.DVASPECT')]
  DNDVASPECT = type Integer;
  DNDVASPECTHelper = record helper for DNDVASPECT
  public const
    DVASPECT_CONTENT = 1;
    DVASPECT_THUMBNAIL = 2;
    DVASPECT_ICON = 4;
    DVASPECT_DOCPRINT = 8;
  end;


  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.TYMED')]
  DNTYMED = type Integer;
  DNTYMEDHelper = record helper for DNTYMED
  public const
    TYMED_NULL = 0;
    TYMED_HGLOBAL = 1;
    TYMED_FILE = 2;
    TYMED_ISTREAM = 4;
    TYMED_ISTORAGE = 8;
    TYMED_GDI = 16;
    TYMED_MFPICT = 32;
    TYMED_ENHMF = 64;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.ExporterEventKind')]
  DNExporterEventKind = type Integer;
  DNExporterEventKindHelper = record helper for DNExporterEventKind
  public const
    NOTIF_TYPECONVERTED = 0;
    NOTIF_CONVERTWARNING = 1;
    ERROR_REFTOINVALIDASSEMBLY = 2;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.IDispatchImplType')]
  DNIDispatchImplType = type Integer;
  DNIDispatchImplTypeHelper = record helper for DNIDispatchImplType
  public const
    SystemDefinedImpl = 0;
    InternalImpl = 1;
    CompatibleImpl = 2;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.RegistrationClassContext')]
  DNRegistrationClassContext = type Integer;
  DNRegistrationClassContextHelper = record helper for DNRegistrationClassContext
  public const
    InProcessServer = 1;
    InProcessHandler = 2;
    LocalServer = 4;
    InProcessServer16 = 8;
    RemoteServer = 16;
    InProcessHandler16 = 32;
    Reserved1 = 64;
    Reserved2 = 128;
    Reserved3 = 256;
    Reserved4 = 512;
    NoCodeDownload = 1024;
    Reserved5 = 2048;
    NoCustomMarshal = 4096;
    EnableCodeDownload = 8192;
    NoFailureLog = 16384;
    DisableActivateAsActivator = 32768;
    EnableActivateAsActivator = 65536;
    FromDefaultContext = 131072;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.RegistrationConnectionType')]
  DNRegistrationConnectionType = type Integer;
  DNRegistrationConnectionTypeHelper = record helper for DNRegistrationConnectionType
  public const
    SingleUse = 0;
    MultipleUse = 1;
    MultiSeparate = 2;
    Suspended = 4;
    Surrogate = 8;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.TypeLibFuncFlags')]
  DNTypeLibFuncFlags = type Integer;
  DNTypeLibFuncFlagsHelper = record helper for DNTypeLibFuncFlags
  public const
    FRestricted = 1;
    FSource = 2;
    FBindable = 4;
    FRequestEdit = 8;
    FDisplayBind = 16;
    FDefaultBind = 32;
    FHidden = 64;
    FUsesGetLastError = 128;
    FDefaultCollelem = 256;
    FUiDefault = 512;
    FNonBrowsable = 1024;
    FReplaceable = 2048;
    FImmediateBind = 4096;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.TypeLibTypeFlags')]
  DNTypeLibTypeFlags = type Integer;
  DNTypeLibTypeFlagsHelper = record helper for DNTypeLibTypeFlags
  public const
    FAppObject = 1;
    FCanCreate = 2;
    FLicensed = 4;
    FPreDeclId = 8;
    FHidden = 16;
    FControl = 32;
    FDual = 64;
    FNonExtensible = 128;
    FOleAutomation = 256;
    FRestricted = 512;
    FAggregatable = 1024;
    FReplaceable = 2048;
    FDispatchable = 4096;
    FReverseBind = 8192;
  end;


  //-------------namespace: System.Runtime.InteropServices----------------
  [DNTypeName('System.Runtime.InteropServices.TypeLibVarFlags')]
  DNTypeLibVarFlags = type Integer;
  DNTypeLibVarFlagsHelper = record helper for DNTypeLibVarFlags
  public const
    FReadOnly = 1;
    FSource = 2;
    FBindable = 4;
    FRequestEdit = 8;
    FDisplayBind = 16;
    FDefaultBind = 32;
    FHidden = 64;
    FRestricted = 128;
    FDefaultCollelem = 256;
    FUiDefault = 512;
    FNonBrowsable = 1024;
    FReplaceable = 2048;
    FImmediateBind = 4096;
  end;




type


{ declares }

  DNIAdviseSink = interface; // type: System.Runtime.InteropServices.ComTypes.IAdviseSink, namespace: System.Runtime.InteropServices.ComTypes
  DNIDataObject = interface; // type: System.Runtime.InteropServices.ComTypes.IDataObject, namespace: System.Runtime.InteropServices.ComTypes
  DNIEnumFORMATETC = interface; // type: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC, namespace: System.Runtime.InteropServices.ComTypes
  DNIEnumSTATDATA = interface; // type: System.Runtime.InteropServices.ComTypes.IEnumSTATDATA, namespace: System.Runtime.InteropServices.ComTypes
  DNIUnknownConstantAttribute = interface; // type: System.Runtime.CompilerServices.IUnknownConstantAttribute, namespace: System.Runtime.CompilerServices
  DNAutomationProxyAttribute = interface; // type: System.Runtime.InteropServices.AutomationProxyAttribute, namespace: System.Runtime.InteropServices
  DNComAliasNameAttribute = interface; // type: System.Runtime.InteropServices.ComAliasNameAttribute, namespace: System.Runtime.InteropServices
  DNComCompatibleVersionAttribute = interface; // type: System.Runtime.InteropServices.ComCompatibleVersionAttribute, namespace: System.Runtime.InteropServices
  DNComConversionLossAttribute = interface; // type: System.Runtime.InteropServices.ComConversionLossAttribute, namespace: System.Runtime.InteropServices
  DNComEventInterfaceAttribute = interface; // type: System.Runtime.InteropServices.ComEventInterfaceAttribute, namespace: System.Runtime.InteropServices
  DNComRegisterFunctionAttribute = interface; // type: System.Runtime.InteropServices.ComRegisterFunctionAttribute, namespace: System.Runtime.InteropServices
  DNComUnregisterFunctionAttribute = interface; // type: System.Runtime.InteropServices.ComUnregisterFunctionAttribute, namespace: System.Runtime.InteropServices
  DNDefaultParameterValueAttribute = interface; // type: System.Runtime.InteropServices.DefaultParameterValueAttribute, namespace: System.Runtime.InteropServices
  DNIDispatchImplAttribute = interface; // type: System.Runtime.InteropServices.IDispatchImplAttribute, namespace: System.Runtime.InteropServices
  DNImportedFromTypeLibAttribute = interface; // type: System.Runtime.InteropServices.ImportedFromTypeLibAttribute, namespace: System.Runtime.InteropServices
  DNManagedToNativeComInteropStubAttribute = interface; // type: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute, namespace: System.Runtime.InteropServices
  DNPrimaryInteropAssemblyAttribute = interface; // type: System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute, namespace: System.Runtime.InteropServices
  DNSetWin32ContextInIDispatchAttribute = interface; // type: System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibFuncAttribute = interface; // type: System.Runtime.InteropServices.TypeLibFuncAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibImportClassAttribute = interface; // type: System.Runtime.InteropServices.TypeLibImportClassAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibTypeAttribute = interface; // type: System.Runtime.InteropServices.TypeLibTypeAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibVarAttribute = interface; // type: System.Runtime.InteropServices.TypeLibVarAttribute, namespace: System.Runtime.InteropServices
  DNTypeLibVersionAttribute = interface; // type: System.Runtime.InteropServices.TypeLibVersionAttribute, namespace: System.Runtime.InteropServices
  DNComAwareEventInfo = interface; // type: System.Runtime.InteropServices.ComAwareEventInfo, namespace: System.Runtime.InteropServices
  DNHandleCollector = interface; // type: System.Runtime.InteropServices.HandleCollector, namespace: System.Runtime.InteropServices
  DNRuntimeEnvironment = interface; // type: System.Runtime.InteropServices.RuntimeEnvironment, namespace: System.Runtime.InteropServices
  DNSecureStringMarshal = interface; // type: System.Security.SecureStringMarshal, namespace: System.Security
  DNFORMATETC = interface; // type: System.Runtime.InteropServices.ComTypes.FORMATETC, namespace: System.Runtime.InteropServices.ComTypes
  DNSTATDATA = interface; // type: System.Runtime.InteropServices.ComTypes.STATDATA, namespace: System.Runtime.InteropServices.ComTypes
  DNSTGMEDIUM = interface; // type: System.Runtime.InteropServices.ComTypes.STGMEDIUM, namespace: System.Runtime.InteropServices.ComTypes


{ objects }

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IAdviseSink')]
  DNIAdviseSink = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{0000010F-0000-0000-C000-000000000046}']
  { methods } 

    procedure OnDataChange(out format: DNFORMATETC; out stgmedium: DNSTGMEDIUM);
    procedure OnViewChange(aspect: Int32; index: Int32);
    procedure OnRename(moniker: DDNC.System.Private.CoreLib.DNIMoniker);
    procedure OnSave;
    procedure OnClose;

  end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IDataObject')]
  DNIDataObject = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{0000010E-0000-0000-C000-000000000046}']
  { methods } 

    procedure GetData(out format: DNFORMATETC; out medium: DNSTGMEDIUM);
    procedure GetDataHere(out format: DNFORMATETC; out medium: DNSTGMEDIUM);
    function QueryGetData(out format: DNFORMATETC): Int32;
    function GetCanonicalFormatEtc(out formatIn: DNFORMATETC; out formatOut: DNFORMATETC): Int32;
    procedure SetData(out formatIn: DNFORMATETC; out medium: DNSTGMEDIUM; release: Boolean);
    function EnumFormatEtc(direction: DNDATADIR): DNIEnumFORMATETC;
    function DAdvise(out pFormatetc: DNFORMATETC; advf: DNADVF; adviseSink: DNIAdviseSink; out connection: Int32): Int32;
    procedure DUnadvise(connection: Int32);
    function EnumDAdvise(out enumAdvise: DNIEnumSTATDATA): Int32;

  end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IEnumFORMATETC')]
  DNIEnumFORMATETC = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{00000103-0000-0000-C000-000000000046}']
  { methods } 

    function Next(celt: Int32; [out]rgelt: TArray<DNFORMATETC>; [out]pceltFetched: TArray<Int32>): Int32;
    function Skip(celt: Int32): Int32;
    function Reset: Int32;
    procedure Clone(out newEnum: DNIEnumFORMATETC);

  end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  [DNTypeName('System.Runtime.InteropServices.ComTypes.IEnumSTATDATA')]
  DNIEnumSTATDATA = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{00000103-0000-0000-C000-000000000046}']
  { methods } 

    function Next(celt: Int32; [out]rgelt: TArray<DNSTATDATA>; [out]pceltFetched: TArray<Int32>): Int32;
    function Skip(celt: Int32): Int32;
    function Reset: Int32;
    procedure Clone(out newEnum: DNIEnumSTATDATA);

  end;

  //-------------namespace: System.Runtime.CompilerServices----------------
  DNIUnknownConstantAttributeClass = interface(DDNC.System.Private.CoreLib.DNCustomConstantAttributeClass)
  ['{C5812970-1751-522A-83DB-231ABC269FDA}']
  { constructors } 

    {class} function init: DNIUnknownConstantAttribute;

  end;

  [DNTypeName('System.Runtime.CompilerServices.IUnknownConstantAttribute')]
  DNIUnknownConstantAttribute = interface(DDNC.System.Private.CoreLib.DNCustomConstantAttribute)
  ['{1F853095-E289-3F04-9220-ED80EA8518EA}']
  { getters & setters } 

    function get_Value: DDNC.System.Private.CoreLib.DNObject;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: DDNC.System.Private.CoreLib.DNObject read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNIUnknownConstantAttribute = class(TDNGenericImport<DNIUnknownConstantAttributeClass, DNIUnknownConstantAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNAutomationProxyAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{B0295AFE-028F-51F2-8DE7-B97BA240E9AB}']
  { constructors } 

    {class} function init(val: Boolean): DNAutomationProxyAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.AutomationProxyAttribute')]
  DNAutomationProxyAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{940434CA-6888-341C-84BC-595807DC830C}']
  { getters & setters } 

    function get_Value: Boolean;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: Boolean read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNAutomationProxyAttribute = class(TDNGenericImport<DNAutomationProxyAttributeClass, DNAutomationProxyAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComAliasNameAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{97D93F84-3DF4-5A0B-9D31-DA232C196FE0}']
  { constructors } 

    {class} function init(alias: string): DNComAliasNameAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComAliasNameAttribute')]
  DNComAliasNameAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{2B161073-8356-33FF-B131-7C8EECFA042B}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComAliasNameAttribute = class(TDNGenericImport<DNComAliasNameAttributeClass, DNComAliasNameAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComCompatibleVersionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{209A8C9A-B32F-5F21-8F92-BCDEF2A4D0F7}']
  { constructors } 

    {class} function init(major: Int32; minor: Int32; build: Int32; revision: Int32): DNComCompatibleVersionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComCompatibleVersionAttribute')]
  DNComCompatibleVersionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{894651AE-4F27-30A5-B4CE-37B259CADF21}']
  { getters & setters } 

    function get_MajorVersion: Int32;
    function get_MinorVersion: Int32;
    function get_BuildNumber: Int32;
    function get_RevisionNumber: Int32;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property MajorVersion: Int32 read get_MajorVersion;
    property MinorVersion: Int32 read get_MinorVersion;
    property BuildNumber: Int32 read get_BuildNumber;
    property RevisionNumber: Int32 read get_RevisionNumber;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComCompatibleVersionAttribute = class(TDNGenericImport<DNComCompatibleVersionAttributeClass, DNComCompatibleVersionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComConversionLossAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{3C600446-DB8A-5AB2-8FCE-088732E84D3E}']
  { constructors } 

    {class} function init: DNComConversionLossAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComConversionLossAttribute')]
  DNComConversionLossAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{3C21ED48-C1A3-3BD9-ADB9-6E2A08601D4E}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComConversionLossAttribute = class(TDNGenericImport<DNComConversionLossAttributeClass, DNComConversionLossAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComEventInterfaceAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{871F3A30-94CF-58B9-87B4-551BDB8FFB02}']
  { constructors } 

    {class} function init(SourceInterface: DDNC.System.Private.CoreLib.DNType; EventProvider: DDNC.System.Private.CoreLib.DNType): DNComEventInterfaceAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComEventInterfaceAttribute')]
  DNComEventInterfaceAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{C2B6E720-E37B-32A3-8336-532754B502E3}']
  { getters & setters } 

    function get_SourceInterface: DDNC.System.Private.CoreLib.DNType;
    function get_EventProvider: DDNC.System.Private.CoreLib.DNType;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property SourceInterface: DDNC.System.Private.CoreLib.DNType read get_SourceInterface;
    property EventProvider: DDNC.System.Private.CoreLib.DNType read get_EventProvider;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComEventInterfaceAttribute = class(TDNGenericImport<DNComEventInterfaceAttributeClass, DNComEventInterfaceAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComRegisterFunctionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{5F3328F5-B675-5BF5-9431-ABE2D2742C96}']
  { constructors } 

    {class} function init: DNComRegisterFunctionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComRegisterFunctionAttribute')]
  DNComRegisterFunctionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{6D5E1FB7-6D1E-3F57-A2C0-2F430AE5E305}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComRegisterFunctionAttribute = class(TDNGenericImport<DNComRegisterFunctionAttributeClass, DNComRegisterFunctionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComUnregisterFunctionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{CB7C2693-DF1B-51A4-A4ED-D8FAFF527C92}']
  { constructors } 

    {class} function init: DNComUnregisterFunctionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComUnregisterFunctionAttribute')]
  DNComUnregisterFunctionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{D6BD53CA-C583-3CED-A608-923D30908975}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNComUnregisterFunctionAttribute = class(TDNGenericImport<DNComUnregisterFunctionAttributeClass, DNComUnregisterFunctionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNDefaultParameterValueAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{3C7F779F-1C18-581B-9B47-03AAFF30C226}']
  { constructors } 

    {class} function init(value: DDNC.System.Private.CoreLib.DNObject): DNDefaultParameterValueAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.DefaultParameterValueAttribute')]
  DNDefaultParameterValueAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{A387EDBC-22F1-3180-AF25-6798F464E9D3}']
  { getters & setters } 

    function get_Value: DDNC.System.Private.CoreLib.DNObject;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: DDNC.System.Private.CoreLib.DNObject read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNDefaultParameterValueAttribute = class(TDNGenericImport<DNDefaultParameterValueAttributeClass, DNDefaultParameterValueAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNIDispatchImplAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{AAFECD60-E525-5A03-AAC3-D14EDD09A886}']
  { constructors } 

    {class} function init(implType: Int16): DNIDispatchImplAttribute; overload;
    {class} function init(implType: DNIDispatchImplType): DNIDispatchImplAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.IDispatchImplAttribute')]
  DNIDispatchImplAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{37F5789B-9A99-3370-8263-632882304744}']
  { getters & setters } 

    function get_Value: DNIDispatchImplType;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: DNIDispatchImplType read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNIDispatchImplAttribute = class(TDNGenericImport<DNIDispatchImplAttributeClass, DNIDispatchImplAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNImportedFromTypeLibAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{B71E7D03-80FA-5FFA-8DF2-F5797A97E6E2}']
  { constructors } 

    {class} function init(tlbFile: string): DNImportedFromTypeLibAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ImportedFromTypeLibAttribute')]
  DNImportedFromTypeLibAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{A73AFF0D-10A5-3503-8AFA-4396503749BE}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNImportedFromTypeLibAttribute = class(TDNGenericImport<DNImportedFromTypeLibAttributeClass, DNImportedFromTypeLibAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNManagedToNativeComInteropStubAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{3D41F7CA-F1A8-5B04-9D85-FC7AC8832DA5}']
  { constructors } 

    {class} function init(classType: DDNC.System.Private.CoreLib.DNType; methodName: string): DNManagedToNativeComInteropStubAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute')]
  DNManagedToNativeComInteropStubAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{9734FADE-4FE0-36D7-BB6F-47FA85B07320}']
  { getters & setters } 

    function get_ClassType: DDNC.System.Private.CoreLib.DNType;
    function get_MethodName: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property ClassType: DDNC.System.Private.CoreLib.DNType read get_ClassType;
    property MethodName: string read get_MethodName;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNManagedToNativeComInteropStubAttribute = class(TDNGenericImport<DNManagedToNativeComInteropStubAttributeClass, DNManagedToNativeComInteropStubAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNPrimaryInteropAssemblyAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{6E7E8ABB-510D-5C0E-90D3-0FAAE18F9ECF}']
  { constructors } 

    {class} function init(major: Int32; minor: Int32): DNPrimaryInteropAssemblyAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute')]
  DNPrimaryInteropAssemblyAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{DB3B9B53-5BB0-3EA4-917E-BCD4445FB6E8}']
  { getters & setters } 

    function get_MajorVersion: Int32;
    function get_MinorVersion: Int32;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property MajorVersion: Int32 read get_MajorVersion;
    property MinorVersion: Int32 read get_MinorVersion;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNPrimaryInteropAssemblyAttribute = class(TDNGenericImport<DNPrimaryInteropAssemblyAttributeClass, DNPrimaryInteropAssemblyAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNSetWin32ContextInIDispatchAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{30F01E52-78D9-5EAB-A9D5-E0794F2C6B08}']
  { constructors } 

    {class} function init: DNSetWin32ContextInIDispatchAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute')]
  DNSetWin32ContextInIDispatchAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{4874DBE5-A2A1-366A-B9B9-B1320400622C}']
  { getters & setters } 

    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNSetWin32ContextInIDispatchAttribute = class(TDNGenericImport<DNSetWin32ContextInIDispatchAttributeClass, DNSetWin32ContextInIDispatchAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibFuncAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{99379723-F05D-5A74-A973-478F1D96F2C3}']
  { constructors } 

    {class} function init(flags: DNTypeLibFuncFlags): DNTypeLibFuncAttribute; overload;
    {class} function init(flags: Int16): DNTypeLibFuncAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibFuncAttribute')]
  DNTypeLibFuncAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{4A725DA0-7920-3FD3-8BDE-138D060C12A8}']
  { getters & setters } 

    function get_Value: DNTypeLibFuncFlags;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: DNTypeLibFuncFlags read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibFuncAttribute = class(TDNGenericImport<DNTypeLibFuncAttributeClass, DNTypeLibFuncAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibImportClassAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{993C2A96-C70A-5F13-B35F-B87A4484C103}']
  { constructors } 

    {class} function init(importClass: DDNC.System.Private.CoreLib.DNType): DNTypeLibImportClassAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibImportClassAttribute')]
  DNTypeLibImportClassAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{ADC5A929-4299-3F52-9D6D-EE8A4B130899}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibImportClassAttribute = class(TDNGenericImport<DNTypeLibImportClassAttributeClass, DNTypeLibImportClassAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibTypeAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{36EEA47B-18D1-5BED-ABBA-4816E49D4AF9}']
  { constructors } 

    {class} function init(flags: DNTypeLibTypeFlags): DNTypeLibTypeAttribute; overload;
    {class} function init(flags: Int16): DNTypeLibTypeAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibTypeAttribute')]
  DNTypeLibTypeAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{F967ADE2-ACA2-38BD-BFC5-B819E2B0F531}']
  { getters & setters } 

    function get_Value: DNTypeLibTypeFlags;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: DNTypeLibTypeFlags read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibTypeAttribute = class(TDNGenericImport<DNTypeLibTypeAttributeClass, DNTypeLibTypeAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibVarAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{30CA09F2-C087-5F0E-B621-0A7BF83CF41D}']
  { constructors } 

    {class} function init(flags: DNTypeLibVarFlags): DNTypeLibVarAttribute; overload;
    {class} function init(flags: Int16): DNTypeLibVarAttribute; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibVarAttribute')]
  DNTypeLibVarAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{1AFD9DFD-92D6-3825-882D-2624240B8DBA}']
  { getters & setters } 

    function get_Value: DNTypeLibVarFlags;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Value: DNTypeLibVarFlags read get_Value;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibVarAttribute = class(TDNGenericImport<DNTypeLibVarAttributeClass, DNTypeLibVarAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNTypeLibVersionAttributeClass = interface(DDNC.System.Private.CoreLib.DNAttributeClass)
  ['{ACC0A20A-5F3D-55F4-8FBC-5695380430D7}']
  { constructors } 

    {class} function init(major: Int32; minor: Int32): DNTypeLibVersionAttribute;

  end;

  [DNTypeName('System.Runtime.InteropServices.TypeLibVersionAttribute')]
  DNTypeLibVersionAttribute = interface(DDNC.System.Private.CoreLib.DNAttribute)
  ['{52517B2F-46CF-3A58-8333-10602D67E5C0}']
  { getters & setters } 

    function get_MajorVersion: Int32;
    function get_MinorVersion: Int32;
    function get_TypeId: DDNC.System.Private.CoreLib.DNObject;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property MajorVersion: Int32 read get_MajorVersion;
    property MinorVersion: Int32 read get_MinorVersion;
    property TypeId: DDNC.System.Private.CoreLib.DNObject read get_TypeId;
  end;

  TDNTypeLibVersionAttribute = class(TDNGenericImport<DNTypeLibVersionAttributeClass, DNTypeLibVersionAttribute>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNComAwareEventInfoClass = interface(DDNC.System.Private.CoreLib.DNEventInfoClass)
  ['{78D143AE-62ED-55FF-9462-A4DDA325B665}']
  { constructors } 

    {class} function init(&type: DDNC.System.Private.CoreLib.DNType; eventName: string): DNComAwareEventInfo;

  end;

  [DNTypeName('System.Runtime.InteropServices.ComAwareEventInfo')]
  DNComAwareEventInfo = interface(DDNC.System.Private.CoreLib.DNEventInfo)
  ['{1FAAA459-C6B1-3C50-9267-0D7112F657F1}']
  { getters & setters } 

    function get_Attributes: DDNC.System.Private.CoreLib.DNEventAttributes;
    function get_DeclaringType: DDNC.System.Private.CoreLib.DNType;
    function get_MetadataToken: Int32;
    function get_Module: DDNC.System.Private.CoreLib.DNModule;
    function get_Name: string;
    function get_ReflectedType: DDNC.System.Private.CoreLib.DNType;
    function get_MemberType: DDNC.System.Private.CoreLib.DNMemberTypes;
    function get_IsSpecialName: Boolean;
    function get_AddMethod: DDNC.System.Private.CoreLib.DNMethodInfo;
    function get_RemoveMethod: DDNC.System.Private.CoreLib.DNMethodInfo;
    function get_RaiseMethod: DDNC.System.Private.CoreLib.DNMethodInfo;
    function get_IsMulticast: Boolean;
    function get_EventHandlerType: DDNC.System.Private.CoreLib.DNType;
    function get_CustomAttributes: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNCustomAttributeData>;

  { methods } 

    procedure AddEventHandler(target: DDNC.System.Private.CoreLib.DNObject; handler: DDNC.System.Private.CoreLib.DNDelegate);
    procedure RemoveEventHandler(target: DDNC.System.Private.CoreLib.DNObject; handler: DDNC.System.Private.CoreLib.DNDelegate);
    function GetAddMethod(nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetOtherMethods(nonPublic: Boolean): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    function GetRaiseMethod(nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetRemoveMethod(nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetCustomAttributes(attributeType: DDNC.System.Private.CoreLib.DNType; inherit: Boolean): TArray<DDNC.System.Private.CoreLib.DNObject>; overload;
    function GetCustomAttributes(inherit: Boolean): TArray<DDNC.System.Private.CoreLib.DNObject>; overload;
    function GetCustomAttributesData: DDNC.System.Private.CoreLib.DNIList<DDNC.System.Private.CoreLib.DNCustomAttributeData>;
    function IsDefined(attributeType: DDNC.System.Private.CoreLib.DNType; inherit: Boolean): Boolean;
    function GetOtherMethods: TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    function GetAddMethod: DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetRemoveMethod: DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function GetRaiseMethod: DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function HasSameMetadataDefinitionAs(other: DDNC.System.Private.CoreLib.DNMemberInfo): Boolean;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Attributes: DDNC.System.Private.CoreLib.DNEventAttributes read get_Attributes;
    property DeclaringType: DDNC.System.Private.CoreLib.DNType read get_DeclaringType;
    property MetadataToken: Int32 read get_MetadataToken;
    property Module: DDNC.System.Private.CoreLib.DNModule read get_Module;
    property Name: string read get_Name;
    property ReflectedType: DDNC.System.Private.CoreLib.DNType read get_ReflectedType;
    property MemberType: DDNC.System.Private.CoreLib.DNMemberTypes read get_MemberType;
    property IsSpecialName: Boolean read get_IsSpecialName;
    property AddMethod: DDNC.System.Private.CoreLib.DNMethodInfo read get_AddMethod;
    property RemoveMethod: DDNC.System.Private.CoreLib.DNMethodInfo read get_RemoveMethod;
    property RaiseMethod: DDNC.System.Private.CoreLib.DNMethodInfo read get_RaiseMethod;
    property IsMulticast: Boolean read get_IsMulticast;
    property EventHandlerType: DDNC.System.Private.CoreLib.DNType read get_EventHandlerType;
    property CustomAttributes: DDNC.System.Private.CoreLib.DNIEnumerable<DDNC.System.Private.CoreLib.DNCustomAttributeData> read get_CustomAttributes;
  end;

  TDNComAwareEventInfo = class(TDNGenericImport<DNComAwareEventInfoClass, DNComAwareEventInfo>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNHandleCollectorClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{77CD718D-E24C-53A5-9E57-F9D441A8F528}']
  { constructors } 

    {class} function init(name: string; initialThreshold: Int32): DNHandleCollector; overload;
    {class} function init(name: string; initialThreshold: Int32; maximumThreshold: Int32): DNHandleCollector; overload;

  end;

  [DNTypeName('System.Runtime.InteropServices.HandleCollector')]
  DNHandleCollector = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{FB19953A-2DF2-31D2-9D6B-DC0749EC21EC}']
  { getters & setters } 

    function get_Count: Int32;
    function get_InitialThreshold: Int32;
    function get_MaximumThreshold: Int32;
    function get_Name: string;

  { methods } 

    procedure Add;
    procedure Remove;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  { propertys } 

    property Count: Int32 read get_Count;
    property InitialThreshold: Int32 read get_InitialThreshold;
    property MaximumThreshold: Int32 read get_MaximumThreshold;
    property Name: string read get_Name;
  end;

  TDNHandleCollector = class(TDNGenericImport<DNHandleCollectorClass, DNHandleCollector>) end;

  //-------------namespace: System.Runtime.InteropServices----------------
  DNRuntimeEnvironmentClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{3A7949A2-F290-51E7-8AF8-1EB8420D2EC8}']
  { static getter & setter } 

    {class} function get_SystemConfigurationFile: string;

  { static methods } 

    {class} function FromGlobalAccessCache(a: DDNC.System.Private.CoreLib.DNAssembly): Boolean;
    {class} function GetRuntimeDirectory: string;
    {class} function GetRuntimeInterfaceAsIntPtr(clsid: DDNC.System.Private.CoreLib.DNGuid; riid: DDNC.System.Private.CoreLib.DNGuid): IntPtr;
    {class} function GetRuntimeInterfaceAsObject(clsid: DDNC.System.Private.CoreLib.DNGuid; riid: DDNC.System.Private.CoreLib.DNGuid): DDNC.System.Private.CoreLib.DNObject;
    {class} function GetSystemVersion: string;

  { static propertys } 

    {class} property SystemConfigurationFile: string read get_SystemConfigurationFile;
  end;

  [DNTypeName('System.Runtime.InteropServices.RuntimeEnvironment')]
  DNRuntimeEnvironment = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{C1F42EF0-937F-3F80-BDDB-3133EB6DD645}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNRuntimeEnvironment = class(TDNGenericImport<DNRuntimeEnvironmentClass, DNRuntimeEnvironment>) end;

  //-------------namespace: System.Security----------------
  DNSecureStringMarshalClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{927E0697-E66F-561B-9E53-6124A1107884}']
  { static methods } 

    {class} function SecureStringToCoTaskMemAnsi(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;
    {class} function SecureStringToGlobalAllocAnsi(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;
    {class} function SecureStringToCoTaskMemUnicode(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;
    {class} function SecureStringToGlobalAllocUnicode(s: DDNC.System.Private.CoreLib.DNSecureString): IntPtr;

  end;

  [DNTypeName('System.Security.SecureStringMarshal')]
  DNSecureStringMarshal = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{2816C8D9-62DB-3FDE-91B3-A300F61B0BBD}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNSecureStringMarshal = class(TDNGenericImport<DNSecureStringMarshalClass, DNSecureStringMarshal>) end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  DNFORMATETCClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{FAC11C72-891C-5CC5-8673-BC708135C60D}']
  end;

  [DNTypeName('System.Runtime.InteropServices.ComTypes.FORMATETC')]
  DNFORMATETC = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{BB1656BD-8629-3648-9840-74C16C5BF76A}']
  { fields getter & setter } 

   function __fakeFieldGet_cfFormat: Int16;
   procedure __fakeFieldSet_cfFormat(value: Int16);
   function __fakeFieldGet_ptd: IntPtr;
   procedure __fakeFieldSet_ptd(value: IntPtr);
   function __fakeFieldGet_dwAspect: DNDVASPECT;
   procedure __fakeFieldSet_dwAspect(value: DNDVASPECT);
   function __fakeFieldGet_lindex: Int32;
   procedure __fakeFieldSet_lindex(value: Int32);
   function __fakeFieldGet_tymed: DNTYMED;
   procedure __fakeFieldSet_tymed(value: DNTYMED);

  { fields } 

   property cfFormat: Int16 read __fakeFieldGet_cfFormat write __fakeFieldSet_cfFormat;
   property ptd: IntPtr read __fakeFieldGet_ptd write __fakeFieldSet_ptd;
   property dwAspect: DNDVASPECT read __fakeFieldGet_dwAspect write __fakeFieldSet_dwAspect;
   property lindex: Int32 read __fakeFieldGet_lindex write __fakeFieldSet_lindex;
   property tymed: DNTYMED read __fakeFieldGet_tymed write __fakeFieldSet_tymed;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNFORMATETC = class(TDNGenericImport<DNFORMATETCClass, DNFORMATETC>) end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  DNSTATDATAClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{9428B930-C722-5B08-A14C-C9EF795A26BB}']
  end;

  [DNTypeName('System.Runtime.InteropServices.ComTypes.STATDATA')]
  DNSTATDATA = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{DDF37749-A2E2-3543-A2DC-5C9D820930B2}']
  { fields getter & setter } 

   function __fakeFieldGet_formatetc: DNFORMATETC;
   procedure __fakeFieldSet_formatetc(value: DNFORMATETC);
   function __fakeFieldGet_advf: DNADVF;
   procedure __fakeFieldSet_advf(value: DNADVF);
   function __fakeFieldGet_advSink: DNIAdviseSink;
   procedure __fakeFieldSet_advSink(value: DNIAdviseSink);
   function __fakeFieldGet_connection: Int32;
   procedure __fakeFieldSet_connection(value: Int32);

  { fields } 

   property formatetc: DNFORMATETC read __fakeFieldGet_formatetc write __fakeFieldSet_formatetc;
   property advf: DNADVF read __fakeFieldGet_advf write __fakeFieldSet_advf;
   property advSink: DNIAdviseSink read __fakeFieldGet_advSink write __fakeFieldSet_advSink;
   property connection: Int32 read __fakeFieldGet_connection write __fakeFieldSet_connection;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNSTATDATA = class(TDNGenericImport<DNSTATDATAClass, DNSTATDATA>) end;

  //-------------namespace: System.Runtime.InteropServices.ComTypes----------------
  DNSTGMEDIUMClass = interface(DDNC.System.Private.CoreLib.DNValueTypeClass)
  ['{E4F33411-CE7D-5276-B969-48495168EDC8}']
  end;

  [DNTypeName('System.Runtime.InteropServices.ComTypes.STGMEDIUM')]
  DNSTGMEDIUM = interface(DDNC.System.Private.CoreLib.DNValueType)
  ['{813CFC8D-9690-3AD9-A54D-B670C0ACF842}']
  { fields getter & setter } 

   function __fakeFieldGet_tymed: DNTYMED;
   procedure __fakeFieldSet_tymed(value: DNTYMED);
   function __fakeFieldGet_unionmember: IntPtr;
   procedure __fakeFieldSet_unionmember(value: IntPtr);
   function __fakeFieldGet_pUnkForRelease: DDNC.System.Private.CoreLib.DNObject;
   procedure __fakeFieldSet_pUnkForRelease(value: DDNC.System.Private.CoreLib.DNObject);

  { fields } 

   property tymed: DNTYMED read __fakeFieldGet_tymed write __fakeFieldSet_tymed;
   property unionmember: IntPtr read __fakeFieldGet_unionmember write __fakeFieldSet_unionmember;
   property pUnkForRelease: DDNC.System.Private.CoreLib.DNObject read __fakeFieldGet_pUnkForRelease write __fakeFieldSet_pUnkForRelease;

  { methods } 

    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNSTGMEDIUM = class(TDNGenericImport<DNSTGMEDIUMClass, DNSTGMEDIUM>) end;


implementation


initialization
  LoadAssemblyModule('System.Runtime.InteropServices.dll', True, 'System.Runtime.InteropServices, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a');

finalization

end.
