//----------------------------------------------------------------------------
//  ReachFramework.dll: ReachFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Framework: 4.0
//----------------------------------------------------------------------------
//  UnitName: DDN.System.Windows.Xps.Serialization
//  Author: ying32
//----------------------------------------------------------------------------

unit DDN.System.Windows.Xps.Serialization;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDN.mscorlib,
  DDN.System,
  DDN.PresentationCore,
  DDN.System.Xml,
  DDN.PresentationFramework,
  DDN.System.Windows.Xps.Packaging;

type

{ enums }

  //-------------namespace: System.Windows.Xps.Serialization----------------
  [DNTypeName('System.Windows.Xps.Serialization.FontSubsetterCommitPolicies')]
  DNFontSubsetterCommitPolicies = type Integer;
  DNFontSubsetterCommitPoliciesHelper = record helper for DNFontSubsetterCommitPolicies
  public const
    None = 0;
    CommitPerPage = 1;
    CommitPerDocument = 2;
    CommitEntireSequence = 3;
  end;


  //-------------namespace: System.Windows.Xps.Serialization----------------
  [DNTypeName('System.Windows.Xps.Serialization.PrintTicketLevel')]
  DNPrintTicketLevel = type Integer;
  DNPrintTicketLevelHelper = record helper for DNPrintTicketLevel
  public const
    None = 0;
    FixedDocumentSequencePrintTicket = 1;
    FixedDocumentPrintTicket = 2;
    FixedPagePrintTicket = 3;
  end;


  //-------------namespace: System.Windows.Xps.Serialization----------------
  [DNTypeName('System.Windows.Xps.Serialization.SerializationState')]
  DNSerializationState = type Integer;
  DNSerializationStateHelper = record helper for DNSerializationState
  public const
    Normal = 0;
    Stop = 1;
  end;


  //-------------namespace: System.Windows.Xps.Serialization----------------
  [DNTypeName('System.Windows.Xps.Serialization.XpsWritingProgressChangeLevel')]
  DNXpsWritingProgressChangeLevel = type Integer;
  DNXpsWritingProgressChangeLevelHelper = record helper for DNXpsWritingProgressChangeLevel
  public const
    None = 0;
    FixedDocumentSequenceWritingProgress = 1;
    FixedDocumentWritingProgress = 2;
    FixedPageWritingProgress = 3;
  end;




type


{ declares }

  DNColorTypeConverter = interface; // type: System.Windows.Xps.Serialization.ColorTypeConverter, namespace: System.Windows.Xps.Serialization
  DNFontTypeConverter = interface; // type: System.Windows.Xps.Serialization.FontTypeConverter, namespace: System.Windows.Xps.Serialization
  DNImageSourceTypeConverter = interface; // type: System.Windows.Xps.Serialization.ImageSourceTypeConverter, namespace: System.Windows.Xps.Serialization
  DNXpsSerializationCompletedEventArgs = interface; // type: System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs, namespace: System.Windows.Xps.Serialization
  DNXpsSerializationProgressChangedEventArgs = interface; // type: System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs, namespace: System.Windows.Xps.Serialization
  DNXpsPackagingPolicy = interface; // type: System.Windows.Xps.Serialization.XpsPackagingPolicy, namespace: System.Windows.Xps.Serialization
  DNPackageSerializationManager = interface; // type: System.Windows.Xps.Serialization.PackageSerializationManager, namespace: System.Windows.Xps.Serialization
  DNXpsSerializationManager = interface; // type: System.Windows.Xps.Serialization.XpsSerializationManager, namespace: System.Windows.Xps.Serialization
  DNXpsResourceStream = interface; // type: System.Windows.Xps.Serialization.XpsResourceStream, namespace: System.Windows.Xps.Serialization
  DNXpsSerializerFactory = interface; // type: System.Windows.Xps.Serialization.XpsSerializerFactory, namespace: System.Windows.Xps.Serialization

{ delegates }

  [DNTypeName('System.Windows.Xps.Serialization.XpsSerializationCompletedEventHandler')]
  DNXpsSerializationCompletedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNXpsSerializationCompletedEventArgs) of object;

  [DNTypeName('System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventHandler')]
  DNXpsSerializationProgressChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNXpsSerializationProgressChangedEventArgs) of object;




{ objects }

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNColorTypeConverterClass = interface(DNObjectClass)
  ['{B3D13AC3-2449-54C6-B5E6-53D04151D105}']
  { constructors } 

    {class} function init: DNColorTypeConverter;

  { static methods } 

    {class} function SerializeColorContext(context: DDN.mscorlib.DNIServiceProvider; colorContext: DDN.PresentationCore.DNColorContext): string;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.ColorTypeConverter')]
  DNColorTypeConverter = interface(DNObject)
  ['{14C9AAC9-3CD4-3649-B1DD-C1FE174CE0D0}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNColorTypeConverter = class(TDNGenericImport<DNColorTypeConverterClass, DNColorTypeConverter>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNFontTypeConverterClass = interface(DNObjectClass)
  ['{02074361-050F-55B7-A19B-EB7BFD5C443A}']
  { constructors } 

    {class} function init: DNFontTypeConverter;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.FontTypeConverter')]
  DNFontTypeConverter = interface(DNObject)
  ['{C11E98EF-B5CC-35E7-8046-B02C311B6CB3}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNFontTypeConverter = class(TDNGenericImport<DNFontTypeConverterClass, DNFontTypeConverter>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNImageSourceTypeConverterClass = interface(DNObjectClass)
  ['{AA613B50-4599-5C89-87C3-40772B9C0B93}']
  { constructors } 

    {class} function init: DNImageSourceTypeConverter;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.ImageSourceTypeConverter')]
  DNImageSourceTypeConverter = interface(DNObject)
  ['{42592F26-3F39-3DEA-9A7D-EDCC62EB4695}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNImageSourceTypeConverter = class(TDNGenericImport<DNImageSourceTypeConverterClass, DNImageSourceTypeConverter>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNXpsSerializationCompletedEventArgsClass = interface(DNObjectClass)
  ['{FC082012-F6EC-50E6-A030-A7CC1C1D829A}']
  { constructors } 

    {class} function init(canceled: Boolean; state: DDN.mscorlib.DNObject; exception: DDN.mscorlib.DNException): DNXpsSerializationCompletedEventArgs;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs')]
  DNXpsSerializationCompletedEventArgs = interface(DNObject)
  ['{5A25F1C9-4C6F-3FBF-82F7-8357F185739A}']
  { getters & setters } 

    function get_Cancelled: Boolean;
    function get_Error: DDN.mscorlib.DNException;
    function get_UserState: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Cancelled: Boolean read get_Cancelled;
    property Error: DDN.mscorlib.DNException read get_Error;
    property UserState: DDN.mscorlib.DNObject read get_UserState;
  end;

  TDNXpsSerializationCompletedEventArgs = class(TDNGenericImport<DNXpsSerializationCompletedEventArgsClass, DNXpsSerializationCompletedEventArgs>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNXpsSerializationProgressChangedEventArgsClass = interface(DNObjectClass)
  ['{4B682BD3-1387-5A78-897E-008AED34D5FB}']
  { constructors } 

    {class} function init(writingLevel: DNXpsWritingProgressChangeLevel; pageNumber: Int32; progressPercentage: Int32; userToken: DDN.mscorlib.DNObject): DNXpsSerializationProgressChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.XpsSerializationProgressChangedEventArgs')]
  DNXpsSerializationProgressChangedEventArgs = interface(DNObject)
  ['{95CBDE84-ABCC-38CD-9341-70B7F3BA6602}']
  { getters & setters } 

    function get_WritingLevel: DNXpsWritingProgressChangeLevel;
    function get_PageNumber: Int32;
    function get_ProgressPercentage: Int32;
    function get_UserState: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property WritingLevel: DNXpsWritingProgressChangeLevel read get_WritingLevel;
    property PageNumber: Int32 read get_PageNumber;
    property ProgressPercentage: Int32 read get_ProgressPercentage;
    property UserState: DDN.mscorlib.DNObject read get_UserState;
  end;

  TDNXpsSerializationProgressChangedEventArgs = class(TDNGenericImport<DNXpsSerializationProgressChangedEventArgsClass, DNXpsSerializationProgressChangedEventArgs>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNXpsPackagingPolicyClass = interface(DNObjectClass)
  ['{CDBA95A1-CA7A-5FE1-9134-6745C551B795}']
  { constructors } 

    {class} function init(xpsPackage: DNXpsDocument): DNXpsPackagingPolicy; overload;
    {class} function init(xpsPackage: DNXpsDocument; interleavingType: DNPackageInterleavingOrder): DNXpsPackagingPolicy; overload;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.XpsPackagingPolicy')]
  DNXpsPackagingPolicy = interface(DNObject)
  ['{90CA25D6-E6A0-302A-ADF0-DBDEB52AA61B}']
  { getters & setters } 

    function get_CurrentFixedDocumentUri: DDN.System.DNUri;
    function get_CurrentFixedPageUri: DDN.System.DNUri;

  { events } 

    procedure add_PackagingProgressEvent(value: DNPackagingProgressEventHandler);
    procedure remove_PackagingProgressEvent(value: DNPackagingProgressEventHandler);

  { methods } 

    function AcquireXmlWriterForFixedDocumentSequence: DDN.System.Xml.DNXmlWriter;
    procedure ReleaseXmlWriterForFixedDocumentSequence;
    function AcquireXmlWriterForFixedDocument: DDN.System.Xml.DNXmlWriter;
    procedure ReleaseXmlWriterForFixedDocument;
    function AcquireXmlWriterForFixedPage: DDN.System.Xml.DNXmlWriter;
    procedure ReleaseXmlWriterForFixedPage;
    function AcquireResourceStreamForXpsFont: DNXpsResourceStream; overload;
    function AcquireResourceStreamForXpsFont(resourceId: string): DNXpsResourceStream; overload;
    procedure ReleaseResourceStreamForXpsFont; overload;
    procedure ReleaseResourceStreamForXpsFont(resourceId: string); overload;
    function AcquireResourceStreamForXpsImage(resourceId: string): DNXpsResourceStream;
    procedure ReleaseResourceStreamForXpsImage;
    function AcquireResourceStreamForXpsColorContext(resourceId: string): DNXpsResourceStream;
    procedure ReleaseResourceStreamForXpsColorContext;
    function AcquireResourceStreamForXpsResourceDictionary(resourceId: string): DNXpsResourceStream;
    procedure ReleaseResourceStreamForXpsResourceDictionary;
    procedure RelateResourceToCurrentPage(targetUri: DDN.System.DNUri; relationshipName: string);
    procedure RelateRestrictedFontToCurrentDocument(targetUri: DDN.System.DNUri);
    procedure PersistPrintTicket(printTicket: DNPrintTicket);
    function AcquireXmlWriterForPage: DDN.System.Xml.DNXmlWriter;
    procedure PreCommitCurrentPage;
    function AcquireXmlWriterForResourceDictionary: DDN.System.Xml.DNXmlWriter;
    function AcquireStreamForLinkTargets: DDN.mscorlib.DNIList<string>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CurrentFixedDocumentUri: DDN.System.DNUri read get_CurrentFixedDocumentUri;
    property CurrentFixedPageUri: DDN.System.DNUri read get_CurrentFixedPageUri;
  end;

  TDNXpsPackagingPolicy = class(TDNGenericImport<DNXpsPackagingPolicyClass, DNXpsPackagingPolicy>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNPackageSerializationManagerClass = interface(DNObjectClass)
  ['{BC389407-9A95-54DB-AF55-DD42520BAA61}']
  end;

  [DNTypeName('System.Windows.Xps.Serialization.PackageSerializationManager')]
  DNPackageSerializationManager = interface(DDN.mscorlib.DNIDisposable)
  ['{E433BF8A-D188-3326-B3DA-D72632E40932}']
  { methods } 

    procedure SaveAsXaml(serializedObject: DDN.mscorlib.DNObject);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNPackageSerializationManager = class(TDNGenericImport<DNPackageSerializationManagerClass, DNPackageSerializationManager>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNXpsSerializationManagerClass = interface(DNPackageSerializationManagerClass)
  ['{13CB7F68-157A-5842-9ED4-2FF5D2A26234}']
  { constructors } 

    {class} function init(packagingPolicy: DNBasePackagingPolicy; batchMode: Boolean): DNXpsSerializationManager;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.XpsSerializationManager')]
  DNXpsSerializationManager = interface(DNPackageSerializationManager)
  ['{D31AC8AA-3FDE-3CDC-8349-52BC476D96C0}']
  { getters & setters } 

    function get_IsBatchMode: Boolean;

  { events } 

    procedure add_XpsSerializationPrintTicketRequired(value: DNXpsSerializationPrintTicketRequiredEventHandler);
    procedure remove_XpsSerializationPrintTicketRequired(value: DNXpsSerializationPrintTicketRequiredEventHandler);
    procedure add_XpsSerializationProgressChanged(value: DNXpsSerializationProgressChangedEventHandler);
    procedure remove_XpsSerializationProgressChanged(value: DNXpsSerializationProgressChangedEventHandler);

  { methods } 

    procedure SaveAsXaml(serializedObject: DDN.mscorlib.DNObject);
    procedure Commit;
    procedure SetFontSubsettingPolicy(policy: DNFontSubsetterCommitPolicies);
    procedure SetFontSubsettingCountPolicy(countPolicy: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property IsBatchMode: Boolean read get_IsBatchMode;
  end;

  TDNXpsSerializationManager = class(TDNGenericImport<DNXpsSerializationManagerClass, DNXpsSerializationManager>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNXpsResourceStreamClass = interface(DDN.mscorlib.DNObjectClass)
  ['{CE61A2DD-C77F-5DC1-8081-49D37B143364}']
  { constructors } 

    {class} function init(stream: DDN.mscorlib.DNStream; uri: DDN.System.DNUri): DNXpsResourceStream;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.XpsResourceStream')]
  DNXpsResourceStream = interface(DDN.mscorlib.DNObject)
  ['{636D76E7-ED06-3584-88AB-09C9A4565D27}']
  { getters & setters } 

    function get_Stream: DDN.mscorlib.DNStream;
    function get_Uri: DDN.System.DNUri;

  { methods } 

    procedure Initialize;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Stream: DDN.mscorlib.DNStream read get_Stream;
    property Uri: DDN.System.DNUri read get_Uri;
  end;

  TDNXpsResourceStream = class(TDNGenericImport<DNXpsResourceStreamClass, DNXpsResourceStream>) end;

  //-------------namespace: System.Windows.Xps.Serialization----------------
  DNXpsSerializerFactoryClass = interface(DNObjectClass)
  ['{D458711B-1DBA-59C0-8A9B-D61BDF107D2C}']
  { constructors } 

    {class} function init: DNXpsSerializerFactory;

  end;

  [DNTypeName('System.Windows.Xps.Serialization.XpsSerializerFactory')]
  DNXpsSerializerFactory = interface(DDN.System.Windows.Documents.Serialization.ISerializerFactory.DNISerializerFactory)
  ['{9FC40D44-A3DA-35B1-B05D-D10514FDAB50}']
  { getters & setters } 

    function get_DisplayName: string;
    function get_ManufacturerName: string;
    function get_ManufacturerWebsite: DDN.System.DNUri;
    function get_DefaultFileExtension: string;

  { methods } 

    function CreateSerializerWriter(stream: DDN.mscorlib.DNStream): DDN.PresentationFramework.DNSerializerWriter;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DisplayName: string read get_DisplayName;
    property ManufacturerName: string read get_ManufacturerName;
    property ManufacturerWebsite: DDN.System.DNUri read get_ManufacturerWebsite;
    property DefaultFileExtension: string read get_DefaultFileExtension;
  end;

  TDNXpsSerializerFactory = class(TDNGenericImport<DNXpsSerializerFactoryClass, DNXpsSerializerFactory>) end;


implementation

end.
