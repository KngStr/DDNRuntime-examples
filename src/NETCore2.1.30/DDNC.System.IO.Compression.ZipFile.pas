//----------------------------------------------------------------------------
//  System.IO.Compression.ZipFile.dll: System.IO.Compression.ZipFile, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 2.1.30
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.IO.Compression.ZipFile
//  Author: ying32
//----------------------------------------------------------------------------

unit DDNC.System.IO.Compression.ZipFile;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib,
  DDNC.System.IO.Compression;

type


{ declares }

  DNZipFile = interface; // type: System.IO.Compression.ZipFile, namespace: System.IO.Compression
  DNZipFileExtensions = interface; // type: System.IO.Compression.ZipFileExtensions, namespace: System.IO.Compression


{ objects }

  //-------------namespace: System.IO.Compression----------------
  DNZipFileClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{2C5F178C-341F-59A5-AC3F-0AD845576415}']
  { static methods } 

    {class} function OpenRead(archiveFileName: string): DDNC.System.IO.Compression.DNZipArchive;
    {class} function Open(archiveFileName: string; mode: DDNC.System.IO.Compression.DNZipArchiveMode): DDNC.System.IO.Compression.DNZipArchive; overload;
    {class} function Open(archiveFileName: string; mode: DDNC.System.IO.Compression.DNZipArchiveMode; entryNameEncoding: DDNC.System.Private.CoreLib.DNEncoding): DDNC.System.IO.Compression.DNZipArchive; overload;
    {class} procedure CreateFromDirectory(sourceDirectoryName: string; destinationArchiveFileName: string); overload;
    {class} procedure CreateFromDirectory(sourceDirectoryName: string; destinationArchiveFileName: string; compressionLevel: DDNC.System.IO.Compression.DNCompressionLevel; includeBaseDirectory: Boolean); overload;
    {class} procedure CreateFromDirectory(sourceDirectoryName: string; destinationArchiveFileName: string; compressionLevel: DDNC.System.IO.Compression.DNCompressionLevel; includeBaseDirectory: Boolean; entryNameEncoding: DDNC.System.Private.CoreLib.DNEncoding); overload;
    {class} procedure ExtractToDirectory(sourceArchiveFileName: string; destinationDirectoryName: string); overload;
    {class} procedure ExtractToDirectory(sourceArchiveFileName: string; destinationDirectoryName: string; overwrite: Boolean); overload;
    {class} procedure ExtractToDirectory(sourceArchiveFileName: string; destinationDirectoryName: string; entryNameEncoding: DDNC.System.Private.CoreLib.DNEncoding); overload;
    {class} procedure ExtractToDirectory(sourceArchiveFileName: string; destinationDirectoryName: string; entryNameEncoding: DDNC.System.Private.CoreLib.DNEncoding; overwrite: Boolean); overload;

  end;

  [DNTypeName('System.IO.Compression.ZipFile')]
  DNZipFile = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{9F7D07E5-02CC-31FE-826C-3D5C78BE543F}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNZipFile = class(TDNGenericImport<DNZipFileClass, DNZipFile>) end;

  //-------------namespace: System.IO.Compression----------------
  DNZipFileExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{9E92E0B3-7329-513F-80A0-1E157B87CEB7}']
  { static methods } 

    {class} function CreateEntryFromFile(destination: DDNC.System.IO.Compression.DNZipArchive; sourceFileName: string; entryName: string): DDNC.System.IO.Compression.DNZipArchiveEntry; overload;
    {class} function CreateEntryFromFile(destination: DDNC.System.IO.Compression.DNZipArchive; sourceFileName: string; entryName: string; compressionLevel: DDNC.System.IO.Compression.DNCompressionLevel): DDNC.System.IO.Compression.DNZipArchiveEntry; overload;
    {class} procedure ExtractToDirectory(source: DDNC.System.IO.Compression.DNZipArchive; destinationDirectoryName: string); overload;
    {class} procedure ExtractToDirectory(source: DDNC.System.IO.Compression.DNZipArchive; destinationDirectoryName: string; overwrite: Boolean); overload;
    {class} procedure ExtractToFile(source: DDNC.System.IO.Compression.DNZipArchiveEntry; destinationFileName: string); overload;
    {class} procedure ExtractToFile(source: DDNC.System.IO.Compression.DNZipArchiveEntry; destinationFileName: string; overwrite: Boolean); overload;

  end;

  [DNTypeName('System.IO.Compression.ZipFileExtensions')]
  DNZipFileExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{B03D3401-D6AC-3002-B90D-BE3301F402C6}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNZipFileExtensions = class(TDNGenericImport<DNZipFileExtensionsClass, DNZipFileExtensions>) end;


implementation


initialization
  InternalTryLoadAssemblyModule('System.IO.Compression.ZipFile, Version=4.0.4.0, Culture=neutral, PublicKeyToken=b77a5c561934e089');

finalization

end.
