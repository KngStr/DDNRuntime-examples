//----------------------------------------------------------------------------
//  System.Reflection.TypeExtensions.dll: System.Reflection.TypeExtensions, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 5.0.9
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.Reflection.TypeExtensions
//  Author: ying32
//----------------------------------------------------------------------------

{$IFNDEF DDNCSYSTEMREFLECTIONTYPEEXTENSIONS}
unit DDNC.System.Reflection.TypeExtensions;
{$ENDIF}

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib;

type


{ declares }

  DNAssemblyExtensions = interface; // type: System.Reflection.AssemblyExtensions, namespace: System.Reflection
  DNEventInfoExtensions = interface; // type: System.Reflection.EventInfoExtensions, namespace: System.Reflection
  DNMemberInfoExtensions = interface; // type: System.Reflection.MemberInfoExtensions, namespace: System.Reflection
  DNMethodInfoExtensions = interface; // type: System.Reflection.MethodInfoExtensions, namespace: System.Reflection
  DNModuleExtensions = interface; // type: System.Reflection.ModuleExtensions, namespace: System.Reflection
  DNPropertyInfoExtensions = interface; // type: System.Reflection.PropertyInfoExtensions, namespace: System.Reflection
  DNTypeExtensions = interface; // type: System.Reflection.TypeExtensions, namespace: System.Reflection


{ objects }

  //-------------namespace: System.Reflection----------------
  DNAssemblyExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{479B8857-9F9B-54C5-9F8A-BE567948FAFC}']
  { static methods } 

    {class} function GetExportedTypes(assembly: DDNC.System.Private.CoreLib.DNAssembly): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetModules(assembly: DDNC.System.Private.CoreLib.DNAssembly): TArray<DDNC.System.Private.CoreLib.DNModule>;
    {class} function GetTypes(assembly: DDNC.System.Private.CoreLib.DNAssembly): TArray<DDNC.System.Private.CoreLib.DNType>;

  end;

  [DNTypeName('System.Reflection.AssemblyExtensions')]
  DNAssemblyExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{EE014E0D-0230-3EB7-B25F-0F9184F48B52}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNAssemblyExtensions = class(TDNGenericImport<DNAssemblyExtensionsClass, DNAssemblyExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNEventInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{7040F2D5-7759-55D6-9465-75FD585B3F77}']
  { static methods } 

    {class} function GetAddMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetAddMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRaiseMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRaiseMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRemoveMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRemoveMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;

  end;

  [DNTypeName('System.Reflection.EventInfoExtensions')]
  DNEventInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{BFE22DDD-A88E-3401-A455-9104A03C729D}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNEventInfoExtensions = class(TDNGenericImport<DNEventInfoExtensionsClass, DNEventInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNMemberInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{213A68E9-A051-5D81-8408-B792809DDB70}']
  { static methods } 

    {class} function HasMetadataToken(member: DDNC.System.Private.CoreLib.DNMemberInfo): Boolean;
    {class} function GetMetadataToken(member: DDNC.System.Private.CoreLib.DNMemberInfo): Int32;

  end;

  [DNTypeName('System.Reflection.MemberInfoExtensions')]
  DNMemberInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{CEA8CAF9-688D-3CFA-8FCA-8F0149E1DB8F}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNMemberInfoExtensions = class(TDNGenericImport<DNMemberInfoExtensionsClass, DNMemberInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNMethodInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{0D53565A-B994-535B-922F-76525D6EC2DD}']
  { static methods } 

    {class} function GetBaseDefinition(method: DDNC.System.Private.CoreLib.DNMethodInfo): DDNC.System.Private.CoreLib.DNMethodInfo;

  end;

  [DNTypeName('System.Reflection.MethodInfoExtensions')]
  DNMethodInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{E027DCEB-A507-34F6-AA5E-90AD7D3CB9B3}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNMethodInfoExtensions = class(TDNGenericImport<DNMethodInfoExtensionsClass, DNMethodInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNModuleExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{934CEE31-AA48-59AE-B0F2-4A91CE26C285}']
  { static methods } 

    {class} function HasModuleVersionId(module: DDNC.System.Private.CoreLib.DNModule): Boolean;
    {class} function GetModuleVersionId(module: DDNC.System.Private.CoreLib.DNModule): DDNC.System.Private.CoreLib.DNGuid;

  end;

  [DNTypeName('System.Reflection.ModuleExtensions')]
  DNModuleExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{54ADBD31-7C83-351D-84A7-46918E8E2ED8}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNModuleExtensions = class(TDNGenericImport<DNModuleExtensionsClass, DNModuleExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNPropertyInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{EFAE0869-4DBE-581D-AAEF-AFC62A32B8CB}']
  { static methods } 

    {class} function GetAccessors(&property: DDNC.System.Private.CoreLib.DNPropertyInfo): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetAccessors(&property: DDNC.System.Private.CoreLib.DNPropertyInfo; nonPublic: Boolean): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetGetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetGetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetSetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetSetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;

  end;

  [DNTypeName('System.Reflection.PropertyInfoExtensions')]
  DNPropertyInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{F81A8DAB-5712-3801-A79D-42FC0FF8442F}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNPropertyInfoExtensions = class(TDNGenericImport<DNPropertyInfoExtensionsClass, DNPropertyInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNTypeExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{8702F5AA-E143-5706-944F-0E6C0EF43433}']
  { static methods } 

    {class} function GetConstructor(&type: DDNC.System.Private.CoreLib.DNType; types: TArray<DDNC.System.Private.CoreLib.DNType>): DDNC.System.Private.CoreLib.DNConstructorInfo;
    {class} function GetConstructors(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNConstructorInfo>; overload;
    {class} function GetConstructors(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNConstructorInfo>; overload;
    {class} function GetDefaultMembers(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>;
    {class} function GetEvent(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNEventInfo; overload;
    {class} function GetEvent(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNEventInfo; overload;
    {class} function GetEvents(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNEventInfo>; overload;
    {class} function GetEvents(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNEventInfo>; overload;
    {class} function GetField(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNFieldInfo; overload;
    {class} function GetField(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNFieldInfo; overload;
    {class} function GetFields(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNFieldInfo>; overload;
    {class} function GetFields(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNFieldInfo>; overload;
    {class} function GetGenericArguments(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetInterfaces(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetMember(&type: DDNC.System.Private.CoreLib.DNType; name: string): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMember(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMembers(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMembers(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMethod(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetMethod(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetMethod(&type: DDNC.System.Private.CoreLib.DNType; name: string; types: TArray<DDNC.System.Private.CoreLib.DNType>): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetMethods(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetMethods(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetNestedType(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNType;
    {class} function GetNestedTypes(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetProperties(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNPropertyInfo>; overload;
    {class} function GetProperties(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNPropertyInfo>; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string; returnType: DDNC.System.Private.CoreLib.DNType): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string; returnType: DDNC.System.Private.CoreLib.DNType; types: TArray<DDNC.System.Private.CoreLib.DNType>): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function IsAssignableFrom(&type: DDNC.System.Private.CoreLib.DNType; c: DDNC.System.Private.CoreLib.DNType): Boolean;
    {class} function IsInstanceOfType(&type: DDNC.System.Private.CoreLib.DNType; o: DDNC.System.Private.CoreLib.DNObject): Boolean;

  end;

  [DNTypeName('System.Reflection.TypeExtensions')]
  DNTypeExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{B8BD07C9-2E7F-3214-BEF5-97AE6567BBAA}']
  { methods } 

    function GetType: DDNC.System.Private.CoreLib.DNType;
    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;

  end;

  TDNTypeExtensions = class(TDNGenericImport<DNTypeExtensionsClass, DNTypeExtensions>) end;


implementation


initialization
  LoadAssemblyModule('System.Reflection.TypeExtensions.dll', True, 'System.Reflection.TypeExtensions, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a');

finalization

end.
