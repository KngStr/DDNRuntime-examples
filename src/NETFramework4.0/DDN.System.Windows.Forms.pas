//----------------------------------------------------------------------------
//  System.Windows.Forms.dll: System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Framework 4.0
//----------------------------------------------------------------------------
//  UnitName: DDN.System.Windows.Forms
//  Author: ying32
//----------------------------------------------------------------------------

unit DDN.System.Windows.Forms;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDN.mscorlib,
  DDN.System,
  DDN.System.Configuration,
  DDN.System.Drawing;

type

{ enums }

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AccessibleEvents')]
  DNAccessibleEvents = type Integer;
  DNAccessibleEventsHelper = record helper for DNAccessibleEvents
  public const
    SystemSound = 1;
    SystemAlert = 2;
    SystemForeground = 3;
    SystemMenuStart = 4;
    SystemMenuEnd = 5;
    SystemMenuPopupStart = 6;
    SystemMenuPopupEnd = 7;
    SystemCaptureStart = 8;
    SystemCaptureEnd = 9;
    SystemMoveSizeStart = 10;
    SystemMoveSizeEnd = 11;
    SystemContextHelpStart = 12;
    SystemContextHelpEnd = 13;
    SystemDragDropStart = 14;
    SystemDragDropEnd = 15;
    SystemDialogStart = 16;
    SystemDialogEnd = 17;
    SystemScrollingStart = 18;
    SystemScrollingEnd = 19;
    SystemSwitchStart = 20;
    SystemSwitchEnd = 21;
    SystemMinimizeStart = 22;
    SystemMinimizeEnd = 23;
    Create = 32768;
    Destroy = 32769;
    Show = 32770;
    Hide = 32771;
    Reorder = 32772;
    Focus = 32773;
    Selection = 32774;
    SelectionAdd = 32775;
    SelectionRemove = 32776;
    SelectionWithin = 32777;
    StateChange = 32778;
    LocationChange = 32779;
    NameChange = 32780;
    DescriptionChange = 32781;
    ValueChange = 32782;
    ParentChange = 32783;
    HelpChange = 32784;
    DefaultActionChange = 32785;
    AcceleratorChange = 32786;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AccessibleNavigation')]
  DNAccessibleNavigation = type Integer;
  DNAccessibleNavigationHelper = record helper for DNAccessibleNavigation
  public const
    Up = 1;
    Down = 2;
    Left = 3;
    Right = 4;
    Next = 5;
    Previous = 6;
    FirstChild = 7;
    LastChild = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AccessibleRole')]
  DNAccessibleRole = type Integer;
  DNAccessibleRoleHelper = record helper for DNAccessibleRole
  public const
    None = 0;
    TitleBar = 1;
    MenuBar = 2;
    ScrollBar = 3;
    Grip = 4;
    Sound = 5;
    Cursor = 6;
    Caret = 7;
    Alert = 8;
    Window = 9;
    Client = 10;
    MenuPopup = 11;
    MenuItem = 12;
    ToolTip = 13;
    Application = 14;
    Document = 15;
    Pane = 16;
    Chart = 17;
    Dialog = 18;
    Border = 19;
    Grouping = 20;
    Separator = 21;
    ToolBar = 22;
    StatusBar = 23;
    Table = 24;
    ColumnHeader = 25;
    RowHeader = 26;
    Column = 27;
    Row = 28;
    Cell = 29;
    Link = 30;
    HelpBalloon = 31;
    Character = 32;
    List = 33;
    ListItem = 34;
    Outline = 35;
    OutlineItem = 36;
    PageTab = 37;
    PropertyPage = 38;
    Indicator = 39;
    Graphic = 40;
    StaticText = 41;
    Text = 42;
    PushButton = 43;
    CheckButton = 44;
    RadioButton = 45;
    ComboBox = 46;
    DropList = 47;
    ProgressBar = 48;
    Dial = 49;
    HotkeyField = 50;
    Slider = 51;
    SpinButton = 52;
    Diagram = 53;
    Animation = 54;
    Equation = 55;
    ButtonDropDown = 56;
    ButtonMenu = 57;
    ButtonDropDownGrid = 58;
    WhiteSpace = 59;
    PageTabList = 60;
    Clock = 61;
    SplitButton = 62;
    IpAddress = 63;
    OutlineButton = 64;
    Default_ = -1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AccessibleSelection')]
  DNAccessibleSelection = type Integer;
  DNAccessibleSelectionHelper = record helper for DNAccessibleSelection
  public const
    None = 0;
    TakeFocus = 1;
    TakeSelection = 2;
    ExtendSelection = 4;
    AddSelection = 8;
    RemoveSelection = 16;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AccessibleStates')]
  DNAccessibleStates = type Integer;
  DNAccessibleStatesHelper = record helper for DNAccessibleStates
  public const
    None = 0;
    Unavailable = 1;
    Selected = 2;
    Focused = 4;
    Pressed = 8;
    Checked = 16;
    Indeterminate = 32;
    Mixed = 32;
    ReadOnly = 64;
    HotTracked = 128;
    Default_ = 256;
    Expanded = 512;
    Collapsed = 1024;
    Busy = 2048;
    Floating = 4096;
    Marqueed = 8192;
    Animated = 16384;
    Invisible = 32768;
    Offscreen = 65536;
    Sizeable = 131072;
    Moveable = 262144;
    SelfVoicing = 524288;
    Focusable = 1048576;
    Selectable = 2097152;
    Linked = 4194304;
    Traversed = 8388608;
    MultiSelectable = 16777216;
    ExtSelectable = 33554432;
    AlertLow = 67108864;
    AlertMedium = 134217728;
    AlertHigh = 268435456;
    Protected_ = 536870912;
    Valid = 1073741823;
    HasPopup = 1073741824;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AnchorStyles')]
  DNAnchorStyles = type Integer;
  DNAnchorStylesHelper = record helper for DNAnchorStyles
  public const
    None = 0;
    Top = 1;
    Bottom = 2;
    Left = 4;
    Right = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Appearance')]
  DNAppearance = type Integer;
  DNAppearanceHelper = record helper for DNAppearance
  public const
    Normal = 0;
    Button = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ArrangeDirection')]
  DNArrangeDirection = type Integer;
  DNArrangeDirectionHelper = record helper for DNArrangeDirection
  public const
    Left = 0;
    Right = 0;
    Down = 4;
    Up = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ArrangeStartingPosition')]
  DNArrangeStartingPosition = type Integer;
  DNArrangeStartingPositionHelper = record helper for DNArrangeStartingPosition
  public const
    BottomLeft = 0;
    BottomRight = 1;
    TopLeft = 2;
    TopRight = 3;
    Hide = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ArrowDirection')]
  DNArrowDirection = type Integer;
  DNArrowDirectionHelper = record helper for DNArrowDirection
  public const
    Left = 0;
    Up = 1;
    Right = 16;
    Down = 17;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AutoCompleteMode')]
  DNAutoCompleteMode = type Integer;
  DNAutoCompleteModeHelper = record helper for DNAutoCompleteMode
  public const
    None = 0;
    Suggest = 1;
    Append = 2;
    SuggestAppend = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AutoCompleteSource')]
  DNAutoCompleteSource = type Integer;
  DNAutoCompleteSourceHelper = record helper for DNAutoCompleteSource
  public const
    FileSystem = 1;
    HistoryList = 2;
    RecentlyUsedList = 4;
    AllUrl = 6;
    AllSystemSources = 7;
    FileSystemDirectories = 32;
    CustomSource = 64;
    None = 128;
    ListItems = 256;
  end;


  //-------------namespace: System.Windows.Forms.Automation----------------
  [DNTypeName('System.Windows.Forms.Automation.AutomationLiveSetting')]
  DNAutomationLiveSetting = type Integer;
  DNAutomationLiveSettingHelper = record helper for DNAutomationLiveSetting
  public const
    Off = 0;
    Polite = 1;
    Assertive = 2;
  end;


  //-------------namespace: System.Windows.Forms.Automation----------------
  [DNTypeName('System.Windows.Forms.Automation.AutomationNotificationKind')]
  DNAutomationNotificationKind = type Integer;
  DNAutomationNotificationKindHelper = record helper for DNAutomationNotificationKind
  public const
    ItemAdded = 0;
    ItemRemoved = 1;
    ActionCompleted = 2;
    ActionAborted = 3;
    Other = 4;
  end;


  //-------------namespace: System.Windows.Forms.Automation----------------
  [DNTypeName('System.Windows.Forms.Automation.AutomationNotificationProcessing')]
  DNAutomationNotificationProcessing = type Integer;
  DNAutomationNotificationProcessingHelper = record helper for DNAutomationNotificationProcessing
  public const
    ImportantAll = 0;
    ImportantMostRecent = 1;
    All = 2;
    MostRecent = 3;
    CurrentThenMostRecent = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AutoScaleMode')]
  DNAutoScaleMode = type Integer;
  DNAutoScaleModeHelper = record helper for DNAutoScaleMode
  public const
    None = 0;
    Font = 1;
    Dpi = 2;
    Inherit = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AutoSizeMode')]
  DNAutoSizeMode = type Integer;
  DNAutoSizeModeHelper = record helper for DNAutoSizeMode
  public const
    GrowAndShrink = 0;
    GrowOnly = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AutoValidate')]
  DNAutoValidate = type Integer;
  DNAutoValidateHelper = record helper for DNAutoValidate
  public const
    Disable = 0;
    EnablePreventFocusChange = 1;
    EnableAllowFocusChange = 2;
    Inherit = -1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.AxHost+ActiveXInvokeKind')]
  DNAxHost_ActiveXInvokeKind = type Integer;
  DNAxHost_ActiveXInvokeKindHelper = record helper for DNAxHost_ActiveXInvokeKind
  public const
    MethodInvoke = 0;
    PropertyGet = 1;
    PropertySet = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.BatteryChargeStatus')]
  DNBatteryChargeStatus = type Integer;
  DNBatteryChargeStatusHelper = record helper for DNBatteryChargeStatus
  public const
    High = 1;
    Low = 2;
    Critical = 4;
    Charging = 8;
    NoSystemBattery = 128;
    Unknown = 255;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.BindingCompleteContext')]
  DNBindingCompleteContext = type Integer;
  DNBindingCompleteContextHelper = record helper for DNBindingCompleteContext
  public const
    ControlUpdate = 0;
    DataSourceUpdate = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.BindingCompleteState')]
  DNBindingCompleteState = type Integer;
  DNBindingCompleteStateHelper = record helper for DNBindingCompleteState
  public const
    Success = 0;
    DataError = 1;
    Exception = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.BootMode')]
  DNBootMode = type Integer;
  DNBootModeHelper = record helper for DNBootMode
  public const
    Normal = 0;
    FailSafe = 1;
    FailSafeWithNetwork = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Border3DSide')]
  DNBorder3DSide = type Integer;
  DNBorder3DSideHelper = record helper for DNBorder3DSide
  public const
    Left = 1;
    Top = 2;
    Right = 4;
    Bottom = 8;
    Middle = 2048;
    All = 2063;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Border3DStyle')]
  DNBorder3DStyle = type Integer;
  DNBorder3DStyleHelper = record helper for DNBorder3DStyle
  public const
    RaisedOuter = 1;
    SunkenOuter = 2;
    RaisedInner = 4;
    Raised = 5;
    Etched = 6;
    SunkenInner = 8;
    Bump = 9;
    Sunken = 10;
    Adjust = 8192;
    Flat = 16394;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.BorderStyle')]
  DNBorderStyle = type Integer;
  DNBorderStyleHelper = record helper for DNBorderStyle
  public const
    None = 0;
    FixedSingle = 1;
    Fixed3D = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.BoundsSpecified')]
  DNBoundsSpecified = type Integer;
  DNBoundsSpecifiedHelper = record helper for DNBoundsSpecified
  public const
    None = 0;
    X = 1;
    Y = 2;
    Location = 3;
    Width = 4;
    Height = 8;
    Size = 12;
    All = 15;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ButtonBorderStyle')]
  DNButtonBorderStyle = type Integer;
  DNButtonBorderStyleHelper = record helper for DNButtonBorderStyle
  public const
    None = 0;
    Dotted = 1;
    Dashed = 2;
    Solid = 3;
    Inset = 4;
    Outset = 5;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ButtonState')]
  DNButtonState = type Integer;
  DNButtonStateHelper = record helper for DNButtonState
  public const
    Normal = 0;
    Inactive = 256;
    Pushed = 512;
    Checked = 1024;
    Flat = 16384;
    All = 18176;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.CaptionButton')]
  DNCaptionButton = type Integer;
  DNCaptionButtonHelper = record helper for DNCaptionButton
  public const
    Close = 0;
    Minimize = 1;
    Maximize = 2;
    Restore = 3;
    Help = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.CharacterCasing')]
  DNCharacterCasing = type Integer;
  DNCharacterCasingHelper = record helper for DNCharacterCasing
  public const
    Normal = 0;
    Upper = 1;
    Lower = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.CheckState')]
  DNCheckState = type Integer;
  DNCheckStateHelper = record helper for DNCheckState
  public const
    Unchecked = 0;
    Checked = 1;
    Indeterminate = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.CloseReason')]
  DNCloseReason = type Integer;
  DNCloseReasonHelper = record helper for DNCloseReason
  public const
    None = 0;
    WindowsShutDown = 1;
    MdiFormClosing = 2;
    UserClosing = 3;
    TaskManagerClosing = 4;
    FormOwnerClosing = 5;
    ApplicationExitCall = 6;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ColorDepth')]
  DNColorDepth = type Integer;
  DNColorDepthHelper = record helper for DNColorDepth
  public const
    Depth4Bit = 4;
    Depth8Bit = 8;
    Depth16Bit = 16;
    Depth24Bit = 24;
    Depth32Bit = 32;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ColumnHeaderAutoResizeStyle')]
  DNColumnHeaderAutoResizeStyle = type Integer;
  DNColumnHeaderAutoResizeStyleHelper = record helper for DNColumnHeaderAutoResizeStyle
  public const
    None = 0;
    HeaderSize = 1;
    ColumnContent = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ColumnHeaderStyle')]
  DNColumnHeaderStyle = type Integer;
  DNColumnHeaderStyleHelper = record helper for DNColumnHeaderStyle
  public const
    None = 0;
    Nonclickable = 1;
    Clickable = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ComboBoxStyle')]
  DNComboBoxStyle = type Integer;
  DNComboBoxStyleHelper = record helper for DNComboBoxStyle
  public const
    Simple = 0;
    DropDown = 1;
    DropDownList = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ControlStyles')]
  DNControlStyles = type Integer;
  DNControlStylesHelper = record helper for DNControlStyles
  public const
    ContainerControl = 1;
    UserPaint = 2;
    Opaque = 4;
    ResizeRedraw = 16;
    FixedWidth = 32;
    FixedHeight = 64;
    StandardClick = 256;
    Selectable = 512;
    UserMouse = 1024;
    SupportsTransparentBackColor = 2048;
    StandardDoubleClick = 4096;
    AllPaintingInWmPaint = 8192;
    CacheText = 16384;
    EnableNotifyMessage = 32768;
    DoubleBuffer = 65536;
    OptimizedDoubleBuffer = 131072;
    UseTextForAccessibility = 262144;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ControlUpdateMode')]
  DNControlUpdateMode = type Integer;
  DNControlUpdateModeHelper = record helper for DNControlUpdateMode
  public const
    OnPropertyChanged = 0;
    Never = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGrid+HitTestType')]
  DNDataGrid_HitTestType = type Integer;
  DNDataGrid_HitTestTypeHelper = record helper for DNDataGrid_HitTestType
  public const
    None = 0;
    Cell = 1;
    ColumnHeader = 2;
    RowHeader = 4;
    ColumnResize = 8;
    RowResize = 16;
    Caption = 32;
    ParentRows = 64;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridLineStyle')]
  DNDataGridLineStyle = type Integer;
  DNDataGridLineStyleHelper = record helper for DNDataGridLineStyle
  public const
    None = 0;
    Solid = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridParentRowsLabelStyle')]
  DNDataGridParentRowsLabelStyle = type Integer;
  DNDataGridParentRowsLabelStyleHelper = record helper for DNDataGridParentRowsLabelStyle
  public const
    None = 0;
    TableName = 1;
    ColumnName = 2;
    Both = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewAdvancedCellBorderStyle')]
  DNDataGridViewAdvancedCellBorderStyle = type Integer;
  DNDataGridViewAdvancedCellBorderStyleHelper = record helper for DNDataGridViewAdvancedCellBorderStyle
  public const
    NotSet = 0;
    None = 1;
    Single = 2;
    Inset = 3;
    InsetDouble = 4;
    Outset = 5;
    OutsetDouble = 6;
    OutsetPartial = 7;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeColumnMode')]
  DNDataGridViewAutoSizeColumnMode = type Integer;
  DNDataGridViewAutoSizeColumnModeHelper = record helper for DNDataGridViewAutoSizeColumnMode
  public const
    NotSet = 0;
    None = 1;
    ColumnHeader = 2;
    AllCellsExceptHeader = 4;
    AllCells = 6;
    DisplayedCellsExceptHeader = 8;
    DisplayedCells = 10;
    Fill = 16;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeColumnsMode')]
  DNDataGridViewAutoSizeColumnsMode = type Integer;
  DNDataGridViewAutoSizeColumnsModeHelper = record helper for DNDataGridViewAutoSizeColumnsMode
  public const
    None = 1;
    ColumnHeader = 2;
    AllCellsExceptHeader = 4;
    AllCells = 6;
    DisplayedCellsExceptHeader = 8;
    DisplayedCells = 10;
    Fill = 16;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeRowMode')]
  DNDataGridViewAutoSizeRowMode = type Integer;
  DNDataGridViewAutoSizeRowModeHelper = record helper for DNDataGridViewAutoSizeRowMode
  public const
    RowHeader = 1;
    AllCellsExceptHeader = 2;
    AllCells = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeRowsMode')]
  DNDataGridViewAutoSizeRowsMode = type Integer;
  DNDataGridViewAutoSizeRowsModeHelper = record helper for DNDataGridViewAutoSizeRowsMode
  public const
    None = 0;
    AllHeaders = 5;
    AllCellsExceptHeaders = 6;
    AllCells = 7;
    DisplayedHeaders = 9;
    DisplayedCellsExceptHeaders = 10;
    DisplayedCells = 11;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewCellBorderStyle')]
  DNDataGridViewCellBorderStyle = type Integer;
  DNDataGridViewCellBorderStyleHelper = record helper for DNDataGridViewCellBorderStyle
  public const
    Custom = 0;
    Single = 1;
    Raised = 2;
    Sunken = 3;
    None = 4;
    SingleVertical = 5;
    RaisedVertical = 6;
    SunkenVertical = 7;
    SingleHorizontal = 8;
    RaisedHorizontal = 9;
    SunkenHorizontal = 10;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewCellStyleScopes')]
  DNDataGridViewCellStyleScopes = type Integer;
  DNDataGridViewCellStyleScopesHelper = record helper for DNDataGridViewCellStyleScopes
  public const
    None = 0;
    Cell = 1;
    Column = 2;
    Row = 4;
    DataGridView = 8;
    ColumnHeaders = 16;
    RowHeaders = 32;
    Rows = 64;
    AlternatingRows = 128;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewClipboardCopyMode')]
  DNDataGridViewClipboardCopyMode = type Integer;
  DNDataGridViewClipboardCopyModeHelper = record helper for DNDataGridViewClipboardCopyMode
  public const
    Disable = 0;
    EnableWithAutoHeaderText = 1;
    EnableWithoutHeaderText = 2;
    EnableAlwaysIncludeHeaderText = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode')]
  DNDataGridViewColumnHeadersHeightSizeMode = type Integer;
  DNDataGridViewColumnHeadersHeightSizeModeHelper = record helper for DNDataGridViewColumnHeadersHeightSizeMode
  public const
    EnableResizing = 0;
    DisableResizing = 1;
    AutoSize = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewColumnSortMode')]
  DNDataGridViewColumnSortMode = type Integer;
  DNDataGridViewColumnSortModeHelper = record helper for DNDataGridViewColumnSortMode
  public const
    NotSortable = 0;
    Automatic = 1;
    Programmatic = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewComboBoxDisplayStyle')]
  DNDataGridViewComboBoxDisplayStyle = type Integer;
  DNDataGridViewComboBoxDisplayStyleHelper = record helper for DNDataGridViewComboBoxDisplayStyle
  public const
    ComboBox = 0;
    DropDownButton = 1;
    Nothing = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewContentAlignment')]
  DNDataGridViewContentAlignment = type Integer;
  DNDataGridViewContentAlignmentHelper = record helper for DNDataGridViewContentAlignment
  public const
    NotSet = 0;
    TopLeft = 1;
    TopCenter = 2;
    TopRight = 4;
    MiddleLeft = 16;
    MiddleCenter = 32;
    MiddleRight = 64;
    BottomLeft = 256;
    BottomCenter = 512;
    BottomRight = 1024;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewDataErrorContexts')]
  DNDataGridViewDataErrorContexts = type Integer;
  DNDataGridViewDataErrorContextsHelper = record helper for DNDataGridViewDataErrorContexts
  public const
    Formatting = 1;
    Display = 2;
    PreferredSize = 4;
    RowDeletion = 8;
    Parsing = 256;
    Commit = 512;
    InitialValueRestoration = 1024;
    LeaveControl = 2048;
    CurrentCellChange = 4096;
    Scroll = 8192;
    ClipboardContent = 16384;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewEditMode')]
  DNDataGridViewEditMode = type Integer;
  DNDataGridViewEditModeHelper = record helper for DNDataGridViewEditMode
  public const
    EditOnEnter = 0;
    EditOnKeystroke = 1;
    EditOnKeystrokeOrF2 = 2;
    EditOnF2 = 3;
    EditProgrammatically = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewElementStates')]
  DNDataGridViewElementStates = type Integer;
  DNDataGridViewElementStatesHelper = record helper for DNDataGridViewElementStates
  public const
    None = 0;
    Displayed = 1;
    Frozen = 2;
    ReadOnly = 4;
    Resizable = 8;
    ResizableSet = 16;
    Selected = 32;
    Visible = 64;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewHeaderBorderStyle')]
  DNDataGridViewHeaderBorderStyle = type Integer;
  DNDataGridViewHeaderBorderStyleHelper = record helper for DNDataGridViewHeaderBorderStyle
  public const
    Custom = 0;
    Single = 1;
    Raised = 2;
    Sunken = 3;
    None = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewHitTestType')]
  DNDataGridViewHitTestType = type Integer;
  DNDataGridViewHitTestTypeHelper = record helper for DNDataGridViewHitTestType
  public const
    None = 0;
    Cell = 1;
    ColumnHeader = 2;
    RowHeader = 3;
    TopLeftHeader = 4;
    HorizontalScrollBar = 5;
    VerticalScrollBar = 6;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewImageCellLayout')]
  DNDataGridViewImageCellLayout = type Integer;
  DNDataGridViewImageCellLayoutHelper = record helper for DNDataGridViewImageCellLayout
  public const
    NotSet = 0;
    Normal = 1;
    Stretch = 2;
    Zoom = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewPaintParts')]
  DNDataGridViewPaintParts = type Integer;
  DNDataGridViewPaintPartsHelper = record helper for DNDataGridViewPaintParts
  public const
    None = 0;
    Background = 1;
    Border = 2;
    ContentBackground = 4;
    ContentForeground = 8;
    ErrorIcon = 16;
    Focus = 32;
    SelectionBackground = 64;
    All = 127;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode')]
  DNDataGridViewRowHeadersWidthSizeMode = type Integer;
  DNDataGridViewRowHeadersWidthSizeModeHelper = record helper for DNDataGridViewRowHeadersWidthSizeMode
  public const
    EnableResizing = 0;
    DisableResizing = 1;
    AutoSizeToAllHeaders = 2;
    AutoSizeToDisplayedHeaders = 3;
    AutoSizeToFirstHeader = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewSelectionMode')]
  DNDataGridViewSelectionMode = type Integer;
  DNDataGridViewSelectionModeHelper = record helper for DNDataGridViewSelectionMode
  public const
    CellSelect = 0;
    FullRowSelect = 1;
    FullColumnSelect = 2;
    RowHeaderSelect = 3;
    ColumnHeaderSelect = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataGridViewTriState')]
  DNDataGridViewTriState = type Integer;
  DNDataGridViewTriStateHelper = record helper for DNDataGridViewTriState
  public const
    NotSet = 0;
    True = 1;
    False = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DataSourceUpdateMode')]
  DNDataSourceUpdateMode = type Integer;
  DNDataSourceUpdateModeHelper = record helper for DNDataSourceUpdateMode
  public const
    OnValidation = 0;
    OnPropertyChanged = 1;
    Never = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DateTimePickerFormat')]
  DNDateTimePickerFormat = type Integer;
  DNDateTimePickerFormatHelper = record helper for DNDateTimePickerFormat
  public const
    Long = 1;
    Short = 2;
    Time = 4;
    Custom = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Day')]
  DNDay = type Integer;
  DNDayHelper = record helper for DNDay
  public const
    Monday = 0;
    Tuesday = 1;
    Wednesday = 2;
    Thursday = 3;
    Friday = 4;
    Saturday = 5;
    Sunday = 6;
    Default_ = 7;
  end;


  //-------------namespace: System.Windows.Forms.Design----------------
  [DNTypeName('System.Windows.Forms.Design.ToolStripItemDesignerAvailability')]
  DNToolStripItemDesignerAvailability = type Integer;
  DNToolStripItemDesignerAvailabilityHelper = record helper for DNToolStripItemDesignerAvailability
  public const
    None = 0;
    ToolStrip = 1;
    MenuStrip = 2;
    ContextMenuStrip = 4;
    StatusStrip = 8;
    All = 15;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DialogResult')]
  DNDialogResult = type Integer;
  DNDialogResultHelper = record helper for DNDialogResult
  public const
    None = 0;
    OK = 1;
    Cancel = 2;
    Abort_ = 3;
    Retry = 4;
    Ignore = 5;
    Yes = 6;
    No = 7;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DockingBehavior')]
  DNDockingBehavior = type Integer;
  DNDockingBehaviorHelper = record helper for DNDockingBehavior
  public const
    Never = 0;
    Ask = 1;
    AutoDock = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DockStyle')]
  DNDockStyle = type Integer;
  DNDockStyleHelper = record helper for DNDockStyle
  public const
    None = 0;
    Top = 1;
    Bottom = 2;
    Left = 3;
    Right = 4;
    Fill = 5;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DragAction')]
  DNDragAction = type Integer;
  DNDragActionHelper = record helper for DNDragAction
  public const
    Continue_ = 0;
    Drop = 1;
    Cancel = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DragDropEffects')]
  DNDragDropEffects = type Integer;
  DNDragDropEffectsHelper = record helper for DNDragDropEffects
  public const
    None = 0;
    Copy = 1;
    Move = 2;
    Link = 4;
    Scroll = -2147483648;
    All = -2147483645;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DrawItemState')]
  DNDrawItemState = type Integer;
  DNDrawItemStateHelper = record helper for DNDrawItemState
  public const
    None = 0;
    Selected = 1;
    Grayed = 2;
    Disabled = 4;
    Checked = 8;
    Focus = 16;
    Default_ = 32;
    HotLight = 64;
    Inactive = 128;
    NoAccelerator = 256;
    NoFocusRect = 512;
    ComboBoxEdit = 4096;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.DrawMode')]
  DNDrawMode = type Integer;
  DNDrawModeHelper = record helper for DNDrawMode
  public const
    Normal = 0;
    OwnerDrawFixed = 1;
    OwnerDrawVariable = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ErrorBlinkStyle')]
  DNErrorBlinkStyle = type Integer;
  DNErrorBlinkStyleHelper = record helper for DNErrorBlinkStyle
  public const
    BlinkIfDifferentError = 0;
    AlwaysBlink = 1;
    NeverBlink = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ErrorIconAlignment')]
  DNErrorIconAlignment = type Integer;
  DNErrorIconAlignmentHelper = record helper for DNErrorIconAlignment
  public const
    TopLeft = 0;
    TopRight = 1;
    MiddleLeft = 2;
    MiddleRight = 3;
    BottomLeft = 4;
    BottomRight = 5;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FixedPanel')]
  DNFixedPanel = type Integer;
  DNFixedPanelHelper = record helper for DNFixedPanel
  public const
    None = 0;
    Panel1 = 1;
    Panel2 = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FlatStyle')]
  DNFlatStyle = type Integer;
  DNFlatStyleHelper = record helper for DNFlatStyle
  public const
    Flat = 0;
    Popup = 1;
    Standard = 2;
    System = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FlowDirection')]
  DNFlowDirection = type Integer;
  DNFlowDirectionHelper = record helper for DNFlowDirection
  public const
    LeftToRight = 0;
    TopDown = 1;
    RightToLeft = 2;
    BottomUp = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FormBorderStyle')]
  DNFormBorderStyle = type Integer;
  DNFormBorderStyleHelper = record helper for DNFormBorderStyle
  public const
    None = 0;
    FixedSingle = 1;
    Fixed3D = 2;
    FixedDialog = 3;
    Sizable = 4;
    FixedToolWindow = 5;
    SizableToolWindow = 6;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FormStartPosition')]
  DNFormStartPosition = type Integer;
  DNFormStartPositionHelper = record helper for DNFormStartPosition
  public const
    Manual = 0;
    CenterScreen = 1;
    WindowsDefaultLocation = 2;
    WindowsDefaultBounds = 3;
    CenterParent = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FormWindowState')]
  DNFormWindowState = type Integer;
  DNFormWindowStateHelper = record helper for DNFormWindowState
  public const
    Normal = 0;
    Minimized = 1;
    Maximized = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.FrameStyle')]
  DNFrameStyle = type Integer;
  DNFrameStyleHelper = record helper for DNFrameStyle
  public const
    Dashed = 0;
    Thick = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.GetChildAtPointSkip')]
  DNGetChildAtPointSkip = type Integer;
  DNGetChildAtPointSkipHelper = record helper for DNGetChildAtPointSkip
  public const
    None = 0;
    Invisible = 1;
    Disabled = 2;
    Transparent = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.GridItemType')]
  DNGridItemType = type Integer;
  DNGridItemTypeHelper = record helper for DNGridItemType
  public const
    Property_ = 0;
    Category = 1;
    ArrayValue = 2;
    Root = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.HelpNavigator')]
  DNHelpNavigator = type Integer;
  DNHelpNavigatorHelper = record helper for DNHelpNavigator
  public const
    Topic = -2147483647;
    TableOfContents = -2147483646;
    Index = -2147483645;
    Find = -2147483644;
    AssociateIndex = -2147483643;
    KeywordIndex = -2147483642;
    TopicId = -2147483641;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.HorizontalAlignment')]
  DNHorizontalAlignment = type Integer;
  DNHorizontalAlignmentHelper = record helper for DNHorizontalAlignment
  public const
    Left = 0;
    Right = 1;
    Center = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.HtmlElementInsertionOrientation')]
  DNHtmlElementInsertionOrientation = type Integer;
  DNHtmlElementInsertionOrientationHelper = record helper for DNHtmlElementInsertionOrientation
  public const
    BeforeBegin = 0;
    AfterBegin = 1;
    BeforeEnd = 2;
    AfterEnd = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ImageLayout')]
  DNImageLayout = type Integer;
  DNImageLayoutHelper = record helper for DNImageLayout
  public const
    None = 0;
    Tile = 1;
    Center = 2;
    Stretch = 3;
    Zoom = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ImeMode')]
  DNImeMode = type Integer;
  DNImeModeHelper = record helper for DNImeMode
  public const
    NoControl = 0;
    On_ = 1;
    Off = 2;
    Disable = 3;
    Hiragana = 4;
    Katakana = 5;
    KatakanaHalf = 6;
    AlphaFull = 7;
    Alpha = 8;
    HangulFull = 9;
    Hangul = 10;
    Close = 11;
    OnHalf = 12;
    Inherit = -1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.InsertKeyMode')]
  DNInsertKeyMode = type Integer;
  DNInsertKeyModeHelper = record helper for DNInsertKeyMode
  public const
    Default_ = 0;
    Insert = 1;
    Overwrite = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ItemActivation')]
  DNItemActivation = type Integer;
  DNItemActivationHelper = record helper for DNItemActivation
  public const
    Standard = 0;
    OneClick = 1;
    TwoClick = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ItemBoundsPortion')]
  DNItemBoundsPortion = type Integer;
  DNItemBoundsPortionHelper = record helper for DNItemBoundsPortion
  public const
    Entire = 0;
    Icon = 1;
    Label_ = 2;
    ItemOnly = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Keys')]
  DNKeys = type Integer;
  DNKeysHelper = record helper for DNKeys
  public const
    None = 0;
    LButton = 1;
    RButton = 2;
    Cancel = 3;
    MButton = 4;
    XButton1 = 5;
    XButton2 = 6;
    Back = 8;
    Tab = 9;
    LineFeed = 10;
    Clear = 12;
    Enter = 13;
    Return = 13;
    ShiftKey = 16;
    ControlKey = 17;
    Menu = 18;
    Pause = 19;
    CapsLock = 20;
    Capital = 20;
    HangulMode = 21;
    HanguelMode = 21;
    KanaMode = 21;
    JunjaMode = 23;
    FinalMode = 24;
    KanjiMode = 25;
    HanjaMode = 25;
    Escape = 27;
    IMEConvert = 28;
    IMENonconvert = 29;
    IMEAccept = 30;
    IMEAceept = 30;
    IMEModeChange = 31;
    Space = 32;
    Prior = 33;
    PageUp = 33;
    PageDown = 34;
    Next = 34;
    End_ = 35;
    Home = 36;
    Left = 37;
    Up = 38;
    Right = 39;
    Down = 40;
    Select = 41;
    Print = 42;
    Execute = 43;
    Snapshot = 44;
    PrintScreen = 44;
    Insert = 45;
    Delete = 46;
    Help = 47;
    D0 = 48;
    D1 = 49;
    D2 = 50;
    D3 = 51;
    D4 = 52;
    D5 = 53;
    D6 = 54;
    D7 = 55;
    D8 = 56;
    D9 = 57;
    A = 65;
    B = 66;
    C = 67;
    D = 68;
    E = 69;
    F = 70;
    G = 71;
    H = 72;
    I = 73;
    J = 74;
    K = 75;
    L = 76;
    M = 77;
    N = 78;
    O = 79;
    P = 80;
    Q = 81;
    R = 82;
    S = 83;
    T = 84;
    U = 85;
    V = 86;
    W = 87;
    X = 88;
    Y = 89;
    Z = 90;
    LWin = 91;
    RWin = 92;
    Apps = 93;
    Sleep = 95;
    NumPad0 = 96;
    NumPad1 = 97;
    NumPad2 = 98;
    NumPad3 = 99;
    NumPad4 = 100;
    NumPad5 = 101;
    NumPad6 = 102;
    NumPad7 = 103;
    NumPad8 = 104;
    NumPad9 = 105;
    Multiply = 106;
    Add = 107;
    Separator = 108;
    Subtract = 109;
    Decimal = 110;
    Divide = 111;
    F1 = 112;
    F2 = 113;
    F3 = 114;
    F4 = 115;
    F5 = 116;
    F6 = 117;
    F7 = 118;
    F8 = 119;
    F9 = 120;
    F10 = 121;
    F11 = 122;
    F12 = 123;
    F13 = 124;
    F14 = 125;
    F15 = 126;
    F16 = 127;
    F17 = 128;
    F18 = 129;
    F19 = 130;
    F20 = 131;
    F21 = 132;
    F22 = 133;
    F23 = 134;
    F24 = 135;
    NumLock = 144;
    Scroll = 145;
    LShiftKey = 160;
    RShiftKey = 161;
    LControlKey = 162;
    RControlKey = 163;
    LMenu = 164;
    RMenu = 165;
    BrowserBack = 166;
    BrowserForward = 167;
    BrowserRefresh = 168;
    BrowserStop = 169;
    BrowserSearch = 170;
    BrowserFavorites = 171;
    BrowserHome = 172;
    VolumeMute = 173;
    VolumeDown = 174;
    VolumeUp = 175;
    MediaNextTrack = 176;
    MediaPreviousTrack = 177;
    MediaStop = 178;
    MediaPlayPause = 179;
    LaunchMail = 180;
    SelectMedia = 181;
    LaunchApplication1 = 182;
    LaunchApplication2 = 183;
    OemSemicolon = 186;
    Oem1 = 186;
    Oemplus = 187;
    Oemcomma = 188;
    OemMinus = 189;
    OemPeriod = 190;
    Oem2 = 191;
    OemQuestion = 191;
    Oem3 = 192;
    Oemtilde = 192;
    Oem4 = 219;
    OemOpenBrackets = 219;
    OemPipe = 220;
    Oem5 = 220;
    OemCloseBrackets = 221;
    Oem6 = 221;
    OemQuotes = 222;
    Oem7 = 222;
    Oem8 = 223;
    Oem102 = 226;
    OemBackslash = 226;
    ProcessKey = 229;
    Packet = 231;
    Attn = 246;
    Crsel = 247;
    Exsel = 248;
    EraseEof = 249;
    Play = 250;
    Zoom = 251;
    NoName = 252;
    Pa1 = 253;
    OemClear = 254;
    KeyCode = 65535;
    Shift = 65536;
    Control = 131072;
    Alt = 262144;
    Modifiers = -65536;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.LeftRightAlignment')]
  DNLeftRightAlignment = type Integer;
  DNLeftRightAlignmentHelper = record helper for DNLeftRightAlignment
  public const
    Left = 0;
    Right = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.LinkBehavior')]
  DNLinkBehavior = type Integer;
  DNLinkBehaviorHelper = record helper for DNLinkBehavior
  public const
    SystemDefault = 0;
    AlwaysUnderline = 1;
    HoverUnderline = 2;
    NeverUnderline = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.LinkState')]
  DNLinkState = type Integer;
  DNLinkStateHelper = record helper for DNLinkState
  public const
    Normal = 0;
    Hover = 1;
    Active = 2;
    Visited = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ListViewAlignment')]
  DNListViewAlignment = type Integer;
  DNListViewAlignmentHelper = record helper for DNListViewAlignment
  public const
    Default_ = 0;
    Left = 1;
    Top = 2;
    SnapToGrid = 5;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ListViewHitTestLocations')]
  DNListViewHitTestLocations = type Integer;
  DNListViewHitTestLocationsHelper = record helper for DNListViewHitTestLocations
  public const
    None = 1;
    Image = 2;
    Label_ = 4;
    BelowClientArea = 16;
    RightOfClientArea = 32;
    LeftOfClientArea = 64;
    AboveClientArea = 256;
    StateImage = 512;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ListViewItemStates')]
  DNListViewItemStates = type Integer;
  DNListViewItemStatesHelper = record helper for DNListViewItemStates
  public const
    Selected = 1;
    Grayed = 2;
    Checked = 8;
    Focused = 16;
    Default_ = 32;
    Hot = 64;
    Marked = 128;
    Indeterminate = 256;
    ShowKeyboardCues = 512;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MaskFormat')]
  DNMaskFormat = type Integer;
  DNMaskFormatHelper = record helper for DNMaskFormat
  public const
    ExcludePromptAndLiterals = 0;
    IncludePrompt = 1;
    IncludeLiterals = 2;
    IncludePromptAndLiterals = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MdiLayout')]
  DNMdiLayout = type Integer;
  DNMdiLayoutHelper = record helper for DNMdiLayout
  public const
    Cascade = 0;
    TileHorizontal = 1;
    TileVertical = 2;
    ArrangeIcons = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MenuGlyph')]
  DNMenuGlyph = type Integer;
  DNMenuGlyphHelper = record helper for DNMenuGlyph
  public const
    Arrow = 0;
    Min = 0;
    Checkmark = 1;
    Bullet = 2;
    Max = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MenuMerge')]
  DNMenuMerge = type Integer;
  DNMenuMergeHelper = record helper for DNMenuMerge
  public const
    Add = 0;
    Replace = 1;
    MergeItems = 2;
    Remove = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MergeAction')]
  DNMergeAction = type Integer;
  DNMergeActionHelper = record helper for DNMergeAction
  public const
    Append = 0;
    Insert = 1;
    Replace = 2;
    Remove = 3;
    MatchOnly = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MessageBoxButtons')]
  DNMessageBoxButtons = type Integer;
  DNMessageBoxButtonsHelper = record helper for DNMessageBoxButtons
  public const
    OK = 0;
    OKCancel = 1;
    AbortRetryIgnore = 2;
    YesNoCancel = 3;
    YesNo = 4;
    RetryCancel = 5;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MessageBoxDefaultButton')]
  DNMessageBoxDefaultButton = type Integer;
  DNMessageBoxDefaultButtonHelper = record helper for DNMessageBoxDefaultButton
  public const
    Button1 = 0;
    Button2 = 256;
    Button3 = 512;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MessageBoxIcon')]
  DNMessageBoxIcon = type Integer;
  DNMessageBoxIconHelper = record helper for DNMessageBoxIcon
  public const
    None = 0;
    Hand = 16;
    Error = 16;
    Stop = 16;
    Question = 32;
    Exclamation = 48;
    Warning = 48;
    Asterisk = 64;
    Information = 64;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MessageBoxOptions')]
  DNMessageBoxOptions = type Integer;
  DNMessageBoxOptionsHelper = record helper for DNMessageBoxOptions
  public const
    DefaultDesktopOnly = 131072;
    RightAlign = 524288;
    RtlReading = 1048576;
    ServiceNotification = 2097152;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MonthCalendar+HitArea')]
  DNMonthCalendar_HitArea = type Integer;
  DNMonthCalendar_HitAreaHelper = record helper for DNMonthCalendar_HitArea
  public const
    Nowhere = 0;
    TitleBackground = 1;
    TitleMonth = 2;
    TitleYear = 3;
    NextMonthButton = 4;
    PrevMonthButton = 5;
    CalendarBackground = 6;
    Date = 7;
    NextMonthDate = 8;
    PrevMonthDate = 9;
    DayOfWeek = 10;
    WeekNumbers = 11;
    TodayLink = 12;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.MouseButtons')]
  DNMouseButtons = type Integer;
  DNMouseButtonsHelper = record helper for DNMouseButtons
  public const
    None = 0;
    Left = 1048576;
    Right = 2097152;
    Middle = 4194304;
    XButton1 = 8388608;
    XButton2 = 16777216;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Orientation')]
  DNOrientation = type Integer;
  DNOrientationHelper = record helper for DNOrientation
  public const
    Horizontal = 0;
    Vertical = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.PictureBoxSizeMode')]
  DNPictureBoxSizeMode = type Integer;
  DNPictureBoxSizeModeHelper = record helper for DNPictureBoxSizeMode
  public const
    Normal = 0;
    StretchImage = 1;
    AutoSize = 2;
    CenterImage = 3;
    Zoom = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.PowerLineStatus')]
  DNPowerLineStatus = type Integer;
  DNPowerLineStatusHelper = record helper for DNPowerLineStatus
  public const
    Offline = 0;
    Online = 1;
    Unknown = 255;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.PowerState')]
  DNPowerState = type Integer;
  DNPowerStateHelper = record helper for DNPowerState
  public const
    Suspend = 0;
    Hibernate = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.PreProcessControlState')]
  DNPreProcessControlState = type Integer;
  DNPreProcessControlStateHelper = record helper for DNPreProcessControlState
  public const
    MessageProcessed = 0;
    MessageNeeded = 1;
    MessageNotNeeded = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ProgressBarStyle')]
  DNProgressBarStyle = type Integer;
  DNProgressBarStyleHelper = record helper for DNProgressBarStyle
  public const
    Blocks = 0;
    Continuous = 1;
    Marquee = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.PropertySort')]
  DNPropertySort = type Integer;
  DNPropertySortHelper = record helper for DNPropertySort
  public const
    NoSort = 0;
    Alphabetical = 1;
    Categorized = 2;
    CategorizedAlphabetical = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxFinds')]
  DNRichTextBoxFinds = type Integer;
  DNRichTextBoxFindsHelper = record helper for DNRichTextBoxFinds
  public const
    None = 0;
    WholeWord = 2;
    MatchCase = 4;
    NoHighlight = 8;
    Reverse = 16;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxLanguageOptions')]
  DNRichTextBoxLanguageOptions = type Integer;
  DNRichTextBoxLanguageOptionsHelper = record helper for DNRichTextBoxLanguageOptions
  public const
    AutoKeyboard = 1;
    AutoFont = 2;
    ImeCancelComplete = 4;
    ImeAlwaysSendNotify = 8;
    AutoFontSizeAdjust = 16;
    UIFonts = 32;
    DualFont = 128;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxScrollBars')]
  DNRichTextBoxScrollBars = type Integer;
  DNRichTextBoxScrollBarsHelper = record helper for DNRichTextBoxScrollBars
  public const
    None = 0;
    Horizontal = 1;
    Vertical = 2;
    Both = 3;
    ForcedHorizontal = 17;
    ForcedVertical = 18;
    ForcedBoth = 19;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxSelectionAttribute')]
  DNRichTextBoxSelectionAttribute = type Integer;
  DNRichTextBoxSelectionAttributeHelper = record helper for DNRichTextBoxSelectionAttribute
  public const
    None = 0;
    All = 1;
    Mixed = -1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxSelectionTypes')]
  DNRichTextBoxSelectionTypes = type Integer;
  DNRichTextBoxSelectionTypesHelper = record helper for DNRichTextBoxSelectionTypes
  public const
    Empty = 0;
    Text = 1;
    Object_ = 2;
    MultiChar = 4;
    MultiObject = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxStreamType')]
  DNRichTextBoxStreamType = type Integer;
  DNRichTextBoxStreamTypeHelper = record helper for DNRichTextBoxStreamType
  public const
    RichText = 0;
    PlainText = 1;
    RichNoOleObjs = 2;
    TextTextOleObjs = 3;
    UnicodePlainText = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RichTextBoxWordPunctuations')]
  DNRichTextBoxWordPunctuations = type Integer;
  DNRichTextBoxWordPunctuationsHelper = record helper for DNRichTextBoxWordPunctuations
  public const
    Level1 = 128;
    Level2 = 256;
    Custom = 512;
    All = 896;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.RightToLeft')]
  DNRightToLeft = type Integer;
  DNRightToLeftHelper = record helper for DNRightToLeft
  public const
    No = 0;
    Yes = 1;
    Inherit = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ScreenOrientation')]
  DNScreenOrientation = type Integer;
  DNScreenOrientationHelper = record helper for DNScreenOrientation
  public const
    Angle0 = 0;
    Angle90 = 1;
    Angle180 = 2;
    Angle270 = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ScrollBars')]
  DNScrollBars = type Integer;
  DNScrollBarsHelper = record helper for DNScrollBars
  public const
    None = 0;
    Horizontal = 1;
    Vertical = 2;
    Both = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ScrollButton')]
  DNScrollButton = type Integer;
  DNScrollButtonHelper = record helper for DNScrollButton
  public const
    Min = 0;
    Up = 0;
    Down = 1;
    Left = 2;
    Right = 3;
    Max = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ScrollEventType')]
  DNScrollEventType = type Integer;
  DNScrollEventTypeHelper = record helper for DNScrollEventType
  public const
    SmallDecrement = 0;
    SmallIncrement = 1;
    LargeDecrement = 2;
    LargeIncrement = 3;
    ThumbPosition = 4;
    ThumbTrack = 5;
    First = 6;
    Last = 7;
    EndScroll = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ScrollOrientation')]
  DNScrollOrientation = type Integer;
  DNScrollOrientationHelper = record helper for DNScrollOrientation
  public const
    HorizontalScroll = 0;
    VerticalScroll = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SearchDirectionHint')]
  DNSearchDirectionHint = type Integer;
  DNSearchDirectionHintHelper = record helper for DNSearchDirectionHint
  public const
    Left = 37;
    Up = 38;
    Right = 39;
    Down = 40;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SecurityIDType')]
  DNSecurityIDType = type Integer;
  DNSecurityIDTypeHelper = record helper for DNSecurityIDType
  public const
    User = 1;
    Group = 2;
    Domain = 3;
    Alias = 4;
    WellKnownGroup = 5;
    DeletedAccount = 6;
    Invalid = 7;
    Unknown = 8;
    Computer = 9;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SelectionMode')]
  DNSelectionMode = type Integer;
  DNSelectionModeHelper = record helper for DNSelectionMode
  public const
    None = 0;
    One = 1;
    MultiSimple = 2;
    MultiExtended = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.Shortcut')]
  DNShortcut = type Integer;
  DNShortcutHelper = record helper for DNShortcut
  public const
    None = 0;
    Ins = 45;
    Del = 46;
    F1 = 112;
    F2 = 113;
    F3 = 114;
    F4 = 115;
    F5 = 116;
    F6 = 117;
    F7 = 118;
    F8 = 119;
    F9 = 120;
    F10 = 121;
    F11 = 122;
    F12 = 123;
    ShiftIns = 65581;
    ShiftDel = 65582;
    ShiftF1 = 65648;
    ShiftF2 = 65649;
    ShiftF3 = 65650;
    ShiftF4 = 65651;
    ShiftF5 = 65652;
    ShiftF6 = 65653;
    ShiftF7 = 65654;
    ShiftF8 = 65655;
    ShiftF9 = 65656;
    ShiftF10 = 65657;
    ShiftF11 = 65658;
    ShiftF12 = 65659;
    CtrlIns = 131117;
    CtrlDel = 131118;
    Ctrl0 = 131120;
    Ctrl1 = 131121;
    Ctrl2 = 131122;
    Ctrl3 = 131123;
    Ctrl4 = 131124;
    Ctrl5 = 131125;
    Ctrl6 = 131126;
    Ctrl7 = 131127;
    Ctrl8 = 131128;
    Ctrl9 = 131129;
    CtrlA = 131137;
    CtrlB = 131138;
    CtrlC = 131139;
    CtrlD = 131140;
    CtrlE = 131141;
    CtrlF = 131142;
    CtrlG = 131143;
    CtrlH = 131144;
    CtrlI = 131145;
    CtrlJ = 131146;
    CtrlK = 131147;
    CtrlL = 131148;
    CtrlM = 131149;
    CtrlN = 131150;
    CtrlO = 131151;
    CtrlP = 131152;
    CtrlQ = 131153;
    CtrlR = 131154;
    CtrlS = 131155;
    CtrlT = 131156;
    CtrlU = 131157;
    CtrlV = 131158;
    CtrlW = 131159;
    CtrlX = 131160;
    CtrlY = 131161;
    CtrlZ = 131162;
    CtrlF1 = 131184;
    CtrlF2 = 131185;
    CtrlF3 = 131186;
    CtrlF4 = 131187;
    CtrlF5 = 131188;
    CtrlF6 = 131189;
    CtrlF7 = 131190;
    CtrlF8 = 131191;
    CtrlF9 = 131192;
    CtrlF10 = 131193;
    CtrlF11 = 131194;
    CtrlF12 = 131195;
    CtrlShift0 = 196656;
    CtrlShift1 = 196657;
    CtrlShift2 = 196658;
    CtrlShift3 = 196659;
    CtrlShift4 = 196660;
    CtrlShift5 = 196661;
    CtrlShift6 = 196662;
    CtrlShift7 = 196663;
    CtrlShift8 = 196664;
    CtrlShift9 = 196665;
    CtrlShiftA = 196673;
    CtrlShiftB = 196674;
    CtrlShiftC = 196675;
    CtrlShiftD = 196676;
    CtrlShiftE = 196677;
    CtrlShiftF = 196678;
    CtrlShiftG = 196679;
    CtrlShiftH = 196680;
    CtrlShiftI = 196681;
    CtrlShiftJ = 196682;
    CtrlShiftK = 196683;
    CtrlShiftL = 196684;
    CtrlShiftM = 196685;
    CtrlShiftN = 196686;
    CtrlShiftO = 196687;
    CtrlShiftP = 196688;
    CtrlShiftQ = 196689;
    CtrlShiftR = 196690;
    CtrlShiftS = 196691;
    CtrlShiftT = 196692;
    CtrlShiftU = 196693;
    CtrlShiftV = 196694;
    CtrlShiftW = 196695;
    CtrlShiftX = 196696;
    CtrlShiftY = 196697;
    CtrlShiftZ = 196698;
    CtrlShiftF1 = 196720;
    CtrlShiftF2 = 196721;
    CtrlShiftF3 = 196722;
    CtrlShiftF4 = 196723;
    CtrlShiftF5 = 196724;
    CtrlShiftF6 = 196725;
    CtrlShiftF7 = 196726;
    CtrlShiftF8 = 196727;
    CtrlShiftF9 = 196728;
    CtrlShiftF10 = 196729;
    CtrlShiftF11 = 196730;
    CtrlShiftF12 = 196731;
    AltBksp = 262152;
    AltLeftArrow = 262181;
    AltUpArrow = 262182;
    AltRightArrow = 262183;
    AltDownArrow = 262184;
    Alt0 = 262192;
    Alt1 = 262193;
    Alt2 = 262194;
    Alt3 = 262195;
    Alt4 = 262196;
    Alt5 = 262197;
    Alt6 = 262198;
    Alt7 = 262199;
    Alt8 = 262200;
    Alt9 = 262201;
    AltF1 = 262256;
    AltF2 = 262257;
    AltF3 = 262258;
    AltF4 = 262259;
    AltF5 = 262260;
    AltF6 = 262261;
    AltF7 = 262262;
    AltF8 = 262263;
    AltF9 = 262264;
    AltF10 = 262265;
    AltF11 = 262266;
    AltF12 = 262267;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SizeGripStyle')]
  DNSizeGripStyle = type Integer;
  DNSizeGripStyleHelper = record helper for DNSizeGripStyle
  public const
    Auto = 0;
    Show = 1;
    Hide = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SizeType')]
  DNSizeType = type Integer;
  DNSizeTypeHelper = record helper for DNSizeType
  public const
    AutoSize = 0;
    Absolute_ = 1;
    Percent = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SortOrder')]
  DNSortOrder = type Integer;
  DNSortOrderHelper = record helper for DNSortOrder
  public const
    None = 0;
    Ascending = 1;
    Descending = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.StatusBarPanelAutoSize')]
  DNStatusBarPanelAutoSize = type Integer;
  DNStatusBarPanelAutoSizeHelper = record helper for DNStatusBarPanelAutoSize
  public const
    None = 1;
    Spring = 2;
    Contents = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.StatusBarPanelBorderStyle')]
  DNStatusBarPanelBorderStyle = type Integer;
  DNStatusBarPanelBorderStyleHelper = record helper for DNStatusBarPanelBorderStyle
  public const
    None = 1;
    Raised = 2;
    Sunken = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.StatusBarPanelStyle')]
  DNStatusBarPanelStyle = type Integer;
  DNStatusBarPanelStyleHelper = record helper for DNStatusBarPanelStyle
  public const
    Text = 1;
    OwnerDraw = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.StructFormat')]
  DNStructFormat = type Integer;
  DNStructFormatHelper = record helper for DNStructFormat
  public const
    Ansi = 1;
    Unicode = 2;
    Auto = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.SystemParameter')]
  DNSystemParameter = type Integer;
  DNSystemParameterHelper = record helper for DNSystemParameter
  public const
    DropShadow = 0;
    FlatMenu = 1;
    FontSmoothingContrastMetric = 2;
    FontSmoothingTypeMetric = 3;
    MenuFadeEnabled = 4;
    SelectionFade = 5;
    ToolTipAnimationMetric = 6;
    UIEffects = 7;
    CaretWidthMetric = 8;
    VerticalFocusThicknessMetric = 9;
    HorizontalFocusThicknessMetric = 10;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TabAlignment')]
  DNTabAlignment = type Integer;
  DNTabAlignmentHelper = record helper for DNTabAlignment
  public const
    Top = 0;
    Bottom = 1;
    Left = 2;
    Right = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TabAppearance')]
  DNTabAppearance = type Integer;
  DNTabAppearanceHelper = record helper for DNTabAppearance
  public const
    Normal = 0;
    Buttons = 1;
    FlatButtons = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TabControlAction')]
  DNTabControlAction = type Integer;
  DNTabControlActionHelper = record helper for DNTabControlAction
  public const
    Selecting = 0;
    Selected = 1;
    Deselecting = 2;
    Deselected = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TabDrawMode')]
  DNTabDrawMode = type Integer;
  DNTabDrawModeHelper = record helper for DNTabDrawMode
  public const
    Normal = 0;
    OwnerDrawFixed = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TableLayoutPanelCellBorderStyle')]
  DNTableLayoutPanelCellBorderStyle = type Integer;
  DNTableLayoutPanelCellBorderStyleHelper = record helper for DNTableLayoutPanelCellBorderStyle
  public const
    None = 0;
    Single = 1;
    Inset = 2;
    InsetDouble = 3;
    Outset = 4;
    OutsetDouble = 5;
    OutsetPartial = 6;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TableLayoutPanelGrowStyle')]
  DNTableLayoutPanelGrowStyle = type Integer;
  DNTableLayoutPanelGrowStyleHelper = record helper for DNTableLayoutPanelGrowStyle
  public const
    FixedSize = 0;
    AddRows = 1;
    AddColumns = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TabSizeMode')]
  DNTabSizeMode = type Integer;
  DNTabSizeModeHelper = record helper for DNTabSizeMode
  public const
    Normal = 0;
    FillToRight = 1;
    Fixed = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TextDataFormat')]
  DNTextDataFormat = type Integer;
  DNTextDataFormatHelper = record helper for DNTextDataFormat
  public const
    Text = 0;
    UnicodeText = 1;
    Rtf = 2;
    Html = 3;
    CommaSeparatedValue = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TextFormatFlags')]
  DNTextFormatFlags = type Integer;
  DNTextFormatFlagsHelper = record helper for DNTextFormatFlags
  public const
    GlyphOverhangPadding = 0;
    Left = 0;
    Default_ = 0;
    Top = 0;
    HorizontalCenter = 1;
    Right = 2;
    VerticalCenter = 4;
    Bottom = 8;
    WordBreak = 16;
    SingleLine = 32;
    ExpandTabs = 64;
    NoClipping = 256;
    ExternalLeading = 512;
    NoPrefix = 2048;
    Internal = 4096;
    TextBoxControl = 8192;
    PathEllipsis = 16384;
    EndEllipsis = 32768;
    ModifyString = 65536;
    RightToLeft = 131072;
    WordEllipsis = 262144;
    NoFullWidthCharacterBreak = 524288;
    HidePrefix = 1048576;
    PrefixOnly = 2097152;
    PreserveGraphicsClipping = 16777216;
    PreserveGraphicsTranslateTransform = 33554432;
    NoPadding = 268435456;
    LeftAndRightPadding = 536870912;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TextImageRelation')]
  DNTextImageRelation = type Integer;
  DNTextImageRelationHelper = record helper for DNTextImageRelation
  public const
    Overlay = 0;
    ImageAboveText = 1;
    TextAboveImage = 2;
    ImageBeforeText = 4;
    TextBeforeImage = 8;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TickStyle')]
  DNTickStyle = type Integer;
  DNTickStyleHelper = record helper for DNTickStyle
  public const
    None = 0;
    TopLeft = 1;
    BottomRight = 2;
    Both = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolBarAppearance')]
  DNToolBarAppearance = type Integer;
  DNToolBarAppearanceHelper = record helper for DNToolBarAppearance
  public const
    Normal = 0;
    Flat = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolBarButtonStyle')]
  DNToolBarButtonStyle = type Integer;
  DNToolBarButtonStyleHelper = record helper for DNToolBarButtonStyle
  public const
    PushButton = 1;
    ToggleButton = 2;
    Separator = 3;
    DropDownButton = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolBarTextAlign')]
  DNToolBarTextAlign = type Integer;
  DNToolBarTextAlignHelper = record helper for DNToolBarTextAlign
  public const
    Underneath = 0;
    Right = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripDropDownCloseReason')]
  DNToolStripDropDownCloseReason = type Integer;
  DNToolStripDropDownCloseReasonHelper = record helper for DNToolStripDropDownCloseReason
  public const
    AppFocusChange = 0;
    AppClicked = 1;
    ItemClicked = 2;
    Keyboard = 3;
    CloseCalled = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripDropDownDirection')]
  DNToolStripDropDownDirection = type Integer;
  DNToolStripDropDownDirectionHelper = record helper for DNToolStripDropDownDirection
  public const
    AboveLeft = 0;
    AboveRight = 1;
    BelowLeft = 2;
    BelowRight = 3;
    Left = 4;
    Right = 5;
    Default_ = 7;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripGripDisplayStyle')]
  DNToolStripGripDisplayStyle = type Integer;
  DNToolStripGripDisplayStyleHelper = record helper for DNToolStripGripDisplayStyle
  public const
    Horizontal = 0;
    Vertical = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripGripStyle')]
  DNToolStripGripStyle = type Integer;
  DNToolStripGripStyleHelper = record helper for DNToolStripGripStyle
  public const
    Hidden = 0;
    Visible = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripItemAlignment')]
  DNToolStripItemAlignment = type Integer;
  DNToolStripItemAlignmentHelper = record helper for DNToolStripItemAlignment
  public const
    Left = 0;
    Right = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripItemDisplayStyle')]
  DNToolStripItemDisplayStyle = type Integer;
  DNToolStripItemDisplayStyleHelper = record helper for DNToolStripItemDisplayStyle
  public const
    None = 0;
    Text = 1;
    Image = 2;
    ImageAndText = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripItemImageScaling')]
  DNToolStripItemImageScaling = type Integer;
  DNToolStripItemImageScalingHelper = record helper for DNToolStripItemImageScaling
  public const
    None = 0;
    SizeToFit = 1;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripItemOverflow')]
  DNToolStripItemOverflow = type Integer;
  DNToolStripItemOverflowHelper = record helper for DNToolStripItemOverflow
  public const
    Never = 0;
    Always = 1;
    AsNeeded = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripItemPlacement')]
  DNToolStripItemPlacement = type Integer;
  DNToolStripItemPlacementHelper = record helper for DNToolStripItemPlacement
  public const
    Main = 0;
    Overflow = 1;
    None = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripLayoutStyle')]
  DNToolStripLayoutStyle = type Integer;
  DNToolStripLayoutStyleHelper = record helper for DNToolStripLayoutStyle
  public const
    StackWithOverflow = 0;
    HorizontalStackWithOverflow = 1;
    VerticalStackWithOverflow = 2;
    Flow = 3;
    Table = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripManagerRenderMode')]
  DNToolStripManagerRenderMode = type Integer;
  DNToolStripManagerRenderModeHelper = record helper for DNToolStripManagerRenderMode
  public const
    Custom = 0;
    System = 1;
    Professional = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripRenderMode')]
  DNToolStripRenderMode = type Integer;
  DNToolStripRenderModeHelper = record helper for DNToolStripRenderMode
  public const
    Custom = 0;
    System = 1;
    Professional = 2;
    ManagerRenderMode = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripStatusLabelBorderSides')]
  DNToolStripStatusLabelBorderSides = type Integer;
  DNToolStripStatusLabelBorderSidesHelper = record helper for DNToolStripStatusLabelBorderSides
  public const
    None = 0;
    Left = 1;
    Top = 2;
    Right = 4;
    Bottom = 8;
    All = 15;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolStripTextDirection')]
  DNToolStripTextDirection = type Integer;
  DNToolStripTextDirectionHelper = record helper for DNToolStripTextDirection
  public const
    Inherit = 0;
    Horizontal = 1;
    Vertical90 = 2;
    Vertical270 = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ToolTipIcon')]
  DNToolTipIcon = type Integer;
  DNToolTipIconHelper = record helper for DNToolTipIcon
  public const
    None = 0;
    Info = 1;
    Warning = 2;
    Error = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TreeNodeStates')]
  DNTreeNodeStates = type Integer;
  DNTreeNodeStatesHelper = record helper for DNTreeNodeStates
  public const
    Selected = 1;
    Grayed = 2;
    Checked = 8;
    Focused = 16;
    Default_ = 32;
    Hot = 64;
    Marked = 128;
    Indeterminate = 256;
    ShowKeyboardCues = 512;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TreeViewAction')]
  DNTreeViewAction = type Integer;
  DNTreeViewActionHelper = record helper for DNTreeViewAction
  public const
    Unknown = 0;
    ByKeyboard = 1;
    ByMouse = 2;
    Collapse = 3;
    Expand = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TreeViewDrawMode')]
  DNTreeViewDrawMode = type Integer;
  DNTreeViewDrawModeHelper = record helper for DNTreeViewDrawMode
  public const
    Normal = 0;
    OwnerDrawText = 1;
    OwnerDrawAll = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.TreeViewHitTestLocations')]
  DNTreeViewHitTestLocations = type Integer;
  DNTreeViewHitTestLocationsHelper = record helper for DNTreeViewHitTestLocations
  public const
    None = 1;
    Image = 2;
    Label_ = 4;
    Indent = 8;
    PlusMinus = 16;
    RightOfLabel = 32;
    StateImage = 64;
    AboveClientArea = 256;
    BelowClientArea = 512;
    RightOfClientArea = 1024;
    LeftOfClientArea = 2048;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.UICues')]
  DNUICues = type Integer;
  DNUICuesHelper = record helper for DNUICues
  public const
    None = 0;
    ShowFocus = 1;
    ShowKeyboard = 2;
    Shown = 3;
    ChangeFocus = 4;
    ChangeKeyboard = 8;
    Changed = 12;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.UnhandledExceptionMode')]
  DNUnhandledExceptionMode = type Integer;
  DNUnhandledExceptionModeHelper = record helper for DNUnhandledExceptionMode
  public const
    Automatic = 0;
    ThrowException = 1;
    CatchException = 2;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ValidationConstraints')]
  DNValidationConstraints = type Integer;
  DNValidationConstraintsHelper = record helper for DNValidationConstraints
  public const
    None = 0;
    Selectable = 1;
    Enabled = 2;
    Visible = 4;
    TabStop = 8;
    ImmediateChildren = 16;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.View')]
  DNView = type Integer;
  DNViewHelper = record helper for DNView
  public const
    LargeIcon = 0;
    Details = 1;
    SmallIcon = 2;
    List = 3;
    Tile = 4;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.BackgroundType')]
  DNBackgroundType = type Integer;
  DNBackgroundTypeHelper = record helper for DNBackgroundType
  public const
    ImageFile = 0;
    BorderFill = 1;
    None = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.BooleanProperty')]
  DNBooleanProperty = type Integer;
  DNBooleanPropertyHelper = record helper for DNBooleanProperty
  public const
    Transparent = 2201;
    AutoSize = 2202;
    BorderOnly = 2203;
    Composited = 2204;
    BackgroundFill = 2205;
    GlyphTransparent = 2206;
    GlyphOnly = 2207;
    AlwaysShowSizingBar = 2208;
    MirrorImage = 2209;
    UniformSizing = 2210;
    IntegralSizing = 2211;
    SourceGrow = 2212;
    SourceShrink = 2213;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.BorderType')]
  DNBorderType = type Integer;
  DNBorderTypeHelper = record helper for DNBorderType
  public const
    Rectangle = 0;
    RoundedRectangle = 1;
    Ellipse = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.CheckBoxState')]
  DNCheckBoxState = type Integer;
  DNCheckBoxStateHelper = record helper for DNCheckBoxState
  public const
    UncheckedNormal = 1;
    UncheckedHot = 2;
    UncheckedPressed = 3;
    UncheckedDisabled = 4;
    CheckedNormal = 5;
    CheckedHot = 6;
    CheckedPressed = 7;
    CheckedDisabled = 8;
    MixedNormal = 9;
    MixedHot = 10;
    MixedPressed = 11;
    MixedDisabled = 12;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ColorProperty')]
  DNColorProperty = type Integer;
  DNColorPropertyHelper = record helper for DNColorProperty
  public const
    BorderColor = 3801;
    FillColor = 3802;
    TextColor = 3803;
    EdgeLightColor = 3804;
    EdgeHighlightColor = 3805;
    EdgeShadowColor = 3806;
    EdgeDarkShadowColor = 3807;
    EdgeFillColor = 3808;
    TransparentColor = 3809;
    GradientColor1 = 3810;
    GradientColor2 = 3811;
    GradientColor3 = 3812;
    GradientColor4 = 3813;
    GradientColor5 = 3814;
    ShadowColor = 3815;
    GlowColor = 3816;
    TextBorderColor = 3817;
    TextShadowColor = 3818;
    GlyphTextColor = 3819;
    GlyphTransparentColor = 3820;
    FillColorHint = 3821;
    BorderColorHint = 3822;
    AccentColorHint = 3823;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ComboBoxState')]
  DNComboBoxState = type Integer;
  DNComboBoxStateHelper = record helper for DNComboBoxState
  public const
    Normal = 1;
    Hot = 2;
    Pressed = 3;
    Disabled = 4;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ContentAlignment')]
  DNContentAlignment = type Integer;
  DNContentAlignmentHelper = record helper for DNContentAlignment
  public const
    Left = 0;
    Center = 1;
    Right = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.EdgeEffects')]
  DNEdgeEffects = type Integer;
  DNEdgeEffectsHelper = record helper for DNEdgeEffects
  public const
    None = 0;
    FillInterior = 2048;
    Flat = 4096;
    Soft = 16384;
    Mono = 32768;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.Edges')]
  DNEdges = type Integer;
  DNEdgesHelper = record helper for DNEdges
  public const
    Left = 1;
    Top = 2;
    Right = 4;
    Bottom = 8;
    Diagonal = 16;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.EdgeStyle')]
  DNEdgeStyle = type Integer;
  DNEdgeStyleHelper = record helper for DNEdgeStyle
  public const
    Raised = 5;
    Etched = 6;
    Bump = 9;
    Sunken = 10;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.EnumProperty')]
  DNEnumProperty = type Integer;
  DNEnumPropertyHelper = record helper for DNEnumProperty
  public const
    BackgroundType = 4001;
    BorderType = 4002;
    FillType = 4003;
    SizingType = 4004;
    HorizontalAlignment = 4005;
    ContentAlignment = 4006;
    VerticalAlignment = 4007;
    OffsetType = 4008;
    IconEffect = 4009;
    TextShadowType = 4010;
    ImageLayout = 4011;
    GlyphType = 4012;
    ImageSelectType = 4013;
    GlyphFontSizingType = 4014;
    TrueSizeScalingType = 4015;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.FilenameProperty')]
  DNFilenameProperty = type Integer;
  DNFilenamePropertyHelper = record helper for DNFilenameProperty
  public const
    ImageFile = 3001;
    ImageFile1 = 3002;
    ImageFile2 = 3003;
    ImageFile3 = 3004;
    ImageFile4 = 3005;
    ImageFile5 = 3006;
    StockImageFile = 3007;
    GlyphImageFile = 3008;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.FillType')]
  DNFillType = type Integer;
  DNFillTypeHelper = record helper for DNFillType
  public const
    Solid = 0;
    VerticalGradient = 1;
    HorizontalGradient = 2;
    RadialGradient = 3;
    TileImage = 4;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.FontProperty')]
  DNFontProperty = type Integer;
  DNFontPropertyHelper = record helper for DNFontProperty
  public const
    GlyphFont = 2601;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.GlyphFontSizingType')]
  DNGlyphFontSizingType = type Integer;
  DNGlyphFontSizingTypeHelper = record helper for DNGlyphFontSizingType
  public const
    None = 0;
    Size = 1;
    Dpi = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.GlyphType')]
  DNGlyphType = type Integer;
  DNGlyphTypeHelper = record helper for DNGlyphType
  public const
    None = 0;
    ImageGlyph = 1;
    FontGlyph = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.GroupBoxState')]
  DNGroupBoxState = type Integer;
  DNGroupBoxStateHelper = record helper for DNGroupBoxState
  public const
    Normal = 1;
    Disabled = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.HitTestCode')]
  DNHitTestCode = type Integer;
  DNHitTestCodeHelper = record helper for DNHitTestCode
  public const
    Nowhere = 0;
    Client = 1;
    Left = 10;
    Right = 11;
    Top = 12;
    TopLeft = 13;
    TopRight = 14;
    Bottom = 15;
    BottomLeft = 16;
    BottomRight = 17;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.HitTestOptions')]
  DNHitTestOptions = type Integer;
  DNHitTestOptionsHelper = record helper for DNHitTestOptions
  public const
    BackgroundSegment = 0;
    FixedBorder = 2;
    Caption = 4;
    ResizingBorderLeft = 16;
    ResizingBorderTop = 32;
    ResizingBorderRight = 64;
    ResizingBorderBottom = 128;
    ResizingBorder = 240;
    SizingTemplate = 256;
    SystemSizingMargins = 512;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.HorizontalAlign')]
  DNHorizontalAlign = type Integer;
  DNHorizontalAlignHelper = record helper for DNHorizontalAlign
  public const
    Left = 0;
    Center = 1;
    Right = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.IconEffect')]
  DNIconEffect = type Integer;
  DNIconEffectHelper = record helper for DNIconEffect
  public const
    None = 0;
    Glow = 1;
    Shadow = 2;
    Pulse = 3;
    Alpha = 4;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ImageOrientation')]
  DNImageOrientation = type Integer;
  DNImageOrientationHelper = record helper for DNImageOrientation
  public const
    Vertical = 0;
    Horizontal = 1;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ImageSelectType')]
  DNImageSelectType = type Integer;
  DNImageSelectTypeHelper = record helper for DNImageSelectType
  public const
    None = 0;
    Size = 1;
    Dpi = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.IntegerProperty')]
  DNIntegerProperty = type Integer;
  DNIntegerPropertyHelper = record helper for DNIntegerProperty
  public const
    ImageCount = 2401;
    AlphaLevel = 2402;
    BorderSize = 2403;
    RoundCornerWidth = 2404;
    RoundCornerHeight = 2405;
    GradientRatio1 = 2406;
    GradientRatio2 = 2407;
    GradientRatio3 = 2408;
    GradientRatio4 = 2409;
    GradientRatio5 = 2410;
    ProgressChunkSize = 2411;
    ProgressSpaceSize = 2412;
    Saturation = 2413;
    TextBorderSize = 2414;
    AlphaThreshold = 2415;
    Width = 2416;
    Height = 2417;
    GlyphIndex = 2418;
    TrueSizeStretchMark = 2419;
    MinDpi1 = 2420;
    MinDpi2 = 2421;
    MinDpi3 = 2422;
    MinDpi4 = 2423;
    MinDpi5 = 2424;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.MarginProperty')]
  DNMarginProperty = type Integer;
  DNMarginPropertyHelper = record helper for DNMarginProperty
  public const
    SizingMargins = 3601;
    ContentMargins = 3602;
    CaptionMargins = 3603;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.OffsetType')]
  DNOffsetType = type Integer;
  DNOffsetTypeHelper = record helper for DNOffsetType
  public const
    TopLeft = 0;
    TopRight = 1;
    TopMiddle = 2;
    BottomLeft = 3;
    BottomRight = 4;
    BottomMiddle = 5;
    MiddleLeft = 6;
    MiddleRight = 7;
    LeftOfCaption = 8;
    RightOfCaption = 9;
    LeftOfLastButton = 10;
    RightOfLastButton = 11;
    AboveLastButton = 12;
    BelowLastButton = 13;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.PointProperty')]
  DNPointProperty = type Integer;
  DNPointPropertyHelper = record helper for DNPointProperty
  public const
    Offset = 3401;
    TextShadowOffset = 3402;
    MinSize = 3403;
    MinSize1 = 3404;
    MinSize2 = 3405;
    MinSize3 = 3406;
    MinSize4 = 3407;
    MinSize5 = 3408;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.PushButtonState')]
  DNPushButtonState = type Integer;
  DNPushButtonStateHelper = record helper for DNPushButtonState
  public const
    Normal = 1;
    Hot = 2;
    Pressed = 3;
    Disabled = 4;
    Default_ = 5;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.RadioButtonState')]
  DNRadioButtonState = type Integer;
  DNRadioButtonStateHelper = record helper for DNRadioButtonState
  public const
    UncheckedNormal = 1;
    UncheckedHot = 2;
    UncheckedPressed = 3;
    UncheckedDisabled = 4;
    CheckedNormal = 5;
    CheckedHot = 6;
    CheckedPressed = 7;
    CheckedDisabled = 8;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState')]
  DNScrollBarArrowButtonState = type Integer;
  DNScrollBarArrowButtonStateHelper = record helper for DNScrollBarArrowButtonState
  public const
    UpNormal = 1;
    UpHot = 2;
    UpPressed = 3;
    UpDisabled = 4;
    DownNormal = 5;
    DownHot = 6;
    DownPressed = 7;
    DownDisabled = 8;
    LeftNormal = 9;
    LeftHot = 10;
    LeftPressed = 11;
    LeftDisabled = 12;
    RightNormal = 13;
    RightHot = 14;
    RightPressed = 15;
    RightDisabled = 16;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ScrollBarSizeBoxState')]
  DNScrollBarSizeBoxState = type Integer;
  DNScrollBarSizeBoxStateHelper = record helper for DNScrollBarSizeBoxState
  public const
    RightAlign = 1;
    LeftAlign = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ScrollBarState')]
  DNScrollBarState = type Integer;
  DNScrollBarStateHelper = record helper for DNScrollBarState
  public const
    Normal = 1;
    Hot = 2;
    Pressed = 3;
    Disabled = 4;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.SizingType')]
  DNSizingType = type Integer;
  DNSizingTypeHelper = record helper for DNSizingType
  public const
    FixedSize = 0;
    Stretch = 1;
    Tile = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.StringProperty')]
  DNStringProperty = type Integer;
  DNStringPropertyHelper = record helper for DNStringProperty
  public const
    Text = 3201;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TabItemState')]
  DNTabItemState = type Integer;
  DNTabItemStateHelper = record helper for DNTabItemState
  public const
    Normal = 1;
    Hot = 2;
    Selected = 3;
    Disabled = 4;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TextBoxState')]
  DNTextBoxState = type Integer;
  DNTextBoxStateHelper = record helper for DNTextBoxState
  public const
    Normal = 1;
    Hot = 2;
    Selected = 3;
    Disabled = 4;
    Readonly = 6;
    Assist = 7;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TextMetricsCharacterSet')]
  DNTextMetricsCharacterSet = type Integer;
  DNTextMetricsCharacterSetHelper = record helper for DNTextMetricsCharacterSet
  public const
    Ansi = 0;
    Default_ = 1;
    Symbol = 2;
    Mac = 77;
    ShiftJis = 128;
    Hangul = 129;
    Johab = 130;
    Gb2312 = 134;
    ChineseBig5 = 136;
    Greek = 161;
    Turkish = 162;
    Vietnamese = 163;
    Hebrew = 177;
    Arabic = 178;
    Baltic = 186;
    Russian = 204;
    Thai = 222;
    EastEurope = 238;
    Oem = 255;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues')]
  DNTextMetricsPitchAndFamilyValues = type Integer;
  DNTextMetricsPitchAndFamilyValuesHelper = record helper for DNTextMetricsPitchAndFamilyValues
  public const
    FixedPitch = 1;
    Vector = 2;
    TrueType = 4;
    Device = 8;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TextShadowType')]
  DNTextShadowType = type Integer;
  DNTextShadowTypeHelper = record helper for DNTextShadowType
  public const
    None = 0;
    Single = 1;
    Continuous = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ThemeSizeType')]
  DNThemeSizeType = type Integer;
  DNThemeSizeTypeHelper = record helper for DNThemeSizeType
  public const
    Minimum = 0;
    True = 1;
    Draw = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.ToolBarState')]
  DNToolBarState = type Integer;
  DNToolBarStateHelper = record helper for DNToolBarState
  public const
    Normal = 1;
    Hot = 2;
    Pressed = 3;
    Disabled = 4;
    Checked = 5;
    HotChecked = 6;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TrackBarThumbState')]
  DNTrackBarThumbState = type Integer;
  DNTrackBarThumbStateHelper = record helper for DNTrackBarThumbState
  public const
    Normal = 1;
    Hot = 2;
    Pressed = 3;
    Disabled = 5;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.TrueSizeScalingType')]
  DNTrueSizeScalingType = type Integer;
  DNTrueSizeScalingTypeHelper = record helper for DNTrueSizeScalingType
  public const
    None = 0;
    Size = 1;
    Dpi = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.VerticalAlignment')]
  DNVerticalAlignment = type Integer;
  DNVerticalAlignmentHelper = record helper for DNVerticalAlignment
  public const
    Top = 0;
    Center = 1;
    Bottom = 2;
  end;


  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleState')]
  DNVisualStyleState = type Integer;
  DNVisualStyleStateHelper = record helper for DNVisualStyleState
  public const
    NoneEnabled = 0;
    NonClientAreaEnabled = 1;
    ClientAreaEnabled = 2;
    ClientAndNonClientAreasEnabled = 3;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.WebBrowserEncryptionLevel')]
  DNWebBrowserEncryptionLevel = type Integer;
  DNWebBrowserEncryptionLevelHelper = record helper for DNWebBrowserEncryptionLevel
  public const
    Insecure = 0;
    Mixed = 1;
    Unknown = 2;
    Bit40 = 3;
    Bit56 = 4;
    Fortezza = 5;
    Bit128 = 6;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.WebBrowserReadyState')]
  DNWebBrowserReadyState = type Integer;
  DNWebBrowserReadyStateHelper = record helper for DNWebBrowserReadyState
  public const
    Uninitialized = 0;
    Loading = 1;
    Loaded = 2;
    Interactive = 3;
    Complete = 4;
  end;


  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.WebBrowserRefreshOption')]
  DNWebBrowserRefreshOption = type Integer;
  DNWebBrowserRefreshOptionHelper = record helper for DNWebBrowserRefreshOption
  public const
    Normal = 0;
    IfExpired = 1;
    Continue_ = 2;
    Completely = 3;
  end;




type


{ declares }

  DNIBindableComponent = interface; // type: System.Windows.Forms.IBindableComponent, namespace: System.Windows.Forms
  DNIAutomationLiveRegion = interface; // type: System.Windows.Forms.Automation.IAutomationLiveRegion, namespace: System.Windows.Forms.Automation
  DNICom2PropertyPageDisplayService = interface; // type: System.Windows.Forms.ComponentModel.Com2Interop.ICom2PropertyPageDisplayService, namespace: System.Windows.Forms.ComponentModel.Com2Interop
  DNIComPropertyBrowser = interface; // type: System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser, namespace: System.Windows.Forms.ComponentModel.Com2Interop
  DNIUIService = interface; // type: System.Windows.Forms.Design.IUIService, namespace: System.Windows.Forms.Design
  DNIWindowsFormsEditorService = interface; // type: System.Windows.Forms.Design.IWindowsFormsEditorService, namespace: System.Windows.Forms.Design
  DNIButtonControl = interface; // type: System.Windows.Forms.IButtonControl, namespace: System.Windows.Forms
  DNICommandExecutor = interface; // type: System.Windows.Forms.ICommandExecutor, namespace: System.Windows.Forms
  DNIComponentEditorPageSite = interface; // type: System.Windows.Forms.IComponentEditorPageSite, namespace: System.Windows.Forms
  DNIContainerControl = interface; // type: System.Windows.Forms.IContainerControl, namespace: System.Windows.Forms
  DNICurrencyManagerProvider = interface; // type: System.Windows.Forms.ICurrencyManagerProvider, namespace: System.Windows.Forms
  DNIDataGridColumnStyleEditingNotificationService = interface; // type: System.Windows.Forms.IDataGridColumnStyleEditingNotificationService, namespace: System.Windows.Forms
  DNIDataGridEditingService = interface; // type: System.Windows.Forms.IDataGridEditingService, namespace: System.Windows.Forms
  DNIDataGridViewEditingCell = interface; // type: System.Windows.Forms.IDataGridViewEditingCell, namespace: System.Windows.Forms
  DNIDataGridViewEditingControl = interface; // type: System.Windows.Forms.IDataGridViewEditingControl, namespace: System.Windows.Forms
  DNIDataObject = interface; // type: System.Windows.Forms.IDataObject, namespace: System.Windows.Forms
  DNIDropTarget = interface; // type: System.Windows.Forms.IDropTarget, namespace: System.Windows.Forms
  DNIFeatureSupport = interface; // type: System.Windows.Forms.IFeatureSupport, namespace: System.Windows.Forms
  DNIFileReaderService = interface; // type: System.Windows.Forms.IFileReaderService, namespace: System.Windows.Forms
  DNIMessageFilter = interface; // type: System.Windows.Forms.IMessageFilter, namespace: System.Windows.Forms
  DNIWin32Window = interface; // type: System.Windows.Forms.IWin32Window, namespace: System.Windows.Forms
  DNIWindowTarget = interface; // type: System.Windows.Forms.IWindowTarget, namespace: System.Windows.Forms
  DNIRootGridEntry = interface; // type: System.Windows.Forms.PropertyGridInternal.IRootGridEntry, namespace: System.Windows.Forms.PropertyGridInternal
  DNAxHost_ClsidAttribute = interface; // type: System.Windows.Forms.AxHost+ClsidAttribute, namespace: System.Windows.Forms
  DNAxHost_TypeLibraryTimeStampAttribute = interface; // type: System.Windows.Forms.AxHost+TypeLibraryTimeStampAttribute, namespace: System.Windows.Forms
  DNDataGridViewColumnDesignTimeVisibleAttribute = interface; // type: System.Windows.Forms.DataGridViewColumnDesignTimeVisibleAttribute, namespace: System.Windows.Forms
  DNToolStripItemDesignerAvailabilityAttribute = interface; // type: System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute, namespace: System.Windows.Forms.Design
  DNDockingAttribute = interface; // type: System.Windows.Forms.DockingAttribute, namespace: System.Windows.Forms
  DNRelatedImageListAttribute = interface; // type: System.Windows.Forms.RelatedImageListAttribute, namespace: System.Windows.Forms
  DNDomainUpDown_DomainUpDownItemCollection = interface; // type: System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection, namespace: System.Windows.Forms
  DNFileDialogCustomPlacesCollection = interface; // type: System.Windows.Forms.FileDialogCustomPlacesCollection, namespace: System.Windows.Forms
  DNFormCollection = interface; // type: System.Windows.Forms.FormCollection, namespace: System.Windows.Forms
  DNInputLanguageCollection = interface; // type: System.Windows.Forms.InputLanguageCollection, namespace: System.Windows.Forms
  DNWindowsFormsComponentEditor = interface; // type: System.Windows.Forms.Design.WindowsFormsComponentEditor, namespace: System.Windows.Forms.Design
  DNAxHost_AxComponentEditor = interface; // type: System.Windows.Forms.AxHost+AxComponentEditor, namespace: System.Windows.Forms
  DNImageIndexConverter = interface; // type: System.Windows.Forms.ImageIndexConverter, namespace: System.Windows.Forms
  DNTreeViewImageIndexConverter = interface; // type: System.Windows.Forms.TreeViewImageIndexConverter, namespace: System.Windows.Forms
  DNColumnHeaderConverter = interface; // type: System.Windows.Forms.ColumnHeaderConverter, namespace: System.Windows.Forms
  DNListViewItemConverter = interface; // type: System.Windows.Forms.ListViewItemConverter, namespace: System.Windows.Forms
  DNImageKeyConverter = interface; // type: System.Windows.Forms.ImageKeyConverter, namespace: System.Windows.Forms
  DNTreeViewImageKeyConverter = interface; // type: System.Windows.Forms.TreeViewImageKeyConverter, namespace: System.Windows.Forms
  DNResXFileRef_Converter = interface; // type: System.Resources.ResXFileRef+Converter, namespace: System.Resources
  DNAxHost_StateConverter = interface; // type: System.Windows.Forms.AxHost+StateConverter, namespace: System.Windows.Forms
  DNCursorConverter = interface; // type: System.Windows.Forms.CursorConverter, namespace: System.Windows.Forms
  DNDataGridPreferredColumnWidthTypeConverter = interface; // type: System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter, namespace: System.Windows.Forms
  DNDataGridViewCellStyleConverter = interface; // type: System.Windows.Forms.DataGridViewCellStyleConverter, namespace: System.Windows.Forms
  DNKeysConverter = interface; // type: System.Windows.Forms.KeysConverter, namespace: System.Windows.Forms
  DNTableLayoutSettingsTypeConverter = interface; // type: System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter, namespace: System.Windows.Forms.Layout
  DNLinkArea_LinkAreaConverter = interface; // type: System.Windows.Forms.LinkArea+LinkAreaConverter, namespace: System.Windows.Forms
  DNLinkConverter = interface; // type: System.Windows.Forms.LinkConverter, namespace: System.Windows.Forms
  DNListBindingConverter = interface; // type: System.Windows.Forms.ListBindingConverter, namespace: System.Windows.Forms
  DNOpacityConverter = interface; // type: System.Windows.Forms.OpacityConverter, namespace: System.Windows.Forms
  DNPaddingConverter = interface; // type: System.Windows.Forms.PaddingConverter, namespace: System.Windows.Forms
  DNScrollableControl_DockPaddingEdgesConverter = interface; // type: System.Windows.Forms.ScrollableControl+DockPaddingEdgesConverter, namespace: System.Windows.Forms
  DNSelectionRangeConverter = interface; // type: System.Windows.Forms.SelectionRangeConverter, namespace: System.Windows.Forms
  DNTreeNodeConverter = interface; // type: System.Windows.Forms.TreeNodeConverter, namespace: System.Windows.Forms
  DNWindowsFormsSection = interface; // type: System.Windows.Forms.WindowsFormsSection, namespace: System.Windows.Forms
  DNPrintControllerWithStatusDialog = interface; // type: System.Windows.Forms.PrintControllerWithStatusDialog, namespace: System.Windows.Forms
  DNBindingCompleteEventArgs = interface; // type: System.Windows.Forms.BindingCompleteEventArgs, namespace: System.Windows.Forms
  DNColumnReorderedEventArgs = interface; // type: System.Windows.Forms.ColumnReorderedEventArgs, namespace: System.Windows.Forms
  DNColumnWidthChangingEventArgs = interface; // type: System.Windows.Forms.ColumnWidthChangingEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellCancelEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellCancelEventArgs, namespace: System.Windows.Forms
  DNDataGridViewDataErrorEventArgs = interface; // type: System.Windows.Forms.DataGridViewDataErrorEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellValidatingEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellValidatingEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowCancelEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowCancelEventArgs, namespace: System.Windows.Forms
  DNDpiChangedEventArgs = interface; // type: System.Windows.Forms.DpiChangedEventArgs, namespace: System.Windows.Forms
  DNFormClosingEventArgs = interface; // type: System.Windows.Forms.FormClosingEventArgs, namespace: System.Windows.Forms
  DNInputLanguageChangingEventArgs = interface; // type: System.Windows.Forms.InputLanguageChangingEventArgs, namespace: System.Windows.Forms
  DNPopupEventArgs = interface; // type: System.Windows.Forms.PopupEventArgs, namespace: System.Windows.Forms
  DNSplitterCancelEventArgs = interface; // type: System.Windows.Forms.SplitterCancelEventArgs, namespace: System.Windows.Forms
  DNTabControlCancelEventArgs = interface; // type: System.Windows.Forms.TabControlCancelEventArgs, namespace: System.Windows.Forms
  DNToolStripDropDownClosingEventArgs = interface; // type: System.Windows.Forms.ToolStripDropDownClosingEventArgs, namespace: System.Windows.Forms
  DNTreeViewCancelEventArgs = interface; // type: System.Windows.Forms.TreeViewCancelEventArgs, namespace: System.Windows.Forms
  DNWebBrowserNavigatingEventArgs = interface; // type: System.Windows.Forms.WebBrowserNavigatingEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellPaintingEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellPaintingEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowHeightInfoPushedEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowPrePaintEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowPrePaintEventArgs, namespace: System.Windows.Forms
  DNDataGridViewSortCompareEventArgs = interface; // type: System.Windows.Forms.DataGridViewSortCompareEventArgs, namespace: System.Windows.Forms
  DNBindingManagerDataErrorEventArgs = interface; // type: System.Windows.Forms.BindingManagerDataErrorEventArgs, namespace: System.Windows.Forms
  DNCacheVirtualItemsEventArgs = interface; // type: System.Windows.Forms.CacheVirtualItemsEventArgs, namespace: System.Windows.Forms
  DNColumnClickEventArgs = interface; // type: System.Windows.Forms.ColumnClickEventArgs, namespace: System.Windows.Forms
  DNColumnWidthChangedEventArgs = interface; // type: System.Windows.Forms.ColumnWidthChangedEventArgs, namespace: System.Windows.Forms
  DNContentsResizedEventArgs = interface; // type: System.Windows.Forms.ContentsResizedEventArgs, namespace: System.Windows.Forms
  DNControlEventArgs = interface; // type: System.Windows.Forms.ControlEventArgs, namespace: System.Windows.Forms
  DNConvertEventArgs = interface; // type: System.Windows.Forms.ConvertEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellFormattingEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellFormattingEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellParsingEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellParsingEventArgs, namespace: System.Windows.Forms
  DNListControlConvertEventArgs = interface; // type: System.Windows.Forms.ListControlConvertEventArgs, namespace: System.Windows.Forms
  DNDataGridViewAutoSizeColumnModeEventArgs = interface; // type: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs, namespace: System.Windows.Forms
  DNDataGridViewAutoSizeColumnsModeEventArgs = interface; // type: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs, namespace: System.Windows.Forms
  DNDataGridViewAutoSizeModeEventArgs = interface; // type: System.Windows.Forms.DataGridViewAutoSizeModeEventArgs, namespace: System.Windows.Forms
  DNDataGridViewBindingCompleteEventArgs = interface; // type: System.Windows.Forms.DataGridViewBindingCompleteEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellContextMenuStripNeededEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellErrorTextNeededEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellToolTipTextNeededEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellStateChangedEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellStateChangedEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellStyleContentChangedEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellValueEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellValueEventArgs, namespace: System.Windows.Forms
  DNDataGridViewColumnEventArgs = interface; // type: System.Windows.Forms.DataGridViewColumnEventArgs, namespace: System.Windows.Forms
  DNDataGridViewColumnStateChangedEventArgs = interface; // type: System.Windows.Forms.DataGridViewColumnStateChangedEventArgs, namespace: System.Windows.Forms
  DNDataGridViewEditingControlShowingEventArgs = interface; // type: System.Windows.Forms.DataGridViewEditingControlShowingEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowContextMenuStripNeededEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowErrorTextNeededEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowHeightInfoNeededEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowPostPaintEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowPostPaintEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowsAddedEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowsAddedEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowsRemovedEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowsRemovedEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowStateChangedEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowStateChangedEventArgs, namespace: System.Windows.Forms
  DNDateBoldEventArgs = interface; // type: System.Windows.Forms.DateBoldEventArgs, namespace: System.Windows.Forms
  DNDateRangeEventArgs = interface; // type: System.Windows.Forms.DateRangeEventArgs, namespace: System.Windows.Forms
  DNDragEventArgs = interface; // type: System.Windows.Forms.DragEventArgs, namespace: System.Windows.Forms
  DNDrawItemEventArgs = interface; // type: System.Windows.Forms.DrawItemEventArgs, namespace: System.Windows.Forms
  DNStatusBarDrawItemEventArgs = interface; // type: System.Windows.Forms.StatusBarDrawItemEventArgs, namespace: System.Windows.Forms
  DNDrawListViewColumnHeaderEventArgs = interface; // type: System.Windows.Forms.DrawListViewColumnHeaderEventArgs, namespace: System.Windows.Forms
  DNDrawListViewItemEventArgs = interface; // type: System.Windows.Forms.DrawListViewItemEventArgs, namespace: System.Windows.Forms
  DNDrawListViewSubItemEventArgs = interface; // type: System.Windows.Forms.DrawListViewSubItemEventArgs, namespace: System.Windows.Forms
  DNDrawToolTipEventArgs = interface; // type: System.Windows.Forms.DrawToolTipEventArgs, namespace: System.Windows.Forms
  DNDrawTreeNodeEventArgs = interface; // type: System.Windows.Forms.DrawTreeNodeEventArgs, namespace: System.Windows.Forms
  DNFormClosedEventArgs = interface; // type: System.Windows.Forms.FormClosedEventArgs, namespace: System.Windows.Forms
  DNGiveFeedbackEventArgs = interface; // type: System.Windows.Forms.GiveFeedbackEventArgs, namespace: System.Windows.Forms
  DNHelpEventArgs = interface; // type: System.Windows.Forms.HelpEventArgs, namespace: System.Windows.Forms
  DNHtmlElementErrorEventArgs = interface; // type: System.Windows.Forms.HtmlElementErrorEventArgs, namespace: System.Windows.Forms
  DNHtmlElementEventArgs = interface; // type: System.Windows.Forms.HtmlElementEventArgs, namespace: System.Windows.Forms
  DNInputLanguageChangedEventArgs = interface; // type: System.Windows.Forms.InputLanguageChangedEventArgs, namespace: System.Windows.Forms
  DNInvalidateEventArgs = interface; // type: System.Windows.Forms.InvalidateEventArgs, namespace: System.Windows.Forms
  DNItemChangedEventArgs = interface; // type: System.Windows.Forms.ItemChangedEventArgs, namespace: System.Windows.Forms
  DNItemCheckedEventArgs = interface; // type: System.Windows.Forms.ItemCheckedEventArgs, namespace: System.Windows.Forms
  DNItemCheckEventArgs = interface; // type: System.Windows.Forms.ItemCheckEventArgs, namespace: System.Windows.Forms
  DNItemDragEventArgs = interface; // type: System.Windows.Forms.ItemDragEventArgs, namespace: System.Windows.Forms
  DNKeyEventArgs = interface; // type: System.Windows.Forms.KeyEventArgs, namespace: System.Windows.Forms
  DNKeyPressEventArgs = interface; // type: System.Windows.Forms.KeyPressEventArgs, namespace: System.Windows.Forms
  DNLabelEditEventArgs = interface; // type: System.Windows.Forms.LabelEditEventArgs, namespace: System.Windows.Forms
  DNLayoutEventArgs = interface; // type: System.Windows.Forms.LayoutEventArgs, namespace: System.Windows.Forms
  DNLinkClickedEventArgs = interface; // type: System.Windows.Forms.LinkClickedEventArgs, namespace: System.Windows.Forms
  DNLinkLabelLinkClickedEventArgs = interface; // type: System.Windows.Forms.LinkLabelLinkClickedEventArgs, namespace: System.Windows.Forms
  DNListViewItemMouseHoverEventArgs = interface; // type: System.Windows.Forms.ListViewItemMouseHoverEventArgs, namespace: System.Windows.Forms
  DNListViewItemSelectionChangedEventArgs = interface; // type: System.Windows.Forms.ListViewItemSelectionChangedEventArgs, namespace: System.Windows.Forms
  DNListViewVirtualItemsSelectionRangeChangedEventArgs = interface; // type: System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs, namespace: System.Windows.Forms
  DNMaskInputRejectedEventArgs = interface; // type: System.Windows.Forms.MaskInputRejectedEventArgs, namespace: System.Windows.Forms
  DNMeasureItemEventArgs = interface; // type: System.Windows.Forms.MeasureItemEventArgs, namespace: System.Windows.Forms
  DNMouseEventArgs = interface; // type: System.Windows.Forms.MouseEventArgs, namespace: System.Windows.Forms
  DNDataGridViewCellMouseEventArgs = interface; // type: System.Windows.Forms.DataGridViewCellMouseEventArgs, namespace: System.Windows.Forms
  DNHandledMouseEventArgs = interface; // type: System.Windows.Forms.HandledMouseEventArgs, namespace: System.Windows.Forms
  DNDataGridViewColumnDividerDoubleClickEventArgs = interface; // type: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs, namespace: System.Windows.Forms
  DNDataGridViewRowDividerDoubleClickEventArgs = interface; // type: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs, namespace: System.Windows.Forms
  DNStatusBarPanelClickEventArgs = interface; // type: System.Windows.Forms.StatusBarPanelClickEventArgs, namespace: System.Windows.Forms
  DNTreeNodeMouseClickEventArgs = interface; // type: System.Windows.Forms.TreeNodeMouseClickEventArgs, namespace: System.Windows.Forms
  DNNavigateEventArgs = interface; // type: System.Windows.Forms.NavigateEventArgs, namespace: System.Windows.Forms
  DNNodeLabelEditEventArgs = interface; // type: System.Windows.Forms.NodeLabelEditEventArgs, namespace: System.Windows.Forms
  DNPaintEventArgs = interface; // type: System.Windows.Forms.PaintEventArgs, namespace: System.Windows.Forms
  DNTableLayoutCellPaintEventArgs = interface; // type: System.Windows.Forms.TableLayoutCellPaintEventArgs, namespace: System.Windows.Forms
  DNPreviewKeyDownEventArgs = interface; // type: System.Windows.Forms.PreviewKeyDownEventArgs, namespace: System.Windows.Forms
  DNPropertyTabChangedEventArgs = interface; // type: System.Windows.Forms.PropertyTabChangedEventArgs, namespace: System.Windows.Forms
  DNPropertyValueChangedEventArgs = interface; // type: System.Windows.Forms.PropertyValueChangedEventArgs, namespace: System.Windows.Forms
  DNQueryAccessibilityHelpEventArgs = interface; // type: System.Windows.Forms.QueryAccessibilityHelpEventArgs, namespace: System.Windows.Forms
  DNQueryContinueDragEventArgs = interface; // type: System.Windows.Forms.QueryContinueDragEventArgs, namespace: System.Windows.Forms
  DNQuestionEventArgs = interface; // type: System.Windows.Forms.QuestionEventArgs, namespace: System.Windows.Forms
  DNRetrieveVirtualItemEventArgs = interface; // type: System.Windows.Forms.RetrieveVirtualItemEventArgs, namespace: System.Windows.Forms
  DNScrollEventArgs = interface; // type: System.Windows.Forms.ScrollEventArgs, namespace: System.Windows.Forms
  DNSearchForVirtualItemEventArgs = interface; // type: System.Windows.Forms.SearchForVirtualItemEventArgs, namespace: System.Windows.Forms
  DNSelectedGridItemChangedEventArgs = interface; // type: System.Windows.Forms.SelectedGridItemChangedEventArgs, namespace: System.Windows.Forms
  DNSplitterEventArgs = interface; // type: System.Windows.Forms.SplitterEventArgs, namespace: System.Windows.Forms
  DNTabControlEventArgs = interface; // type: System.Windows.Forms.TabControlEventArgs, namespace: System.Windows.Forms
  DNToolBarButtonClickEventArgs = interface; // type: System.Windows.Forms.ToolBarButtonClickEventArgs, namespace: System.Windows.Forms
  DNToolStripArrowRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripArrowRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripContentPanelRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripContentPanelRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripDropDownClosedEventArgs = interface; // type: System.Windows.Forms.ToolStripDropDownClosedEventArgs, namespace: System.Windows.Forms
  DNToolStripItemClickedEventArgs = interface; // type: System.Windows.Forms.ToolStripItemClickedEventArgs, namespace: System.Windows.Forms
  DNToolStripItemEventArgs = interface; // type: System.Windows.Forms.ToolStripItemEventArgs, namespace: System.Windows.Forms
  DNToolStripItemRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripItemRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripItemImageRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripItemImageRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripItemTextRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripItemTextRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripSeparatorRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripSeparatorRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripPanelRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripPanelRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripRenderEventArgs, namespace: System.Windows.Forms
  DNToolStripGripRenderEventArgs = interface; // type: System.Windows.Forms.ToolStripGripRenderEventArgs, namespace: System.Windows.Forms
  DNTreeNodeMouseHoverEventArgs = interface; // type: System.Windows.Forms.TreeNodeMouseHoverEventArgs, namespace: System.Windows.Forms
  DNTreeViewEventArgs = interface; // type: System.Windows.Forms.TreeViewEventArgs, namespace: System.Windows.Forms
  DNTypeValidationEventArgs = interface; // type: System.Windows.Forms.TypeValidationEventArgs, namespace: System.Windows.Forms
  DNUICuesEventArgs = interface; // type: System.Windows.Forms.UICuesEventArgs, namespace: System.Windows.Forms
  DNUpDownEventArgs = interface; // type: System.Windows.Forms.UpDownEventArgs, namespace: System.Windows.Forms
  DNWebBrowserDocumentCompletedEventArgs = interface; // type: System.Windows.Forms.WebBrowserDocumentCompletedEventArgs, namespace: System.Windows.Forms
  DNWebBrowserNavigatedEventArgs = interface; // type: System.Windows.Forms.WebBrowserNavigatedEventArgs, namespace: System.Windows.Forms
  DNWebBrowserProgressChangedEventArgs = interface; // type: System.Windows.Forms.WebBrowserProgressChangedEventArgs, namespace: System.Windows.Forms
  DNAxHost_InvalidActiveXStateException = interface; // type: System.Windows.Forms.AxHost+InvalidActiveXStateException, namespace: System.Windows.Forms
  DNBindingSource = interface; // type: System.Windows.Forms.BindingSource, namespace: System.Windows.Forms
  DNColumnHeader = interface; // type: System.Windows.Forms.ColumnHeader, namespace: System.Windows.Forms
  DNCommonDialog = interface; // type: System.Windows.Forms.CommonDialog, namespace: System.Windows.Forms
  DNColorDialog = interface; // type: System.Windows.Forms.ColorDialog, namespace: System.Windows.Forms
  DNFileDialog = interface; // type: System.Windows.Forms.FileDialog, namespace: System.Windows.Forms
  DNOpenFileDialog = interface; // type: System.Windows.Forms.OpenFileDialog, namespace: System.Windows.Forms
  DNSaveFileDialog = interface; // type: System.Windows.Forms.SaveFileDialog, namespace: System.Windows.Forms
  DNFolderBrowserDialog = interface; // type: System.Windows.Forms.FolderBrowserDialog, namespace: System.Windows.Forms
  DNFontDialog = interface; // type: System.Windows.Forms.FontDialog, namespace: System.Windows.Forms
  DNPageSetupDialog = interface; // type: System.Windows.Forms.PageSetupDialog, namespace: System.Windows.Forms
  DNPrintDialog = interface; // type: System.Windows.Forms.PrintDialog, namespace: System.Windows.Forms
  DNControl = interface; // type: System.Windows.Forms.Control, namespace: System.Windows.Forms
  DNAxHost = interface; // type: System.Windows.Forms.AxHost, namespace: System.Windows.Forms
  DNButtonBase = interface; // type: System.Windows.Forms.ButtonBase, namespace: System.Windows.Forms
  DNButton = interface; // type: System.Windows.Forms.Button, namespace: System.Windows.Forms
  DNCheckBox = interface; // type: System.Windows.Forms.CheckBox, namespace: System.Windows.Forms
  DNRadioButton = interface; // type: System.Windows.Forms.RadioButton, namespace: System.Windows.Forms
  DNDataGrid = interface; // type: System.Windows.Forms.DataGrid, namespace: System.Windows.Forms
  DNDataGridView = interface; // type: System.Windows.Forms.DataGridView, namespace: System.Windows.Forms
  DNDateTimePicker = interface; // type: System.Windows.Forms.DateTimePicker, namespace: System.Windows.Forms
  DNGroupBox = interface; // type: System.Windows.Forms.GroupBox, namespace: System.Windows.Forms
  DNLabel = interface; // type: System.Windows.Forms.Label, namespace: System.Windows.Forms
  DNLinkLabel = interface; // type: System.Windows.Forms.LinkLabel, namespace: System.Windows.Forms
  DNListControl = interface; // type: System.Windows.Forms.ListControl, namespace: System.Windows.Forms
  DNComboBox = interface; // type: System.Windows.Forms.ComboBox, namespace: System.Windows.Forms
  DNDataGridViewComboBoxEditingControl = interface; // type: System.Windows.Forms.DataGridViewComboBoxEditingControl, namespace: System.Windows.Forms
  DNListBox = interface; // type: System.Windows.Forms.ListBox, namespace: System.Windows.Forms
  DNCheckedListBox = interface; // type: System.Windows.Forms.CheckedListBox, namespace: System.Windows.Forms
  DNListView = interface; // type: System.Windows.Forms.ListView, namespace: System.Windows.Forms
  DNMdiClient = interface; // type: System.Windows.Forms.MdiClient, namespace: System.Windows.Forms
  DNMonthCalendar = interface; // type: System.Windows.Forms.MonthCalendar, namespace: System.Windows.Forms
  DNPictureBox = interface; // type: System.Windows.Forms.PictureBox, namespace: System.Windows.Forms
  DNPrintPreviewControl = interface; // type: System.Windows.Forms.PrintPreviewControl, namespace: System.Windows.Forms
  DNProgressBar = interface; // type: System.Windows.Forms.ProgressBar, namespace: System.Windows.Forms
  DNScrollableControl = interface; // type: System.Windows.Forms.ScrollableControl, namespace: System.Windows.Forms
  DNContainerControl = interface; // type: System.Windows.Forms.ContainerControl, namespace: System.Windows.Forms
  DNForm = interface; // type: System.Windows.Forms.Form, namespace: System.Windows.Forms
  DNComponentEditorForm = interface; // type: System.Windows.Forms.Design.ComponentEditorForm, namespace: System.Windows.Forms.Design
  DNPrintPreviewDialog = interface; // type: System.Windows.Forms.PrintPreviewDialog, namespace: System.Windows.Forms
  DNThreadExceptionDialog = interface; // type: System.Windows.Forms.ThreadExceptionDialog, namespace: System.Windows.Forms
  DNPropertyGrid = interface; // type: System.Windows.Forms.PropertyGrid, namespace: System.Windows.Forms
  DNSplitContainer = interface; // type: System.Windows.Forms.SplitContainer, namespace: System.Windows.Forms
  DNToolStripContainer = interface; // type: System.Windows.Forms.ToolStripContainer, namespace: System.Windows.Forms
  DNToolStripPanel = interface; // type: System.Windows.Forms.ToolStripPanel, namespace: System.Windows.Forms
  DNUpDownBase = interface; // type: System.Windows.Forms.UpDownBase, namespace: System.Windows.Forms
  DNDomainUpDown = interface; // type: System.Windows.Forms.DomainUpDown, namespace: System.Windows.Forms
  DNNumericUpDown = interface; // type: System.Windows.Forms.NumericUpDown, namespace: System.Windows.Forms
  DNUserControl = interface; // type: System.Windows.Forms.UserControl, namespace: System.Windows.Forms
  DNPanel = interface; // type: System.Windows.Forms.Panel, namespace: System.Windows.Forms
  DNComponentEditorPage = interface; // type: System.Windows.Forms.Design.ComponentEditorPage, namespace: System.Windows.Forms.Design
  DNFlowLayoutPanel = interface; // type: System.Windows.Forms.FlowLayoutPanel, namespace: System.Windows.Forms
  DNSplitterPanel = interface; // type: System.Windows.Forms.SplitterPanel, namespace: System.Windows.Forms
  DNTableLayoutPanel = interface; // type: System.Windows.Forms.TableLayoutPanel, namespace: System.Windows.Forms
  DNTabPage = interface; // type: System.Windows.Forms.TabPage, namespace: System.Windows.Forms
  DNToolStripContentPanel = interface; // type: System.Windows.Forms.ToolStripContentPanel, namespace: System.Windows.Forms
  DNToolStrip = interface; // type: System.Windows.Forms.ToolStrip, namespace: System.Windows.Forms
  DNBindingNavigator = interface; // type: System.Windows.Forms.BindingNavigator, namespace: System.Windows.Forms
  DNMenuStrip = interface; // type: System.Windows.Forms.MenuStrip, namespace: System.Windows.Forms
  DNStatusStrip = interface; // type: System.Windows.Forms.StatusStrip, namespace: System.Windows.Forms
  DNToolStripDropDown = interface; // type: System.Windows.Forms.ToolStripDropDown, namespace: System.Windows.Forms
  DNToolStripDropDownMenu = interface; // type: System.Windows.Forms.ToolStripDropDownMenu, namespace: System.Windows.Forms
  DNContextMenuStrip = interface; // type: System.Windows.Forms.ContextMenuStrip, namespace: System.Windows.Forms
  DNToolStripOverflow = interface; // type: System.Windows.Forms.ToolStripOverflow, namespace: System.Windows.Forms
  DNScrollBar = interface; // type: System.Windows.Forms.ScrollBar, namespace: System.Windows.Forms
  DNHScrollBar = interface; // type: System.Windows.Forms.HScrollBar, namespace: System.Windows.Forms
  DNVScrollBar = interface; // type: System.Windows.Forms.VScrollBar, namespace: System.Windows.Forms
  DNSplitter = interface; // type: System.Windows.Forms.Splitter, namespace: System.Windows.Forms
  DNStatusBar = interface; // type: System.Windows.Forms.StatusBar, namespace: System.Windows.Forms
  DNTabControl = interface; // type: System.Windows.Forms.TabControl, namespace: System.Windows.Forms
  DNTextBoxBase = interface; // type: System.Windows.Forms.TextBoxBase, namespace: System.Windows.Forms
  DNMaskedTextBox = interface; // type: System.Windows.Forms.MaskedTextBox, namespace: System.Windows.Forms
  DNRichTextBox = interface; // type: System.Windows.Forms.RichTextBox, namespace: System.Windows.Forms
  DNTextBox = interface; // type: System.Windows.Forms.TextBox, namespace: System.Windows.Forms
  DNDataGridTextBox = interface; // type: System.Windows.Forms.DataGridTextBox, namespace: System.Windows.Forms
  DNDataGridViewTextBoxEditingControl = interface; // type: System.Windows.Forms.DataGridViewTextBoxEditingControl, namespace: System.Windows.Forms
  DNToolBar = interface; // type: System.Windows.Forms.ToolBar, namespace: System.Windows.Forms
  DNTrackBar = interface; // type: System.Windows.Forms.TrackBar, namespace: System.Windows.Forms
  DNTreeView = interface; // type: System.Windows.Forms.TreeView, namespace: System.Windows.Forms
  DNWebBrowserBase = interface; // type: System.Windows.Forms.WebBrowserBase, namespace: System.Windows.Forms
  DNWebBrowser = interface; // type: System.Windows.Forms.WebBrowser, namespace: System.Windows.Forms
  DNDataGridColumnStyle = interface; // type: System.Windows.Forms.DataGridColumnStyle, namespace: System.Windows.Forms
  DNDataGridBoolColumn = interface; // type: System.Windows.Forms.DataGridBoolColumn, namespace: System.Windows.Forms
  DNDataGridTextBoxColumn = interface; // type: System.Windows.Forms.DataGridTextBoxColumn, namespace: System.Windows.Forms
  DNDataGridTableStyle = interface; // type: System.Windows.Forms.DataGridTableStyle, namespace: System.Windows.Forms
  DNErrorProvider = interface; // type: System.Windows.Forms.ErrorProvider, namespace: System.Windows.Forms
  DNHelpProvider = interface; // type: System.Windows.Forms.HelpProvider, namespace: System.Windows.Forms
  DNImageList = interface; // type: System.Windows.Forms.ImageList, namespace: System.Windows.Forms
  DNMenu = interface; // type: System.Windows.Forms.Menu, namespace: System.Windows.Forms
  DNContextMenu = interface; // type: System.Windows.Forms.ContextMenu, namespace: System.Windows.Forms
  DNMainMenu = interface; // type: System.Windows.Forms.MainMenu, namespace: System.Windows.Forms
  DNMenuItem = interface; // type: System.Windows.Forms.MenuItem, namespace: System.Windows.Forms
  DNNotifyIcon = interface; // type: System.Windows.Forms.NotifyIcon, namespace: System.Windows.Forms
  DNStatusBarPanel = interface; // type: System.Windows.Forms.StatusBarPanel, namespace: System.Windows.Forms
  DNTimer = interface; // type: System.Windows.Forms.Timer, namespace: System.Windows.Forms
  DNToolBarButton = interface; // type: System.Windows.Forms.ToolBarButton, namespace: System.Windows.Forms
  DNToolStripItem = interface; // type: System.Windows.Forms.ToolStripItem, namespace: System.Windows.Forms
  DNToolStripButton = interface; // type: System.Windows.Forms.ToolStripButton, namespace: System.Windows.Forms
  DNToolStripControlHost = interface; // type: System.Windows.Forms.ToolStripControlHost, namespace: System.Windows.Forms
  DNToolStripComboBox = interface; // type: System.Windows.Forms.ToolStripComboBox, namespace: System.Windows.Forms
  DNToolStripProgressBar = interface; // type: System.Windows.Forms.ToolStripProgressBar, namespace: System.Windows.Forms
  DNToolStripTextBox = interface; // type: System.Windows.Forms.ToolStripTextBox, namespace: System.Windows.Forms
  DNToolStripDropDownItem = interface; // type: System.Windows.Forms.ToolStripDropDownItem, namespace: System.Windows.Forms
  DNToolStripDropDownButton = interface; // type: System.Windows.Forms.ToolStripDropDownButton, namespace: System.Windows.Forms
  DNToolStripOverflowButton = interface; // type: System.Windows.Forms.ToolStripOverflowButton, namespace: System.Windows.Forms
  DNToolStripMenuItem = interface; // type: System.Windows.Forms.ToolStripMenuItem, namespace: System.Windows.Forms
  DNToolStripSplitButton = interface; // type: System.Windows.Forms.ToolStripSplitButton, namespace: System.Windows.Forms
  DNToolStripLabel = interface; // type: System.Windows.Forms.ToolStripLabel, namespace: System.Windows.Forms
  DNToolStripStatusLabel = interface; // type: System.Windows.Forms.ToolStripStatusLabel, namespace: System.Windows.Forms
  DNToolStripSeparator = interface; // type: System.Windows.Forms.ToolStripSeparator, namespace: System.Windows.Forms
  DNToolStripPanelRow = interface; // type: System.Windows.Forms.ToolStripPanelRow, namespace: System.Windows.Forms
  DNToolTip = interface; // type: System.Windows.Forms.ToolTip, namespace: System.Windows.Forms
  DNAccessibleObject = interface; // type: System.Windows.Forms.AccessibleObject, namespace: System.Windows.Forms
  DNComboBox_ChildAccessibleObject = interface; // type: System.Windows.Forms.ComboBox+ChildAccessibleObject, namespace: System.Windows.Forms
  DNControl_ControlAccessibleObject = interface; // type: System.Windows.Forms.Control+ControlAccessibleObject, namespace: System.Windows.Forms
  DNButtonBase_ButtonBaseAccessibleObject = interface; // type: System.Windows.Forms.ButtonBase+ButtonBaseAccessibleObject, namespace: System.Windows.Forms
  DNCheckBox_CheckBoxAccessibleObject = interface; // type: System.Windows.Forms.CheckBox+CheckBoxAccessibleObject, namespace: System.Windows.Forms
  DNRadioButton_RadioButtonAccessibleObject = interface; // type: System.Windows.Forms.RadioButton+RadioButtonAccessibleObject, namespace: System.Windows.Forms
  DNDateTimePicker_DateTimePickerAccessibleObject = interface; // type: System.Windows.Forms.DateTimePicker+DateTimePickerAccessibleObject, namespace: System.Windows.Forms
  DNDomainUpDown_DomainUpDownAccessibleObject = interface; // type: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject, namespace: System.Windows.Forms
  DNToolStrip_ToolStripAccessibleObject = interface; // type: System.Windows.Forms.ToolStrip+ToolStripAccessibleObject, namespace: System.Windows.Forms
  DNToolStripDropDown_ToolStripDropDownAccessibleObject = interface; // type: System.Windows.Forms.ToolStripDropDown+ToolStripDropDownAccessibleObject, namespace: System.Windows.Forms
  DNDomainUpDown_DomainItemAccessibleObject = interface; // type: System.Windows.Forms.DomainUpDown+DomainItemAccessibleObject, namespace: System.Windows.Forms
  DNToolStripItem_ToolStripItemAccessibleObject = interface; // type: System.Windows.Forms.ToolStripItem+ToolStripItemAccessibleObject, namespace: System.Windows.Forms
  DNToolStripDropDownItemAccessibleObject = interface; // type: System.Windows.Forms.ToolStripDropDownItemAccessibleObject, namespace: System.Windows.Forms
  DNToolStripSplitButton_ToolStripSplitButtonAccessibleObject = interface; // type: System.Windows.Forms.ToolStripSplitButton+ToolStripSplitButtonAccessibleObject, namespace: System.Windows.Forms
  DNBaseCollection = interface; // type: System.Windows.Forms.BaseCollection, namespace: System.Windows.Forms
  DNBindingsCollection = interface; // type: System.Windows.Forms.BindingsCollection, namespace: System.Windows.Forms
  DNControlBindingsCollection = interface; // type: System.Windows.Forms.ControlBindingsCollection, namespace: System.Windows.Forms
  DNDataGridViewCellCollection = interface; // type: System.Windows.Forms.DataGridViewCellCollection, namespace: System.Windows.Forms
  DNDataGridViewColumnCollection = interface; // type: System.Windows.Forms.DataGridViewColumnCollection, namespace: System.Windows.Forms
  DNDataGridViewSelectedCellCollection = interface; // type: System.Windows.Forms.DataGridViewSelectedCellCollection, namespace: System.Windows.Forms
  DNDataGridViewSelectedColumnCollection = interface; // type: System.Windows.Forms.DataGridViewSelectedColumnCollection, namespace: System.Windows.Forms
  DNDataGridViewSelectedRowCollection = interface; // type: System.Windows.Forms.DataGridViewSelectedRowCollection, namespace: System.Windows.Forms
  DNGridColumnStylesCollection = interface; // type: System.Windows.Forms.GridColumnStylesCollection, namespace: System.Windows.Forms
  DNGridTableStylesCollection = interface; // type: System.Windows.Forms.GridTableStylesCollection, namespace: System.Windows.Forms
  DNNativeWindow = interface; // type: System.Windows.Forms.NativeWindow, namespace: System.Windows.Forms
  DNNumericUpDownAccelerationCollection = interface; // type: System.Windows.Forms.NumericUpDownAccelerationCollection, namespace: System.Windows.Forms
  DNOwnerDrawPropertyBag = interface; // type: System.Windows.Forms.OwnerDrawPropertyBag, namespace: System.Windows.Forms
  DNTreeNode = interface; // type: System.Windows.Forms.TreeNode, namespace: System.Windows.Forms
  DNResXResourceSet = interface; // type: System.Resources.ResXResourceSet, namespace: System.Resources
  DNResXDataNode = interface; // type: System.Resources.ResXDataNode, namespace: System.Resources
  DNResXFileRef = interface; // type: System.Resources.ResXFileRef, namespace: System.Resources
  DNResXResourceReader = interface; // type: System.Resources.ResXResourceReader, namespace: System.Resources
  DNResXResourceWriter = interface; // type: System.Resources.ResXResourceWriter, namespace: System.Resources
  DNWindowsFormsSynchronizationContext = interface; // type: System.Windows.Forms.WindowsFormsSynchronizationContext, namespace: System.Windows.Forms
  DNBindingMemberInfo = interface; // type: System.Windows.Forms.BindingMemberInfo, namespace: System.Windows.Forms
  DNDataGridCell = interface; // type: System.Windows.Forms.DataGridCell, namespace: System.Windows.Forms
  DNImeModeConversion = interface; // type: System.Windows.Forms.ImeModeConversion, namespace: System.Windows.Forms
  DNLinkArea = interface; // type: System.Windows.Forms.LinkArea, namespace: System.Windows.Forms
  DNMessage = interface; // type: System.Windows.Forms.Message, namespace: System.Windows.Forms
  DNPadding = interface; // type: System.Windows.Forms.Padding, namespace: System.Windows.Forms
  DNTableLayoutPanelCellPosition = interface; // type: System.Windows.Forms.TableLayoutPanelCellPosition, namespace: System.Windows.Forms
  DNTextMetrics = interface; // type: System.Windows.Forms.VisualStyles.TextMetrics, namespace: System.Windows.Forms.VisualStyles
  DNAmbientProperties = interface; // type: System.Windows.Forms.AmbientProperties, namespace: System.Windows.Forms
  DNApplication = interface; // type: System.Windows.Forms.Application, namespace: System.Windows.Forms
  DNApplicationContext = interface; // type: System.Windows.Forms.ApplicationContext, namespace: System.Windows.Forms
  DNAutoCompleteStringCollection = interface; // type: System.Windows.Forms.AutoCompleteStringCollection, namespace: System.Windows.Forms
  DNAxHost_ConnectionPointCookie = interface; // type: System.Windows.Forms.AxHost+ConnectionPointCookie, namespace: System.Windows.Forms
  DNAxHost_State = interface; // type: System.Windows.Forms.AxHost+State, namespace: System.Windows.Forms
  DNBinding = interface; // type: System.Windows.Forms.Binding, namespace: System.Windows.Forms
  DNBindingContext = interface; // type: System.Windows.Forms.BindingContext, namespace: System.Windows.Forms
  DNBindingManagerBase = interface; // type: System.Windows.Forms.BindingManagerBase, namespace: System.Windows.Forms
  DNCurrencyManager = interface; // type: System.Windows.Forms.CurrencyManager, namespace: System.Windows.Forms
  DNPropertyManager = interface; // type: System.Windows.Forms.PropertyManager, namespace: System.Windows.Forms
  DNButtonRenderer = interface; // type: System.Windows.Forms.ButtonRenderer, namespace: System.Windows.Forms
  DNCheckBoxRenderer = interface; // type: System.Windows.Forms.CheckBoxRenderer, namespace: System.Windows.Forms
  DNCheckedListBox_CheckedIndexCollection = interface; // type: System.Windows.Forms.CheckedListBox+CheckedIndexCollection, namespace: System.Windows.Forms
  DNCheckedListBox_CheckedItemCollection = interface; // type: System.Windows.Forms.CheckedListBox+CheckedItemCollection, namespace: System.Windows.Forms
  DNClipboard = interface; // type: System.Windows.Forms.Clipboard, namespace: System.Windows.Forms
  DNComboBox_ObjectCollection = interface; // type: System.Windows.Forms.ComboBox+ObjectCollection, namespace: System.Windows.Forms
  DNComboBoxRenderer = interface; // type: System.Windows.Forms.ComboBoxRenderer, namespace: System.Windows.Forms
  DNCom2Variant = interface; // type: System.Windows.Forms.ComponentModel.Com2Interop.Com2Variant, namespace: System.Windows.Forms.ComponentModel.Com2Interop
  DNControlPaint = interface; // type: System.Windows.Forms.ControlPaint, namespace: System.Windows.Forms
  DNCreateParams = interface; // type: System.Windows.Forms.CreateParams, namespace: System.Windows.Forms
  DNCursor = interface; // type: System.Windows.Forms.Cursor, namespace: System.Windows.Forms
  DNCursors = interface; // type: System.Windows.Forms.Cursors, namespace: System.Windows.Forms
  DNDataFormats = interface; // type: System.Windows.Forms.DataFormats, namespace: System.Windows.Forms
  DNDataFormats_Format = interface; // type: System.Windows.Forms.DataFormats+Format, namespace: System.Windows.Forms
  DNDataGrid_HitTestInfo = interface; // type: System.Windows.Forms.DataGrid+HitTestInfo, namespace: System.Windows.Forms
  DNDataGridView_HitTestInfo = interface; // type: System.Windows.Forms.DataGridView+HitTestInfo, namespace: System.Windows.Forms
  DNDataGridViewAdvancedBorderStyle = interface; // type: System.Windows.Forms.DataGridViewAdvancedBorderStyle, namespace: System.Windows.Forms
  DNDataGridViewCellStyle = interface; // type: System.Windows.Forms.DataGridViewCellStyle, namespace: System.Windows.Forms
  DNDataGridViewComboBoxCell_ObjectCollection = interface; // type: System.Windows.Forms.DataGridViewComboBoxCell+ObjectCollection, namespace: System.Windows.Forms
  DNDataGridViewElement = interface; // type: System.Windows.Forms.DataGridViewElement, namespace: System.Windows.Forms
  DNDataGridViewBand = interface; // type: System.Windows.Forms.DataGridViewBand, namespace: System.Windows.Forms
  DNDataGridViewColumn = interface; // type: System.Windows.Forms.DataGridViewColumn, namespace: System.Windows.Forms
  DNDataGridViewButtonColumn = interface; // type: System.Windows.Forms.DataGridViewButtonColumn, namespace: System.Windows.Forms
  DNDataGridViewCheckBoxColumn = interface; // type: System.Windows.Forms.DataGridViewCheckBoxColumn, namespace: System.Windows.Forms
  DNDataGridViewComboBoxColumn = interface; // type: System.Windows.Forms.DataGridViewComboBoxColumn, namespace: System.Windows.Forms
  DNDataGridViewImageColumn = interface; // type: System.Windows.Forms.DataGridViewImageColumn, namespace: System.Windows.Forms
  DNDataGridViewLinkColumn = interface; // type: System.Windows.Forms.DataGridViewLinkColumn, namespace: System.Windows.Forms
  DNDataGridViewTextBoxColumn = interface; // type: System.Windows.Forms.DataGridViewTextBoxColumn, namespace: System.Windows.Forms
  DNDataGridViewRow = interface; // type: System.Windows.Forms.DataGridViewRow, namespace: System.Windows.Forms
  DNDataGridViewCell = interface; // type: System.Windows.Forms.DataGridViewCell, namespace: System.Windows.Forms
  DNDataGridViewButtonCell = interface; // type: System.Windows.Forms.DataGridViewButtonCell, namespace: System.Windows.Forms
  DNDataGridViewCheckBoxCell = interface; // type: System.Windows.Forms.DataGridViewCheckBoxCell, namespace: System.Windows.Forms
  DNDataGridViewComboBoxCell = interface; // type: System.Windows.Forms.DataGridViewComboBoxCell, namespace: System.Windows.Forms
  DNDataGridViewHeaderCell = interface; // type: System.Windows.Forms.DataGridViewHeaderCell, namespace: System.Windows.Forms
  DNDataGridViewColumnHeaderCell = interface; // type: System.Windows.Forms.DataGridViewColumnHeaderCell, namespace: System.Windows.Forms
  DNDataGridViewTopLeftHeaderCell = interface; // type: System.Windows.Forms.DataGridViewTopLeftHeaderCell, namespace: System.Windows.Forms
  DNDataGridViewRowHeaderCell = interface; // type: System.Windows.Forms.DataGridViewRowHeaderCell, namespace: System.Windows.Forms
  DNDataGridViewImageCell = interface; // type: System.Windows.Forms.DataGridViewImageCell, namespace: System.Windows.Forms
  DNDataGridViewLinkCell = interface; // type: System.Windows.Forms.DataGridViewLinkCell, namespace: System.Windows.Forms
  DNDataGridViewTextBoxCell = interface; // type: System.Windows.Forms.DataGridViewTextBoxCell, namespace: System.Windows.Forms
  DNDataGridViewRowCollection = interface; // type: System.Windows.Forms.DataGridViewRowCollection, namespace: System.Windows.Forms
  DNDataObject = interface; // type: System.Windows.Forms.DataObject, namespace: System.Windows.Forms
  DNPropertyTab = interface; // type: System.Windows.Forms.Design.PropertyTab, namespace: System.Windows.Forms.Design
  DNEventsTab = interface; // type: System.Windows.Forms.Design.EventsTab, namespace: System.Windows.Forms.Design
  DNPropertiesTab = interface; // type: System.Windows.Forms.PropertyGridInternal.PropertiesTab, namespace: System.Windows.Forms.PropertyGridInternal
  DNFeatureSupport = interface; // type: System.Windows.Forms.FeatureSupport, namespace: System.Windows.Forms
  DNOSFeature = interface; // type: System.Windows.Forms.OSFeature, namespace: System.Windows.Forms
  DNFileDialogCustomPlace = interface; // type: System.Windows.Forms.FileDialogCustomPlace, namespace: System.Windows.Forms
  DNFlatButtonAppearance = interface; // type: System.Windows.Forms.FlatButtonAppearance, namespace: System.Windows.Forms
  DNGridItem = interface; // type: System.Windows.Forms.GridItem, namespace: System.Windows.Forms
  DNGridItemCollection = interface; // type: System.Windows.Forms.GridItemCollection, namespace: System.Windows.Forms
  DNGridTablesFactory = interface; // type: System.Windows.Forms.GridTablesFactory, namespace: System.Windows.Forms
  DNGroupBoxRenderer = interface; // type: System.Windows.Forms.GroupBoxRenderer, namespace: System.Windows.Forms
  DNHelp = interface; // type: System.Windows.Forms.Help, namespace: System.Windows.Forms
  DNHtmlDocument = interface; // type: System.Windows.Forms.HtmlDocument, namespace: System.Windows.Forms
  DNHtmlElement = interface; // type: System.Windows.Forms.HtmlElement, namespace: System.Windows.Forms
  DNHtmlElementCollection = interface; // type: System.Windows.Forms.HtmlElementCollection, namespace: System.Windows.Forms
  DNHtmlHistory = interface; // type: System.Windows.Forms.HtmlHistory, namespace: System.Windows.Forms
  DNHtmlWindow = interface; // type: System.Windows.Forms.HtmlWindow, namespace: System.Windows.Forms
  DNHtmlWindowCollection = interface; // type: System.Windows.Forms.HtmlWindowCollection, namespace: System.Windows.Forms
  DNImageList_ImageCollection = interface; // type: System.Windows.Forms.ImageList+ImageCollection, namespace: System.Windows.Forms
  DNImageListStreamer = interface; // type: System.Windows.Forms.ImageListStreamer, namespace: System.Windows.Forms
  DNImeContext = interface; // type: System.Windows.Forms.ImeContext, namespace: System.Windows.Forms
  DNInputLanguage = interface; // type: System.Windows.Forms.InputLanguage, namespace: System.Windows.Forms
  DNArrangedElementCollection = interface; // type: System.Windows.Forms.Layout.ArrangedElementCollection, namespace: System.Windows.Forms.Layout
  DNControl_ControlCollection = interface; // type: System.Windows.Forms.Control+ControlCollection, namespace: System.Windows.Forms
  DNDataGridView_DataGridViewControlCollection = interface; // type: System.Windows.Forms.DataGridView+DataGridViewControlCollection, namespace: System.Windows.Forms
  DNForm_ControlCollection = interface; // type: System.Windows.Forms.Form+ControlCollection, namespace: System.Windows.Forms
  DNMdiClient_ControlCollection = interface; // type: System.Windows.Forms.MdiClient+ControlCollection, namespace: System.Windows.Forms
  DNTabControl_ControlCollection = interface; // type: System.Windows.Forms.TabControl+ControlCollection, namespace: System.Windows.Forms
  DNTableLayoutControlCollection = interface; // type: System.Windows.Forms.TableLayoutControlCollection, namespace: System.Windows.Forms
  DNTabPage_TabPageControlCollection = interface; // type: System.Windows.Forms.TabPage+TabPageControlCollection, namespace: System.Windows.Forms
  DNToolStripItemCollection = interface; // type: System.Windows.Forms.ToolStripItemCollection, namespace: System.Windows.Forms
  DNToolStripPanel_ToolStripPanelRowCollection = interface; // type: System.Windows.Forms.ToolStripPanel+ToolStripPanelRowCollection, namespace: System.Windows.Forms
  DNLayoutEngine = interface; // type: System.Windows.Forms.Layout.LayoutEngine, namespace: System.Windows.Forms.Layout
  DNLayoutSettings = interface; // type: System.Windows.Forms.LayoutSettings, namespace: System.Windows.Forms
  DNFlowLayoutSettings = interface; // type: System.Windows.Forms.FlowLayoutSettings, namespace: System.Windows.Forms
  DNTableLayoutSettings = interface; // type: System.Windows.Forms.TableLayoutSettings, namespace: System.Windows.Forms
  DNLinkLabel_Link = interface; // type: System.Windows.Forms.LinkLabel+Link, namespace: System.Windows.Forms
  DNLinkLabel_LinkCollection = interface; // type: System.Windows.Forms.LinkLabel+LinkCollection, namespace: System.Windows.Forms
  DNListBindingHelper = interface; // type: System.Windows.Forms.ListBindingHelper, namespace: System.Windows.Forms
  DNListBox_IntegerCollection = interface; // type: System.Windows.Forms.ListBox+IntegerCollection, namespace: System.Windows.Forms
  DNListBox_ObjectCollection = interface; // type: System.Windows.Forms.ListBox+ObjectCollection, namespace: System.Windows.Forms
  DNCheckedListBox_ObjectCollection = interface; // type: System.Windows.Forms.CheckedListBox+ObjectCollection, namespace: System.Windows.Forms
  DNListBox_SelectedIndexCollection = interface; // type: System.Windows.Forms.ListBox+SelectedIndexCollection, namespace: System.Windows.Forms
  DNListBox_SelectedObjectCollection = interface; // type: System.Windows.Forms.ListBox+SelectedObjectCollection, namespace: System.Windows.Forms
  DNListView_CheckedIndexCollection = interface; // type: System.Windows.Forms.ListView+CheckedIndexCollection, namespace: System.Windows.Forms
  DNListView_CheckedListViewItemCollection = interface; // type: System.Windows.Forms.ListView+CheckedListViewItemCollection, namespace: System.Windows.Forms
  DNListView_ColumnHeaderCollection = interface; // type: System.Windows.Forms.ListView+ColumnHeaderCollection, namespace: System.Windows.Forms
  DNListView_ListViewItemCollection = interface; // type: System.Windows.Forms.ListView+ListViewItemCollection, namespace: System.Windows.Forms
  DNListView_SelectedIndexCollection = interface; // type: System.Windows.Forms.ListView+SelectedIndexCollection, namespace: System.Windows.Forms
  DNListView_SelectedListViewItemCollection = interface; // type: System.Windows.Forms.ListView+SelectedListViewItemCollection, namespace: System.Windows.Forms
  DNListViewGroup = interface; // type: System.Windows.Forms.ListViewGroup, namespace: System.Windows.Forms
  DNListViewGroupCollection = interface; // type: System.Windows.Forms.ListViewGroupCollection, namespace: System.Windows.Forms
  DNListViewHitTestInfo = interface; // type: System.Windows.Forms.ListViewHitTestInfo, namespace: System.Windows.Forms
  DNListViewInsertionMark = interface; // type: System.Windows.Forms.ListViewInsertionMark, namespace: System.Windows.Forms
  DNListViewItem = interface; // type: System.Windows.Forms.ListViewItem, namespace: System.Windows.Forms
  DNListViewItem_ListViewSubItem = interface; // type: System.Windows.Forms.ListViewItem+ListViewSubItem, namespace: System.Windows.Forms
  DNListViewItem_ListViewSubItemCollection = interface; // type: System.Windows.Forms.ListViewItem+ListViewSubItemCollection, namespace: System.Windows.Forms
  DNMenu_MenuItemCollection = interface; // type: System.Windows.Forms.Menu+MenuItemCollection, namespace: System.Windows.Forms
  DNMessageBox = interface; // type: System.Windows.Forms.MessageBox, namespace: System.Windows.Forms
  DNMonthCalendar_HitTestInfo = interface; // type: System.Windows.Forms.MonthCalendar+HitTestInfo, namespace: System.Windows.Forms
  DNNumericUpDownAcceleration = interface; // type: System.Windows.Forms.NumericUpDownAcceleration, namespace: System.Windows.Forms
  DNPowerStatus = interface; // type: System.Windows.Forms.PowerStatus, namespace: System.Windows.Forms
  DNProfessionalColors = interface; // type: System.Windows.Forms.ProfessionalColors, namespace: System.Windows.Forms
  DNProfessionalColorTable = interface; // type: System.Windows.Forms.ProfessionalColorTable, namespace: System.Windows.Forms
  DNProgressBarRenderer = interface; // type: System.Windows.Forms.ProgressBarRenderer, namespace: System.Windows.Forms
  DNPropertyGrid_PropertyTabCollection = interface; // type: System.Windows.Forms.PropertyGrid+PropertyTabCollection, namespace: System.Windows.Forms
  DNPropertyGridCommands = interface; // type: System.Windows.Forms.PropertyGridInternal.PropertyGridCommands, namespace: System.Windows.Forms.PropertyGridInternal
  DNRadioButtonRenderer = interface; // type: System.Windows.Forms.RadioButtonRenderer, namespace: System.Windows.Forms
  DNScreen = interface; // type: System.Windows.Forms.Screen, namespace: System.Windows.Forms
  DNScrollableControl_DockPaddingEdges = interface; // type: System.Windows.Forms.ScrollableControl+DockPaddingEdges, namespace: System.Windows.Forms
  DNScrollBarRenderer = interface; // type: System.Windows.Forms.ScrollBarRenderer, namespace: System.Windows.Forms
  DNScrollProperties = interface; // type: System.Windows.Forms.ScrollProperties, namespace: System.Windows.Forms
  DNHScrollProperties = interface; // type: System.Windows.Forms.HScrollProperties, namespace: System.Windows.Forms
  DNVScrollProperties = interface; // type: System.Windows.Forms.VScrollProperties, namespace: System.Windows.Forms
  DNSelectionRange = interface; // type: System.Windows.Forms.SelectionRange, namespace: System.Windows.Forms
  DNSendKeys = interface; // type: System.Windows.Forms.SendKeys, namespace: System.Windows.Forms
  DNStatusBar_StatusBarPanelCollection = interface; // type: System.Windows.Forms.StatusBar+StatusBarPanelCollection, namespace: System.Windows.Forms
  DNSystemInformation = interface; // type: System.Windows.Forms.SystemInformation, namespace: System.Windows.Forms
  DNTabControl_TabPageCollection = interface; // type: System.Windows.Forms.TabControl+TabPageCollection, namespace: System.Windows.Forms
  DNTableLayoutStyle = interface; // type: System.Windows.Forms.TableLayoutStyle, namespace: System.Windows.Forms
  DNColumnStyle = interface; // type: System.Windows.Forms.ColumnStyle, namespace: System.Windows.Forms
  DNRowStyle = interface; // type: System.Windows.Forms.RowStyle, namespace: System.Windows.Forms
  DNTableLayoutStyleCollection = interface; // type: System.Windows.Forms.TableLayoutStyleCollection, namespace: System.Windows.Forms
  DNTableLayoutColumnStyleCollection = interface; // type: System.Windows.Forms.TableLayoutColumnStyleCollection, namespace: System.Windows.Forms
  DNTableLayoutRowStyleCollection = interface; // type: System.Windows.Forms.TableLayoutRowStyleCollection, namespace: System.Windows.Forms
  DNTabRenderer = interface; // type: System.Windows.Forms.TabRenderer, namespace: System.Windows.Forms
  DNTextBoxRenderer = interface; // type: System.Windows.Forms.TextBoxRenderer, namespace: System.Windows.Forms
  DNTextRenderer = interface; // type: System.Windows.Forms.TextRenderer, namespace: System.Windows.Forms
  DNToolBar_ToolBarButtonCollection = interface; // type: System.Windows.Forms.ToolBar+ToolBarButtonCollection, namespace: System.Windows.Forms
  DNToolStripManager = interface; // type: System.Windows.Forms.ToolStripManager, namespace: System.Windows.Forms
  DNToolStripRenderer = interface; // type: System.Windows.Forms.ToolStripRenderer, namespace: System.Windows.Forms
  DNToolStripProfessionalRenderer = interface; // type: System.Windows.Forms.ToolStripProfessionalRenderer, namespace: System.Windows.Forms
  DNToolStripSystemRenderer = interface; // type: System.Windows.Forms.ToolStripSystemRenderer, namespace: System.Windows.Forms
  DNTrackBarRenderer = interface; // type: System.Windows.Forms.TrackBarRenderer, namespace: System.Windows.Forms
  DNTreeNodeCollection = interface; // type: System.Windows.Forms.TreeNodeCollection, namespace: System.Windows.Forms
  DNTreeViewHitTestInfo = interface; // type: System.Windows.Forms.TreeViewHitTestInfo, namespace: System.Windows.Forms
  DNVisualStyleElement = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Button = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Button, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Button_CheckBox = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Button+CheckBox, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Button_GroupBox = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Button+GroupBox, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Button_PushButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Button+PushButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Button_RadioButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Button+RadioButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Button_UserButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Button+UserButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ComboBox = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ComboBox, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ComboBox_DropDownButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ComboBox+DropDownButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_HeaderBackground = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+HeaderBackground, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_HeaderClose = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+HeaderClose, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_HeaderPin = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+HeaderPin, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_IEBarMenu = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+IEBarMenu, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_NormalGroupBackground = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupBackground, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_NormalGroupCollapse = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupCollapse, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_NormalGroupExpand = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupExpand, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_NormalGroupHead = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupHead, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_SpecialGroupBackground = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupBackground, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_SpecialGroupCollapse = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupCollapse, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_SpecialGroupExpand = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupExpand, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ExplorerBar_SpecialGroupHead = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupHead, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Header = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Header, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Header_Item = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Header+Item, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Header_ItemLeft = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Header+ItemLeft, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Header_ItemRight = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Header+ItemRight, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Header_SortArrow = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Header+SortArrow, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ListView = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ListView, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ListView_Detail = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+Detail, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ListView_EmptyText = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+EmptyText, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ListView_Group = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+Group, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ListView_Item = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+Item, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ListView_SortedDetail = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+SortedDetail, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu_BarDropDown = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+BarDropDown, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu_BarItem = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+BarItem, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu_Chevron = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+Chevron, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu_DropDown = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+DropDown, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu_Item = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+Item, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Menu_Separator = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+Separator, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_MenuBand = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+MenuBand, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_MenuBand_NewApplicationButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+MenuBand+NewApplicationButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_MenuBand_Separator = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+MenuBand+Separator, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Page = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Page, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Page_Down = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Page+Down, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Page_DownHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Page+DownHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Page_Up = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Page+Up, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Page_UpHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Page+UpHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ProgressBar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ProgressBar_Bar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+Bar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ProgressBar_BarVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+BarVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ProgressBar_Chunk = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+Chunk, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ProgressBar_ChunkVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+ChunkVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Rebar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Rebar_Band = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+Band, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Rebar_Chevron = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+Chevron, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Rebar_ChevronVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+ChevronVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Rebar_Gripper = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+Gripper, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Rebar_GripperVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+GripperVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_ArrowButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+ArrowButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_GripperHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+GripperHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_GripperVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+GripperVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_LeftTrackHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+LeftTrackHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_LowerTrackVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+LowerTrackVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_RightTrackHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+RightTrackHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_SizeBox = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+SizeBox, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_ThumbButtonHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+ThumbButtonHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_ThumbButtonVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+ThumbButtonVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ScrollBar_UpperTrackVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+UpperTrackVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Spin = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Spin, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Spin_Down = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+Down, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Spin_DownHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+DownHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Spin_Up = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+Up, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Spin_UpHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+UpHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_LogOff = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+LogOff, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_LogOffButtons = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+LogOffButtons, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_MorePrograms = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+MorePrograms, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_MoreProgramsArrow = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+MoreProgramsArrow, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_PlaceList = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+PlaceList, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_PlaceListSeparator = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+PlaceListSeparator, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_Preview = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+Preview, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_ProgList = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+ProgList, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_ProgListSeparator = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+ProgListSeparator, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_UserPane = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+UserPane, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_StartPanel_UserPicture = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+UserPicture, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Status = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Status, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Status_Bar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Status+Bar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Status_Gripper = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Status+Gripper, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Status_GripperPane = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Status+GripperPane, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Status_Pane = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Status+Pane, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_Body = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+Body, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_Pane = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+Pane, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TabItem = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItem, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TabItemBothEdges = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItemBothEdges, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TabItemLeftEdge = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItemLeftEdge, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TabItemRightEdge = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItemRightEdge, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TopTabItem = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItem, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TopTabItemBothEdges = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItemBothEdges, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TopTabItemLeftEdge = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItemLeftEdge, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Tab_TopTabItemRightEdge = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItemRightEdge, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TaskBand = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TaskBand_FlashButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand+FlashButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TaskBand_FlashButtonGroupMenu = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand+FlashButtonGroupMenu, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TaskBand_GroupCount = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand+GroupCount, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_BackgroundBottom = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundBottom, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_BackgroundLeft = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundLeft, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_BackgroundRight = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundRight, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_BackgroundTop = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundTop, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_SizingBarBottom = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarBottom, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_SizingBarLeft = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarLeft, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_SizingBarRight = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarRight, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Taskbar_SizingBarTop = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarTop, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TaskbarClock = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TaskbarClock, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TaskbarClock_Time = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TaskbarClock+Time, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TextBox = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TextBox_Caret = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox+Caret, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TextBox_TextEdit = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox+TextEdit, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar_Button = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar_DropDownButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+DropDownButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar_SeparatorHorizontal = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SeparatorHorizontal, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar_SeparatorVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SeparatorVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar_SplitButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SplitButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolBar_SplitButtonDropDown = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SplitButtonDropDown, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolTip = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolTip_Balloon = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+Balloon, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolTip_BalloonTitle = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+BalloonTitle, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolTip_Close = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+Close, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolTip_Standard = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+Standard, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_ToolTip_StandardTitle = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+StandardTitle, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_Thumb = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+Thumb, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_ThumbBottom = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbBottom, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_ThumbLeft = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbLeft, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_ThumbRight = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbRight, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_ThumbTop = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbTop, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_ThumbVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_Ticks = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+Ticks, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_TicksVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+TicksVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_Track = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+Track, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrackBar_TrackVertical = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+TrackVertical, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrayNotify = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrayNotify, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrayNotify_AnimateBackground = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrayNotify+AnimateBackground, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TrayNotify_Background = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TrayNotify+Background, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TreeView = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TreeView_Branch = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView+Branch, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TreeView_Glyph = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView+Glyph, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_TreeView_Item = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView+Item, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_Caption = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+Caption, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_CaptionSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+CaptionSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_CloseButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+CloseButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_Dialog = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+Dialog, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_FrameBottom = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameBottom, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_FrameBottomSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameBottomSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_FrameLeft = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameLeft, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_FrameLeftSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameLeftSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_FrameRight = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameRight, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_FrameRightSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameRightSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_HelpButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+HelpButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_HorizontalScroll = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+HorizontalScroll, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_HorizontalThumb = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+HorizontalThumb, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MaxButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MaxButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MaxCaption = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MaxCaption, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MdiCloseButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiCloseButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MdiHelpButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiHelpButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MdiMinButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiMinButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MdiRestoreButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiRestoreButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MdiSysButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiSysButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MinButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MinButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_MinCaption = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MinCaption, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_RestoreButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+RestoreButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallCaption = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallCaption, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallCaptionSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallCaptionSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallCloseButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallCloseButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallFrameBottom = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameBottom, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallFrameBottomSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameBottomSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallFrameLeft = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameLeft, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallFrameLeftSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameLeftSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallFrameRight = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameRight, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallFrameRightSizingTemplate = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameRightSizingTemplate, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallMaxCaption = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallMaxCaption, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SmallMinCaption = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallMinCaption, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_SysButton = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SysButton, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_VerticalScroll = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+VerticalScroll, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleElement_Window_VerticalThumb = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleElement+Window+VerticalThumb, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleInformation = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleInformation, namespace: System.Windows.Forms.VisualStyles
  DNVisualStyleRenderer = interface; // type: System.Windows.Forms.VisualStyles.VisualStyleRenderer, namespace: System.Windows.Forms.VisualStyles
  DNWebBrowserSiteBase = interface; // type: System.Windows.Forms.WebBrowserSiteBase, namespace: System.Windows.Forms

{ delegates }

  [DNTypeName('System.Windows.Forms.Application+MessageLoopCallback')]
  DNApplication_MessageLoopCallback = function: Boolean of object;

  [DNTypeName('System.Windows.Forms.BindingCompleteEventHandler')]
  DNBindingCompleteEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNBindingCompleteEventArgs) of object;

  [DNTypeName('System.Windows.Forms.BindingManagerDataErrorEventHandler')]
  DNBindingManagerDataErrorEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNBindingManagerDataErrorEventArgs) of object;

  [DNTypeName('System.Windows.Forms.CacheVirtualItemsEventHandler')]
  DNCacheVirtualItemsEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNCacheVirtualItemsEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ColumnClickEventHandler')]
  DNColumnClickEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNColumnClickEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ColumnReorderedEventHandler')]
  DNColumnReorderedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNColumnReorderedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ColumnWidthChangedEventHandler')]
  DNColumnWidthChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNColumnWidthChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ColumnWidthChangingEventHandler')]
  DNColumnWidthChangingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNColumnWidthChangingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ContentsResizedEventHandler')]
  DNContentsResizedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNContentsResizedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ControlEventHandler')]
  DNControlEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNControlEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ConvertEventHandler')]
  DNConvertEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNConvertEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler')]
  DNDataGridViewAutoSizeColumnModeEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewAutoSizeColumnModeEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler')]
  DNDataGridViewAutoSizeColumnsModeEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewAutoSizeColumnsModeEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeModeEventHandler')]
  DNDataGridViewAutoSizeModeEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewAutoSizeModeEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewBindingCompleteEventHandler')]
  DNDataGridViewBindingCompleteEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewBindingCompleteEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellCancelEventHandler')]
  DNDataGridViewCellCancelEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellCancelEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler')]
  DNDataGridViewCellContextMenuStripNeededEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellContextMenuStripNeededEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler')]
  DNDataGridViewCellErrorTextNeededEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellErrorTextNeededEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellEventHandler')]
  DNDataGridViewCellEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellFormattingEventHandler')]
  DNDataGridViewCellFormattingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellFormattingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellMouseEventHandler')]
  DNDataGridViewCellMouseEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellMouseEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellPaintingEventHandler')]
  DNDataGridViewCellPaintingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellPaintingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellParsingEventHandler')]
  DNDataGridViewCellParsingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellParsingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellStateChangedEventHandler')]
  DNDataGridViewCellStateChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellStateChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler')]
  DNDataGridViewCellStyleContentChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellStyleContentChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler')]
  DNDataGridViewCellToolTipTextNeededEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellToolTipTextNeededEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellValidatingEventHandler')]
  DNDataGridViewCellValidatingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellValidatingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewCellValueEventHandler')]
  DNDataGridViewCellValueEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewCellValueEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler')]
  DNDataGridViewColumnDividerDoubleClickEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewColumnDividerDoubleClickEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnEventHandler')]
  DNDataGridViewColumnEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewColumnEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnStateChangedEventHandler')]
  DNDataGridViewColumnStateChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewColumnStateChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewDataErrorEventHandler')]
  DNDataGridViewDataErrorEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewDataErrorEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewEditingControlShowingEventHandler')]
  DNDataGridViewEditingControlShowingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewEditingControlShowingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowCancelEventHandler')]
  DNDataGridViewRowCancelEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowCancelEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler')]
  DNDataGridViewRowContextMenuStripNeededEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowContextMenuStripNeededEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler')]
  DNDataGridViewRowDividerDoubleClickEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowDividerDoubleClickEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler')]
  DNDataGridViewRowErrorTextNeededEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowErrorTextNeededEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowEventHandler')]
  DNDataGridViewRowEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler')]
  DNDataGridViewRowHeightInfoNeededEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowHeightInfoNeededEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler')]
  DNDataGridViewRowHeightInfoPushedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowHeightInfoPushedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowPostPaintEventHandler')]
  DNDataGridViewRowPostPaintEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowPostPaintEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowPrePaintEventHandler')]
  DNDataGridViewRowPrePaintEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowPrePaintEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowsAddedEventHandler')]
  DNDataGridViewRowsAddedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowsAddedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowsRemovedEventHandler')]
  DNDataGridViewRowsRemovedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowsRemovedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewRowStateChangedEventHandler')]
  DNDataGridViewRowStateChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewRowStateChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DataGridViewSortCompareEventHandler')]
  DNDataGridViewSortCompareEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDataGridViewSortCompareEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DateBoldEventHandler')]
  DNDateBoldEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDateBoldEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DateRangeEventHandler')]
  DNDateRangeEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDateRangeEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DpiChangedEventHandler')]
  DNDpiChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDpiChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DragEventHandler')]
  DNDragEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDragEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DrawItemEventHandler')]
  DNDrawItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDrawItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DrawListViewColumnHeaderEventHandler')]
  DNDrawListViewColumnHeaderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDrawListViewColumnHeaderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DrawListViewItemEventHandler')]
  DNDrawListViewItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDrawListViewItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DrawListViewSubItemEventHandler')]
  DNDrawListViewSubItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDrawListViewSubItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DrawToolTipEventHandler')]
  DNDrawToolTipEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDrawToolTipEventArgs) of object;

  [DNTypeName('System.Windows.Forms.DrawTreeNodeEventHandler')]
  DNDrawTreeNodeEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNDrawTreeNodeEventArgs) of object;

  [DNTypeName('System.Windows.Forms.FormClosedEventHandler')]
  DNFormClosedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNFormClosedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.FormClosingEventHandler')]
  DNFormClosingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNFormClosingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.GiveFeedbackEventHandler')]
  DNGiveFeedbackEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNGiveFeedbackEventArgs) of object;

  [DNTypeName('System.Windows.Forms.HelpEventHandler')]
  DNHelpEventHandler = procedure(sender: DDN.mscorlib.DNObject; hlpevent: DNHelpEventArgs) of object;

  [DNTypeName('System.Windows.Forms.HtmlElementErrorEventHandler')]
  DNHtmlElementErrorEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNHtmlElementErrorEventArgs) of object;

  [DNTypeName('System.Windows.Forms.HtmlElementEventHandler')]
  DNHtmlElementEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNHtmlElementEventArgs) of object;

  [DNTypeName('System.Windows.Forms.InputLanguageChangedEventHandler')]
  DNInputLanguageChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNInputLanguageChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.InputLanguageChangingEventHandler')]
  DNInputLanguageChangingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNInputLanguageChangingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.InvalidateEventHandler')]
  DNInvalidateEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNInvalidateEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ItemChangedEventHandler')]
  DNItemChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNItemChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ItemCheckedEventHandler')]
  DNItemCheckedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNItemCheckedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ItemCheckEventHandler')]
  DNItemCheckEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNItemCheckEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ItemDragEventHandler')]
  DNItemDragEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNItemDragEventArgs) of object;

  [DNTypeName('System.Windows.Forms.KeyEventHandler')]
  DNKeyEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNKeyEventArgs) of object;

  [DNTypeName('System.Windows.Forms.KeyPressEventHandler')]
  DNKeyPressEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNKeyPressEventArgs) of object;

  [DNTypeName('System.Windows.Forms.LabelEditEventHandler')]
  DNLabelEditEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNLabelEditEventArgs) of object;

  [DNTypeName('System.Windows.Forms.LayoutEventHandler')]
  DNLayoutEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNLayoutEventArgs) of object;

  [DNTypeName('System.Windows.Forms.LinkClickedEventHandler')]
  DNLinkClickedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNLinkClickedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.LinkLabelLinkClickedEventHandler')]
  DNLinkLabelLinkClickedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNLinkLabelLinkClickedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ListControlConvertEventHandler')]
  DNListControlConvertEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNListControlConvertEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ListViewItemMouseHoverEventHandler')]
  DNListViewItemMouseHoverEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNListViewItemMouseHoverEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ListViewItemSelectionChangedEventHandler')]
  DNListViewItemSelectionChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNListViewItemSelectionChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler')]
  DNListViewVirtualItemsSelectionRangeChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNListViewVirtualItemsSelectionRangeChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.MaskInputRejectedEventHandler')]
  DNMaskInputRejectedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNMaskInputRejectedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.MeasureItemEventHandler')]
  DNMeasureItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNMeasureItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.MethodInvoker')]
  DNMethodInvoker = procedure of object;

  [DNTypeName('System.Windows.Forms.MouseEventHandler')]
  DNMouseEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNMouseEventArgs) of object;

  [DNTypeName('System.Windows.Forms.NavigateEventHandler')]
  DNNavigateEventHandler = procedure(sender: DDN.mscorlib.DNObject; ne: DNNavigateEventArgs) of object;

  [DNTypeName('System.Windows.Forms.NodeLabelEditEventHandler')]
  DNNodeLabelEditEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNNodeLabelEditEventArgs) of object;

  [DNTypeName('System.Windows.Forms.PaintEventHandler')]
  DNPaintEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNPaintEventArgs) of object;

  [DNTypeName('System.Windows.Forms.PopupEventHandler')]
  DNPopupEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNPopupEventArgs) of object;

  [DNTypeName('System.Windows.Forms.PreviewKeyDownEventHandler')]
  DNPreviewKeyDownEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNPreviewKeyDownEventArgs) of object;

  [DNTypeName('System.Windows.Forms.PropertyTabChangedEventHandler')]
  DNPropertyTabChangedEventHandler = procedure(s: DDN.mscorlib.DNObject; e: DNPropertyTabChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.PropertyValueChangedEventHandler')]
  DNPropertyValueChangedEventHandler = procedure(s: DDN.mscorlib.DNObject; e: DNPropertyValueChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.QueryAccessibilityHelpEventHandler')]
  DNQueryAccessibilityHelpEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNQueryAccessibilityHelpEventArgs) of object;

  [DNTypeName('System.Windows.Forms.QueryContinueDragEventHandler')]
  DNQueryContinueDragEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNQueryContinueDragEventArgs) of object;

  [DNTypeName('System.Windows.Forms.QuestionEventHandler')]
  DNQuestionEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNQuestionEventArgs) of object;

  [DNTypeName('System.Windows.Forms.RetrieveVirtualItemEventHandler')]
  DNRetrieveVirtualItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNRetrieveVirtualItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ScrollEventHandler')]
  DNScrollEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNScrollEventArgs) of object;

  [DNTypeName('System.Windows.Forms.SearchForVirtualItemEventHandler')]
  DNSearchForVirtualItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNSearchForVirtualItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.SelectedGridItemChangedEventHandler')]
  DNSelectedGridItemChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNSelectedGridItemChangedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.SplitterCancelEventHandler')]
  DNSplitterCancelEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNSplitterCancelEventArgs) of object;

  [DNTypeName('System.Windows.Forms.SplitterEventHandler')]
  DNSplitterEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNSplitterEventArgs) of object;

  [DNTypeName('System.Windows.Forms.StatusBarDrawItemEventHandler')]
  DNStatusBarDrawItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; sbdevent: DNStatusBarDrawItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.StatusBarPanelClickEventHandler')]
  DNStatusBarPanelClickEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNStatusBarPanelClickEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TabControlCancelEventHandler')]
  DNTabControlCancelEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTabControlCancelEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TabControlEventHandler')]
  DNTabControlEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTabControlEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TableLayoutCellPaintEventHandler')]
  DNTableLayoutCellPaintEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTableLayoutCellPaintEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolBarButtonClickEventHandler')]
  DNToolBarButtonClickEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolBarButtonClickEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripArrowRenderEventHandler')]
  DNToolStripArrowRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripArrowRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripContentPanelRenderEventHandler')]
  DNToolStripContentPanelRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripContentPanelRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownClosedEventHandler')]
  DNToolStripDropDownClosedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripDropDownClosedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownClosingEventHandler')]
  DNToolStripDropDownClosingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripDropDownClosingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripGripRenderEventHandler')]
  DNToolStripGripRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripGripRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripItemClickedEventHandler')]
  DNToolStripItemClickedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripItemClickedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripItemEventHandler')]
  DNToolStripItemEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripItemEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripItemImageRenderEventHandler')]
  DNToolStripItemImageRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripItemImageRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripItemRenderEventHandler')]
  DNToolStripItemRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripItemRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripItemTextRenderEventHandler')]
  DNToolStripItemTextRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripItemTextRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripPanelRenderEventHandler')]
  DNToolStripPanelRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripPanelRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripRenderEventHandler')]
  DNToolStripRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.ToolStripSeparatorRenderEventHandler')]
  DNToolStripSeparatorRenderEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNToolStripSeparatorRenderEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TreeNodeMouseClickEventHandler')]
  DNTreeNodeMouseClickEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTreeNodeMouseClickEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TreeNodeMouseHoverEventHandler')]
  DNTreeNodeMouseHoverEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTreeNodeMouseHoverEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TreeViewCancelEventHandler')]
  DNTreeViewCancelEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTreeViewCancelEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TreeViewEventHandler')]
  DNTreeViewEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTreeViewEventArgs) of object;

  [DNTypeName('System.Windows.Forms.TypeValidationEventHandler')]
  DNTypeValidationEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNTypeValidationEventArgs) of object;

  [DNTypeName('System.Windows.Forms.UICuesEventHandler')]
  DNUICuesEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNUICuesEventArgs) of object;

  [DNTypeName('System.Windows.Forms.UpDownEventHandler')]
  DNUpDownEventHandler = procedure(source: DDN.mscorlib.DNObject; e: DNUpDownEventArgs) of object;

  [DNTypeName('System.Windows.Forms.WebBrowserDocumentCompletedEventHandler')]
  DNWebBrowserDocumentCompletedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNWebBrowserDocumentCompletedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.WebBrowserNavigatedEventHandler')]
  DNWebBrowserNavigatedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNWebBrowserNavigatedEventArgs) of object;

  [DNTypeName('System.Windows.Forms.WebBrowserNavigatingEventHandler')]
  DNWebBrowserNavigatingEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNWebBrowserNavigatingEventArgs) of object;

  [DNTypeName('System.Windows.Forms.WebBrowserProgressChangedEventHandler')]
  DNWebBrowserProgressChangedEventHandler = procedure(sender: DDN.mscorlib.DNObject; e: DNWebBrowserProgressChangedEventArgs) of object;




{ objects }

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IBindableComponent')]
  DNIBindableComponent = interface(DDN.System.DNIComponent)
  ['{7317BDAA-2295-30F4-B8D7-0914FA991CA9}']
  { getters & setters } 

    function get_DataBindings: DNControlBindingsCollection;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);

  { propertys } 

    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
  end;

  //-------------namespace: System.Windows.Forms.Automation----------------
  [DNTypeName('System.Windows.Forms.Automation.IAutomationLiveRegion')]
  DNIAutomationLiveRegion = interface(DDN.mscorlib.DNObject)
  ['{63ED0FE6-D0F8-3130-B890-9B37DCDBC587}']
  { getters & setters } 

    function get_LiveSetting: DNAutomationLiveSetting;
    procedure set_LiveSetting(value: DNAutomationLiveSetting);

  { propertys } 

    property LiveSetting: DNAutomationLiveSetting read get_LiveSetting write set_LiveSetting;
  end;

  //-------------namespace: System.Windows.Forms.ComponentModel.Com2Interop----------------
  [DNTypeName('System.Windows.Forms.ComponentModel.Com2Interop.ICom2PropertyPageDisplayService')]
  DNICom2PropertyPageDisplayService = interface(DDN.mscorlib.DNObject)
  ['{D1B82518-99B5-3048-BF9A-9942D9252218}']
  { methods } 

    procedure ShowPropertyPage(title: string; component: DDN.mscorlib.DNObject; &dispid: Int32; pageGuid: DDN.mscorlib.DNGuid; parentHandle: IntPtr);

  end;

  //-------------namespace: System.Windows.Forms.ComponentModel.Com2Interop----------------
  [DNTypeName('System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser')]
  DNIComPropertyBrowser = interface(DDN.mscorlib.DNObject)
  ['{EFCBE0CD-371E-3B14-A4BB-9DAA94E96D12}']
  { getters & setters } 

    function get_InPropertySet: Boolean;

  { events } 

    procedure add_ComComponentNameChanged(value: DDN.System.DNComponentRenameEventHandler);
    procedure remove_ComComponentNameChanged(value: DDN.System.DNComponentRenameEventHandler);

  { methods } 

    procedure DropDownDone;
    function EnsurePendingChangesCommitted: Boolean;
    procedure HandleF4;
    procedure LoadState(key: DDN.mscorlib.DNRegistryKey);
    procedure SaveState(key: DDN.mscorlib.DNRegistryKey);

  { propertys } 

    property InPropertySet: Boolean read get_InPropertySet;
  end;

  //-------------namespace: System.Windows.Forms.Design----------------
  [DNTypeName('System.Windows.Forms.Design.IUIService')]
  DNIUIService = interface(DDN.mscorlib.DNObject)
  ['{06A9C74B-5E32-4561-BE73-381B37869F4F}']
  { getters & setters } 

    function get_Styles: DDN.mscorlib.DNIDictionary;

  { methods } 

    function CanShowComponentEditor(component: DDN.mscorlib.DNObject): Boolean;
    function GetDialogOwnerWindow: DNIWin32Window;
    procedure SetUIDirty;
    function ShowComponentEditor(component: DDN.mscorlib.DNObject; parent: DNIWin32Window): Boolean;
    function ShowDialog(form: DNForm): DNDialogResult;
    procedure ShowError(message: string); overload;
    procedure ShowError(ex: DDN.mscorlib.DNException); overload;
    procedure ShowError(ex: DDN.mscorlib.DNException; message: string); overload;
    procedure ShowMessage(message: string); overload;
    procedure ShowMessage(message: string; caption: string); overload;
    function ShowMessage(message: string; caption: string; buttons: DNMessageBoxButtons): DNDialogResult; overload;
    function ShowToolWindow(toolWindow: DDN.mscorlib.DNGuid): Boolean;

  { propertys } 

    property Styles: DDN.mscorlib.DNIDictionary read get_Styles;
  end;

  //-------------namespace: System.Windows.Forms.Design----------------
  [DNTypeName('System.Windows.Forms.Design.IWindowsFormsEditorService')]
  DNIWindowsFormsEditorService = interface(DDN.mscorlib.DNObject)
  ['{4A424CBB-1F36-37F4-9F2E-9AEF35294F08}']
  { methods } 

    procedure CloseDropDown;
    procedure DropDownControl(control: DNControl);
    function ShowDialog(dialog: DNForm): DNDialogResult;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IButtonControl')]
  DNIButtonControl = interface(DDN.mscorlib.DNObject)
  ['{410659A6-45E2-308D-8893-BFC0914842B8}']
  { getters & setters } 

    function get_DialogResult: DNDialogResult;
    procedure set_DialogResult(value: DNDialogResult);

  { methods } 

    procedure NotifyDefault(value: Boolean);
    procedure PerformClick;

  { propertys } 

    property DialogResult: DNDialogResult read get_DialogResult write set_DialogResult;
  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ICommandExecutor')]
  DNICommandExecutor = interface(DDN.mscorlib.DNObject)
  ['{9F3E075F-F9AB-3E65-A9F9-BDC7C6EAA694}']
  { methods } 

    procedure Execute;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IComponentEditorPageSite')]
  DNIComponentEditorPageSite = interface(DDN.mscorlib.DNObject)
  ['{7ABA37FE-1CF6-3A9F-9B48-F508D5A5DB7F}']
  { methods } 

    function GetControl: DNControl;
    procedure SetDirty;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IContainerControl')]
  DNIContainerControl = interface(DDN.mscorlib.DNObject)
  ['{22621E63-3880-3B33-8829-BA3D7BC41958}']
  { getters & setters } 

    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);

  { methods } 

    function ActivateControl(active: DNControl): Boolean;

  { propertys } 

    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.ICurrencyManagerProvider')]
  DNICurrencyManagerProvider = interface(DDN.mscorlib.DNObject)
  ['{B53C5201-D111-3F17-B280-2D8EB9E08A19}']
  { getters & setters } 

    function get_CurrencyManager: DNCurrencyManager;

  { methods } 

    function GetRelatedCurrencyManager(dataMember: string): DNCurrencyManager;

  { propertys } 

    property CurrencyManager: DNCurrencyManager read get_CurrencyManager;
  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IDataGridColumnStyleEditingNotificationService')]
  DNIDataGridColumnStyleEditingNotificationService = interface(DDN.mscorlib.DNObject)
  ['{EBA118A9-2B28-3FE5-8F38-2B849B8E4EF6}']
  { methods } 

    procedure ColumnStartedEditing(editingControl: DNControl);

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IDataGridEditingService')]
  DNIDataGridEditingService = interface(DDN.mscorlib.DNObject)
  ['{82B051D2-5357-39D0-B6B3-3C92CD8FFD44}']
  { methods } 

    function BeginEdit(gridColumn: DNDataGridColumnStyle; rowNumber: Int32): Boolean;
    function EndEdit(gridColumn: DNDataGridColumnStyle; rowNumber: Int32; shouldAbort: Boolean): Boolean;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IDataGridViewEditingCell')]
  DNIDataGridViewEditingCell = interface(DDN.mscorlib.DNObject)
  ['{555228EF-CB58-3505-91E4-FE106B8388AF}']
  { getters & setters } 

    function get_EditingCellFormattedValue: DDN.mscorlib.DNObject;
    procedure set_EditingCellFormattedValue(value: DDN.mscorlib.DNObject);
    function get_EditingCellValueChanged: Boolean;
    procedure set_EditingCellValueChanged(value: Boolean);

  { methods } 

    function GetEditingCellFormattedValue(context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure PrepareEditingCellForEdit(selectAll: Boolean);

  { propertys } 

    property EditingCellFormattedValue: DDN.mscorlib.DNObject read get_EditingCellFormattedValue write set_EditingCellFormattedValue;
    property EditingCellValueChanged: Boolean read get_EditingCellValueChanged write set_EditingCellValueChanged;
  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IDataGridViewEditingControl')]
  DNIDataGridViewEditingControl = interface(DDN.mscorlib.DNObject)
  ['{E9A8FBA9-932B-3052-83FD-BFDFCDE91949}']
  { getters & setters } 

    function get_EditingControlDataGridView: DNDataGridView;
    procedure set_EditingControlDataGridView(value: DNDataGridView);
    function get_EditingControlFormattedValue: DDN.mscorlib.DNObject;
    procedure set_EditingControlFormattedValue(value: DDN.mscorlib.DNObject);
    function get_EditingControlRowIndex: Int32;
    procedure set_EditingControlRowIndex(value: Int32);
    function get_EditingControlValueChanged: Boolean;
    procedure set_EditingControlValueChanged(value: Boolean);
    function get_EditingPanelCursor: DNCursor;
    function get_RepositionEditingControlOnValueChange: Boolean;

  { methods } 

    procedure ApplyCellStyleToEditingControl(dataGridViewCellStyle: DNDataGridViewCellStyle);
    function EditingControlWantsInputKey(keyData: DNKeys; dataGridViewWantsInputKey: Boolean): Boolean;
    function GetEditingControlFormattedValue(context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure PrepareEditingControlForEdit(selectAll: Boolean);

  { propertys } 

    property EditingControlDataGridView: DNDataGridView read get_EditingControlDataGridView write set_EditingControlDataGridView;
    property EditingControlFormattedValue: DDN.mscorlib.DNObject read get_EditingControlFormattedValue write set_EditingControlFormattedValue;
    property EditingControlRowIndex: Int32 read get_EditingControlRowIndex write set_EditingControlRowIndex;
    property EditingControlValueChanged: Boolean read get_EditingControlValueChanged write set_EditingControlValueChanged;
    property EditingPanelCursor: DNCursor read get_EditingPanelCursor;
    property RepositionEditingControlOnValueChange: Boolean read get_RepositionEditingControlOnValueChange;
  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IDataObject')]
  DNIDataObject = interface(DDN.mscorlib.DNObject)
  ['{3CEE8CC1-1ADB-327F-9B97-7A9C8089BFB3}']
  { methods } 

    function GetData(format: string; autoConvert: Boolean): DDN.mscorlib.DNObject; overload;
    function GetData(format: string): DDN.mscorlib.DNObject; overload;
    function GetData(format: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    procedure SetData(format: string; autoConvert: Boolean; data: DDN.mscorlib.DNObject); overload;
    procedure SetData(format: string; data: DDN.mscorlib.DNObject); overload;
    procedure SetData(format: DDN.mscorlib.DNType; data: DDN.mscorlib.DNObject); overload;
    procedure SetData(data: DDN.mscorlib.DNObject); overload;
    function GetDataPresent(format: string; autoConvert: Boolean): Boolean; overload;
    function GetDataPresent(format: string): Boolean; overload;
    function GetDataPresent(format: DDN.mscorlib.DNType): Boolean; overload;
    function GetFormats(autoConvert: Boolean): TArray<string>; overload;
    function GetFormats: TArray<string>; overload;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IDropTarget')]
  DNIDropTarget = interface(DDN.mscorlib.DNObject)
  ['{F268BCF9-177D-300D-9EC1-FA7E2237EF3D}']
  { methods } 

    procedure OnDragEnter(e: DNDragEventArgs);
    procedure OnDragLeave(e: DDN.mscorlib.DNEventArgs);
    procedure OnDragDrop(e: DNDragEventArgs);
    procedure OnDragOver(e: DNDragEventArgs);

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IFeatureSupport')]
  DNIFeatureSupport = interface(DDN.mscorlib.DNObject)
  ['{865A0ED2-38E8-3762-BEB2-A408F8120A5B}']
  { methods } 

    function IsPresent(feature: DDN.mscorlib.DNObject): Boolean; overload;
    function IsPresent(feature: DDN.mscorlib.DNObject; minimumVersion: DDN.mscorlib.DNVersion): Boolean; overload;
    function GetVersionPresent(feature: DDN.mscorlib.DNObject): DDN.mscorlib.DNVersion;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IFileReaderService')]
  DNIFileReaderService = interface(DDN.mscorlib.DNObject)
  ['{A59B6834-2055-3A36-8295-449561464716}']
  { methods } 

    function OpenFileFromSource(relativePath: string): DDN.mscorlib.DNStream;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IMessageFilter')]
  DNIMessageFilter = interface(DDN.mscorlib.DNObject)
  ['{92284943-445B-3313-9051-CF2042255745}']
  { methods } 

    function PreFilterMessage(out m: DNMessage): Boolean;

  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IWin32Window')]
  DNIWin32Window = interface(DDN.mscorlib.DNObject)
  ['{458AB8A2-A1EA-4D7B-8EBE-DEE5D3D9442C}']
  { getters & setters } 

    function get_Handle: IntPtr;

  { propertys } 

    property Handle: IntPtr read get_Handle;
  end;

  //-------------namespace: System.Windows.Forms----------------
  [DNTypeName('System.Windows.Forms.IWindowTarget')]
  DNIWindowTarget = interface(DDN.mscorlib.DNObject)
  ['{30500331-9683-3C6E-9C5B-00D5AF9FF29B}']
  { methods } 

    procedure OnHandleChange(newHandle: IntPtr);
    procedure OnMessage(out m: DNMessage);

  end;

  //-------------namespace: System.Windows.Forms.PropertyGridInternal----------------
  [DNTypeName('System.Windows.Forms.PropertyGridInternal.IRootGridEntry')]
  DNIRootGridEntry = interface(DDN.mscorlib.DNObject)
  ['{D065389C-0995-3BAC-935A-6A3E2AE206FF}']
  { getters & setters } 

    function get_BrowsableAttributes: DDN.System.DNAttributeCollection;
    procedure set_BrowsableAttributes(value: DDN.System.DNAttributeCollection);

  { methods } 

    procedure ResetBrowsableAttributes;
    procedure ShowCategories(showCategories: Boolean);

  { propertys } 

    property BrowsableAttributes: DDN.System.DNAttributeCollection read get_BrowsableAttributes write set_BrowsableAttributes;
  end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_ClsidAttributeClass = interface(DDN.mscorlib.DNAttributeClass)
  ['{EED75889-67CC-5976-BFCB-B609B5CFD8CB}']
  { constructors } 

    {class} function init(clsid: string): DNAxHost_ClsidAttribute;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+ClsidAttribute')]
  DNAxHost_ClsidAttribute = interface(DDN.mscorlib.DNAttribute)
  ['{9643A7AA-9208-3728-A0EB-1EF0E118697E}']
  { getters & setters } 

    function get_Value: string;
    function get_TypeId: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDN.mscorlib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: string read get_Value;
    property TypeId: DDN.mscorlib.DNObject read get_TypeId;
  end;

  TDNAxHost_ClsidAttribute = class(TDNGenericImport<DNAxHost_ClsidAttributeClass, DNAxHost_ClsidAttribute>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_TypeLibraryTimeStampAttributeClass = interface(DDN.mscorlib.DNAttributeClass)
  ['{6D3CE06D-A1CE-50F9-BC0E-7B0AB99C6616}']
  { constructors } 

    {class} function init(timestamp: string): DNAxHost_TypeLibraryTimeStampAttribute;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+TypeLibraryTimeStampAttribute')]
  DNAxHost_TypeLibraryTimeStampAttribute = interface(DDN.mscorlib.DNAttribute)
  ['{9226E467-BA7A-34C6-B020-5ACAFF3A320D}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNDateTime;
    function get_TypeId: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDN.mscorlib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNDateTime read get_Value;
    property TypeId: DDN.mscorlib.DNObject read get_TypeId;
  end;

  TDNAxHost_TypeLibraryTimeStampAttribute = class(TDNGenericImport<DNAxHost_TypeLibraryTimeStampAttributeClass, DNAxHost_TypeLibraryTimeStampAttribute>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnDesignTimeVisibleAttributeClass = interface(DDN.mscorlib.DNAttributeClass)
  ['{E89251A7-054D-5E2D-8E20-8EC0E0EB769F}']
  { constructors } 

    {class} function init(visible: Boolean): DNDataGridViewColumnDesignTimeVisibleAttribute; overload;
    {class} function init: DNDataGridViewColumnDesignTimeVisibleAttribute; overload;

  { static fields getter & setter } 

   function __fakeFieldGet_Yes: DNDataGridViewColumnDesignTimeVisibleAttribute;
   function __fakeFieldGet_No: DNDataGridViewColumnDesignTimeVisibleAttribute;
   function __fakeFieldGet_Default: DNDataGridViewColumnDesignTimeVisibleAttribute;

  { static fields } 

    {class} property Yes: DNDataGridViewColumnDesignTimeVisibleAttribute read __fakeFieldGet_Yes;
    {class} property No: DNDataGridViewColumnDesignTimeVisibleAttribute read __fakeFieldGet_No;
    {class} property &Default: DNDataGridViewColumnDesignTimeVisibleAttribute read __fakeFieldGet_Default;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnDesignTimeVisibleAttribute')]
  DNDataGridViewColumnDesignTimeVisibleAttribute = interface(DDN.mscorlib.DNAttribute)
  ['{3882CE67-35E3-3EBF-B631-DC2EE07020EE}']
  { getters & setters } 

    function get_Visible: Boolean;
    function get_TypeId: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function IsDefaultAttribute: Boolean;
    function Match(obj: DDN.mscorlib.DNObject): Boolean;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Visible: Boolean read get_Visible;
    property TypeId: DDN.mscorlib.DNObject read get_TypeId;
  end;

  TDNDataGridViewColumnDesignTimeVisibleAttribute = class(TDNGenericImport<DNDataGridViewColumnDesignTimeVisibleAttributeClass, DNDataGridViewColumnDesignTimeVisibleAttribute>) end;

  //-------------namespace: System.Windows.Forms.Design----------------
  DNToolStripItemDesignerAvailabilityAttributeClass = interface(DDN.mscorlib.DNAttributeClass)
  ['{55CB5A04-C8D5-526A-9E4E-5BC7F62108EA}']
  { constructors } 

    {class} function init: DNToolStripItemDesignerAvailabilityAttribute; overload;
    {class} function init(visibility: DNToolStripItemDesignerAvailability): DNToolStripItemDesignerAvailabilityAttribute; overload;

  { static fields getter & setter } 

   function __fakeFieldGet_Default: DNToolStripItemDesignerAvailabilityAttribute;

  { static fields } 

    {class} property &Default: DNToolStripItemDesignerAvailabilityAttribute read __fakeFieldGet_Default;

  end;

  [DNTypeName('System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute')]
  DNToolStripItemDesignerAvailabilityAttribute = interface(DDN.mscorlib.DNAttribute)
  ['{E67515BE-ED70-399A-9CFB-6F709B017DDA}']
  { getters & setters } 

    function get_ItemAdditionVisibility: DNToolStripItemDesignerAvailability;
    function get_TypeId: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function IsDefaultAttribute: Boolean;
    function Match(obj: DDN.mscorlib.DNObject): Boolean;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ItemAdditionVisibility: DNToolStripItemDesignerAvailability read get_ItemAdditionVisibility;
    property TypeId: DDN.mscorlib.DNObject read get_TypeId;
  end;

  TDNToolStripItemDesignerAvailabilityAttribute = class(TDNGenericImport<DNToolStripItemDesignerAvailabilityAttributeClass, DNToolStripItemDesignerAvailabilityAttribute>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDockingAttributeClass = interface(DDN.mscorlib.DNAttributeClass)
  ['{D02BBB76-2F69-5E20-8D9F-ADCAF6E459E1}']
  { constructors } 

    {class} function init: DNDockingAttribute; overload;
    {class} function init(dockingBehavior: DNDockingBehavior): DNDockingAttribute; overload;

  { static fields getter & setter } 

   function __fakeFieldGet_Default: DNDockingAttribute;

  { static fields } 

    {class} property &Default: DNDockingAttribute read __fakeFieldGet_Default;

  end;

  [DNTypeName('System.Windows.Forms.DockingAttribute')]
  DNDockingAttribute = interface(DDN.mscorlib.DNAttribute)
  ['{8D65C6F5-2B10-3ACB-AF59-A16AAB0C6091}']
  { getters & setters } 

    function get_DockingBehavior: DNDockingBehavior;
    function get_TypeId: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function IsDefaultAttribute: Boolean;
    function Match(obj: DDN.mscorlib.DNObject): Boolean;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DockingBehavior: DNDockingBehavior read get_DockingBehavior;
    property TypeId: DDN.mscorlib.DNObject read get_TypeId;
  end;

  TDNDockingAttribute = class(TDNGenericImport<DNDockingAttributeClass, DNDockingAttribute>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRelatedImageListAttributeClass = interface(DDN.mscorlib.DNAttributeClass)
  ['{F8E656DC-DFFE-56C5-BDE2-4435B588C5BD}']
  { constructors } 

    {class} function init(relatedImageList: string): DNRelatedImageListAttribute;

  end;

  [DNTypeName('System.Windows.Forms.RelatedImageListAttribute')]
  DNRelatedImageListAttribute = interface(DDN.mscorlib.DNAttribute)
  ['{6DAA9B5A-5591-342D-B894-42DD466A303D}']
  { getters & setters } 

    function get_RelatedImageList: string;
    function get_TypeId: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function Match(obj: DDN.mscorlib.DNObject): Boolean;
    function IsDefaultAttribute: Boolean;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property RelatedImageList: string read get_RelatedImageList;
    property TypeId: DDN.mscorlib.DNObject read get_TypeId;
  end;

  TDNRelatedImageListAttribute = class(TDNGenericImport<DNRelatedImageListAttributeClass, DNRelatedImageListAttribute>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDomainUpDown_DomainUpDownItemCollectionClass = interface(DDN.mscorlib.DNArrayListClass)
  ['{7A3B75CF-BF0C-51DF-A4D3-0716B53A7C70}']
  end;

  [DNTypeName('System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection')]
  DNDomainUpDown_DomainUpDownItemCollection = interface(DDN.mscorlib.DNArrayList)
  ['{A05FA325-37CA-30F2-9E53-B9486D05BEED}']
  { getters & setters } 

    function get_Item(index: Int32): DDN.mscorlib.DNObject;
    procedure set_Item(index: Int32; value: DDN.mscorlib.DNObject);
    function get_Capacity: Int32;
    procedure set_Capacity(value: Int32);
    function get_Count: Int32;
    function get_IsFixedSize: Boolean;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { methods } 

    function Add(item: DDN.mscorlib.DNObject): Int32;
    procedure RemoveAt(item: Int32);
    procedure Insert(index: Int32; item: DDN.mscorlib.DNObject);
    procedure Remove(item: DDN.mscorlib.DNObject);
    procedure AddRange(c: DDN.mscorlib.DNICollection);
    function BinarySearch(index: Int32; count: Int32; value: DDN.mscorlib.DNObject; comparer: DDN.mscorlib.DNIComparer): Int32; overload;
    function BinarySearch(value: DDN.mscorlib.DNObject): Int32; overload;
    function BinarySearch(value: DDN.mscorlib.DNObject; comparer: DDN.mscorlib.DNIComparer): Int32; overload;
    procedure Clear;
    function Clone: DDN.mscorlib.DNObject;
    function &Contains(item: DDN.mscorlib.DNObject): Boolean;
    procedure CopyTo(&array: DDN.mscorlib.DNArray); overload;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; arrayIndex: Int32); overload;
    procedure CopyTo(index: Int32; &array: DDN.mscorlib.DNArray; arrayIndex: Int32; count: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator; overload;
    function GetEnumerator(index: Int32; count: Int32): DDN.mscorlib.DNIEnumerator; overload;
    function IndexOf(value: DDN.mscorlib.DNObject): Int32; overload;
    function IndexOf(value: DDN.mscorlib.DNObject; startIndex: Int32): Int32; overload;
    function IndexOf(value: DDN.mscorlib.DNObject; startIndex: Int32; count: Int32): Int32; overload;
    procedure InsertRange(index: Int32; c: DDN.mscorlib.DNICollection);
    function LastIndexOf(value: DDN.mscorlib.DNObject): Int32; overload;
    function LastIndexOf(value: DDN.mscorlib.DNObject; startIndex: Int32): Int32; overload;
    procedure RemoveRange(index: Int32; count: Int32);
    procedure Reverse; overload;
    procedure Reverse(index: Int32; count: Int32); overload;
    procedure SetRange(index: Int32; c: DDN.mscorlib.DNICollection);
    procedure Sort; overload;
    procedure Sort(comparer: DDN.mscorlib.DNIComparer); overload;
    procedure Sort(index: Int32; count: Int32; comparer: DDN.mscorlib.DNIComparer); overload;
    function ToArray: TArray<DDN.mscorlib.DNObject>; overload;
    function ToArray(&type: DDN.mscorlib.DNType): DDN.mscorlib.DNArray; overload;
    procedure TrimToSize;
    function LastIndexOf(value: DDN.mscorlib.DNObject; startIndex: Int32; count: Int32): Int32; overload;
    function GetRange(index: Int32; count: Int32): DDN.mscorlib.DNArrayList;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
    property Capacity: Int32 read get_Capacity write set_Capacity;
    property Count: Int32 read get_Count;
    property IsFixedSize: Boolean read get_IsFixedSize;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNDomainUpDown_DomainUpDownItemCollection = class(TDNGenericImport<DNDomainUpDown_DomainUpDownItemCollectionClass, DNDomainUpDown_DomainUpDownItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFileDialogCustomPlacesCollectionClass = interface(DDN.mscorlib.DNCollectionClass<DNFileDialogCustomPlace>)
  ['{07BF84BF-1E58-5A5D-94B7-E20757EAEA9F}']
  { constructors } 

    {class} function init: DNFileDialogCustomPlacesCollection;

  end;

  [DNTypeName('System.Windows.Forms.FileDialogCustomPlacesCollection')]
  DNFileDialogCustomPlacesCollection = interface(DDN.mscorlib.DNCollection<DNFileDialogCustomPlace>)
  ['{20C5E02D-E1E4-31B5-AFB7-204E72D19F5C}']
  { getters & setters } 

    function get_Count: Int32;

  { methods } 

    procedure Add(path: string); overload;
    procedure Add(knownFolderGuid: DDN.mscorlib.DNGuid); overload;
    procedure CopyTo(&array: TArray<DNFileDialogCustomPlace>; index: Int32);
    function &Contains(item: DNFileDialogCustomPlace): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator<DNFileDialogCustomPlace>;
    function IndexOf(item: DNFileDialogCustomPlace): Int32;
    procedure RemoveAt(index: Int32);
    procedure Insert(index: Int32; item: DNFileDialogCustomPlace);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
  end;

  TDNFileDialogCustomPlacesCollection = class(TDNGenericImport<DNFileDialogCustomPlacesCollectionClass, DNFileDialogCustomPlacesCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFormCollectionClass = interface(DDN.mscorlib.DNReadOnlyCollectionBaseClass)
  ['{9D6C5FB6-FB45-5E35-AC94-1F1FB3BC64C5}']
  { constructors } 

    {class} function init: DNFormCollection;

  end;

  [DNTypeName('System.Windows.Forms.FormCollection')]
  DNFormCollection = interface(DDN.mscorlib.DNReadOnlyCollectionBase)
  ['{3F33E96B-40A4-3C5E-9126-CA9B7BE3D028}']
  { getters & setters } 

    function get_Item(name: string): DNForm; overload;
    function get_Item(index: Int32): DNForm; overload;
    function get_Count: Int32;

  { methods } 

    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[name: string]: DNForm read get_Item; default;
    property Item[index: Int32]: DNForm read get_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNFormCollection = class(TDNGenericImport<DNFormCollectionClass, DNFormCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNInputLanguageCollectionClass = interface(DDN.mscorlib.DNReadOnlyCollectionBaseClass)
  ['{153EAD08-16F2-5877-86FE-6E907C76BE8D}']
  end;

  [DNTypeName('System.Windows.Forms.InputLanguageCollection')]
  DNInputLanguageCollection = interface(DDN.mscorlib.DNReadOnlyCollectionBase)
  ['{25732433-7224-3B8A-A975-AD5BAEC1F7BB}']
  { getters & setters } 

    function get_Item(index: Int32): DNInputLanguage;
    function get_Count: Int32;

  { methods } 

    function &Contains(value: DNInputLanguage): Boolean;
    procedure CopyTo(&array: TArray<DNInputLanguage>; index: Int32);
    function IndexOf(value: DNInputLanguage): Int32;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNInputLanguage read get_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNInputLanguageCollection = class(TDNGenericImport<DNInputLanguageCollectionClass, DNInputLanguageCollection>) end;

  //-------------namespace: System.Windows.Forms.Design----------------
  DNWindowsFormsComponentEditorClass = interface(DNObjectClass)
  ['{F26F1221-5484-5B21-8D89-3E1B68A983C0}']
  end;

  [DNTypeName('System.Windows.Forms.Design.WindowsFormsComponentEditor')]
  DNWindowsFormsComponentEditor = interface(DNObject)
  ['{4C81B70A-98F0-3C80-A87C-868D7ABB7E3D}']
  { methods } 

    function EditComponent(context: DDN.System.DNITypeDescriptorContext; component: DDN.mscorlib.DNObject): Boolean; overload;
    function EditComponent(component: DDN.mscorlib.DNObject; owner: DNIWin32Window): Boolean; overload;
    function EditComponent(context: DDN.System.DNITypeDescriptorContext; component: DDN.mscorlib.DNObject; owner: DNIWin32Window): Boolean; overload;
    function EditComponent(component: DDN.mscorlib.DNObject): Boolean; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNWindowsFormsComponentEditor = class(TDNGenericImport<DNWindowsFormsComponentEditorClass, DNWindowsFormsComponentEditor>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_AxComponentEditorClass = interface(DNWindowsFormsComponentEditorClass)
  ['{36223DE6-78CD-5B13-ACBF-54E84002A653}']
  { constructors } 

    {class} function init: DNAxHost_AxComponentEditor;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+AxComponentEditor')]
  DNAxHost_AxComponentEditor = interface(DNWindowsFormsComponentEditor)
  ['{DA224338-3055-3317-952B-CC540CB5FCA7}']
  { methods } 

    function EditComponent(context: DDN.System.DNITypeDescriptorContext; obj: DDN.mscorlib.DNObject; parent: DNIWin32Window): Boolean; overload;
    function EditComponent(context: DDN.System.DNITypeDescriptorContext; component: DDN.mscorlib.DNObject): Boolean; overload;
    function EditComponent(component: DDN.mscorlib.DNObject; owner: DNIWin32Window): Boolean; overload;
    function EditComponent(component: DDN.mscorlib.DNObject): Boolean; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNAxHost_AxComponentEditor = class(TDNGenericImport<DNAxHost_AxComponentEditorClass, DNAxHost_AxComponentEditor>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImageIndexConverterClass = interface(DNObjectClass)
  ['{BB645462-2CF2-5822-9BEE-ABB9B6250E7D}']
  { constructors } 

    {class} function init: DNImageIndexConverter;

  end;

  [DNTypeName('System.Windows.Forms.ImageIndexConverter')]
  DNImageIndexConverter = interface(DNObject)
  ['{820B7BB1-8623-38F7-9906-25ABB66F9EF8}']
  { methods } 

    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; t: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNImageIndexConverter = class(TDNGenericImport<DNImageIndexConverterClass, DNImageIndexConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeViewImageIndexConverterClass = interface(DNImageIndexConverterClass)
  ['{D02F0EFF-FEB1-5165-8DB9-52BF906BECD4}']
  { constructors } 

    {class} function init: DNTreeViewImageIndexConverter;

  end;

  [DNTypeName('System.Windows.Forms.TreeViewImageIndexConverter')]
  DNTreeViewImageIndexConverter = interface(DNImageIndexConverter)
  ['{8132E199-3D5D-3319-9F24-3FDEE6677A17}']
  { methods } 

    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; t: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTreeViewImageIndexConverter = class(TDNGenericImport<DNTreeViewImageIndexConverterClass, DNTreeViewImageIndexConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnHeaderConverterClass = interface(DNObjectClass)
  ['{A0D8266E-2105-573B-BDC3-43BC467E0D40}']
  { constructors } 

    {class} function init: DNColumnHeaderConverter;

  end;

  [DNTypeName('System.Windows.Forms.ColumnHeaderConverter')]
  DNColumnHeaderConverter = interface(DNObject)
  ['{6219B32A-AADF-3CDF-B234-81D44122298B}']
  { methods } 

    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNColumnHeaderConverter = class(TDNGenericImport<DNColumnHeaderConverterClass, DNColumnHeaderConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewItemConverterClass = interface(DNObjectClass)
  ['{22C2C689-102B-5D26-AD34-DF4745F492E0}']
  { constructors } 

    {class} function init: DNListViewItemConverter;

  end;

  [DNTypeName('System.Windows.Forms.ListViewItemConverter')]
  DNListViewItemConverter = interface(DNObject)
  ['{C4848741-4383-3F06-B768-27ECAF74631F}']
  { methods } 

    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNListViewItemConverter = class(TDNGenericImport<DNListViewItemConverterClass, DNListViewItemConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImageKeyConverterClass = interface(DNObjectClass)
  ['{3F8A8A71-96A6-5C60-A538-3C712E6E230E}']
  { constructors } 

    {class} function init: DNImageKeyConverter;

  end;

  [DNTypeName('System.Windows.Forms.ImageKeyConverter')]
  DNImageKeyConverter = interface(DNObject)
  ['{3152CF00-E0D9-37A8-9B25-22C597866B0A}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNImageKeyConverter = class(TDNGenericImport<DNImageKeyConverterClass, DNImageKeyConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeViewImageKeyConverterClass = interface(DNImageKeyConverterClass)
  ['{6166D179-3A2B-573B-B16E-3FA9B2B2D3C2}']
  { constructors } 

    {class} function init: DNTreeViewImageKeyConverter;

  end;

  [DNTypeName('System.Windows.Forms.TreeViewImageKeyConverter')]
  DNTreeViewImageKeyConverter = interface(DNImageKeyConverter)
  ['{47423E34-FC56-335F-BAAD-7DE34B8FC8C1}']
  { methods } 

    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTreeViewImageKeyConverter = class(TDNGenericImport<DNTreeViewImageKeyConverterClass, DNTreeViewImageKeyConverter>) end;

  //-------------namespace: System.Resources----------------
  DNResXFileRef_ConverterClass = interface(DNObjectClass)
  ['{B5BAAAD5-B585-5478-9ADF-6E159676F2A9}']
  { constructors } 

    {class} function init: DNResXFileRef_Converter;

  end;

  [DNTypeName('System.Resources.ResXFileRef+Converter')]
  DNResXFileRef_Converter = interface(DNObject)
  ['{A8BA56F4-D740-34E3-9F5C-6075650DDC4D}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNResXFileRef_Converter = class(TDNGenericImport<DNResXFileRef_ConverterClass, DNResXFileRef_Converter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_StateConverterClass = interface(DNObjectClass)
  ['{36E4C107-D6E8-5F23-B950-94919D57CAE7}']
  { constructors } 

    {class} function init: DNAxHost_StateConverter;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+StateConverter')]
  DNAxHost_StateConverter = interface(DNObject)
  ['{B56A22D6-AD0F-3E62-AB76-286306592D76}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNAxHost_StateConverter = class(TDNGenericImport<DNAxHost_StateConverterClass, DNAxHost_StateConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCursorConverterClass = interface(DNObjectClass)
  ['{2230FD18-5B24-5509-BE92-0DA88D5E8526}']
  { constructors } 

    {class} function init: DNCursorConverter;

  end;

  [DNTypeName('System.Windows.Forms.CursorConverter')]
  DNCursorConverter = interface(DNObject)
  ['{CA935D31-A496-3293-98C3-821D19DE0539}']
  { methods } 

    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNCursorConverter = class(TDNGenericImport<DNCursorConverterClass, DNCursorConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridPreferredColumnWidthTypeConverterClass = interface(DNObjectClass)
  ['{F3BD52E2-6B46-56E1-AA14-7159039101D2}']
  { constructors } 

    {class} function init: DNDataGridPreferredColumnWidthTypeConverter;

  end;

  [DNTypeName('System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter')]
  DNDataGridPreferredColumnWidthTypeConverter = interface(DNObject)
  ['{F779251E-C442-3BA1-8579-042FA52FC477}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNDataGridPreferredColumnWidthTypeConverter = class(TDNGenericImport<DNDataGridPreferredColumnWidthTypeConverterClass, DNDataGridPreferredColumnWidthTypeConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellStyleConverterClass = interface(DNObjectClass)
  ['{F6F28EDC-DBA2-5D83-B7F7-83437003DC26}']
  { constructors } 

    {class} function init: DNDataGridViewCellStyleConverter;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellStyleConverter')]
  DNDataGridViewCellStyleConverter = interface(DNObject)
  ['{10CC25E8-43A6-3E7E-8DE5-94ECDE635955}']
  { methods } 

    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNDataGridViewCellStyleConverter = class(TDNGenericImport<DNDataGridViewCellStyleConverterClass, DNDataGridViewCellStyleConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNKeysConverterClass = interface(DNObjectClass)
  ['{2497D37A-DEA4-5D98-B213-E651B1F2826A}']
  { constructors } 

    {class} function init: DNKeysConverter;

  end;

  [DNTypeName('System.Windows.Forms.KeysConverter')]
  DNKeysConverter = interface(DNObject)
  ['{F399746B-509E-3A49-AE74-ADC28122C11F}']
  { methods } 

    function Compare(a: DDN.mscorlib.DNObject; b: DDN.mscorlib.DNObject): Int32;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNKeysConverter = class(TDNGenericImport<DNKeysConverterClass, DNKeysConverter>) end;

  //-------------namespace: System.Windows.Forms.Layout----------------
  DNTableLayoutSettingsTypeConverterClass = interface(DNObjectClass)
  ['{F015226A-7673-523B-93C5-AD3D8B7917C6}']
  { constructors } 

    {class} function init: DNTableLayoutSettingsTypeConverter;

  end;

  [DNTypeName('System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter')]
  DNTableLayoutSettingsTypeConverter = interface(DNObject)
  ['{AD5A111F-AB5E-3005-9066-217A3625497E}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTableLayoutSettingsTypeConverter = class(TDNGenericImport<DNTableLayoutSettingsTypeConverterClass, DNTableLayoutSettingsTypeConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkArea_LinkAreaConverterClass = interface(DNObjectClass)
  ['{FA3945A5-9DD3-55B6-A6F6-B6AB3D054C26}']
  { constructors } 

    {class} function init: DNLinkArea_LinkAreaConverter;

  end;

  [DNTypeName('System.Windows.Forms.LinkArea+LinkAreaConverter')]
  DNLinkArea_LinkAreaConverter = interface(DNObject)
  ['{9A60BAD3-D686-3FFE-9A61-13E5DC96FC5F}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNLinkArea_LinkAreaConverter = class(TDNGenericImport<DNLinkArea_LinkAreaConverterClass, DNLinkArea_LinkAreaConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkConverterClass = interface(DNObjectClass)
  ['{3C3D53BB-07D7-54FF-A2CB-2B17E2500DA8}']
  { constructors } 

    {class} function init: DNLinkConverter;

  end;

  [DNTypeName('System.Windows.Forms.LinkConverter')]
  DNLinkConverter = interface(DNObject)
  ['{41965FD7-D552-38AB-860F-1746CC0F46EA}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNLinkConverter = class(TDNGenericImport<DNLinkConverterClass, DNLinkConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBindingConverterClass = interface(DNObjectClass)
  ['{8ECB936C-2F35-5273-8230-5E8592CF086E}']
  { constructors } 

    {class} function init: DNListBindingConverter;

  end;

  [DNTypeName('System.Windows.Forms.ListBindingConverter')]
  DNListBindingConverter = interface(DNObject)
  ['{5687B673-6A76-3BAC-B22B-30968D05028E}']
  { methods } 

    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNListBindingConverter = class(TDNGenericImport<DNListBindingConverterClass, DNListBindingConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNOpacityConverterClass = interface(DNObjectClass)
  ['{5E803488-E3B6-5E48-BE2A-53B228946446}']
  { constructors } 

    {class} function init: DNOpacityConverter;

  end;

  [DNTypeName('System.Windows.Forms.OpacityConverter')]
  DNOpacityConverter = interface(DNObject)
  ['{5D19BAF6-E0CC-3C3F-86E6-B78C21F6448C}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNOpacityConverter = class(TDNGenericImport<DNOpacityConverterClass, DNOpacityConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPaddingConverterClass = interface(DNObjectClass)
  ['{23CCA6B1-450D-5C56-B663-F4A20620427B}']
  { constructors } 

    {class} function init: DNPaddingConverter;

  end;

  [DNTypeName('System.Windows.Forms.PaddingConverter')]
  DNPaddingConverter = interface(DNObject)
  ['{8F9AFB01-BE60-3EAE-B1F4-657251128441}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNPaddingConverter = class(TDNGenericImport<DNPaddingConverterClass, DNPaddingConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollableControl_DockPaddingEdgesConverterClass = interface(DNObjectClass)
  ['{1A9047B6-58BF-50FE-BD30-51881545B08C}']
  { constructors } 

    {class} function init: DNScrollableControl_DockPaddingEdgesConverter;

  end;

  [DNTypeName('System.Windows.Forms.ScrollableControl+DockPaddingEdgesConverter')]
  DNScrollableControl_DockPaddingEdgesConverter = interface(DNObject)
  ['{221F6542-9A53-3296-BCB6-F58C6E015E0B}']
  { methods } 

    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNScrollableControl_DockPaddingEdgesConverter = class(TDNGenericImport<DNScrollableControl_DockPaddingEdgesConverterClass, DNScrollableControl_DockPaddingEdgesConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSelectionRangeConverterClass = interface(DNObjectClass)
  ['{D81C6993-E238-5462-A2AC-568051B021E2}']
  { constructors } 

    {class} function init: DNSelectionRangeConverter;

  end;

  [DNTypeName('System.Windows.Forms.SelectionRangeConverter')]
  DNSelectionRangeConverter = interface(DNObject)
  ['{4C83C701-B31E-3587-8AFF-85EC1DF852BF}']
  { methods } 

    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNSelectionRangeConverter = class(TDNGenericImport<DNSelectionRangeConverterClass, DNSelectionRangeConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeNodeConverterClass = interface(DNObjectClass)
  ['{3997EB04-1A66-5A30-BDF7-49E6FC449564}']
  { constructors } 

    {class} function init: DNTreeNodeConverter;

  end;

  [DNTypeName('System.Windows.Forms.TreeNodeConverter')]
  DNTreeNodeConverter = interface(DNObject)
  ['{C6C92AF7-59B9-38D8-AD24-8FD173C293E0}']
  { methods } 

    function CanConvertTo(context: DDN.System.DNITypeDescriptorContext; destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertTo(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function CanConvertFrom(sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertFrom(context: DDN.System.DNITypeDescriptorContext; sourceType: DDN.mscorlib.DNType): Boolean; overload;
    function CanConvertTo(destinationType: DDN.mscorlib.DNType): Boolean; overload;
    function ConvertFrom(value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFrom(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromInvariantString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertFromString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; text: string): DDN.mscorlib.DNObject; overload;
    function ConvertTo(value: DDN.mscorlib.DNObject; destinationType: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function ConvertToInvariantString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToInvariantString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): string; overload;
    function ConvertToString(context: DDN.System.DNITypeDescriptorContext; culture: DDN.mscorlib.DNCultureInfo; value: DDN.mscorlib.DNObject): string; overload;
    function CreateInstance(propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function CreateInstance(context: DDN.System.DNITypeDescriptorContext; propertyValues: DDN.mscorlib.DNIDictionary): DDN.mscorlib.DNObject; overload;
    function GetCreateInstanceSupported: Boolean; overload;
    function GetCreateInstanceSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetProperties(value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetPropertiesSupported: Boolean; overload;
    function GetPropertiesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValues: DDN.mscorlib.DNICollection; overload;
    function GetStandardValues(context: DDN.System.DNITypeDescriptorContext): DDN.System.DNTypeConverter_StandardValuesCollection; overload;
    function GetStandardValuesExclusive: Boolean; overload;
    function GetStandardValuesExclusive(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function GetStandardValuesSupported: Boolean; overload;
    function GetStandardValuesSupported(context: DDN.System.DNITypeDescriptorContext): Boolean; overload;
    function IsValid(value: DDN.mscorlib.DNObject): Boolean; overload;
    function IsValid(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): Boolean; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; value: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTreeNodeConverter = class(TDNGenericImport<DNTreeNodeConverterClass, DNTreeNodeConverter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWindowsFormsSectionClass = interface(DNObjectClass)
  ['{5163FD00-A21B-53EA-B44B-1F3DD0983238}']
  { constructors } 

    {class} function init: DNWindowsFormsSection;

  end;

  [DNTypeName('System.Windows.Forms.WindowsFormsSection')]
  DNWindowsFormsSection = interface(DNObject)
  ['{48C94656-BD8D-3DD9-BDA2-B545704914E0}']
  { getters & setters } 

    function get_JitDebugging: Boolean;
    procedure set_JitDebugging(value: Boolean);
    function get_SectionInformation: DDN.System.Configuration.DNSectionInformation;
    function get_LockAttributes: DDN.System.Configuration.DNConfigurationLockCollection;
    function get_LockAllAttributesExcept: DDN.System.Configuration.DNConfigurationLockCollection;
    function get_LockElements: DDN.System.Configuration.DNConfigurationLockCollection;
    function get_LockAllElementsExcept: DDN.System.Configuration.DNConfigurationLockCollection;
    function get_LockItem: Boolean;
    procedure set_LockItem(value: Boolean);
    function get_ElementInformation: DDN.System.Configuration.DNElementInformation;
    function get_CurrentConfiguration: DDN.System.Configuration.DNConfiguration;

  { methods } 

    function IsReadOnly: Boolean;
    function Equals(compareTo: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property JitDebugging: Boolean read get_JitDebugging write set_JitDebugging;
    property SectionInformation: DDN.System.Configuration.DNSectionInformation read get_SectionInformation;
    property LockAttributes: DDN.System.Configuration.DNConfigurationLockCollection read get_LockAttributes;
    property LockAllAttributesExcept: DDN.System.Configuration.DNConfigurationLockCollection read get_LockAllAttributesExcept;
    property LockElements: DDN.System.Configuration.DNConfigurationLockCollection read get_LockElements;
    property LockAllElementsExcept: DDN.System.Configuration.DNConfigurationLockCollection read get_LockAllElementsExcept;
    property LockItem: Boolean read get_LockItem write set_LockItem;
    property ElementInformation: DDN.System.Configuration.DNElementInformation read get_ElementInformation;
    property CurrentConfiguration: DDN.System.Configuration.DNConfiguration read get_CurrentConfiguration;
  end;

  TDNWindowsFormsSection = class(TDNGenericImport<DNWindowsFormsSectionClass, DNWindowsFormsSection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPrintControllerWithStatusDialogClass = interface(DNObjectClass)
  ['{30070D7C-9FFB-573F-A0FE-DA0CFD13A6FD}']
  { constructors } 

    {class} function init(underlyingController: DDN.System.Drawing.DNPrintController): DNPrintControllerWithStatusDialog; overload;
    {class} function init(underlyingController: DDN.System.Drawing.DNPrintController; dialogTitle: string): DNPrintControllerWithStatusDialog; overload;

  end;

  [DNTypeName('System.Windows.Forms.PrintControllerWithStatusDialog')]
  DNPrintControllerWithStatusDialog = interface(DNObject)
  ['{D450FABA-21B1-3942-B524-5733012A559E}']
  { getters & setters } 

    function get_IsPreview: Boolean;

  { methods } 

    procedure OnStartPrint(document: DDN.System.Drawing.DNPrintDocument; e: DDN.System.Drawing.DNPrintEventArgs);
    function OnStartPage(document: DDN.System.Drawing.DNPrintDocument; e: DDN.System.Drawing.DNPrintPageEventArgs): DDN.System.Drawing.DNGraphics;
    procedure OnEndPage(document: DDN.System.Drawing.DNPrintDocument; e: DDN.System.Drawing.DNPrintPageEventArgs);
    procedure OnEndPrint(document: DDN.System.Drawing.DNPrintDocument; e: DDN.System.Drawing.DNPrintEventArgs);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property IsPreview: Boolean read get_IsPreview;
  end;

  TDNPrintControllerWithStatusDialog = class(TDNGenericImport<DNPrintControllerWithStatusDialogClass, DNPrintControllerWithStatusDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingCompleteEventArgsClass = interface(DNObjectClass)
  ['{87A589CD-5A94-5811-A47E-840518DEBFAD}']
  { constructors } 

    {class} function init(binding: DNBinding; state: DNBindingCompleteState; context: DNBindingCompleteContext; errorText: string; exception: DDN.mscorlib.DNException; cancel: Boolean): DNBindingCompleteEventArgs; overload;
    {class} function init(binding: DNBinding; state: DNBindingCompleteState; context: DNBindingCompleteContext; errorText: string; exception: DDN.mscorlib.DNException): DNBindingCompleteEventArgs; overload;
    {class} function init(binding: DNBinding; state: DNBindingCompleteState; context: DNBindingCompleteContext; errorText: string): DNBindingCompleteEventArgs; overload;
    {class} function init(binding: DNBinding; state: DNBindingCompleteState; context: DNBindingCompleteContext): DNBindingCompleteEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.BindingCompleteEventArgs')]
  DNBindingCompleteEventArgs = interface(DNObject)
  ['{CE7F1371-A79A-3AAF-B0CB-D8B4F3B14CFE}']
  { getters & setters } 

    function get_Binding: DNBinding;
    function get_BindingCompleteState: DNBindingCompleteState;
    function get_BindingCompleteContext: DNBindingCompleteContext;
    function get_ErrorText: string;
    function get_Exception: DDN.mscorlib.DNException;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Binding: DNBinding read get_Binding;
    property BindingCompleteState: DNBindingCompleteState read get_BindingCompleteState;
    property BindingCompleteContext: DNBindingCompleteContext read get_BindingCompleteContext;
    property ErrorText: string read get_ErrorText;
    property Exception: DDN.mscorlib.DNException read get_Exception;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNBindingCompleteEventArgs = class(TDNGenericImport<DNBindingCompleteEventArgsClass, DNBindingCompleteEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnReorderedEventArgsClass = interface(DNObjectClass)
  ['{517EF090-574B-5918-BE52-4AF639027CF1}']
  { constructors } 

    {class} function init(oldDisplayIndex: Int32; newDisplayIndex: Int32; header: DNColumnHeader): DNColumnReorderedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ColumnReorderedEventArgs')]
  DNColumnReorderedEventArgs = interface(DNObject)
  ['{C1EF21EF-A91A-3557-96E3-AD24C79DA8F8}']
  { getters & setters } 

    function get_OldDisplayIndex: Int32;
    function get_NewDisplayIndex: Int32;
    function get_Header: DNColumnHeader;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property OldDisplayIndex: Int32 read get_OldDisplayIndex;
    property NewDisplayIndex: Int32 read get_NewDisplayIndex;
    property Header: DNColumnHeader read get_Header;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNColumnReorderedEventArgs = class(TDNGenericImport<DNColumnReorderedEventArgsClass, DNColumnReorderedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnWidthChangingEventArgsClass = interface(DNObjectClass)
  ['{F86BF181-A6D8-5FBF-85BC-B95011C2401C}']
  { constructors } 

    {class} function init(columnIndex: Int32; newWidth: Int32; cancel: Boolean): DNColumnWidthChangingEventArgs; overload;
    {class} function init(columnIndex: Int32; newWidth: Int32): DNColumnWidthChangingEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.ColumnWidthChangingEventArgs')]
  DNColumnWidthChangingEventArgs = interface(DNObject)
  ['{882C2DE7-A8E1-33E1-83FD-212488319234}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_NewWidth: Int32;
    procedure set_NewWidth(value: Int32);
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property NewWidth: Int32 read get_NewWidth write set_NewWidth;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNColumnWidthChangingEventArgs = class(TDNGenericImport<DNColumnWidthChangingEventArgsClass, DNColumnWidthChangingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellCancelEventArgsClass = interface(DNObjectClass)
  ['{D584261F-8C3F-5AB8-A88E-191FCDD9CD2A}']
  { constructors } 

    {class} function init(columnIndex: Int32; rowIndex: Int32): DNDataGridViewCellCancelEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellCancelEventArgs')]
  DNDataGridViewCellCancelEventArgs = interface(DNObject)
  ['{0C7C04F5-8086-3BA8-A24F-362008808F9E}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNDataGridViewCellCancelEventArgs = class(TDNGenericImport<DNDataGridViewCellCancelEventArgsClass, DNDataGridViewCellCancelEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewDataErrorEventArgsClass = interface(DNDataGridViewCellCancelEventArgsClass)
  ['{71D93355-357E-5E58-9EF5-98B12A76F022}']
  { constructors } 

    {class} function init(exception: DDN.mscorlib.DNException; columnIndex: Int32; rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DNDataGridViewDataErrorEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewDataErrorEventArgs')]
  DNDataGridViewDataErrorEventArgs = interface(DNDataGridViewCellCancelEventArgs)
  ['{4F7E75D3-D07B-3AA4-8007-FF01F3261610}']
  { getters & setters } 

    function get_Context: DNDataGridViewDataErrorContexts;
    function get_Exception: DDN.mscorlib.DNException;
    function get_ThrowException: Boolean;
    procedure set_ThrowException(value: Boolean);
    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Context: DNDataGridViewDataErrorContexts read get_Context;
    property Exception: DDN.mscorlib.DNException read get_Exception;
    property ThrowException: Boolean read get_ThrowException write set_ThrowException;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNDataGridViewDataErrorEventArgs = class(TDNGenericImport<DNDataGridViewDataErrorEventArgsClass, DNDataGridViewDataErrorEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellValidatingEventArgsClass = interface(DNObjectClass)
  ['{ECEC21BB-50A5-5F55-8BDF-F0E15D390B70}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellValidatingEventArgs')]
  DNDataGridViewCellValidatingEventArgs = interface(DNObject)
  ['{06350F5F-C675-341D-BDC0-1D197F9A4C4A}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_RowIndex: Int32;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property RowIndex: Int32 read get_RowIndex;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNDataGridViewCellValidatingEventArgs = class(TDNGenericImport<DNDataGridViewCellValidatingEventArgsClass, DNDataGridViewCellValidatingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowCancelEventArgsClass = interface(DNObjectClass)
  ['{D0608520-CD9B-5ADD-ACCE-01D96DDED970}']
  { constructors } 

    {class} function init(dataGridViewRow: DNDataGridViewRow): DNDataGridViewRowCancelEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowCancelEventArgs')]
  DNDataGridViewRowCancelEventArgs = interface(DNObject)
  ['{77F2E2E8-2A7A-3071-86C5-DDEC8751F77A}']
  { getters & setters } 

    function get_Row: DNDataGridViewRow;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Row: DNDataGridViewRow read get_Row;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNDataGridViewRowCancelEventArgs = class(TDNGenericImport<DNDataGridViewRowCancelEventArgsClass, DNDataGridViewRowCancelEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDpiChangedEventArgsClass = interface(DNObjectClass)
  ['{E8FD5ADC-C89F-5F5B-A276-18D5634AD410}']
  end;

  [DNTypeName('System.Windows.Forms.DpiChangedEventArgs')]
  DNDpiChangedEventArgs = interface(DNObject)
  ['{758BECE1-B09C-31F7-A944-1DD7BFED8962}']
  { getters & setters } 

    function get_DeviceDpiOld: Int32;
    function get_DeviceDpiNew: Int32;
    function get_SuggestedRectangle: DDN.System.Drawing.DNRectangle;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DeviceDpiOld: Int32 read get_DeviceDpiOld;
    property DeviceDpiNew: Int32 read get_DeviceDpiNew;
    property SuggestedRectangle: DDN.System.Drawing.DNRectangle read get_SuggestedRectangle;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNDpiChangedEventArgs = class(TDNGenericImport<DNDpiChangedEventArgsClass, DNDpiChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFormClosingEventArgsClass = interface(DNObjectClass)
  ['{C200D080-5A51-5832-ABC7-D068524FD0EC}']
  { constructors } 

    {class} function init(closeReason: DNCloseReason; cancel: Boolean): DNFormClosingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.FormClosingEventArgs')]
  DNFormClosingEventArgs = interface(DNObject)
  ['{4AEC431D-3AE9-347A-93FD-D2CB1310EB31}']
  { getters & setters } 

    function get_CloseReason: DNCloseReason;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CloseReason: DNCloseReason read get_CloseReason;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNFormClosingEventArgs = class(TDNGenericImport<DNFormClosingEventArgsClass, DNFormClosingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNInputLanguageChangingEventArgsClass = interface(DNObjectClass)
  ['{98B65A59-4610-5EC9-9290-59B74824CC67}']
  { constructors } 

    {class} function init(culture: DDN.mscorlib.DNCultureInfo; sysCharSet: Boolean): DNInputLanguageChangingEventArgs; overload;
    {class} function init(inputLanguage: DNInputLanguage; sysCharSet: Boolean): DNInputLanguageChangingEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.InputLanguageChangingEventArgs')]
  DNInputLanguageChangingEventArgs = interface(DNObject)
  ['{C249C214-146B-3012-9CC2-27BEC2695613}']
  { getters & setters } 

    function get_InputLanguage: DNInputLanguage;
    function get_Culture: DDN.mscorlib.DNCultureInfo;
    function get_SysCharSet: Boolean;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property InputLanguage: DNInputLanguage read get_InputLanguage;
    property Culture: DDN.mscorlib.DNCultureInfo read get_Culture;
    property SysCharSet: Boolean read get_SysCharSet;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNInputLanguageChangingEventArgs = class(TDNGenericImport<DNInputLanguageChangingEventArgsClass, DNInputLanguageChangingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPopupEventArgsClass = interface(DNObjectClass)
  ['{6D4D8612-372F-5659-91C5-086E2CCCF407}']
  { constructors } 

    {class} function init(associatedWindow: DNIWin32Window; associatedControl: DNControl; isBalloon: Boolean; size: DDN.System.Drawing.DNSize): DNPopupEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.PopupEventArgs')]
  DNPopupEventArgs = interface(DNObject)
  ['{76A224CC-7164-3C1A-AC5F-C7C643D2C3F4}']
  { getters & setters } 

    function get_AssociatedWindow: DNIWin32Window;
    function get_AssociatedControl: DNControl;
    function get_IsBalloon: Boolean;
    function get_ToolTipSize: DDN.System.Drawing.DNSize;
    procedure set_ToolTipSize(value: DDN.System.Drawing.DNSize);
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property AssociatedWindow: DNIWin32Window read get_AssociatedWindow;
    property AssociatedControl: DNControl read get_AssociatedControl;
    property IsBalloon: Boolean read get_IsBalloon;
    property ToolTipSize: DDN.System.Drawing.DNSize read get_ToolTipSize write set_ToolTipSize;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNPopupEventArgs = class(TDNGenericImport<DNPopupEventArgsClass, DNPopupEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSplitterCancelEventArgsClass = interface(DNObjectClass)
  ['{2DFDB55A-1FEE-5820-960A-A28DB5BAC2AA}']
  { constructors } 

    {class} function init(mouseCursorX: Int32; mouseCursorY: Int32; splitX: Int32; splitY: Int32): DNSplitterCancelEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.SplitterCancelEventArgs')]
  DNSplitterCancelEventArgs = interface(DNObject)
  ['{9BA7C466-4B23-34C3-AA9F-A119D9A5010D}']
  { getters & setters } 

    function get_MouseCursorX: Int32;
    function get_MouseCursorY: Int32;
    function get_SplitX: Int32;
    procedure set_SplitX(value: Int32);
    function get_SplitY: Int32;
    procedure set_SplitY(value: Int32);
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property MouseCursorX: Int32 read get_MouseCursorX;
    property MouseCursorY: Int32 read get_MouseCursorY;
    property SplitX: Int32 read get_SplitX write set_SplitX;
    property SplitY: Int32 read get_SplitY write set_SplitY;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNSplitterCancelEventArgs = class(TDNGenericImport<DNSplitterCancelEventArgsClass, DNSplitterCancelEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabControlCancelEventArgsClass = interface(DNObjectClass)
  ['{9DB96607-0E7D-55F8-9B9C-6F2355335ACC}']
  { constructors } 

    {class} function init(tabPage: DNTabPage; tabPageIndex: Int32; cancel: Boolean; action: DNTabControlAction): DNTabControlCancelEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TabControlCancelEventArgs')]
  DNTabControlCancelEventArgs = interface(DNObject)
  ['{0BA9DDC2-C65F-31E5-BEFC-3DC64934A417}']
  { getters & setters } 

    function get_TabPage: DNTabPage;
    function get_TabPageIndex: Int32;
    function get_Action: DNTabControlAction;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property TabPage: DNTabPage read get_TabPage;
    property TabPageIndex: Int32 read get_TabPageIndex;
    property Action: DNTabControlAction read get_Action;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNTabControlCancelEventArgs = class(TDNGenericImport<DNTabControlCancelEventArgsClass, DNTabControlCancelEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownClosingEventArgsClass = interface(DNObjectClass)
  ['{CFDE301A-B29B-5EDD-83B7-CEA9003C4A41}']
  { constructors } 

    {class} function init(reason: DNToolStripDropDownCloseReason): DNToolStripDropDownClosingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownClosingEventArgs')]
  DNToolStripDropDownClosingEventArgs = interface(DNObject)
  ['{9FDCE430-7B6C-3E0B-B0AE-C86FEB543819}']
  { getters & setters } 

    function get_CloseReason: DNToolStripDropDownCloseReason;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CloseReason: DNToolStripDropDownCloseReason read get_CloseReason;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNToolStripDropDownClosingEventArgs = class(TDNGenericImport<DNToolStripDropDownClosingEventArgsClass, DNToolStripDropDownClosingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeViewCancelEventArgsClass = interface(DNObjectClass)
  ['{277B2111-E2B5-51C4-A4F4-1A1DDA4DED95}']
  { constructors } 

    {class} function init(node: DNTreeNode; cancel: Boolean; action: DNTreeViewAction): DNTreeViewCancelEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TreeViewCancelEventArgs')]
  DNTreeViewCancelEventArgs = interface(DNObject)
  ['{1C801480-0D18-3B51-896A-FB32B3090378}']
  { getters & setters } 

    function get_Node: DNTreeNode;
    function get_Action: DNTreeViewAction;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Node: DNTreeNode read get_Node;
    property Action: DNTreeViewAction read get_Action;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNTreeViewCancelEventArgs = class(TDNGenericImport<DNTreeViewCancelEventArgsClass, DNTreeViewCancelEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserNavigatingEventArgsClass = interface(DNObjectClass)
  ['{AF7AF084-B072-529D-9703-B8BF68003D09}']
  { constructors } 

    {class} function init(url: DDN.System.DNUri; targetFrameName: string): DNWebBrowserNavigatingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.WebBrowserNavigatingEventArgs')]
  DNWebBrowserNavigatingEventArgs = interface(DNObject)
  ['{0779B52C-B55E-36DC-9AE6-8FE80469A17E}']
  { getters & setters } 

    function get_Url: DDN.System.DNUri;
    function get_TargetFrameName: string;
    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Url: DDN.System.DNUri read get_Url;
    property TargetFrameName: string read get_TargetFrameName;
    property Cancel: Boolean read get_Cancel write set_Cancel;
  end;

  TDNWebBrowserNavigatingEventArgs = class(TDNGenericImport<DNWebBrowserNavigatingEventArgsClass, DNWebBrowserNavigatingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellPaintingEventArgsClass = interface(DNObjectClass)
  ['{60C6F553-A1AA-5595-8CB9-27EC03438C3C}']
  { constructors } 

    {class} function init(dataGridView: DNDataGridView; graphics: DDN.System.Drawing.DNGraphics; clipBounds: DDN.System.Drawing.DNRectangle; cellBounds: DDN.System.Drawing.DNRectangle; rowIndex: Int32; columnIndex: Int32; cellState: DNDataGridViewElementStates; value: DDN.mscorlib.DNObject; formattedValue: DDN.mscorlib.DNObject; errorText: string; cellStyle: DNDataGridViewCellStyle; advancedBorderStyle: DNDataGridViewAdvancedBorderStyle; paintParts: DNDataGridViewPaintParts): DNDataGridViewCellPaintingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellPaintingEventArgs')]
  DNDataGridViewCellPaintingEventArgs = interface(DNObject)
  ['{F318562D-91A3-3261-9605-AE6888B469F3}']
  { getters & setters } 

    function get_AdvancedBorderStyle: DNDataGridViewAdvancedBorderStyle;
    function get_CellBounds: DDN.System.Drawing.DNRectangle;
    function get_CellStyle: DNDataGridViewCellStyle;
    function get_ClipBounds: DDN.System.Drawing.DNRectangle;
    function get_ColumnIndex: Int32;
    function get_ErrorText: string;
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_PaintParts: DNDataGridViewPaintParts;
    function get_RowIndex: Int32;
    function get_State: DNDataGridViewElementStates;
    function get_Value: DDN.mscorlib.DNObject;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    procedure Paint(clipBounds: DDN.System.Drawing.DNRectangle; paintParts: DNDataGridViewPaintParts);
    procedure PaintBackground(clipBounds: DDN.System.Drawing.DNRectangle; cellsPaintSelectionBackground: Boolean);
    procedure PaintContent(clipBounds: DDN.System.Drawing.DNRectangle);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property AdvancedBorderStyle: DNDataGridViewAdvancedBorderStyle read get_AdvancedBorderStyle;
    property CellBounds: DDN.System.Drawing.DNRectangle read get_CellBounds;
    property CellStyle: DNDataGridViewCellStyle read get_CellStyle;
    property ClipBounds: DDN.System.Drawing.DNRectangle read get_ClipBounds;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ErrorText: string read get_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property PaintParts: DNDataGridViewPaintParts read get_PaintParts;
    property RowIndex: Int32 read get_RowIndex;
    property State: DNDataGridViewElementStates read get_State;
    property Value: DDN.mscorlib.DNObject read get_Value;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNDataGridViewCellPaintingEventArgs = class(TDNGenericImport<DNDataGridViewCellPaintingEventArgsClass, DNDataGridViewCellPaintingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowHeightInfoPushedEventArgsClass = interface(DNObjectClass)
  ['{808FC5B8-91D9-5425-9F6F-54F9F233A7BA}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs')]
  DNDataGridViewRowHeightInfoPushedEventArgs = interface(DNObject)
  ['{69E58DD2-87FD-3CC7-897A-FF9E72D9DE28}']
  { getters & setters } 

    function get_Height: Int32;
    function get_MinimumHeight: Int32;
    function get_RowIndex: Int32;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Height: Int32 read get_Height;
    property MinimumHeight: Int32 read get_MinimumHeight;
    property RowIndex: Int32 read get_RowIndex;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNDataGridViewRowHeightInfoPushedEventArgs = class(TDNGenericImport<DNDataGridViewRowHeightInfoPushedEventArgsClass, DNDataGridViewRowHeightInfoPushedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowPrePaintEventArgsClass = interface(DNObjectClass)
  ['{DAEBC972-6D70-51F1-BD32-95276F928A47}']
  { constructors } 

    {class} function init(dataGridView: DNDataGridView; graphics: DDN.System.Drawing.DNGraphics; clipBounds: DDN.System.Drawing.DNRectangle; rowBounds: DDN.System.Drawing.DNRectangle; rowIndex: Int32; rowState: DNDataGridViewElementStates; errorText: string; inheritedRowStyle: DNDataGridViewCellStyle; isFirstDisplayedRow: Boolean; isLastVisibleRow: Boolean): DNDataGridViewRowPrePaintEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowPrePaintEventArgs')]
  DNDataGridViewRowPrePaintEventArgs = interface(DNObject)
  ['{0781BFB4-CC75-35ED-949D-B69B6CF34068}']
  { getters & setters } 

    function get_ClipBounds: DDN.System.Drawing.DNRectangle;
    procedure set_ClipBounds(value: DDN.System.Drawing.DNRectangle);
    function get_ErrorText: string;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_InheritedRowStyle: DNDataGridViewCellStyle;
    function get_IsFirstDisplayedRow: Boolean;
    function get_IsLastVisibleRow: Boolean;
    function get_PaintParts: DNDataGridViewPaintParts;
    procedure set_PaintParts(value: DNDataGridViewPaintParts);
    function get_RowBounds: DDN.System.Drawing.DNRectangle;
    function get_RowIndex: Int32;
    function get_State: DNDataGridViewElementStates;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    procedure DrawFocus(bounds: DDN.System.Drawing.DNRectangle; cellsPaintSelectionBackground: Boolean);
    procedure PaintCells(clipBounds: DDN.System.Drawing.DNRectangle; paintParts: DNDataGridViewPaintParts);
    procedure PaintCellsBackground(clipBounds: DDN.System.Drawing.DNRectangle; cellsPaintSelectionBackground: Boolean);
    procedure PaintCellsContent(clipBounds: DDN.System.Drawing.DNRectangle);
    procedure PaintHeader(paintSelectionBackground: Boolean); overload;
    procedure PaintHeader(paintParts: DNDataGridViewPaintParts); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ClipBounds: DDN.System.Drawing.DNRectangle read get_ClipBounds write set_ClipBounds;
    property ErrorText: string read get_ErrorText;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property InheritedRowStyle: DNDataGridViewCellStyle read get_InheritedRowStyle;
    property IsFirstDisplayedRow: Boolean read get_IsFirstDisplayedRow;
    property IsLastVisibleRow: Boolean read get_IsLastVisibleRow;
    property PaintParts: DNDataGridViewPaintParts read get_PaintParts write set_PaintParts;
    property RowBounds: DDN.System.Drawing.DNRectangle read get_RowBounds;
    property RowIndex: Int32 read get_RowIndex;
    property State: DNDataGridViewElementStates read get_State;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNDataGridViewRowPrePaintEventArgs = class(TDNGenericImport<DNDataGridViewRowPrePaintEventArgsClass, DNDataGridViewRowPrePaintEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewSortCompareEventArgsClass = interface(DNObjectClass)
  ['{0F20869A-54A7-5470-894D-31BFAFB1CB2E}']
  { constructors } 

    {class} function init(dataGridViewColumn: DNDataGridViewColumn; cellValue1: DDN.mscorlib.DNObject; cellValue2: DDN.mscorlib.DNObject; rowIndex1: Int32; rowIndex2: Int32): DNDataGridViewSortCompareEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewSortCompareEventArgs')]
  DNDataGridViewSortCompareEventArgs = interface(DNObject)
  ['{C2F2DA81-C4BE-3CEC-9985-36E2FED97DB9}']
  { getters & setters } 

    function get_CellValue1: DDN.mscorlib.DNObject;
    function get_CellValue2: DDN.mscorlib.DNObject;
    function get_Column: DNDataGridViewColumn;
    function get_RowIndex1: Int32;
    function get_RowIndex2: Int32;
    function get_SortResult: Int32;
    procedure set_SortResult(value: Int32);
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CellValue1: DDN.mscorlib.DNObject read get_CellValue1;
    property CellValue2: DDN.mscorlib.DNObject read get_CellValue2;
    property Column: DNDataGridViewColumn read get_Column;
    property RowIndex1: Int32 read get_RowIndex1;
    property RowIndex2: Int32 read get_RowIndex2;
    property SortResult: Int32 read get_SortResult write set_SortResult;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNDataGridViewSortCompareEventArgs = class(TDNGenericImport<DNDataGridViewSortCompareEventArgsClass, DNDataGridViewSortCompareEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingManagerDataErrorEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{3BC3907B-3767-5D5C-9D33-0F25248BDB2D}']
  { constructors } 

    {class} function init(exception: DDN.mscorlib.DNException): DNBindingManagerDataErrorEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.BindingManagerDataErrorEventArgs')]
  DNBindingManagerDataErrorEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{8AB33EC4-6AFE-3E32-943F-F92A5BEB34FE}']
  { getters & setters } 

    function get_Exception: DDN.mscorlib.DNException;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Exception: DDN.mscorlib.DNException read get_Exception;
  end;

  TDNBindingManagerDataErrorEventArgs = class(TDNGenericImport<DNBindingManagerDataErrorEventArgsClass, DNBindingManagerDataErrorEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCacheVirtualItemsEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{28C891E6-15B2-58ED-A845-3C08EFA8C1A0}']
  { constructors } 

    {class} function init(startIndex: Int32; endIndex: Int32): DNCacheVirtualItemsEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.CacheVirtualItemsEventArgs')]
  DNCacheVirtualItemsEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{20A8F220-E7D5-303E-BB2C-15DA5A83A217}']
  { getters & setters } 

    function get_StartIndex: Int32;
    function get_EndIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property StartIndex: Int32 read get_StartIndex;
    property EndIndex: Int32 read get_EndIndex;
  end;

  TDNCacheVirtualItemsEventArgs = class(TDNGenericImport<DNCacheVirtualItemsEventArgsClass, DNCacheVirtualItemsEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnClickEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{8CB64C08-5242-57E5-B8A6-01FD0652A4FA}']
  { constructors } 

    {class} function init(column: Int32): DNColumnClickEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ColumnClickEventArgs')]
  DNColumnClickEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{49BF5EDB-FD6D-36A4-AB78-60885EBA402A}']
  { getters & setters } 

    function get_Column: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Column: Int32 read get_Column;
  end;

  TDNColumnClickEventArgs = class(TDNGenericImport<DNColumnClickEventArgsClass, DNColumnClickEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnWidthChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{25F54786-BDDF-5EEB-A30B-85914BBD6DB4}']
  { constructors } 

    {class} function init(columnIndex: Int32): DNColumnWidthChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ColumnWidthChangedEventArgs')]
  DNColumnWidthChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{8EA100F0-9EC9-3507-8580-082114BA2795}']
  { getters & setters } 

    function get_ColumnIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
  end;

  TDNColumnWidthChangedEventArgs = class(TDNGenericImport<DNColumnWidthChangedEventArgsClass, DNColumnWidthChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNContentsResizedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{C37E6F8E-2447-593E-9503-7E71EE254A5C}']
  { constructors } 

    {class} function init(newRectangle: DDN.System.Drawing.DNRectangle): DNContentsResizedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ContentsResizedEventArgs')]
  DNContentsResizedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{656A0C66-86F8-3EFF-8169-58390D72E67A}']
  { getters & setters } 

    function get_NewRectangle: DDN.System.Drawing.DNRectangle;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property NewRectangle: DDN.System.Drawing.DNRectangle read get_NewRectangle;
  end;

  TDNContentsResizedEventArgs = class(TDNGenericImport<DNContentsResizedEventArgsClass, DNContentsResizedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNControlEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{B4306C47-90DD-5C43-8F7B-D075CD5AD35A}']
  { constructors } 

    {class} function init(control: DNControl): DNControlEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ControlEventArgs')]
  DNControlEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{BCB597F9-00AF-366D-8E98-FCB6BD9B57B9}']
  { getters & setters } 

    function get_Control: DNControl;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Control: DNControl read get_Control;
  end;

  TDNControlEventArgs = class(TDNGenericImport<DNControlEventArgsClass, DNControlEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNConvertEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{3AE41BB5-52B7-5596-BA5E-03D22A1B0021}']
  { constructors } 

    {class} function init(value: DDN.mscorlib.DNObject; desiredType: DDN.mscorlib.DNType): DNConvertEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ConvertEventArgs')]
  DNConvertEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{4D8976C9-2008-3949-AE6B-4B26FC4FDDEB}']
  { getters & setters } 

    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_DesiredType: DDN.mscorlib.DNType;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property DesiredType: DDN.mscorlib.DNType read get_DesiredType;
  end;

  TDNConvertEventArgs = class(TDNGenericImport<DNConvertEventArgsClass, DNConvertEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellFormattingEventArgsClass = interface(DNConvertEventArgsClass)
  ['{6B4D1B53-4F76-5802-8A06-CD48DB6415EC}']
  { constructors } 

    {class} function init(columnIndex: Int32; rowIndex: Int32; value: DDN.mscorlib.DNObject; desiredType: DDN.mscorlib.DNType; cellStyle: DNDataGridViewCellStyle): DNDataGridViewCellFormattingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellFormattingEventArgs')]
  DNDataGridViewCellFormattingEventArgs = interface(DNConvertEventArgs)
  ['{77BF7EED-129A-3679-877A-E17B6468BDDC}']
  { getters & setters } 

    function get_CellStyle: DNDataGridViewCellStyle;
    procedure set_CellStyle(value: DNDataGridViewCellStyle);
    function get_ColumnIndex: Int32;
    function get_FormattingApplied: Boolean;
    procedure set_FormattingApplied(value: Boolean);
    function get_RowIndex: Int32;
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_DesiredType: DDN.mscorlib.DNType;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CellStyle: DNDataGridViewCellStyle read get_CellStyle write set_CellStyle;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property FormattingApplied: Boolean read get_FormattingApplied write set_FormattingApplied;
    property RowIndex: Int32 read get_RowIndex;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property DesiredType: DDN.mscorlib.DNType read get_DesiredType;
  end;

  TDNDataGridViewCellFormattingEventArgs = class(TDNGenericImport<DNDataGridViewCellFormattingEventArgsClass, DNDataGridViewCellFormattingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellParsingEventArgsClass = interface(DNConvertEventArgsClass)
  ['{DC7C1426-4625-5DCF-8219-F6B73B1EC6D6}']
  { constructors } 

    {class} function init(rowIndex: Int32; columnIndex: Int32; value: DDN.mscorlib.DNObject; desiredType: DDN.mscorlib.DNType; inheritedCellStyle: DNDataGridViewCellStyle): DNDataGridViewCellParsingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellParsingEventArgs')]
  DNDataGridViewCellParsingEventArgs = interface(DNConvertEventArgs)
  ['{DE551FEA-01F3-30E5-8D05-9C6470CADC99}']
  { getters & setters } 

    function get_RowIndex: Int32;
    function get_ColumnIndex: Int32;
    function get_InheritedCellStyle: DNDataGridViewCellStyle;
    procedure set_InheritedCellStyle(value: DNDataGridViewCellStyle);
    function get_ParsingApplied: Boolean;
    procedure set_ParsingApplied(value: Boolean);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_DesiredType: DDN.mscorlib.DNType;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property RowIndex: Int32 read get_RowIndex;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property InheritedCellStyle: DNDataGridViewCellStyle read get_InheritedCellStyle write set_InheritedCellStyle;
    property ParsingApplied: Boolean read get_ParsingApplied write set_ParsingApplied;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property DesiredType: DDN.mscorlib.DNType read get_DesiredType;
  end;

  TDNDataGridViewCellParsingEventArgs = class(TDNGenericImport<DNDataGridViewCellParsingEventArgsClass, DNDataGridViewCellParsingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListControlConvertEventArgsClass = interface(DNConvertEventArgsClass)
  ['{94766758-3AB9-5B75-837A-C79AFD0E1891}']
  { constructors } 

    {class} function init(value: DDN.mscorlib.DNObject; desiredType: DDN.mscorlib.DNType; listItem: DDN.mscorlib.DNObject): DNListControlConvertEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ListControlConvertEventArgs')]
  DNListControlConvertEventArgs = interface(DNConvertEventArgs)
  ['{5BF00784-E004-3E49-AE58-9198319EA607}']
  { getters & setters } 

    function get_ListItem: DDN.mscorlib.DNObject;
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_DesiredType: DDN.mscorlib.DNType;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ListItem: DDN.mscorlib.DNObject read get_ListItem;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property DesiredType: DDN.mscorlib.DNType read get_DesiredType;
  end;

  TDNListControlConvertEventArgs = class(TDNGenericImport<DNListControlConvertEventArgsClass, DNListControlConvertEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewAutoSizeColumnModeEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{48062D59-ACAF-5DEE-8A63-F3B486FB32F9}']
  { constructors } 

    {class} function init(dataGridViewColumn: DNDataGridViewColumn; previousMode: DNDataGridViewAutoSizeColumnMode): DNDataGridViewAutoSizeColumnModeEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs')]
  DNDataGridViewAutoSizeColumnModeEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{BB26CC0C-B385-3A96-83B2-E531CDAD7EB3}']
  { getters & setters } 

    function get_Column: DNDataGridViewColumn;
    function get_PreviousMode: DNDataGridViewAutoSizeColumnMode;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Column: DNDataGridViewColumn read get_Column;
    property PreviousMode: DNDataGridViewAutoSizeColumnMode read get_PreviousMode;
  end;

  TDNDataGridViewAutoSizeColumnModeEventArgs = class(TDNGenericImport<DNDataGridViewAutoSizeColumnModeEventArgsClass, DNDataGridViewAutoSizeColumnModeEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewAutoSizeColumnsModeEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{FC08FDDA-0A05-56A2-BBBC-9545D8932CA1}']
  { constructors } 

    {class} function init(previousModes: TArray<DNDataGridViewAutoSizeColumnMode>): DNDataGridViewAutoSizeColumnsModeEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs')]
  DNDataGridViewAutoSizeColumnsModeEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{D018585F-3D48-399F-A5E7-0CBE0CB75A89}']
  { getters & setters } 

    function get_PreviousModes: TArray<DNDataGridViewAutoSizeColumnMode>;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property PreviousModes: TArray<DNDataGridViewAutoSizeColumnMode> read get_PreviousModes;
  end;

  TDNDataGridViewAutoSizeColumnsModeEventArgs = class(TDNGenericImport<DNDataGridViewAutoSizeColumnsModeEventArgsClass, DNDataGridViewAutoSizeColumnsModeEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewAutoSizeModeEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{12184782-60D3-5D09-AFC8-C6137335BD55}']
  { constructors } 

    {class} function init(previousModeAutoSized: Boolean): DNDataGridViewAutoSizeModeEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewAutoSizeModeEventArgs')]
  DNDataGridViewAutoSizeModeEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{44159216-9EB4-3968-8735-6BBB9197E599}']
  { getters & setters } 

    function get_PreviousModeAutoSized: Boolean;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property PreviousModeAutoSized: Boolean read get_PreviousModeAutoSized;
  end;

  TDNDataGridViewAutoSizeModeEventArgs = class(TDNGenericImport<DNDataGridViewAutoSizeModeEventArgsClass, DNDataGridViewAutoSizeModeEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewBindingCompleteEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{2391E3A9-B2B4-5DFD-8E46-56B91D882D7C}']
  { constructors } 

    {class} function init(listChangedType: DDN.System.DNListChangedType): DNDataGridViewBindingCompleteEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewBindingCompleteEventArgs')]
  DNDataGridViewBindingCompleteEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{ADB6B360-D5F5-38B7-ABD0-4F80A4DABFB8}']
  { getters & setters } 

    function get_ListChangedType: DDN.System.DNListChangedType;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ListChangedType: DDN.System.DNListChangedType read get_ListChangedType;
  end;

  TDNDataGridViewBindingCompleteEventArgs = class(TDNGenericImport<DNDataGridViewBindingCompleteEventArgsClass, DNDataGridViewBindingCompleteEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{8F66D39B-A81C-59DE-A7B8-4954E86F2FAB}']
  { constructors } 

    {class} function init(columnIndex: Int32; rowIndex: Int32): DNDataGridViewCellEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellEventArgs')]
  DNDataGridViewCellEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{BD1948D4-A5E6-312E-AFB3-AA2BAA172D0D}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
  end;

  TDNDataGridViewCellEventArgs = class(TDNGenericImport<DNDataGridViewCellEventArgsClass, DNDataGridViewCellEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellContextMenuStripNeededEventArgsClass = interface(DNDataGridViewCellEventArgsClass)
  ['{A45F7941-6A19-5BD7-8118-91C658208BCE}']
  { constructors } 

    {class} function init(columnIndex: Int32; rowIndex: Int32): DNDataGridViewCellContextMenuStripNeededEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs')]
  DNDataGridViewCellContextMenuStripNeededEventArgs = interface(DNDataGridViewCellEventArgs)
  ['{6E0B98DF-E4B2-3649-B1AC-26455239555A}']
  { getters & setters } 

    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
  end;

  TDNDataGridViewCellContextMenuStripNeededEventArgs = class(TDNGenericImport<DNDataGridViewCellContextMenuStripNeededEventArgsClass, DNDataGridViewCellContextMenuStripNeededEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellErrorTextNeededEventArgsClass = interface(DNDataGridViewCellEventArgsClass)
  ['{59ABF522-C76E-51AF-83D9-9DBD4F1762E1}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs')]
  DNDataGridViewCellErrorTextNeededEventArgs = interface(DNDataGridViewCellEventArgs)
  ['{7A35CD5B-8EC6-3F07-ADF2-98847DA1EE1A}']
  { getters & setters } 

    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ErrorText: string read get_ErrorText write set_ErrorText;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
  end;

  TDNDataGridViewCellErrorTextNeededEventArgs = class(TDNGenericImport<DNDataGridViewCellErrorTextNeededEventArgsClass, DNDataGridViewCellErrorTextNeededEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellToolTipTextNeededEventArgsClass = interface(DNDataGridViewCellEventArgsClass)
  ['{5122D738-55EA-592F-98E9-4DAB85A60332}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs')]
  DNDataGridViewCellToolTipTextNeededEventArgs = interface(DNDataGridViewCellEventArgs)
  ['{4A68EC6A-C5FF-3BE7-B047-EF512A1565B8}']
  { getters & setters } 

    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
  end;

  TDNDataGridViewCellToolTipTextNeededEventArgs = class(TDNGenericImport<DNDataGridViewCellToolTipTextNeededEventArgsClass, DNDataGridViewCellToolTipTextNeededEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellStateChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{6E8E995C-6778-594A-A294-22386D99E3B3}']
  { constructors } 

    {class} function init(dataGridViewCell: DNDataGridViewCell; stateChanged: DNDataGridViewElementStates): DNDataGridViewCellStateChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellStateChangedEventArgs')]
  DNDataGridViewCellStateChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{689F053B-D33B-3C98-ABD3-2BA0EE0F3F7A}']
  { getters & setters } 

    function get_Cell: DNDataGridViewCell;
    function get_StateChanged: DNDataGridViewElementStates;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Cell: DNDataGridViewCell read get_Cell;
    property StateChanged: DNDataGridViewElementStates read get_StateChanged;
  end;

  TDNDataGridViewCellStateChangedEventArgs = class(TDNGenericImport<DNDataGridViewCellStateChangedEventArgsClass, DNDataGridViewCellStateChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellStyleContentChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7BE96179-10BD-59CC-965E-D71468F43E80}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs')]
  DNDataGridViewCellStyleContentChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{A3191726-FE28-3DD6-B028-58D78A1EE2E0}']
  { getters & setters } 

    function get_CellStyle: DNDataGridViewCellStyle;
    function get_CellStyleScope: DNDataGridViewCellStyleScopes;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CellStyle: DNDataGridViewCellStyle read get_CellStyle;
    property CellStyleScope: DNDataGridViewCellStyleScopes read get_CellStyleScope;
  end;

  TDNDataGridViewCellStyleContentChangedEventArgs = class(TDNGenericImport<DNDataGridViewCellStyleContentChangedEventArgsClass, DNDataGridViewCellStyleContentChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellValueEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{5C221D5C-051A-53AF-8309-FFE9C810B917}']
  { constructors } 

    {class} function init(columnIndex: Int32; rowIndex: Int32): DNDataGridViewCellValueEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellValueEventArgs')]
  DNDataGridViewCellValueEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{7FAB9087-1DE5-304A-89B4-ABAB37EFBAA2}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
  end;

  TDNDataGridViewCellValueEventArgs = class(TDNGenericImport<DNDataGridViewCellValueEventArgsClass, DNDataGridViewCellValueEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{D584902A-968B-5F36-B5E9-CDC7EAB975CD}']
  { constructors } 

    {class} function init(dataGridViewColumn: DNDataGridViewColumn): DNDataGridViewColumnEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnEventArgs')]
  DNDataGridViewColumnEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{5414E786-1352-3304-A07C-194410FC644B}']
  { getters & setters } 

    function get_Column: DNDataGridViewColumn;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Column: DNDataGridViewColumn read get_Column;
  end;

  TDNDataGridViewColumnEventArgs = class(TDNGenericImport<DNDataGridViewColumnEventArgsClass, DNDataGridViewColumnEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnStateChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{F4B99E10-1D48-587B-B66B-D9C670C6F4D6}']
  { constructors } 

    {class} function init(dataGridViewColumn: DNDataGridViewColumn; stateChanged: DNDataGridViewElementStates): DNDataGridViewColumnStateChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnStateChangedEventArgs')]
  DNDataGridViewColumnStateChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{5259860F-0148-3C21-9AE0-D5A96155436E}']
  { getters & setters } 

    function get_Column: DNDataGridViewColumn;
    function get_StateChanged: DNDataGridViewElementStates;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Column: DNDataGridViewColumn read get_Column;
    property StateChanged: DNDataGridViewElementStates read get_StateChanged;
  end;

  TDNDataGridViewColumnStateChangedEventArgs = class(TDNGenericImport<DNDataGridViewColumnStateChangedEventArgsClass, DNDataGridViewColumnStateChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewEditingControlShowingEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{2DBB665E-6B1C-50E4-AC86-7F3951DE5B46}']
  { constructors } 

    {class} function init(control: DNControl; cellStyle: DNDataGridViewCellStyle): DNDataGridViewEditingControlShowingEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewEditingControlShowingEventArgs')]
  DNDataGridViewEditingControlShowingEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{6C5A46F6-D41F-39D2-A299-BED69822785B}']
  { getters & setters } 

    function get_CellStyle: DNDataGridViewCellStyle;
    procedure set_CellStyle(value: DNDataGridViewCellStyle);
    function get_Control: DNControl;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CellStyle: DNDataGridViewCellStyle read get_CellStyle write set_CellStyle;
    property Control: DNControl read get_Control;
  end;

  TDNDataGridViewEditingControlShowingEventArgs = class(TDNGenericImport<DNDataGridViewEditingControlShowingEventArgsClass, DNDataGridViewEditingControlShowingEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowContextMenuStripNeededEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7A1A3CBD-637D-5742-9B54-4086EA99BEA7}']
  { constructors } 

    {class} function init(rowIndex: Int32): DNDataGridViewRowContextMenuStripNeededEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs')]
  DNDataGridViewRowContextMenuStripNeededEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{FFA92F96-BB5D-3973-8553-4BBF68A68305}']
  { getters & setters } 

    function get_RowIndex: Int32;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property RowIndex: Int32 read get_RowIndex;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
  end;

  TDNDataGridViewRowContextMenuStripNeededEventArgs = class(TDNGenericImport<DNDataGridViewRowContextMenuStripNeededEventArgsClass, DNDataGridViewRowContextMenuStripNeededEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowErrorTextNeededEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{9A839ECD-8C2C-519F-A133-25A3407492DD}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs')]
  DNDataGridViewRowErrorTextNeededEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{830D77BD-DCD6-3082-B7A0-03289C1680F5}']
  { getters & setters } 

    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_RowIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ErrorText: string read get_ErrorText write set_ErrorText;
    property RowIndex: Int32 read get_RowIndex;
  end;

  TDNDataGridViewRowErrorTextNeededEventArgs = class(TDNGenericImport<DNDataGridViewRowErrorTextNeededEventArgsClass, DNDataGridViewRowErrorTextNeededEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{79F6B060-B4B0-51B4-BE63-A15840367A06}']
  { constructors } 

    {class} function init(dataGridViewRow: DNDataGridViewRow): DNDataGridViewRowEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowEventArgs')]
  DNDataGridViewRowEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{0C413363-BAE4-30E7-B4D2-1EAB38B62D10}']
  { getters & setters } 

    function get_Row: DNDataGridViewRow;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Row: DNDataGridViewRow read get_Row;
  end;

  TDNDataGridViewRowEventArgs = class(TDNGenericImport<DNDataGridViewRowEventArgsClass, DNDataGridViewRowEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowHeightInfoNeededEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{50F6BF61-AB23-5CE2-A0A3-4DEB3F0A686B}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs')]
  DNDataGridViewRowHeightInfoNeededEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{187694D9-B9D9-328C-A74E-ABE5B418080B}']
  { getters & setters } 

    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_MinimumHeight: Int32;
    procedure set_MinimumHeight(value: Int32);
    function get_RowIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Height: Int32 read get_Height write set_Height;
    property MinimumHeight: Int32 read get_MinimumHeight write set_MinimumHeight;
    property RowIndex: Int32 read get_RowIndex;
  end;

  TDNDataGridViewRowHeightInfoNeededEventArgs = class(TDNGenericImport<DNDataGridViewRowHeightInfoNeededEventArgsClass, DNDataGridViewRowHeightInfoNeededEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowPostPaintEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{B8854309-AAB0-56DE-A027-0007306F302B}']
  { constructors } 

    {class} function init(dataGridView: DNDataGridView; graphics: DDN.System.Drawing.DNGraphics; clipBounds: DDN.System.Drawing.DNRectangle; rowBounds: DDN.System.Drawing.DNRectangle; rowIndex: Int32; rowState: DNDataGridViewElementStates; errorText: string; inheritedRowStyle: DNDataGridViewCellStyle; isFirstDisplayedRow: Boolean; isLastVisibleRow: Boolean): DNDataGridViewRowPostPaintEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowPostPaintEventArgs')]
  DNDataGridViewRowPostPaintEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{E817F1C9-32B9-3C4A-A241-C977887316B2}']
  { getters & setters } 

    function get_ClipBounds: DDN.System.Drawing.DNRectangle;
    procedure set_ClipBounds(value: DDN.System.Drawing.DNRectangle);
    function get_ErrorText: string;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_InheritedRowStyle: DNDataGridViewCellStyle;
    function get_IsFirstDisplayedRow: Boolean;
    function get_IsLastVisibleRow: Boolean;
    function get_RowBounds: DDN.System.Drawing.DNRectangle;
    function get_RowIndex: Int32;
    function get_State: DNDataGridViewElementStates;

  { methods } 

    procedure DrawFocus(bounds: DDN.System.Drawing.DNRectangle; cellsPaintSelectionBackground: Boolean);
    procedure PaintCells(clipBounds: DDN.System.Drawing.DNRectangle; paintParts: DNDataGridViewPaintParts);
    procedure PaintCellsBackground(clipBounds: DDN.System.Drawing.DNRectangle; cellsPaintSelectionBackground: Boolean);
    procedure PaintCellsContent(clipBounds: DDN.System.Drawing.DNRectangle);
    procedure PaintHeader(paintSelectionBackground: Boolean); overload;
    procedure PaintHeader(paintParts: DNDataGridViewPaintParts); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ClipBounds: DDN.System.Drawing.DNRectangle read get_ClipBounds write set_ClipBounds;
    property ErrorText: string read get_ErrorText;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property InheritedRowStyle: DNDataGridViewCellStyle read get_InheritedRowStyle;
    property IsFirstDisplayedRow: Boolean read get_IsFirstDisplayedRow;
    property IsLastVisibleRow: Boolean read get_IsLastVisibleRow;
    property RowBounds: DDN.System.Drawing.DNRectangle read get_RowBounds;
    property RowIndex: Int32 read get_RowIndex;
    property State: DNDataGridViewElementStates read get_State;
  end;

  TDNDataGridViewRowPostPaintEventArgs = class(TDNGenericImport<DNDataGridViewRowPostPaintEventArgsClass, DNDataGridViewRowPostPaintEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowsAddedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{E0FD406F-3675-5014-8880-A2EC15C1126B}']
  { constructors } 

    {class} function init(rowIndex: Int32; rowCount: Int32): DNDataGridViewRowsAddedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowsAddedEventArgs')]
  DNDataGridViewRowsAddedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{C5A5EAB7-F1AE-3AC1-B3C4-E6E27B5F4FF3}']
  { getters & setters } 

    function get_RowIndex: Int32;
    function get_RowCount: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property RowIndex: Int32 read get_RowIndex;
    property RowCount: Int32 read get_RowCount;
  end;

  TDNDataGridViewRowsAddedEventArgs = class(TDNGenericImport<DNDataGridViewRowsAddedEventArgsClass, DNDataGridViewRowsAddedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowsRemovedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{4D7DBC63-B21C-5F66-A8CA-C59694F6767E}']
  { constructors } 

    {class} function init(rowIndex: Int32; rowCount: Int32): DNDataGridViewRowsRemovedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowsRemovedEventArgs')]
  DNDataGridViewRowsRemovedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{1D25BA54-20EF-3D53-ACFF-576BF60CB5BE}']
  { getters & setters } 

    function get_RowIndex: Int32;
    function get_RowCount: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property RowIndex: Int32 read get_RowIndex;
    property RowCount: Int32 read get_RowCount;
  end;

  TDNDataGridViewRowsRemovedEventArgs = class(TDNGenericImport<DNDataGridViewRowsRemovedEventArgsClass, DNDataGridViewRowsRemovedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowStateChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{280C989D-031B-545C-AE28-C095F743AE77}']
  { constructors } 

    {class} function init(dataGridViewRow: DNDataGridViewRow; stateChanged: DNDataGridViewElementStates): DNDataGridViewRowStateChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowStateChangedEventArgs')]
  DNDataGridViewRowStateChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{AA04F5AC-4234-3699-B0D8-D1591E3701E1}']
  { getters & setters } 

    function get_Row: DNDataGridViewRow;
    function get_StateChanged: DNDataGridViewElementStates;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Row: DNDataGridViewRow read get_Row;
    property StateChanged: DNDataGridViewElementStates read get_StateChanged;
  end;

  TDNDataGridViewRowStateChangedEventArgs = class(TDNGenericImport<DNDataGridViewRowStateChangedEventArgsClass, DNDataGridViewRowStateChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDateBoldEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{F018A282-FFFC-5930-B7D6-7784FCDBE468}']
  end;

  [DNTypeName('System.Windows.Forms.DateBoldEventArgs')]
  DNDateBoldEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{D0C47B9D-2D9F-3E57-B195-8BA7252FF987}']
  { getters & setters } 

    function get_StartDate: DDN.mscorlib.DNDateTime;
    function get_Size: Int32;
    function get_DaysToBold: TArray<Int32>;
    procedure set_DaysToBold(value: TArray<Int32>);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property StartDate: DDN.mscorlib.DNDateTime read get_StartDate;
    property Size: Int32 read get_Size;
    property DaysToBold: TArray<Int32> read get_DaysToBold write set_DaysToBold;
  end;

  TDNDateBoldEventArgs = class(TDNGenericImport<DNDateBoldEventArgsClass, DNDateBoldEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDateRangeEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{58A80F36-B0DB-5A4E-9F70-28A9017E9C4C}']
  { constructors } 

    {class} function init(start: DDN.mscorlib.DNDateTime; &end: DDN.mscorlib.DNDateTime): DNDateRangeEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DateRangeEventArgs')]
  DNDateRangeEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{168A0F98-7647-390F-AAE6-E2F60BD62C75}']
  { getters & setters } 

    function get_Start: DDN.mscorlib.DNDateTime;
    function get_End: DDN.mscorlib.DNDateTime;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Start: DDN.mscorlib.DNDateTime read get_Start;
    property &End: DDN.mscorlib.DNDateTime read get_End;
  end;

  TDNDateRangeEventArgs = class(TDNGenericImport<DNDateRangeEventArgsClass, DNDateRangeEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDragEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{5EE7194A-6DCF-5CCB-8152-971691205791}']
  { constructors } 

    {class} function init(data: DNIDataObject; keyState: Int32; x: Int32; y: Int32; allowedEffect: DNDragDropEffects; effect: DNDragDropEffects): DNDragEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DragEventArgs')]
  DNDragEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{52EB994F-D321-39ED-99D1-B69F1B267E9E}']
  { getters & setters } 

    function get_Data: DNIDataObject;
    function get_KeyState: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_AllowedEffect: DNDragDropEffects;
    function get_Effect: DNDragDropEffects;
    procedure set_Effect(value: DNDragDropEffects);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Data: DNIDataObject read get_Data;
    property KeyState: Int32 read get_KeyState;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property AllowedEffect: DNDragDropEffects read get_AllowedEffect;
    property Effect: DNDragDropEffects read get_Effect write set_Effect;
  end;

  TDNDragEventArgs = class(TDNGenericImport<DNDragEventArgsClass, DNDragEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDrawItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{A4900C0A-800E-56A8-9A3D-0F8E62A1DA76}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; font: DDN.System.Drawing.DNFont; rect: DDN.System.Drawing.DNRectangle; index: Int32; state: DNDrawItemState): DNDrawItemEventArgs; overload;
    {class} function init(graphics: DDN.System.Drawing.DNGraphics; font: DDN.System.Drawing.DNFont; rect: DDN.System.Drawing.DNRectangle; index: Int32; state: DNDrawItemState; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor): DNDrawItemEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.DrawItemEventArgs')]
  DNDrawItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{2232718C-FA55-37A5-817F-0A11D0370418}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Font: DDN.System.Drawing.DNFont;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Index: Int32;
    function get_State: DNDrawItemState;

  { methods } 

    procedure DrawBackground;
    procedure DrawFocusRectangle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Font: DDN.System.Drawing.DNFont read get_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Index: Int32 read get_Index;
    property State: DNDrawItemState read get_State;
  end;

  TDNDrawItemEventArgs = class(TDNGenericImport<DNDrawItemEventArgsClass, DNDrawItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNStatusBarDrawItemEventArgsClass = interface(DNDrawItemEventArgsClass)
  ['{10A7F21E-C858-53A3-8E59-74D12B6767A2}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; font: DDN.System.Drawing.DNFont; r: DDN.System.Drawing.DNRectangle; itemId: Int32; itemState: DNDrawItemState; panel: DNStatusBarPanel): DNStatusBarDrawItemEventArgs; overload;
    {class} function init(g: DDN.System.Drawing.DNGraphics; font: DDN.System.Drawing.DNFont; r: DDN.System.Drawing.DNRectangle; itemId: Int32; itemState: DNDrawItemState; panel: DNStatusBarPanel; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor): DNStatusBarDrawItemEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.StatusBarDrawItemEventArgs')]
  DNStatusBarDrawItemEventArgs = interface(DNDrawItemEventArgs)
  ['{99B90C88-50DC-3CF3-B5D4-EEB2DFAB5CFE}']
  { getters & setters } 

    function get_Panel: DNStatusBarPanel;
    function get_BackColor: DDN.System.Drawing.DNColor;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Font: DDN.System.Drawing.DNFont;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Index: Int32;
    function get_State: DNDrawItemState;

  { methods } 

    procedure DrawBackground;
    procedure DrawFocusRectangle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Panel: DNStatusBarPanel read get_Panel;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Font: DDN.System.Drawing.DNFont read get_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Index: Int32 read get_Index;
    property State: DNDrawItemState read get_State;
  end;

  TDNStatusBarDrawItemEventArgs = class(TDNGenericImport<DNStatusBarDrawItemEventArgsClass, DNStatusBarDrawItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDrawListViewColumnHeaderEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{35715131-B8EC-526C-BFC0-91423E8C41F4}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; columnIndex: Int32; header: DNColumnHeader; state: DNListViewItemStates; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont): DNDrawListViewColumnHeaderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DrawListViewColumnHeaderEventArgs')]
  DNDrawListViewColumnHeaderEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{266FA8E6-649F-3E58-A49F-FB6E4EA1F073}']
  { getters & setters } 

    function get_DrawDefault: Boolean;
    procedure set_DrawDefault(value: Boolean);
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ColumnIndex: Int32;
    function get_Header: DNColumnHeader;
    function get_State: DNListViewItemStates;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    function get_BackColor: DDN.System.Drawing.DNColor;
    function get_Font: DDN.System.Drawing.DNFont;

  { methods } 

    procedure DrawText; overload;
    procedure DrawBackground;
    procedure DrawText(flags: DNTextFormatFlags); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DrawDefault: Boolean read get_DrawDefault write set_DrawDefault;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property Header: DNColumnHeader read get_Header;
    property State: DNListViewItemStates read get_State;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor;
    property Font: DDN.System.Drawing.DNFont read get_Font;
  end;

  TDNDrawListViewColumnHeaderEventArgs = class(TDNGenericImport<DNDrawListViewColumnHeaderEventArgsClass, DNDrawListViewColumnHeaderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDrawListViewItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{8926CA4D-24D7-56E8-BDA3-EBD54D63BC35}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; item: DNListViewItem; bounds: DDN.System.Drawing.DNRectangle; itemIndex: Int32; state: DNListViewItemStates): DNDrawListViewItemEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DrawListViewItemEventArgs')]
  DNDrawListViewItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{383A131C-E51A-3534-8605-55ADFFCEF6A3}']
  { getters & setters } 

    function get_DrawDefault: Boolean;
    procedure set_DrawDefault(value: Boolean);
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Item: DNListViewItem;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ItemIndex: Int32;
    function get_State: DNListViewItemStates;

  { methods } 

    procedure DrawBackground;
    procedure DrawFocusRectangle;
    procedure DrawText; overload;
    procedure DrawText(flags: DNTextFormatFlags); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DrawDefault: Boolean read get_DrawDefault write set_DrawDefault;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Item: DNListViewItem read get_Item;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ItemIndex: Int32 read get_ItemIndex;
    property State: DNListViewItemStates read get_State;
  end;

  TDNDrawListViewItemEventArgs = class(TDNGenericImport<DNDrawListViewItemEventArgsClass, DNDrawListViewItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDrawListViewSubItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{52C94308-0017-561D-9C87-BF289CE9216E}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; item: DNListViewItem; subItem: DNListViewItem_ListViewSubItem; itemIndex: Int32; columnIndex: Int32; header: DNColumnHeader; itemState: DNListViewItemStates): DNDrawListViewSubItemEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DrawListViewSubItemEventArgs')]
  DNDrawListViewSubItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{4AA1A3E4-7F70-3B87-81E0-CF8D7563D142}']
  { getters & setters } 

    function get_DrawDefault: Boolean;
    procedure set_DrawDefault(value: Boolean);
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Item: DNListViewItem;
    function get_SubItem: DNListViewItem_ListViewSubItem;
    function get_ItemIndex: Int32;
    function get_ColumnIndex: Int32;
    function get_Header: DNColumnHeader;
    function get_ItemState: DNListViewItemStates;

  { methods } 

    procedure DrawBackground;
    procedure DrawFocusRectangle(bounds: DDN.System.Drawing.DNRectangle);
    procedure DrawText; overload;
    procedure DrawText(flags: DNTextFormatFlags); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DrawDefault: Boolean read get_DrawDefault write set_DrawDefault;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Item: DNListViewItem read get_Item;
    property SubItem: DNListViewItem_ListViewSubItem read get_SubItem;
    property ItemIndex: Int32 read get_ItemIndex;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property Header: DNColumnHeader read get_Header;
    property ItemState: DNListViewItemStates read get_ItemState;
  end;

  TDNDrawListViewSubItemEventArgs = class(TDNGenericImport<DNDrawListViewSubItemEventArgsClass, DNDrawListViewSubItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDrawToolTipEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{FCD981CD-4244-5978-A104-7DEF6DAEFB8C}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; associatedWindow: DNIWin32Window; associatedControl: DNControl; bounds: DDN.System.Drawing.DNRectangle; toolTipText: string; backColor: DDN.System.Drawing.DNColor; foreColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont): DNDrawToolTipEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DrawToolTipEventArgs')]
  DNDrawToolTipEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{3B0ECFAA-75A7-31A1-9A07-BC6ED9D45CDB}']
  { getters & setters } 

    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_AssociatedWindow: DNIWin32Window;
    function get_AssociatedControl: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ToolTipText: string;
    function get_Font: DDN.System.Drawing.DNFont;

  { methods } 

    procedure DrawBackground;
    procedure DrawText; overload;
    procedure DrawText(flags: DNTextFormatFlags); overload;
    procedure DrawBorder;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property AssociatedWindow: DNIWin32Window read get_AssociatedWindow;
    property AssociatedControl: DNControl read get_AssociatedControl;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ToolTipText: string read get_ToolTipText;
    property Font: DDN.System.Drawing.DNFont read get_Font;
  end;

  TDNDrawToolTipEventArgs = class(TDNGenericImport<DNDrawToolTipEventArgsClass, DNDrawToolTipEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDrawTreeNodeEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{274A5A12-34C0-5715-8DC9-CC6A2803E7CC}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; node: DNTreeNode; bounds: DDN.System.Drawing.DNRectangle; state: DNTreeNodeStates): DNDrawTreeNodeEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DrawTreeNodeEventArgs')]
  DNDrawTreeNodeEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{C785E785-634A-36F7-B76D-F34204F366C3}']
  { getters & setters } 

    function get_DrawDefault: Boolean;
    procedure set_DrawDefault(value: Boolean);
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Node: DNTreeNode;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_State: DNTreeNodeStates;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DrawDefault: Boolean read get_DrawDefault write set_DrawDefault;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Node: DNTreeNode read get_Node;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property State: DNTreeNodeStates read get_State;
  end;

  TDNDrawTreeNodeEventArgs = class(TDNGenericImport<DNDrawTreeNodeEventArgsClass, DNDrawTreeNodeEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFormClosedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{F0111983-54FF-5042-8C1A-250F51123EAD}']
  { constructors } 

    {class} function init(closeReason: DNCloseReason): DNFormClosedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.FormClosedEventArgs')]
  DNFormClosedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{F0CCBB06-7767-37C4-9DB6-5B1B7A165A9A}']
  { getters & setters } 

    function get_CloseReason: DNCloseReason;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CloseReason: DNCloseReason read get_CloseReason;
  end;

  TDNFormClosedEventArgs = class(TDNGenericImport<DNFormClosedEventArgsClass, DNFormClosedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGiveFeedbackEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{F6F7E493-9B95-53E0-83C7-D103D1AD8341}']
  { constructors } 

    {class} function init(effect: DNDragDropEffects; useDefaultCursors: Boolean): DNGiveFeedbackEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.GiveFeedbackEventArgs')]
  DNGiveFeedbackEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{5BAC1675-5DD4-354F-BED7-1BECA69DE22B}']
  { getters & setters } 

    function get_Effect: DNDragDropEffects;
    function get_UseDefaultCursors: Boolean;
    procedure set_UseDefaultCursors(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Effect: DNDragDropEffects read get_Effect;
    property UseDefaultCursors: Boolean read get_UseDefaultCursors write set_UseDefaultCursors;
  end;

  TDNGiveFeedbackEventArgs = class(TDNGenericImport<DNGiveFeedbackEventArgsClass, DNGiveFeedbackEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHelpEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7C940EB9-B7F4-58EE-8785-5F0BDC30BCBB}']
  { constructors } 

    {class} function init(mousePos: DDN.System.Drawing.DNPoint): DNHelpEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.HelpEventArgs')]
  DNHelpEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{2CB72A4A-04B1-39DC-BC48-0D5A82D0576A}']
  { getters & setters } 

    function get_MousePos: DDN.System.Drawing.DNPoint;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property MousePos: DDN.System.Drawing.DNPoint read get_MousePos;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNHelpEventArgs = class(TDNGenericImport<DNHelpEventArgsClass, DNHelpEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlElementErrorEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{EAE93B4E-191C-5042-8000-90E2DE0494A4}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlElementErrorEventArgs')]
  DNHtmlElementErrorEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{F6478F24-8935-39A4-8077-DE4D2455939F}']
  { getters & setters } 

    function get_Description: string;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);
    function get_LineNumber: Int32;
    function get_Url: DDN.System.DNUri;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Description: string read get_Description;
    property Handled: Boolean read get_Handled write set_Handled;
    property LineNumber: Int32 read get_LineNumber;
    property Url: DDN.System.DNUri read get_Url;
  end;

  TDNHtmlElementErrorEventArgs = class(TDNGenericImport<DNHtmlElementErrorEventArgsClass, DNHtmlElementErrorEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlElementEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{17A71D38-0EAD-5EB2-9FDE-1784F03DF98B}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlElementEventArgs')]
  DNHtmlElementEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{1EC5EF42-F862-385A-9681-3F19829422D2}']
  { getters & setters } 

    function get_MouseButtonsPressed: DNMouseButtons;
    function get_ClientMousePosition: DDN.System.Drawing.DNPoint;
    function get_OffsetMousePosition: DDN.System.Drawing.DNPoint;
    function get_MousePosition: DDN.System.Drawing.DNPoint;
    function get_BubbleEvent: Boolean;
    procedure set_BubbleEvent(value: Boolean);
    function get_KeyPressedCode: Int32;
    function get_AltKeyPressed: Boolean;
    function get_CtrlKeyPressed: Boolean;
    function get_ShiftKeyPressed: Boolean;
    function get_EventType: string;
    function get_ReturnValue: Boolean;
    procedure set_ReturnValue(value: Boolean);
    function get_FromElement: DNHtmlElement;
    function get_ToElement: DNHtmlElement;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property MouseButtonsPressed: DNMouseButtons read get_MouseButtonsPressed;
    property ClientMousePosition: DDN.System.Drawing.DNPoint read get_ClientMousePosition;
    property OffsetMousePosition: DDN.System.Drawing.DNPoint read get_OffsetMousePosition;
    property MousePosition: DDN.System.Drawing.DNPoint read get_MousePosition;
    property BubbleEvent: Boolean read get_BubbleEvent write set_BubbleEvent;
    property KeyPressedCode: Int32 read get_KeyPressedCode;
    property AltKeyPressed: Boolean read get_AltKeyPressed;
    property CtrlKeyPressed: Boolean read get_CtrlKeyPressed;
    property ShiftKeyPressed: Boolean read get_ShiftKeyPressed;
    property EventType: string read get_EventType;
    property ReturnValue: Boolean read get_ReturnValue write set_ReturnValue;
    property FromElement: DNHtmlElement read get_FromElement;
    property ToElement: DNHtmlElement read get_ToElement;
  end;

  TDNHtmlElementEventArgs = class(TDNGenericImport<DNHtmlElementEventArgsClass, DNHtmlElementEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNInputLanguageChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{64A9D424-49F5-5427-9F5C-3AA64950DDE5}']
  { constructors } 

    {class} function init(culture: DDN.mscorlib.DNCultureInfo; charSet: Byte): DNInputLanguageChangedEventArgs; overload;
    {class} function init(inputLanguage: DNInputLanguage; charSet: Byte): DNInputLanguageChangedEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.InputLanguageChangedEventArgs')]
  DNInputLanguageChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{60DC6B4D-DD8A-39EF-A0F8-3E1F9A3824F2}']
  { getters & setters } 

    function get_InputLanguage: DNInputLanguage;
    function get_Culture: DDN.mscorlib.DNCultureInfo;
    function get_CharSet: Byte;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property InputLanguage: DNInputLanguage read get_InputLanguage;
    property Culture: DDN.mscorlib.DNCultureInfo read get_Culture;
    property CharSet: Byte read get_CharSet;
  end;

  TDNInputLanguageChangedEventArgs = class(TDNGenericImport<DNInputLanguageChangedEventArgsClass, DNInputLanguageChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNInvalidateEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7CA05956-F51D-53FF-A219-B04FB6177C36}']
  { constructors } 

    {class} function init(invalidRect: DDN.System.Drawing.DNRectangle): DNInvalidateEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.InvalidateEventArgs')]
  DNInvalidateEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{206F75AB-3A64-3CC3-B006-DEE356C71A83}']
  { getters & setters } 

    function get_InvalidRect: DDN.System.Drawing.DNRectangle;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property InvalidRect: DDN.System.Drawing.DNRectangle read get_InvalidRect;
  end;

  TDNInvalidateEventArgs = class(TDNGenericImport<DNInvalidateEventArgsClass, DNInvalidateEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNItemChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{9A206A4D-7FD7-57AB-B6CD-8CE8BD52222B}']
  end;

  [DNTypeName('System.Windows.Forms.ItemChangedEventArgs')]
  DNItemChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{0AB16818-27F7-3DD0-B67F-19516F50CA59}']
  { getters & setters } 

    function get_Index: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Index: Int32 read get_Index;
  end;

  TDNItemChangedEventArgs = class(TDNGenericImport<DNItemChangedEventArgsClass, DNItemChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNItemCheckedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{486F35B2-36CD-5B2A-8EC2-25F0DD85A54B}']
  { constructors } 

    {class} function init(item: DNListViewItem): DNItemCheckedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ItemCheckedEventArgs')]
  DNItemCheckedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{DA8271B3-987C-322E-9560-3997C3CF22DA}']
  { getters & setters } 

    function get_Item: DNListViewItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item: DNListViewItem read get_Item;
  end;

  TDNItemCheckedEventArgs = class(TDNGenericImport<DNItemCheckedEventArgsClass, DNItemCheckedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNItemCheckEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{99BF7A84-81D9-5A24-B7A2-E72FD3C97103}']
  { constructors } 

    {class} function init(index: Int32; newCheckValue: DNCheckState; currentValue: DNCheckState): DNItemCheckEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ItemCheckEventArgs')]
  DNItemCheckEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{4AA49D46-DDCD-349B-BAF5-612CB25F45A4}']
  { getters & setters } 

    function get_Index: Int32;
    function get_NewValue: DNCheckState;
    procedure set_NewValue(value: DNCheckState);
    function get_CurrentValue: DNCheckState;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Index: Int32 read get_Index;
    property NewValue: DNCheckState read get_NewValue write set_NewValue;
    property CurrentValue: DNCheckState read get_CurrentValue;
  end;

  TDNItemCheckEventArgs = class(TDNGenericImport<DNItemCheckEventArgsClass, DNItemCheckEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNItemDragEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{CF43B020-D24D-5F83-9A78-0A37F95FAC99}']
  { constructors } 

    {class} function init(button: DNMouseButtons): DNItemDragEventArgs; overload;
    {class} function init(button: DNMouseButtons; item: DDN.mscorlib.DNObject): DNItemDragEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.ItemDragEventArgs')]
  DNItemDragEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{16372BA7-956F-33EF-8472-903F87562D2A}']
  { getters & setters } 

    function get_Button: DNMouseButtons;
    function get_Item: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Button: DNMouseButtons read get_Button;
    property Item: DDN.mscorlib.DNObject read get_Item;
  end;

  TDNItemDragEventArgs = class(TDNGenericImport<DNItemDragEventArgsClass, DNItemDragEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNKeyEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{5A053198-C58E-5361-AD46-23C4CE8FD7E7}']
  { constructors } 

    {class} function init(keyData: DNKeys): DNKeyEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.KeyEventArgs')]
  DNKeyEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{8878906E-C954-32D5-8F66-AD3C93B910EA}']
  { getters & setters } 

    function get_Alt: Boolean;
    function get_Control: Boolean;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);
    function get_KeyCode: DNKeys;
    function get_KeyValue: Int32;
    function get_KeyData: DNKeys;
    function get_Modifiers: DNKeys;
    function get_Shift: Boolean;
    function get_SuppressKeyPress: Boolean;
    procedure set_SuppressKeyPress(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Alt: Boolean read get_Alt;
    property Control: Boolean read get_Control;
    property Handled: Boolean read get_Handled write set_Handled;
    property KeyCode: DNKeys read get_KeyCode;
    property KeyValue: Int32 read get_KeyValue;
    property KeyData: DNKeys read get_KeyData;
    property Modifiers: DNKeys read get_Modifiers;
    property Shift: Boolean read get_Shift;
    property SuppressKeyPress: Boolean read get_SuppressKeyPress write set_SuppressKeyPress;
  end;

  TDNKeyEventArgs = class(TDNGenericImport<DNKeyEventArgsClass, DNKeyEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNKeyPressEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{81A0E1AB-806E-517A-9B9A-8589870510A2}']
  { constructors } 

    {class} function init(keyChar: Char): DNKeyPressEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.KeyPressEventArgs')]
  DNKeyPressEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{CCC93D67-CC30-3AF2-85AA-FF8B589FDA64}']
  { getters & setters } 

    function get_KeyChar: Char;
    procedure set_KeyChar(value: Char);
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property KeyChar: Char read get_KeyChar write set_KeyChar;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNKeyPressEventArgs = class(TDNGenericImport<DNKeyPressEventArgsClass, DNKeyPressEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLabelEditEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{F5D31173-0BB6-5C2F-BD04-5D9406F1F4CD}']
  { constructors } 

    {class} function init(item: Int32): DNLabelEditEventArgs; overload;
    {class} function init(item: Int32; &label: string): DNLabelEditEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.LabelEditEventArgs')]
  DNLabelEditEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{93A09E6B-0E6F-3E9F-A3DC-C3ACA2E368CC}']
  { getters & setters } 

    function get_Label: string;
    function get_Item: Int32;
    function get_CancelEdit: Boolean;
    procedure set_CancelEdit(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property &Label: string read get_Label;
    property Item: Int32 read get_Item;
    property CancelEdit: Boolean read get_CancelEdit write set_CancelEdit;
  end;

  TDNLabelEditEventArgs = class(TDNGenericImport<DNLabelEditEventArgsClass, DNLabelEditEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLayoutEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{8F2653FF-0FB9-50C0-9672-03F8AAF33657}']
  { constructors } 

    {class} function init(affectedComponent: DDN.System.DNIComponent; affectedProperty: string): DNLayoutEventArgs; overload;
    {class} function init(affectedControl: DNControl; affectedProperty: string): DNLayoutEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.LayoutEventArgs')]
  DNLayoutEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{3AE68098-FAF9-3F76-AA5A-C092DF1E674C}']
  { getters & setters } 

    function get_AffectedComponent: DDN.System.DNIComponent;
    function get_AffectedControl: DNControl;
    function get_AffectedProperty: string;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property AffectedComponent: DDN.System.DNIComponent read get_AffectedComponent;
    property AffectedControl: DNControl read get_AffectedControl;
    property AffectedProperty: string read get_AffectedProperty;
  end;

  TDNLayoutEventArgs = class(TDNGenericImport<DNLayoutEventArgsClass, DNLayoutEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkClickedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{B7F4E60F-9271-596B-A0A0-FDDF1FE89B6F}']
  { constructors } 

    {class} function init(linkText: string): DNLinkClickedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.LinkClickedEventArgs')]
  DNLinkClickedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{E46C918A-543B-33BD-B2AA-072FE22BDE01}']
  { getters & setters } 

    function get_LinkText: string;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property LinkText: string read get_LinkText;
  end;

  TDNLinkClickedEventArgs = class(TDNGenericImport<DNLinkClickedEventArgsClass, DNLinkClickedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkLabelLinkClickedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7F8FE0F0-CB19-5390-9838-CBA9AE534E52}']
  { constructors } 

    {class} function init(link: DNLinkLabel_Link): DNLinkLabelLinkClickedEventArgs; overload;
    {class} function init(link: DNLinkLabel_Link; button: DNMouseButtons): DNLinkLabelLinkClickedEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.LinkLabelLinkClickedEventArgs')]
  DNLinkLabelLinkClickedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{E974BB68-E71A-3995-B0DF-7FE510956365}']
  { getters & setters } 

    function get_Button: DNMouseButtons;
    function get_Link: DNLinkLabel_Link;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Button: DNMouseButtons read get_Button;
    property Link: DNLinkLabel_Link read get_Link;
  end;

  TDNLinkLabelLinkClickedEventArgs = class(TDNGenericImport<DNLinkLabelLinkClickedEventArgsClass, DNLinkLabelLinkClickedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewItemMouseHoverEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{6E1295EA-6540-5C1D-BC33-8B940DC2B903}']
  { constructors } 

    {class} function init(item: DNListViewItem): DNListViewItemMouseHoverEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ListViewItemMouseHoverEventArgs')]
  DNListViewItemMouseHoverEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{DD1BCAA8-778B-3687-9DD7-E9D2E6F01D75}']
  { getters & setters } 

    function get_Item: DNListViewItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item: DNListViewItem read get_Item;
  end;

  TDNListViewItemMouseHoverEventArgs = class(TDNGenericImport<DNListViewItemMouseHoverEventArgsClass, DNListViewItemMouseHoverEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewItemSelectionChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{2770F9DB-E080-5E10-BBB5-D30559B6BA1B}']
  { constructors } 

    {class} function init(item: DNListViewItem; itemIndex: Int32; isSelected: Boolean): DNListViewItemSelectionChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ListViewItemSelectionChangedEventArgs')]
  DNListViewItemSelectionChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{13973CBB-18A5-3A90-AC84-2FDD75F38E2B}']
  { getters & setters } 

    function get_IsSelected: Boolean;
    function get_Item: DNListViewItem;
    function get_ItemIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property IsSelected: Boolean read get_IsSelected;
    property Item: DNListViewItem read get_Item;
    property ItemIndex: Int32 read get_ItemIndex;
  end;

  TDNListViewItemSelectionChangedEventArgs = class(TDNGenericImport<DNListViewItemSelectionChangedEventArgsClass, DNListViewItemSelectionChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewVirtualItemsSelectionRangeChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7E5B2350-6584-55F0-BE0A-75408D6D0EF7}']
  { constructors } 

    {class} function init(startIndex: Int32; endIndex: Int32; isSelected: Boolean): DNListViewVirtualItemsSelectionRangeChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs')]
  DNListViewVirtualItemsSelectionRangeChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{97933FB1-F070-3845-9B79-58143F776175}']
  { getters & setters } 

    function get_EndIndex: Int32;
    function get_IsSelected: Boolean;
    function get_StartIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property EndIndex: Int32 read get_EndIndex;
    property IsSelected: Boolean read get_IsSelected;
    property StartIndex: Int32 read get_StartIndex;
  end;

  TDNListViewVirtualItemsSelectionRangeChangedEventArgs = class(TDNGenericImport<DNListViewVirtualItemsSelectionRangeChangedEventArgsClass, DNListViewVirtualItemsSelectionRangeChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMaskInputRejectedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7EB79F8C-AE15-534E-9393-173640BDE86F}']
  { constructors } 

    {class} function init(position: Int32; rejectionHint: DDN.System.DNMaskedTextResultHint): DNMaskInputRejectedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.MaskInputRejectedEventArgs')]
  DNMaskInputRejectedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{04E43BF5-CFFA-3CAF-B2DE-E49FE3B0C7D9}']
  { getters & setters } 

    function get_Position: Int32;
    function get_RejectionHint: DDN.System.DNMaskedTextResultHint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Position: Int32 read get_Position;
    property RejectionHint: DDN.System.DNMaskedTextResultHint read get_RejectionHint;
  end;

  TDNMaskInputRejectedEventArgs = class(TDNGenericImport<DNMaskInputRejectedEventArgsClass, DNMaskInputRejectedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMeasureItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{3DF748E2-20A3-5517-A390-D083B9B5B19B}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; index: Int32; itemHeight: Int32): DNMeasureItemEventArgs; overload;
    {class} function init(graphics: DDN.System.Drawing.DNGraphics; index: Int32): DNMeasureItemEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.MeasureItemEventArgs')]
  DNMeasureItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{39B3318F-C2F2-3487-B453-CDC141FE1C53}']
  { getters & setters } 

    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Index: Int32;
    function get_ItemHeight: Int32;
    procedure set_ItemHeight(value: Int32);
    function get_ItemWidth: Int32;
    procedure set_ItemWidth(value: Int32);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Index: Int32 read get_Index;
    property ItemHeight: Int32 read get_ItemHeight write set_ItemHeight;
    property ItemWidth: Int32 read get_ItemWidth write set_ItemWidth;
  end;

  TDNMeasureItemEventArgs = class(TDNGenericImport<DNMeasureItemEventArgsClass, DNMeasureItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMouseEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{D320212D-076B-52DD-8183-8A8A55887966}']
  { constructors } 

    {class} function init(button: DNMouseButtons; clicks: Int32; x: Int32; y: Int32; delta: Int32): DNMouseEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.MouseEventArgs')]
  DNMouseEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{204759F6-3635-32D3-BA35-E5636C6001F7}']
  { getters & setters } 

    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNMouseEventArgs = class(TDNGenericImport<DNMouseEventArgsClass, DNMouseEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellMouseEventArgsClass = interface(DNMouseEventArgsClass)
  ['{EF520F8C-B904-58AF-BA67-7A8DB68F3351}']
  { constructors } 

    {class} function init(columnIndex: Int32; rowIndex: Int32; localX: Int32; localY: Int32; e: DNMouseEventArgs): DNDataGridViewCellMouseEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellMouseEventArgs')]
  DNDataGridViewCellMouseEventArgs = interface(DNMouseEventArgs)
  ['{590C3E20-FAE5-37CE-B821-F6E7F30EA8A1}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;
    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNDataGridViewCellMouseEventArgs = class(TDNGenericImport<DNDataGridViewCellMouseEventArgsClass, DNDataGridViewCellMouseEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHandledMouseEventArgsClass = interface(DNMouseEventArgsClass)
  ['{F98304E0-FDFA-554B-A23B-E22169AE3245}']
  { constructors } 

    {class} function init(button: DNMouseButtons; clicks: Int32; x: Int32; y: Int32; delta: Int32): DNHandledMouseEventArgs; overload;
    {class} function init(button: DNMouseButtons; clicks: Int32; x: Int32; y: Int32; delta: Int32; defaultHandledValue: Boolean): DNHandledMouseEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.HandledMouseEventArgs')]
  DNHandledMouseEventArgs = interface(DNMouseEventArgs)
  ['{4EC55DBE-1C57-3672-9653-D4FB231379C2}']
  { getters & setters } 

    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);
    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Handled: Boolean read get_Handled write set_Handled;
    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNHandledMouseEventArgs = class(TDNGenericImport<DNHandledMouseEventArgsClass, DNHandledMouseEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnDividerDoubleClickEventArgsClass = interface(DNHandledMouseEventArgsClass)
  ['{8FF3D2C8-3D9E-5A7F-B43C-F8B3EBDA3FAD}']
  { constructors } 

    {class} function init(columnIndex: Int32; e: DNHandledMouseEventArgs): DNDataGridViewColumnDividerDoubleClickEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs')]
  DNDataGridViewColumnDividerDoubleClickEventArgs = interface(DNHandledMouseEventArgs)
  ['{637C1AC3-114B-36F1-AF69-1C2BAE291E51}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);
    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property Handled: Boolean read get_Handled write set_Handled;
    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNDataGridViewColumnDividerDoubleClickEventArgs = class(TDNGenericImport<DNDataGridViewColumnDividerDoubleClickEventArgsClass, DNDataGridViewColumnDividerDoubleClickEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowDividerDoubleClickEventArgsClass = interface(DNHandledMouseEventArgsClass)
  ['{ED00A7C2-A33B-56DA-83F6-679262F4CCD3}']
  { constructors } 

    {class} function init(rowIndex: Int32; e: DNHandledMouseEventArgs): DNDataGridViewRowDividerDoubleClickEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs')]
  DNDataGridViewRowDividerDoubleClickEventArgs = interface(DNHandledMouseEventArgs)
  ['{92691E00-4CB7-3E51-A4F1-F81258C550FC}']
  { getters & setters } 

    function get_RowIndex: Int32;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);
    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property RowIndex: Int32 read get_RowIndex;
    property Handled: Boolean read get_Handled write set_Handled;
    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNDataGridViewRowDividerDoubleClickEventArgs = class(TDNGenericImport<DNDataGridViewRowDividerDoubleClickEventArgsClass, DNDataGridViewRowDividerDoubleClickEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNStatusBarPanelClickEventArgsClass = interface(DNMouseEventArgsClass)
  ['{B5C4C1EE-7562-5DBA-9F16-36CE318408D4}']
  { constructors } 

    {class} function init(statusBarPanel: DNStatusBarPanel; button: DNMouseButtons; clicks: Int32; x: Int32; y: Int32): DNStatusBarPanelClickEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.StatusBarPanelClickEventArgs')]
  DNStatusBarPanelClickEventArgs = interface(DNMouseEventArgs)
  ['{B7339885-3390-386F-9C05-EB503DA5EBAC}']
  { getters & setters } 

    function get_StatusBarPanel: DNStatusBarPanel;
    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property StatusBarPanel: DNStatusBarPanel read get_StatusBarPanel;
    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNStatusBarPanelClickEventArgs = class(TDNGenericImport<DNStatusBarPanelClickEventArgsClass, DNStatusBarPanelClickEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeNodeMouseClickEventArgsClass = interface(DNMouseEventArgsClass)
  ['{6186ABB2-9027-5724-83F7-A0195F61F378}']
  { constructors } 

    {class} function init(node: DNTreeNode; button: DNMouseButtons; clicks: Int32; x: Int32; y: Int32): DNTreeNodeMouseClickEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TreeNodeMouseClickEventArgs')]
  DNTreeNodeMouseClickEventArgs = interface(DNMouseEventArgs)
  ['{5840827B-29FB-3083-9519-D7415665ADE8}']
  { getters & setters } 

    function get_Node: DNTreeNode;
    function get_Button: DNMouseButtons;
    function get_Clicks: Int32;
    function get_X: Int32;
    function get_Y: Int32;
    function get_Delta: Int32;
    function get_Location: DDN.System.Drawing.DNPoint;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Node: DNTreeNode read get_Node;
    property Button: DNMouseButtons read get_Button;
    property Clicks: Int32 read get_Clicks;
    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property Delta: Int32 read get_Delta;
    property Location: DDN.System.Drawing.DNPoint read get_Location;
  end;

  TDNTreeNodeMouseClickEventArgs = class(TDNGenericImport<DNTreeNodeMouseClickEventArgsClass, DNTreeNodeMouseClickEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNavigateEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{6C68588D-6E5D-562A-BBE9-7ACA639E79F1}']
  { constructors } 

    {class} function init(isForward: Boolean): DNNavigateEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.NavigateEventArgs')]
  DNNavigateEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{B3945078-136C-3189-85FF-83B5E2D839F0}']
  { getters & setters } 

    function get_Forward: Boolean;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property &Forward: Boolean read get_Forward;
  end;

  TDNNavigateEventArgs = class(TDNGenericImport<DNNavigateEventArgsClass, DNNavigateEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNodeLabelEditEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{6FB23D66-50A9-5F24-A5DC-CE2849F9FC9B}']
  { constructors } 

    {class} function init(node: DNTreeNode): DNNodeLabelEditEventArgs; overload;
    {class} function init(node: DNTreeNode; &label: string): DNNodeLabelEditEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.NodeLabelEditEventArgs')]
  DNNodeLabelEditEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{6CF1896F-6C83-3B42-81E4-C226A2A73DB2}']
  { getters & setters } 

    function get_CancelEdit: Boolean;
    procedure set_CancelEdit(value: Boolean);
    function get_Label: string;
    function get_Node: DNTreeNode;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CancelEdit: Boolean read get_CancelEdit write set_CancelEdit;
    property &Label: string read get_Label;
    property Node: DNTreeNode read get_Node;
  end;

  TDNNodeLabelEditEventArgs = class(TDNGenericImport<DNNodeLabelEditEventArgsClass, DNNodeLabelEditEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPaintEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{0211B109-99A8-529F-88B9-ABAD8B8AE126}']
  { constructors } 

    {class} function init(graphics: DDN.System.Drawing.DNGraphics; clipRect: DDN.System.Drawing.DNRectangle): DNPaintEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.PaintEventArgs')]
  DNPaintEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{92A25B3A-D6A0-38C1-A5F0-949A763D24B2}']
  { getters & setters } 

    function get_ClipRectangle: DDN.System.Drawing.DNRectangle;
    function get_Graphics: DDN.System.Drawing.DNGraphics;

  { methods } 

    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ClipRectangle: DDN.System.Drawing.DNRectangle read get_ClipRectangle;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
  end;

  TDNPaintEventArgs = class(TDNGenericImport<DNPaintEventArgsClass, DNPaintEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutCellPaintEventArgsClass = interface(DNPaintEventArgsClass)
  ['{B7E78FC8-6152-541D-BD6E-2E50098D52C7}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; clipRectangle: DDN.System.Drawing.DNRectangle; cellBounds: DDN.System.Drawing.DNRectangle; column: Int32; row: Int32): DNTableLayoutCellPaintEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TableLayoutCellPaintEventArgs')]
  DNTableLayoutCellPaintEventArgs = interface(DNPaintEventArgs)
  ['{C2B38C11-533F-3B1A-A3C7-36E662459E83}']
  { getters & setters } 

    function get_CellBounds: DDN.System.Drawing.DNRectangle;
    function get_Row: Int32;
    function get_Column: Int32;
    function get_ClipRectangle: DDN.System.Drawing.DNRectangle;
    function get_Graphics: DDN.System.Drawing.DNGraphics;

  { methods } 

    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CellBounds: DDN.System.Drawing.DNRectangle read get_CellBounds;
    property Row: Int32 read get_Row;
    property Column: Int32 read get_Column;
    property ClipRectangle: DDN.System.Drawing.DNRectangle read get_ClipRectangle;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
  end;

  TDNTableLayoutCellPaintEventArgs = class(TDNGenericImport<DNTableLayoutCellPaintEventArgsClass, DNTableLayoutCellPaintEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPreviewKeyDownEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{82700F77-5FEE-5A64-AA3C-424E73031F48}']
  { constructors } 

    {class} function init(keyData: DNKeys): DNPreviewKeyDownEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.PreviewKeyDownEventArgs')]
  DNPreviewKeyDownEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{4312EE85-7C7F-34F5-9F70-A3871CD6B651}']
  { getters & setters } 

    function get_Alt: Boolean;
    function get_Control: Boolean;
    function get_KeyCode: DNKeys;
    function get_KeyValue: Int32;
    function get_KeyData: DNKeys;
    function get_Modifiers: DNKeys;
    function get_Shift: Boolean;
    function get_IsInputKey: Boolean;
    procedure set_IsInputKey(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Alt: Boolean read get_Alt;
    property Control: Boolean read get_Control;
    property KeyCode: DNKeys read get_KeyCode;
    property KeyValue: Int32 read get_KeyValue;
    property KeyData: DNKeys read get_KeyData;
    property Modifiers: DNKeys read get_Modifiers;
    property Shift: Boolean read get_Shift;
    property IsInputKey: Boolean read get_IsInputKey write set_IsInputKey;
  end;

  TDNPreviewKeyDownEventArgs = class(TDNGenericImport<DNPreviewKeyDownEventArgsClass, DNPreviewKeyDownEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPropertyTabChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{6F4F9F6F-FE47-5831-AFA8-BCD1D51C8C93}']
  { constructors } 

    {class} function init(oldTab: DNPropertyTab; newTab: DNPropertyTab): DNPropertyTabChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.PropertyTabChangedEventArgs')]
  DNPropertyTabChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{1C77E4E3-C48C-3206-BD45-2F5EDA26C04A}']
  { getters & setters } 

    function get_OldTab: DNPropertyTab;
    function get_NewTab: DNPropertyTab;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property OldTab: DNPropertyTab read get_OldTab;
    property NewTab: DNPropertyTab read get_NewTab;
  end;

  TDNPropertyTabChangedEventArgs = class(TDNGenericImport<DNPropertyTabChangedEventArgsClass, DNPropertyTabChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPropertyValueChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{E7D7A81A-3106-5C58-BCE5-60730BDD06DA}']
  { constructors } 

    {class} function init(changedItem: DNGridItem; oldValue: DDN.mscorlib.DNObject): DNPropertyValueChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.PropertyValueChangedEventArgs')]
  DNPropertyValueChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{307A9D73-A1F9-3F46-9015-7920D42FC04E}']
  { getters & setters } 

    function get_ChangedItem: DNGridItem;
    function get_OldValue: DDN.mscorlib.DNObject;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ChangedItem: DNGridItem read get_ChangedItem;
    property OldValue: DDN.mscorlib.DNObject read get_OldValue;
  end;

  TDNPropertyValueChangedEventArgs = class(TDNGenericImport<DNPropertyValueChangedEventArgsClass, DNPropertyValueChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNQueryAccessibilityHelpEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{7A7D667F-1C5D-5CED-A761-9485514C30C7}']
  { constructors } 

    {class} function init: DNQueryAccessibilityHelpEventArgs; overload;
    {class} function init(helpNamespace: string; helpString: string; helpKeyword: string): DNQueryAccessibilityHelpEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.QueryAccessibilityHelpEventArgs')]
  DNQueryAccessibilityHelpEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{25AF3ECD-8F91-3CCE-9E6F-03D7348D8CBA}']
  { getters & setters } 

    function get_HelpNamespace: string;
    procedure set_HelpNamespace(value: string);
    function get_HelpString: string;
    procedure set_HelpString(value: string);
    function get_HelpKeyword: string;
    procedure set_HelpKeyword(value: string);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property HelpNamespace: string read get_HelpNamespace write set_HelpNamespace;
    property HelpString: string read get_HelpString write set_HelpString;
    property HelpKeyword: string read get_HelpKeyword write set_HelpKeyword;
  end;

  TDNQueryAccessibilityHelpEventArgs = class(TDNGenericImport<DNQueryAccessibilityHelpEventArgsClass, DNQueryAccessibilityHelpEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNQueryContinueDragEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{45C029E5-F5E7-5C93-89DA-21DFB9D85FEA}']
  { constructors } 

    {class} function init(keyState: Int32; escapePressed: Boolean; action: DNDragAction): DNQueryContinueDragEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.QueryContinueDragEventArgs')]
  DNQueryContinueDragEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{1A4924DC-F59C-3800-8C30-E9F072B64884}']
  { getters & setters } 

    function get_KeyState: Int32;
    function get_EscapePressed: Boolean;
    function get_Action: DNDragAction;
    procedure set_Action(value: DNDragAction);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property KeyState: Int32 read get_KeyState;
    property EscapePressed: Boolean read get_EscapePressed;
    property Action: DNDragAction read get_Action write set_Action;
  end;

  TDNQueryContinueDragEventArgs = class(TDNGenericImport<DNQueryContinueDragEventArgsClass, DNQueryContinueDragEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNQuestionEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{262E7F5A-EBE8-54F6-BDDD-C87C76DCC26D}']
  { constructors } 

    {class} function init: DNQuestionEventArgs; overload;
    {class} function init(response: Boolean): DNQuestionEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.QuestionEventArgs')]
  DNQuestionEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{83C3711A-BA41-34CB-A7C1-D99B2E049611}']
  { getters & setters } 

    function get_Response: Boolean;
    procedure set_Response(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Response: Boolean read get_Response write set_Response;
  end;

  TDNQuestionEventArgs = class(TDNGenericImport<DNQuestionEventArgsClass, DNQuestionEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRetrieveVirtualItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{88196E39-B2B2-5206-97D1-3E1261FF9D34}']
  { constructors } 

    {class} function init(itemIndex: Int32): DNRetrieveVirtualItemEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.RetrieveVirtualItemEventArgs')]
  DNRetrieveVirtualItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{CB705590-A4C3-3004-9614-204E7894767B}']
  { getters & setters } 

    function get_ItemIndex: Int32;
    function get_Item: DNListViewItem;
    procedure set_Item(value: DNListViewItem);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ItemIndex: Int32 read get_ItemIndex;
    property Item: DNListViewItem read get_Item write set_Item;
  end;

  TDNRetrieveVirtualItemEventArgs = class(TDNGenericImport<DNRetrieveVirtualItemEventArgsClass, DNRetrieveVirtualItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{397BD92F-AF12-5050-BB84-6695143BD6C1}']
  { constructors } 

    {class} function init(&type: DNScrollEventType; newValue: Int32): DNScrollEventArgs; overload;
    {class} function init(&type: DNScrollEventType; newValue: Int32; scroll: DNScrollOrientation): DNScrollEventArgs; overload;
    {class} function init(&type: DNScrollEventType; oldValue: Int32; newValue: Int32): DNScrollEventArgs; overload;
    {class} function init(&type: DNScrollEventType; oldValue: Int32; newValue: Int32; scroll: DNScrollOrientation): DNScrollEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.ScrollEventArgs')]
  DNScrollEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{AC32D912-24C7-31C7-A2D6-8E98ED6BE880}']
  { getters & setters } 

    function get_ScrollOrientation: DNScrollOrientation;
    function get_Type: DNScrollEventType;
    function get_NewValue: Int32;
    procedure set_NewValue(value: Int32);
    function get_OldValue: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ScrollOrientation: DNScrollOrientation read get_ScrollOrientation;
    property &Type: DNScrollEventType read get_Type;
    property NewValue: Int32 read get_NewValue write set_NewValue;
    property OldValue: Int32 read get_OldValue;
  end;

  TDNScrollEventArgs = class(TDNGenericImport<DNScrollEventArgsClass, DNScrollEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSearchForVirtualItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{62014515-AEF3-556B-B241-70105E73D37F}']
  { constructors } 

    {class} function init(isTextSearch: Boolean; isPrefixSearch: Boolean; includeSubItemsInSearch: Boolean; text: string; startingPoint: DDN.System.Drawing.DNPoint; direction: DNSearchDirectionHint; startIndex: Int32): DNSearchForVirtualItemEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.SearchForVirtualItemEventArgs')]
  DNSearchForVirtualItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{2B423574-3649-3504-AE29-630F178C0B3D}']
  { getters & setters } 

    function get_IsTextSearch: Boolean;
    function get_IncludeSubItemsInSearch: Boolean;
    function get_Index: Int32;
    procedure set_Index(value: Int32);
    function get_IsPrefixSearch: Boolean;
    function get_Text: string;
    function get_StartingPoint: DDN.System.Drawing.DNPoint;
    function get_Direction: DNSearchDirectionHint;
    function get_StartIndex: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property IsTextSearch: Boolean read get_IsTextSearch;
    property IncludeSubItemsInSearch: Boolean read get_IncludeSubItemsInSearch;
    property Index: Int32 read get_Index write set_Index;
    property IsPrefixSearch: Boolean read get_IsPrefixSearch;
    property Text: string read get_Text;
    property StartingPoint: DDN.System.Drawing.DNPoint read get_StartingPoint;
    property Direction: DNSearchDirectionHint read get_Direction;
    property StartIndex: Int32 read get_StartIndex;
  end;

  TDNSearchForVirtualItemEventArgs = class(TDNGenericImport<DNSearchForVirtualItemEventArgsClass, DNSearchForVirtualItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSelectedGridItemChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{1D2DDFCC-F4F5-5446-9087-BADE2B13B26A}']
  { constructors } 

    {class} function init(oldSel: DNGridItem; newSel: DNGridItem): DNSelectedGridItemChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.SelectedGridItemChangedEventArgs')]
  DNSelectedGridItemChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{3B7E7163-A678-31F0-8C96-740889569C02}']
  { getters & setters } 

    function get_NewSelection: DNGridItem;
    function get_OldSelection: DNGridItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property NewSelection: DNGridItem read get_NewSelection;
    property OldSelection: DNGridItem read get_OldSelection;
  end;

  TDNSelectedGridItemChangedEventArgs = class(TDNGenericImport<DNSelectedGridItemChangedEventArgsClass, DNSelectedGridItemChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSplitterEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{EC5F8F75-22AE-5C63-92C1-05C1791C9EBE}']
  { constructors } 

    {class} function init(x: Int32; y: Int32; splitX: Int32; splitY: Int32): DNSplitterEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.SplitterEventArgs')]
  DNSplitterEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{8A4E7E83-B7DC-3E65-BC78-FEB2B0BB430F}']
  { getters & setters } 

    function get_X: Int32;
    function get_Y: Int32;
    function get_SplitX: Int32;
    procedure set_SplitX(value: Int32);
    function get_SplitY: Int32;
    procedure set_SplitY(value: Int32);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property X: Int32 read get_X;
    property Y: Int32 read get_Y;
    property SplitX: Int32 read get_SplitX write set_SplitX;
    property SplitY: Int32 read get_SplitY write set_SplitY;
  end;

  TDNSplitterEventArgs = class(TDNGenericImport<DNSplitterEventArgsClass, DNSplitterEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabControlEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{C0A01818-336B-5836-A2E9-6A77B4890080}']
  { constructors } 

    {class} function init(tabPage: DNTabPage; tabPageIndex: Int32; action: DNTabControlAction): DNTabControlEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TabControlEventArgs')]
  DNTabControlEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{E234FB7B-0564-3D43-9630-0835A2FBEC34}']
  { getters & setters } 

    function get_TabPage: DNTabPage;
    function get_TabPageIndex: Int32;
    function get_Action: DNTabControlAction;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property TabPage: DNTabPage read get_TabPage;
    property TabPageIndex: Int32 read get_TabPageIndex;
    property Action: DNTabControlAction read get_Action;
  end;

  TDNTabControlEventArgs = class(TDNGenericImport<DNTabControlEventArgsClass, DNTabControlEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolBarButtonClickEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{ADD94E2C-D402-5DE7-9031-1466B0C1A511}']
  { constructors } 

    {class} function init(button: DNToolBarButton): DNToolBarButtonClickEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolBarButtonClickEventArgs')]
  DNToolBarButtonClickEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{D34BE460-3CC1-3E65-AE38-74616874CC93}']
  { getters & setters } 

    function get_Button: DNToolBarButton;
    procedure set_Button(value: DNToolBarButton);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Button: DNToolBarButton read get_Button write set_Button;
  end;

  TDNToolBarButtonClickEventArgs = class(TDNGenericImport<DNToolBarButtonClickEventArgsClass, DNToolBarButtonClickEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripArrowRenderEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{3F42AB32-3B73-52F0-A99E-85F5BFFE0A2B}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; toolStripItem: DNToolStripItem; arrowRectangle: DDN.System.Drawing.DNRectangle; arrowColor: DDN.System.Drawing.DNColor; arrowDirection: DNArrowDirection): DNToolStripArrowRenderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripArrowRenderEventArgs')]
  DNToolStripArrowRenderEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{FAAC67BB-6871-33C4-8A38-7D05740F4851}']
  { getters & setters } 

    function get_ArrowRectangle: DDN.System.Drawing.DNRectangle;
    procedure set_ArrowRectangle(value: DDN.System.Drawing.DNRectangle);
    function get_ArrowColor: DDN.System.Drawing.DNColor;
    procedure set_ArrowColor(value: DDN.System.Drawing.DNColor);
    function get_Direction: DNArrowDirection;
    procedure set_Direction(value: DNArrowDirection);
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Item: DNToolStripItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ArrowRectangle: DDN.System.Drawing.DNRectangle read get_ArrowRectangle write set_ArrowRectangle;
    property ArrowColor: DDN.System.Drawing.DNColor read get_ArrowColor write set_ArrowColor;
    property Direction: DNArrowDirection read get_Direction write set_Direction;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Item: DNToolStripItem read get_Item;
  end;

  TDNToolStripArrowRenderEventArgs = class(TDNGenericImport<DNToolStripArrowRenderEventArgsClass, DNToolStripArrowRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripContentPanelRenderEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{092DFA49-FBD9-5553-AF0D-EE40D39D69DE}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; contentPanel: DNToolStripContentPanel): DNToolStripContentPanelRenderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripContentPanelRenderEventArgs')]
  DNToolStripContentPanelRenderEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{7958AD13-C802-3D74-8D11-5D809DBE4002}']
  { getters & setters } 

    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);
    function get_ToolStripContentPanel: DNToolStripContentPanel;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Handled: Boolean read get_Handled write set_Handled;
    property ToolStripContentPanel: DNToolStripContentPanel read get_ToolStripContentPanel;
  end;

  TDNToolStripContentPanelRenderEventArgs = class(TDNGenericImport<DNToolStripContentPanelRenderEventArgsClass, DNToolStripContentPanelRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownClosedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{82BD8C89-D847-5F60-97F4-7B41CC7D5A0E}']
  { constructors } 

    {class} function init(reason: DNToolStripDropDownCloseReason): DNToolStripDropDownClosedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownClosedEventArgs')]
  DNToolStripDropDownClosedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{5267FEC4-3DF4-301D-BE97-60B6D2F12E4A}']
  { getters & setters } 

    function get_CloseReason: DNToolStripDropDownCloseReason;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CloseReason: DNToolStripDropDownCloseReason read get_CloseReason;
  end;

  TDNToolStripDropDownClosedEventArgs = class(TDNGenericImport<DNToolStripDropDownClosedEventArgsClass, DNToolStripDropDownClosedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemClickedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{3DA315BA-D3AC-529F-8FF5-703B8F1D843D}']
  { constructors } 

    {class} function init(clickedItem: DNToolStripItem): DNToolStripItemClickedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItemClickedEventArgs')]
  DNToolStripItemClickedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{887D8277-D396-3E31-9B12-E06D78036FC1}']
  { getters & setters } 

    function get_ClickedItem: DNToolStripItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ClickedItem: DNToolStripItem read get_ClickedItem;
  end;

  TDNToolStripItemClickedEventArgs = class(TDNGenericImport<DNToolStripItemClickedEventArgsClass, DNToolStripItemClickedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{5335523F-E2C9-59D4-BB47-6EC192BDB7DE}']
  { constructors } 

    {class} function init(item: DNToolStripItem): DNToolStripItemEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItemEventArgs')]
  DNToolStripItemEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{31E1187E-25E7-3E2A-A13D-8E71B42B0E04}']
  { getters & setters } 

    function get_Item: DNToolStripItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item: DNToolStripItem read get_Item;
  end;

  TDNToolStripItemEventArgs = class(TDNGenericImport<DNToolStripItemEventArgsClass, DNToolStripItemEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemRenderEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{B9031E6E-0710-57C2-B61C-6BB41E04ECFF}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; item: DNToolStripItem): DNToolStripItemRenderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItemRenderEventArgs')]
  DNToolStripItemRenderEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{B0282EC6-7706-37AE-BAE6-6FE8B6AED18E}']
  { getters & setters } 

    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Item: DNToolStripItem;
    function get_ToolStrip: DNToolStrip;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Item: DNToolStripItem read get_Item;
    property ToolStrip: DNToolStrip read get_ToolStrip;
  end;

  TDNToolStripItemRenderEventArgs = class(TDNGenericImport<DNToolStripItemRenderEventArgsClass, DNToolStripItemRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemImageRenderEventArgsClass = interface(DNToolStripItemRenderEventArgsClass)
  ['{729B28A7-FB43-57AF-BA81-A1CF38EE63FE}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; item: DNToolStripItem; imageRectangle: DDN.System.Drawing.DNRectangle): DNToolStripItemImageRenderEventArgs; overload;
    {class} function init(g: DDN.System.Drawing.DNGraphics; item: DNToolStripItem; image: DDN.System.Drawing.DNImage; imageRectangle: DDN.System.Drawing.DNRectangle): DNToolStripItemImageRenderEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItemImageRenderEventArgs')]
  DNToolStripItemImageRenderEventArgs = interface(DNToolStripItemRenderEventArgs)
  ['{11C7AB5A-16D2-3724-B15E-7EB188A71F4A}']
  { getters & setters } 

    function get_Image: DDN.System.Drawing.DNImage;
    function get_ImageRectangle: DDN.System.Drawing.DNRectangle;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Item: DNToolStripItem;
    function get_ToolStrip: DNToolStrip;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Image: DDN.System.Drawing.DNImage read get_Image;
    property ImageRectangle: DDN.System.Drawing.DNRectangle read get_ImageRectangle;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Item: DNToolStripItem read get_Item;
    property ToolStrip: DNToolStrip read get_ToolStrip;
  end;

  TDNToolStripItemImageRenderEventArgs = class(TDNGenericImport<DNToolStripItemImageRenderEventArgsClass, DNToolStripItemImageRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemTextRenderEventArgsClass = interface(DNToolStripItemRenderEventArgsClass)
  ['{F03ADDB5-2491-5B23-8DA0-C87EB3B11778}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; item: DNToolStripItem; text: string; textRectangle: DDN.System.Drawing.DNRectangle; textColor: DDN.System.Drawing.DNColor; textFont: DDN.System.Drawing.DNFont; format: DNTextFormatFlags): DNToolStripItemTextRenderEventArgs; overload;
    {class} function init(g: DDN.System.Drawing.DNGraphics; item: DNToolStripItem; text: string; textRectangle: DDN.System.Drawing.DNRectangle; textColor: DDN.System.Drawing.DNColor; textFont: DDN.System.Drawing.DNFont; textAlign: DDN.System.Drawing.DNContentAlignment): DNToolStripItemTextRenderEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItemTextRenderEventArgs')]
  DNToolStripItemTextRenderEventArgs = interface(DNToolStripItemRenderEventArgs)
  ['{AA39FFB1-AA5A-3295-9B2B-A6C1DDC5352E}']
  { getters & setters } 

    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextColor: DDN.System.Drawing.DNColor;
    procedure set_TextColor(value: DDN.System.Drawing.DNColor);
    function get_TextFont: DDN.System.Drawing.DNFont;
    procedure set_TextFont(value: DDN.System.Drawing.DNFont);
    function get_TextRectangle: DDN.System.Drawing.DNRectangle;
    procedure set_TextRectangle(value: DDN.System.Drawing.DNRectangle);
    function get_TextFormat: DNTextFormatFlags;
    procedure set_TextFormat(value: DNTextFormatFlags);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Item: DNToolStripItem;
    function get_ToolStrip: DNToolStrip;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Text: string read get_Text write set_Text;
    property TextColor: DDN.System.Drawing.DNColor read get_TextColor write set_TextColor;
    property TextFont: DDN.System.Drawing.DNFont read get_TextFont write set_TextFont;
    property TextRectangle: DDN.System.Drawing.DNRectangle read get_TextRectangle write set_TextRectangle;
    property TextFormat: DNTextFormatFlags read get_TextFormat write set_TextFormat;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Item: DNToolStripItem read get_Item;
    property ToolStrip: DNToolStrip read get_ToolStrip;
  end;

  TDNToolStripItemTextRenderEventArgs = class(TDNGenericImport<DNToolStripItemTextRenderEventArgsClass, DNToolStripItemTextRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripSeparatorRenderEventArgsClass = interface(DNToolStripItemRenderEventArgsClass)
  ['{BF0B3EAD-0B10-5B50-9CBB-81AF7222EC7C}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; separator: DNToolStripSeparator; vertical: Boolean): DNToolStripSeparatorRenderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripSeparatorRenderEventArgs')]
  DNToolStripSeparatorRenderEventArgs = interface(DNToolStripItemRenderEventArgs)
  ['{DF75A468-0ACF-3166-96A6-05B6CF3B16B1}']
  { getters & setters } 

    function get_Vertical: Boolean;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_Item: DNToolStripItem;
    function get_ToolStrip: DNToolStrip;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Vertical: Boolean read get_Vertical;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property Item: DNToolStripItem read get_Item;
    property ToolStrip: DNToolStrip read get_ToolStrip;
  end;

  TDNToolStripSeparatorRenderEventArgs = class(TDNGenericImport<DNToolStripSeparatorRenderEventArgsClass, DNToolStripSeparatorRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripPanelRenderEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{A5714673-519B-5855-B5D1-11CC2C904C9C}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; toolStripPanel: DNToolStripPanel): DNToolStripPanelRenderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripPanelRenderEventArgs')]
  DNToolStripPanelRenderEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{4C077466-BF59-3904-A84A-CECABADD9073}']
  { getters & setters } 

    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_ToolStripPanel: DNToolStripPanel;
    function get_Handled: Boolean;
    procedure set_Handled(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property ToolStripPanel: DNToolStripPanel read get_ToolStripPanel;
    property Handled: Boolean read get_Handled write set_Handled;
  end;

  TDNToolStripPanelRenderEventArgs = class(TDNGenericImport<DNToolStripPanelRenderEventArgsClass, DNToolStripPanelRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripRenderEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{11FE6CE6-AF2D-54B9-8A30-9938697B69DD}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; toolStrip: DNToolStrip): DNToolStripRenderEventArgs; overload;
    {class} function init(g: DDN.System.Drawing.DNGraphics; toolStrip: DNToolStrip; affectedBounds: DDN.System.Drawing.DNRectangle; backColor: DDN.System.Drawing.DNColor): DNToolStripRenderEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripRenderEventArgs')]
  DNToolStripRenderEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{8C3A5BE5-DF24-3D12-A16A-FBB33D2FA3FF}']
  { getters & setters } 

    function get_AffectedBounds: DDN.System.Drawing.DNRectangle;
    function get_BackColor: DDN.System.Drawing.DNColor;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_ToolStrip: DNToolStrip;
    function get_ConnectedArea: DDN.System.Drawing.DNRectangle;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property AffectedBounds: DDN.System.Drawing.DNRectangle read get_AffectedBounds;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property ToolStrip: DNToolStrip read get_ToolStrip;
    property ConnectedArea: DDN.System.Drawing.DNRectangle read get_ConnectedArea;
  end;

  TDNToolStripRenderEventArgs = class(TDNGenericImport<DNToolStripRenderEventArgsClass, DNToolStripRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripGripRenderEventArgsClass = interface(DNToolStripRenderEventArgsClass)
  ['{2E3B044D-C708-5614-9608-9C1E694A2C18}']
  { constructors } 

    {class} function init(g: DDN.System.Drawing.DNGraphics; toolStrip: DNToolStrip): DNToolStripGripRenderEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripGripRenderEventArgs')]
  DNToolStripGripRenderEventArgs = interface(DNToolStripRenderEventArgs)
  ['{CDDC9E84-55BC-3448-9BB3-8E869A83B801}']
  { getters & setters } 

    function get_GripBounds: DDN.System.Drawing.DNRectangle;
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripStyle: DNToolStripGripStyle;
    function get_AffectedBounds: DDN.System.Drawing.DNRectangle;
    function get_BackColor: DDN.System.Drawing.DNColor;
    function get_Graphics: DDN.System.Drawing.DNGraphics;
    function get_ToolStrip: DNToolStrip;
    function get_ConnectedArea: DDN.System.Drawing.DNRectangle;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property GripBounds: DDN.System.Drawing.DNRectangle read get_GripBounds;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripStyle: DNToolStripGripStyle read get_GripStyle;
    property AffectedBounds: DDN.System.Drawing.DNRectangle read get_AffectedBounds;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor;
    property Graphics: DDN.System.Drawing.DNGraphics read get_Graphics;
    property ToolStrip: DNToolStrip read get_ToolStrip;
    property ConnectedArea: DDN.System.Drawing.DNRectangle read get_ConnectedArea;
  end;

  TDNToolStripGripRenderEventArgs = class(TDNGenericImport<DNToolStripGripRenderEventArgsClass, DNToolStripGripRenderEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeNodeMouseHoverEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{8329BA40-BD09-5239-A8B8-A277855E495E}']
  { constructors } 

    {class} function init(node: DNTreeNode): DNTreeNodeMouseHoverEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TreeNodeMouseHoverEventArgs')]
  DNTreeNodeMouseHoverEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{FD266995-AB04-3DBB-A121-079E7BE4C498}']
  { getters & setters } 

    function get_Node: DNTreeNode;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Node: DNTreeNode read get_Node;
  end;

  TDNTreeNodeMouseHoverEventArgs = class(TDNGenericImport<DNTreeNodeMouseHoverEventArgsClass, DNTreeNodeMouseHoverEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeViewEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{44E43949-B22D-5836-94BC-D86E170CD28D}']
  { constructors } 

    {class} function init(node: DNTreeNode): DNTreeViewEventArgs; overload;
    {class} function init(node: DNTreeNode; action: DNTreeViewAction): DNTreeViewEventArgs; overload;

  end;

  [DNTypeName('System.Windows.Forms.TreeViewEventArgs')]
  DNTreeViewEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{8C8FAA27-A20D-379B-A6F5-C51F4BAE268C}']
  { getters & setters } 

    function get_Node: DNTreeNode;
    function get_Action: DNTreeViewAction;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Node: DNTreeNode read get_Node;
    property Action: DNTreeViewAction read get_Action;
  end;

  TDNTreeViewEventArgs = class(TDNGenericImport<DNTreeViewEventArgsClass, DNTreeViewEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTypeValidationEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{A6BE71FC-3144-5858-8965-DF3D401173FD}']
  { constructors } 

    {class} function init(validatingType: DDN.mscorlib.DNType; isValidInput: Boolean; returnValue: DDN.mscorlib.DNObject; message: string): DNTypeValidationEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.TypeValidationEventArgs')]
  DNTypeValidationEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{B4BD99BD-7F42-3F77-BBB6-3D285E146E82}']
  { getters & setters } 

    function get_Cancel: Boolean;
    procedure set_Cancel(value: Boolean);
    function get_IsValidInput: Boolean;
    function get_Message: string;
    function get_ReturnValue: DDN.mscorlib.DNObject;
    function get_ValidatingType: DDN.mscorlib.DNType;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Cancel: Boolean read get_Cancel write set_Cancel;
    property IsValidInput: Boolean read get_IsValidInput;
    property Message: string read get_Message;
    property ReturnValue: DDN.mscorlib.DNObject read get_ReturnValue;
    property ValidatingType: DDN.mscorlib.DNType read get_ValidatingType;
  end;

  TDNTypeValidationEventArgs = class(TDNGenericImport<DNTypeValidationEventArgsClass, DNTypeValidationEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNUICuesEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{D3C2EFFF-63C2-571D-8E62-EC5178E558A2}']
  { constructors } 

    {class} function init(uicues: DNUICues): DNUICuesEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.UICuesEventArgs')]
  DNUICuesEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{34A09DB8-0B0E-3893-8B65-180C3997598C}']
  { getters & setters } 

    function get_ShowFocus: Boolean;
    function get_ShowKeyboard: Boolean;
    function get_ChangeFocus: Boolean;
    function get_ChangeKeyboard: Boolean;
    function get_Changed: DNUICues;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ShowFocus: Boolean read get_ShowFocus;
    property ShowKeyboard: Boolean read get_ShowKeyboard;
    property ChangeFocus: Boolean read get_ChangeFocus;
    property ChangeKeyboard: Boolean read get_ChangeKeyboard;
    property Changed: DNUICues read get_Changed;
  end;

  TDNUICuesEventArgs = class(TDNGenericImport<DNUICuesEventArgsClass, DNUICuesEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNUpDownEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{1FC49043-BB5E-5ADC-9A71-232BC8BBDECC}']
  { constructors } 

    {class} function init(buttonPushed: Int32): DNUpDownEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.UpDownEventArgs')]
  DNUpDownEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{5D3021DB-9024-3B92-A568-06E6DE9DAA43}']
  { getters & setters } 

    function get_ButtonID: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ButtonID: Int32 read get_ButtonID;
  end;

  TDNUpDownEventArgs = class(TDNGenericImport<DNUpDownEventArgsClass, DNUpDownEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserDocumentCompletedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{CE00A959-5890-5C38-83C8-E9E81253B5C2}']
  { constructors } 

    {class} function init(url: DDN.System.DNUri): DNWebBrowserDocumentCompletedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.WebBrowserDocumentCompletedEventArgs')]
  DNWebBrowserDocumentCompletedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{3D0B9C9A-E7AC-3206-8B67-F0B6C7D62C80}']
  { getters & setters } 

    function get_Url: DDN.System.DNUri;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Url: DDN.System.DNUri read get_Url;
  end;

  TDNWebBrowserDocumentCompletedEventArgs = class(TDNGenericImport<DNWebBrowserDocumentCompletedEventArgsClass, DNWebBrowserDocumentCompletedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserNavigatedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{D619F0B1-AF80-5AB2-81C0-B4045DBB3119}']
  { constructors } 

    {class} function init(url: DDN.System.DNUri): DNWebBrowserNavigatedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.WebBrowserNavigatedEventArgs')]
  DNWebBrowserNavigatedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{A04E3264-32CE-3099-8BF7-D388F67ED662}']
  { getters & setters } 

    function get_Url: DDN.System.DNUri;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Url: DDN.System.DNUri read get_Url;
  end;

  TDNWebBrowserNavigatedEventArgs = class(TDNGenericImport<DNWebBrowserNavigatedEventArgsClass, DNWebBrowserNavigatedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserProgressChangedEventArgsClass = interface(DDN.mscorlib.DNEventArgsClass)
  ['{8FB85CC6-B177-5973-851B-9F0EF663685E}']
  { constructors } 

    {class} function init(currentProgress: Int64; maximumProgress: Int64): DNWebBrowserProgressChangedEventArgs;

  end;

  [DNTypeName('System.Windows.Forms.WebBrowserProgressChangedEventArgs')]
  DNWebBrowserProgressChangedEventArgs = interface(DDN.mscorlib.DNEventArgs)
  ['{E6E45F34-A65F-3513-A313-D76050C03609}']
  { getters & setters } 

    function get_CurrentProgress: Int64;
    function get_MaximumProgress: Int64;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property CurrentProgress: Int64 read get_CurrentProgress;
    property MaximumProgress: Int64 read get_MaximumProgress;
  end;

  TDNWebBrowserProgressChangedEventArgs = class(TDNGenericImport<DNWebBrowserProgressChangedEventArgsClass, DNWebBrowserProgressChangedEventArgs>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_InvalidActiveXStateExceptionClass = interface(DDN.mscorlib.DNExceptionClass)
  ['{D561C371-7EF7-585C-A1BF-5D0420F5AF60}']
  { constructors } 

    {class} function init(name: string; kind: DNAxHost_ActiveXInvokeKind): DNAxHost_InvalidActiveXStateException; overload;
    {class} function init: DNAxHost_InvalidActiveXStateException; overload;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+InvalidActiveXStateException')]
  DNAxHost_InvalidActiveXStateException = interface(DDN.mscorlib.DNException)
  ['{DD5B9699-557E-3F39-B1F2-8FA1013669D6}']
  { getters & setters } 

    function get_Message: string;
    function get_Data: DDN.mscorlib.DNIDictionary;
    function get_InnerException: DDN.mscorlib.DNException;
    function get_TargetSite: DDN.mscorlib.DNMethodBase;
    function get_StackTrace: string;
    function get_HelpLink: string;
    procedure set_HelpLink(value: string);
    function get_Source: string;
    procedure set_Source(value: string);
    function get_HResult: Int32;

  { methods } 

    function ToString: string;
    function GetBaseException: DDN.mscorlib.DNException;
    procedure GetObjectData(info: DDN.mscorlib.DNSerializationInfo; context: DDN.mscorlib.DNStreamingContext);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Message: string read get_Message;
    property Data: DDN.mscorlib.DNIDictionary read get_Data;
    property InnerException: DDN.mscorlib.DNException read get_InnerException;
    property TargetSite: DDN.mscorlib.DNMethodBase read get_TargetSite;
    property StackTrace: string read get_StackTrace;
    property HelpLink: string read get_HelpLink write set_HelpLink;
    property Source: string read get_Source write set_Source;
    property HResult: Int32 read get_HResult;
  end;

  TDNAxHost_InvalidActiveXStateException = class(TDNGenericImport<DNAxHost_InvalidActiveXStateExceptionClass, DNAxHost_InvalidActiveXStateException>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingSourceClass = interface(DNObjectClass)
  ['{22F8A798-8FD3-51DB-9513-B711E4D3DF05}']
  { constructors } 

    {class} function init: DNBindingSource; overload;
    {class} function init(dataSource: DDN.mscorlib.DNObject; dataMember: string): DNBindingSource; overload;
    {class} function init(container: DDN.System.DNIContainer): DNBindingSource; overload;

  end;

  [DNTypeName('System.Windows.Forms.BindingSource')]
  DNBindingSource = interface(DNObject)
  ['{1FD1AD27-482D-38BB-BC64-303D51557747}']
  { getters & setters } 

    function get_CurrencyManager: DNCurrencyManager;
    function get_Current: DDN.mscorlib.DNObject;
    function get_DataMember: string;
    procedure set_DataMember(value: string);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_IsBindingSuspended: Boolean;
    function get_List: DDN.mscorlib.DNIList;
    function get_Position: Int32;
    procedure set_Position(value: Int32);
    function get_RaiseListChangedEvents: Boolean;
    procedure set_RaiseListChangedEvents(value: Boolean);
    function get_Sort: string;
    procedure set_Sort(value: string);
    function get_Count: Int32;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;
    function get_Item(index: Int32): DDN.mscorlib.DNObject;
    procedure set_Item(index: Int32; value: DDN.mscorlib.DNObject);
    function get_IsFixedSize: Boolean;
    function get_IsReadOnly: Boolean;
    function get_AllowEdit: Boolean;
    function get_AllowNew: Boolean;
    procedure set_AllowNew(value: Boolean);
    function get_AllowRemove: Boolean;
    function get_SupportsChangeNotification: Boolean;
    function get_SupportsSearching: Boolean;
    function get_SupportsSorting: Boolean;
    function get_IsSorted: Boolean;
    function get_SortProperty: DDN.System.DNPropertyDescriptor;
    function get_SortDirection: DDN.System.DNListSortDirection;
    function get_SortDescriptions: DDN.System.DNListSortDescriptionCollection;
    function get_Filter: string;
    procedure set_Filter(value: string);
    function get_SupportsAdvancedSorting: Boolean;
    function get_SupportsFiltering: Boolean;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AddingNew(value: DDN.System.DNAddingNewEventHandler);
    procedure remove_AddingNew(value: DDN.System.DNAddingNewEventHandler);
    procedure add_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure remove_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure add_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure remove_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ListChanged(value: DDN.System.DNListChangedEventHandler);
    procedure remove_ListChanged(value: DDN.System.DNListChangedEventHandler);
    procedure add_PositionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PositionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetAllowNew;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    procedure CopyTo(arr: DDN.mscorlib.DNArray; index: Int32);
    function Add(value: DDN.mscorlib.DNObject): Int32;
    procedure Clear;
    function &Contains(value: DDN.mscorlib.DNObject): Boolean;
    function IndexOf(value: DDN.mscorlib.DNObject): Int32;
    procedure Insert(index: Int32; value: DDN.mscorlib.DNObject);
    procedure Remove(value: DDN.mscorlib.DNObject);
    procedure RemoveAt(index: Int32);
    function GetListName(listAccessors: TArray<DDN.System.DNPropertyDescriptor>): string;
    function GetItemProperties(listAccessors: TArray<DDN.System.DNPropertyDescriptor>): DDN.System.DNPropertyDescriptorCollection;
    procedure ApplySort(&property: DDN.System.DNPropertyDescriptor; sort: DDN.System.DNListSortDirection); overload;
    function Find(prop: DDN.System.DNPropertyDescriptor; key: DDN.mscorlib.DNObject): Int32; overload;
    procedure RemoveSort;
    procedure ApplySort(sorts: DDN.System.DNListSortDescriptionCollection); overload;
    procedure RemoveFilter;
    function GetRelatedCurrencyManager(dataMember: string): DNCurrencyManager;
    procedure CancelEdit;
    procedure EndEdit;
    function Find(propertyName: string; key: DDN.mscorlib.DNObject): Int32; overload;
    procedure MoveFirst;
    procedure MoveLast;
    procedure MoveNext;
    procedure MovePrevious;
    procedure RemoveCurrent;
    procedure ResetBindings(metadataChanged: Boolean);
    procedure ResetCurrentItem;
    procedure ResetItem(itemIndex: Int32);
    procedure ResumeBinding;
    procedure SuspendBinding;
    function AddNew: DDN.mscorlib.DNObject;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CurrencyManager: DNCurrencyManager read get_CurrencyManager;
    property Current: DDN.mscorlib.DNObject read get_Current;
    property DataMember: string read get_DataMember write set_DataMember;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property IsBindingSuspended: Boolean read get_IsBindingSuspended;
    property List: DDN.mscorlib.DNIList read get_List;
    property Position: Int32 read get_Position write set_Position;
    property RaiseListChangedEvents: Boolean read get_RaiseListChangedEvents write set_RaiseListChangedEvents;
    property Sort: string read get_Sort write set_Sort;
    property Count: Int32 read get_Count;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
    property Item[index: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
    property IsFixedSize: Boolean read get_IsFixedSize;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property AllowEdit: Boolean read get_AllowEdit;
    property AllowNew: Boolean read get_AllowNew write set_AllowNew;
    property AllowRemove: Boolean read get_AllowRemove;
    property SupportsChangeNotification: Boolean read get_SupportsChangeNotification;
    property SupportsSearching: Boolean read get_SupportsSearching;
    property SupportsSorting: Boolean read get_SupportsSorting;
    property IsSorted: Boolean read get_IsSorted;
    property SortProperty: DDN.System.DNPropertyDescriptor read get_SortProperty;
    property SortDirection: DDN.System.DNListSortDirection read get_SortDirection;
    property SortDescriptions: DDN.System.DNListSortDescriptionCollection read get_SortDescriptions;
    property Filter: string read get_Filter write set_Filter;
    property SupportsAdvancedSorting: Boolean read get_SupportsAdvancedSorting;
    property SupportsFiltering: Boolean read get_SupportsFiltering;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNBindingSource = class(TDNGenericImport<DNBindingSourceClass, DNBindingSource>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnHeaderClass = interface(DNObjectClass)
  ['{614039F6-DAF9-5778-997F-E400B24079D4}']
  { constructors } 

    {class} function init: DNColumnHeader; overload;
    {class} function init(imageIndex: Int32): DNColumnHeader; overload;
    {class} function init(imageKey: string): DNColumnHeader; overload;

  end;

  [DNTypeName('System.Windows.Forms.ColumnHeader')]
  DNColumnHeader = interface(DNObject)
  ['{A0C9D55E-81DC-3EA9-B60D-551FCC621333}']
  { getters & setters } 

    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_Index: Int32;
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageList: DNImageList;
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ListView: DNListView;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    procedure AutoResize(headerAutoResize: DNColumnHeaderAutoResizeStyle);
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property Index: Int32 read get_Index;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageList: DNImageList read get_ImageList;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ListView: DNListView read get_ListView;
    property Name: string read get_Name write set_Name;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNColumnHeader = class(TDNGenericImport<DNColumnHeaderClass, DNColumnHeader>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCommonDialogClass = interface(DNObjectClass)
  ['{73997A36-8BB7-5C54-811C-C392F3BBE34B}']
  { constructors } 

    {class} function init: DNCommonDialog;

  end;

  [DNTypeName('System.Windows.Forms.CommonDialog')]
  DNCommonDialog = interface(DNObject)
  ['{D051D12F-1207-3030-8037-25CC767D8B99}']
  { getters & setters } 

    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNCommonDialog = class(TDNGenericImport<DNCommonDialogClass, DNCommonDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColorDialogClass = interface(DNCommonDialogClass)
  ['{4C6E112A-2904-5F6B-8A56-BB0CCE89D98F}']
  { constructors } 

    {class} function init: DNColorDialog;

  end;

  [DNTypeName('System.Windows.Forms.ColorDialog')]
  DNColorDialog = interface(DNCommonDialog)
  ['{9D20776C-C263-3D8B-B52C-7DC740A1A017}']
  { getters & setters } 

    function get_AllowFullOpen: Boolean;
    procedure set_AllowFullOpen(value: Boolean);
    function get_AnyColor: Boolean;
    procedure set_AnyColor(value: Boolean);
    function get_Color: DDN.System.Drawing.DNColor;
    procedure set_Color(value: DDN.System.Drawing.DNColor);
    function get_CustomColors: TArray<Int32>;
    procedure set_CustomColors(value: TArray<Int32>);
    function get_FullOpen: Boolean;
    procedure set_FullOpen(value: Boolean);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_SolidColorOnly: Boolean;
    procedure set_SolidColorOnly(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ToString: string;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowFullOpen: Boolean read get_AllowFullOpen write set_AllowFullOpen;
    property AnyColor: Boolean read get_AnyColor write set_AnyColor;
    property Color: DDN.System.Drawing.DNColor read get_Color write set_Color;
    property CustomColors: TArray<Int32> read get_CustomColors write set_CustomColors;
    property FullOpen: Boolean read get_FullOpen write set_FullOpen;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property SolidColorOnly: Boolean read get_SolidColorOnly write set_SolidColorOnly;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNColorDialog = class(TDNGenericImport<DNColorDialogClass, DNColorDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFileDialogClass = interface(DNCommonDialogClass)
  ['{0F2DDE9E-42EE-58EE-B3DD-37BCA9DCA570}']
  end;

  [DNTypeName('System.Windows.Forms.FileDialog')]
  DNFileDialog = interface(DNCommonDialog)
  ['{7402F1CD-1D7A-33FA-B144-8C8EED307E44}']
  { getters & setters } 

    function get_AddExtension: Boolean;
    procedure set_AddExtension(value: Boolean);
    function get_CheckFileExists: Boolean;
    procedure set_CheckFileExists(value: Boolean);
    function get_CheckPathExists: Boolean;
    procedure set_CheckPathExists(value: Boolean);
    function get_DefaultExt: string;
    procedure set_DefaultExt(value: string);
    function get_DereferenceLinks: Boolean;
    procedure set_DereferenceLinks(value: Boolean);
    function get_FileName: string;
    procedure set_FileName(value: string);
    function get_FileNames: TArray<string>;
    function get_Filter: string;
    procedure set_Filter(value: string);
    function get_FilterIndex: Int32;
    procedure set_FilterIndex(value: Int32);
    function get_InitialDirectory: string;
    procedure set_InitialDirectory(value: string);
    function get_RestoreDirectory: Boolean;
    procedure set_RestoreDirectory(value: Boolean);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_SupportMultiDottedExtensions: Boolean;
    procedure set_SupportMultiDottedExtensions(value: Boolean);
    function get_Title: string;
    procedure set_Title(value: string);
    function get_ValidateNames: Boolean;
    procedure set_ValidateNames(value: Boolean);
    function get_CustomPlaces: DNFileDialogCustomPlacesCollection;
    function get_AutoUpgradeEnabled: Boolean;
    procedure set_AutoUpgradeEnabled(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_FileOk(value: DDN.System.DNCancelEventHandler);
    procedure remove_FileOk(value: DDN.System.DNCancelEventHandler);
    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ToString: string;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AddExtension: Boolean read get_AddExtension write set_AddExtension;
    property CheckFileExists: Boolean read get_CheckFileExists write set_CheckFileExists;
    property CheckPathExists: Boolean read get_CheckPathExists write set_CheckPathExists;
    property DefaultExt: string read get_DefaultExt write set_DefaultExt;
    property DereferenceLinks: Boolean read get_DereferenceLinks write set_DereferenceLinks;
    property FileName: string read get_FileName write set_FileName;
    property FileNames: TArray<string> read get_FileNames;
    property Filter: string read get_Filter write set_Filter;
    property FilterIndex: Int32 read get_FilterIndex write set_FilterIndex;
    property InitialDirectory: string read get_InitialDirectory write set_InitialDirectory;
    property RestoreDirectory: Boolean read get_RestoreDirectory write set_RestoreDirectory;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property SupportMultiDottedExtensions: Boolean read get_SupportMultiDottedExtensions write set_SupportMultiDottedExtensions;
    property Title: string read get_Title write set_Title;
    property ValidateNames: Boolean read get_ValidateNames write set_ValidateNames;
    property CustomPlaces: DNFileDialogCustomPlacesCollection read get_CustomPlaces;
    property AutoUpgradeEnabled: Boolean read get_AutoUpgradeEnabled write set_AutoUpgradeEnabled;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNFileDialog = class(TDNGenericImport<DNFileDialogClass, DNFileDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNOpenFileDialogClass = interface(DNFileDialogClass)
  ['{A38B2BEF-3518-5337-B00C-A4BD6DC4C67A}']
  { constructors } 

    {class} function init: DNOpenFileDialog;

  end;

  [DNTypeName('System.Windows.Forms.OpenFileDialog')]
  DNOpenFileDialog = interface(DNFileDialog)
  ['{A7EFD180-8C07-3EA2-8C26-44B575968855}']
  { getters & setters } 

    function get_CheckFileExists: Boolean;
    procedure set_CheckFileExists(value: Boolean);
    function get_Multiselect: Boolean;
    procedure set_Multiselect(value: Boolean);
    function get_ReadOnlyChecked: Boolean;
    procedure set_ReadOnlyChecked(value: Boolean);
    function get_ShowReadOnly: Boolean;
    procedure set_ShowReadOnly(value: Boolean);
    function get_SafeFileName: string;
    function get_SafeFileNames: TArray<string>;
    function get_AddExtension: Boolean;
    procedure set_AddExtension(value: Boolean);
    function get_CheckPathExists: Boolean;
    procedure set_CheckPathExists(value: Boolean);
    function get_DefaultExt: string;
    procedure set_DefaultExt(value: string);
    function get_DereferenceLinks: Boolean;
    procedure set_DereferenceLinks(value: Boolean);
    function get_FileName: string;
    procedure set_FileName(value: string);
    function get_FileNames: TArray<string>;
    function get_Filter: string;
    procedure set_Filter(value: string);
    function get_FilterIndex: Int32;
    procedure set_FilterIndex(value: Int32);
    function get_InitialDirectory: string;
    procedure set_InitialDirectory(value: string);
    function get_RestoreDirectory: Boolean;
    procedure set_RestoreDirectory(value: Boolean);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_SupportMultiDottedExtensions: Boolean;
    procedure set_SupportMultiDottedExtensions(value: Boolean);
    function get_Title: string;
    procedure set_Title(value: string);
    function get_ValidateNames: Boolean;
    procedure set_ValidateNames(value: Boolean);
    function get_CustomPlaces: DNFileDialogCustomPlacesCollection;
    function get_AutoUpgradeEnabled: Boolean;
    procedure set_AutoUpgradeEnabled(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_FileOk(value: DDN.System.DNCancelEventHandler);
    procedure remove_FileOk(value: DDN.System.DNCancelEventHandler);
    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function OpenFile: DDN.mscorlib.DNStream;
    function ToString: string;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CheckFileExists: Boolean read get_CheckFileExists write set_CheckFileExists;
    property Multiselect: Boolean read get_Multiselect write set_Multiselect;
    property ReadOnlyChecked: Boolean read get_ReadOnlyChecked write set_ReadOnlyChecked;
    property ShowReadOnly: Boolean read get_ShowReadOnly write set_ShowReadOnly;
    property SafeFileName: string read get_SafeFileName;
    property SafeFileNames: TArray<string> read get_SafeFileNames;
    property AddExtension: Boolean read get_AddExtension write set_AddExtension;
    property CheckPathExists: Boolean read get_CheckPathExists write set_CheckPathExists;
    property DefaultExt: string read get_DefaultExt write set_DefaultExt;
    property DereferenceLinks: Boolean read get_DereferenceLinks write set_DereferenceLinks;
    property FileName: string read get_FileName write set_FileName;
    property FileNames: TArray<string> read get_FileNames;
    property Filter: string read get_Filter write set_Filter;
    property FilterIndex: Int32 read get_FilterIndex write set_FilterIndex;
    property InitialDirectory: string read get_InitialDirectory write set_InitialDirectory;
    property RestoreDirectory: Boolean read get_RestoreDirectory write set_RestoreDirectory;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property SupportMultiDottedExtensions: Boolean read get_SupportMultiDottedExtensions write set_SupportMultiDottedExtensions;
    property Title: string read get_Title write set_Title;
    property ValidateNames: Boolean read get_ValidateNames write set_ValidateNames;
    property CustomPlaces: DNFileDialogCustomPlacesCollection read get_CustomPlaces;
    property AutoUpgradeEnabled: Boolean read get_AutoUpgradeEnabled write set_AutoUpgradeEnabled;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNOpenFileDialog = class(TDNGenericImport<DNOpenFileDialogClass, DNOpenFileDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSaveFileDialogClass = interface(DNFileDialogClass)
  ['{6FF452B2-B825-52FB-88B3-094935E973E9}']
  { constructors } 

    {class} function init: DNSaveFileDialog;

  end;

  [DNTypeName('System.Windows.Forms.SaveFileDialog')]
  DNSaveFileDialog = interface(DNFileDialog)
  ['{526CDAA6-F94F-30F1-84CC-DFEDDBE93FFC}']
  { getters & setters } 

    function get_CreatePrompt: Boolean;
    procedure set_CreatePrompt(value: Boolean);
    function get_OverwritePrompt: Boolean;
    procedure set_OverwritePrompt(value: Boolean);
    function get_AddExtension: Boolean;
    procedure set_AddExtension(value: Boolean);
    function get_CheckFileExists: Boolean;
    procedure set_CheckFileExists(value: Boolean);
    function get_CheckPathExists: Boolean;
    procedure set_CheckPathExists(value: Boolean);
    function get_DefaultExt: string;
    procedure set_DefaultExt(value: string);
    function get_DereferenceLinks: Boolean;
    procedure set_DereferenceLinks(value: Boolean);
    function get_FileName: string;
    procedure set_FileName(value: string);
    function get_FileNames: TArray<string>;
    function get_Filter: string;
    procedure set_Filter(value: string);
    function get_FilterIndex: Int32;
    procedure set_FilterIndex(value: Int32);
    function get_InitialDirectory: string;
    procedure set_InitialDirectory(value: string);
    function get_RestoreDirectory: Boolean;
    procedure set_RestoreDirectory(value: Boolean);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_SupportMultiDottedExtensions: Boolean;
    procedure set_SupportMultiDottedExtensions(value: Boolean);
    function get_Title: string;
    procedure set_Title(value: string);
    function get_ValidateNames: Boolean;
    procedure set_ValidateNames(value: Boolean);
    function get_CustomPlaces: DNFileDialogCustomPlacesCollection;
    function get_AutoUpgradeEnabled: Boolean;
    procedure set_AutoUpgradeEnabled(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_FileOk(value: DDN.System.DNCancelEventHandler);
    procedure remove_FileOk(value: DDN.System.DNCancelEventHandler);
    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function OpenFile: DDN.mscorlib.DNStream;
    function ToString: string;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CreatePrompt: Boolean read get_CreatePrompt write set_CreatePrompt;
    property OverwritePrompt: Boolean read get_OverwritePrompt write set_OverwritePrompt;
    property AddExtension: Boolean read get_AddExtension write set_AddExtension;
    property CheckFileExists: Boolean read get_CheckFileExists write set_CheckFileExists;
    property CheckPathExists: Boolean read get_CheckPathExists write set_CheckPathExists;
    property DefaultExt: string read get_DefaultExt write set_DefaultExt;
    property DereferenceLinks: Boolean read get_DereferenceLinks write set_DereferenceLinks;
    property FileName: string read get_FileName write set_FileName;
    property FileNames: TArray<string> read get_FileNames;
    property Filter: string read get_Filter write set_Filter;
    property FilterIndex: Int32 read get_FilterIndex write set_FilterIndex;
    property InitialDirectory: string read get_InitialDirectory write set_InitialDirectory;
    property RestoreDirectory: Boolean read get_RestoreDirectory write set_RestoreDirectory;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property SupportMultiDottedExtensions: Boolean read get_SupportMultiDottedExtensions write set_SupportMultiDottedExtensions;
    property Title: string read get_Title write set_Title;
    property ValidateNames: Boolean read get_ValidateNames write set_ValidateNames;
    property CustomPlaces: DNFileDialogCustomPlacesCollection read get_CustomPlaces;
    property AutoUpgradeEnabled: Boolean read get_AutoUpgradeEnabled write set_AutoUpgradeEnabled;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNSaveFileDialog = class(TDNGenericImport<DNSaveFileDialogClass, DNSaveFileDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFolderBrowserDialogClass = interface(DNCommonDialogClass)
  ['{7FC1C50A-11EF-567C-8341-0B15D9034C8C}']
  { constructors } 

    {class} function init: DNFolderBrowserDialog;

  end;

  [DNTypeName('System.Windows.Forms.FolderBrowserDialog')]
  DNFolderBrowserDialog = interface(DNCommonDialog)
  ['{B3EB97B3-C118-33DC-90D7-A1E34C423200}']
  { getters & setters } 

    function get_ShowNewFolderButton: Boolean;
    procedure set_ShowNewFolderButton(value: Boolean);
    function get_SelectedPath: string;
    procedure set_SelectedPath(value: string);
    function get_RootFolder: DDN.mscorlib.DNEnvironment_SpecialFolder;
    procedure set_RootFolder(value: DDN.mscorlib.DNEnvironment_SpecialFolder);
    function get_Description: string;
    procedure set_Description(value: string);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ShowNewFolderButton: Boolean read get_ShowNewFolderButton write set_ShowNewFolderButton;
    property SelectedPath: string read get_SelectedPath write set_SelectedPath;
    property RootFolder: DDN.mscorlib.DNEnvironment_SpecialFolder read get_RootFolder write set_RootFolder;
    property Description: string read get_Description write set_Description;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNFolderBrowserDialog = class(TDNGenericImport<DNFolderBrowserDialogClass, DNFolderBrowserDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFontDialogClass = interface(DNCommonDialogClass)
  ['{03D4E975-49B6-5DA7-8161-5240B294B8FC}']
  { constructors } 

    {class} function init: DNFontDialog;

  end;

  [DNTypeName('System.Windows.Forms.FontDialog')]
  DNFontDialog = interface(DNCommonDialog)
  ['{1579F5B3-B08F-392A-AF85-2D348CEE51B6}']
  { getters & setters } 

    function get_AllowSimulations: Boolean;
    procedure set_AllowSimulations(value: Boolean);
    function get_AllowVectorFonts: Boolean;
    procedure set_AllowVectorFonts(value: Boolean);
    function get_AllowVerticalFonts: Boolean;
    procedure set_AllowVerticalFonts(value: Boolean);
    function get_AllowScriptChange: Boolean;
    procedure set_AllowScriptChange(value: Boolean);
    function get_Color: DDN.System.Drawing.DNColor;
    procedure set_Color(value: DDN.System.Drawing.DNColor);
    function get_FixedPitchOnly: Boolean;
    procedure set_FixedPitchOnly(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_FontMustExist: Boolean;
    procedure set_FontMustExist(value: Boolean);
    function get_MaxSize: Int32;
    procedure set_MaxSize(value: Int32);
    function get_MinSize: Int32;
    procedure set_MinSize(value: Int32);
    function get_ScriptsOnly: Boolean;
    procedure set_ScriptsOnly(value: Boolean);
    function get_ShowApply: Boolean;
    procedure set_ShowApply(value: Boolean);
    function get_ShowColor: Boolean;
    procedure set_ShowColor(value: Boolean);
    function get_ShowEffects: Boolean;
    procedure set_ShowEffects(value: Boolean);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Apply(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Apply(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ToString: string;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowSimulations: Boolean read get_AllowSimulations write set_AllowSimulations;
    property AllowVectorFonts: Boolean read get_AllowVectorFonts write set_AllowVectorFonts;
    property AllowVerticalFonts: Boolean read get_AllowVerticalFonts write set_AllowVerticalFonts;
    property AllowScriptChange: Boolean read get_AllowScriptChange write set_AllowScriptChange;
    property Color: DDN.System.Drawing.DNColor read get_Color write set_Color;
    property FixedPitchOnly: Boolean read get_FixedPitchOnly write set_FixedPitchOnly;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property FontMustExist: Boolean read get_FontMustExist write set_FontMustExist;
    property MaxSize: Int32 read get_MaxSize write set_MaxSize;
    property MinSize: Int32 read get_MinSize write set_MinSize;
    property ScriptsOnly: Boolean read get_ScriptsOnly write set_ScriptsOnly;
    property ShowApply: Boolean read get_ShowApply write set_ShowApply;
    property ShowColor: Boolean read get_ShowColor write set_ShowColor;
    property ShowEffects: Boolean read get_ShowEffects write set_ShowEffects;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNFontDialog = class(TDNGenericImport<DNFontDialogClass, DNFontDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPageSetupDialogClass = interface(DNCommonDialogClass)
  ['{F7068518-7474-54F4-9DAB-1397A0E7ABD1}']
  { constructors } 

    {class} function init: DNPageSetupDialog;

  end;

  [DNTypeName('System.Windows.Forms.PageSetupDialog')]
  DNPageSetupDialog = interface(DNCommonDialog)
  ['{16316774-7973-37E7-911E-C8ADB6BC5EDD}']
  { getters & setters } 

    function get_AllowMargins: Boolean;
    procedure set_AllowMargins(value: Boolean);
    function get_AllowOrientation: Boolean;
    procedure set_AllowOrientation(value: Boolean);
    function get_AllowPaper: Boolean;
    procedure set_AllowPaper(value: Boolean);
    function get_AllowPrinter: Boolean;
    procedure set_AllowPrinter(value: Boolean);
    function get_Document: DDN.System.Drawing.DNPrintDocument;
    procedure set_Document(value: DDN.System.Drawing.DNPrintDocument);
    function get_EnableMetric: Boolean;
    procedure set_EnableMetric(value: Boolean);
    function get_MinMargins: DDN.System.Drawing.DNMargins;
    procedure set_MinMargins(value: DDN.System.Drawing.DNMargins);
    function get_PageSettings: DDN.System.Drawing.DNPageSettings;
    procedure set_PageSettings(value: DDN.System.Drawing.DNPageSettings);
    function get_PrinterSettings: DDN.System.Drawing.DNPrinterSettings;
    procedure set_PrinterSettings(value: DDN.System.Drawing.DNPrinterSettings);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_ShowNetwork: Boolean;
    procedure set_ShowNetwork(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowMargins: Boolean read get_AllowMargins write set_AllowMargins;
    property AllowOrientation: Boolean read get_AllowOrientation write set_AllowOrientation;
    property AllowPaper: Boolean read get_AllowPaper write set_AllowPaper;
    property AllowPrinter: Boolean read get_AllowPrinter write set_AllowPrinter;
    property Document: DDN.System.Drawing.DNPrintDocument read get_Document write set_Document;
    property EnableMetric: Boolean read get_EnableMetric write set_EnableMetric;
    property MinMargins: DDN.System.Drawing.DNMargins read get_MinMargins write set_MinMargins;
    property PageSettings: DDN.System.Drawing.DNPageSettings read get_PageSettings write set_PageSettings;
    property PrinterSettings: DDN.System.Drawing.DNPrinterSettings read get_PrinterSettings write set_PrinterSettings;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property ShowNetwork: Boolean read get_ShowNetwork write set_ShowNetwork;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPageSetupDialog = class(TDNGenericImport<DNPageSetupDialogClass, DNPageSetupDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPrintDialogClass = interface(DNCommonDialogClass)
  ['{4D6EB357-DEF4-5E35-B677-CB5CD1FFA5BB}']
  { constructors } 

    {class} function init: DNPrintDialog;

  end;

  [DNTypeName('System.Windows.Forms.PrintDialog')]
  DNPrintDialog = interface(DNCommonDialog)
  ['{DF84375D-5815-3EA5-B5A2-D06AB6F1DB05}']
  { getters & setters } 

    function get_AllowCurrentPage: Boolean;
    procedure set_AllowCurrentPage(value: Boolean);
    function get_AllowSomePages: Boolean;
    procedure set_AllowSomePages(value: Boolean);
    function get_AllowPrintToFile: Boolean;
    procedure set_AllowPrintToFile(value: Boolean);
    function get_AllowSelection: Boolean;
    procedure set_AllowSelection(value: Boolean);
    function get_Document: DDN.System.Drawing.DNPrintDocument;
    procedure set_Document(value: DDN.System.Drawing.DNPrintDocument);
    function get_PrinterSettings: DDN.System.Drawing.DNPrinterSettings;
    procedure set_PrinterSettings(value: DDN.System.Drawing.DNPrinterSettings);
    function get_PrintToFile: Boolean;
    procedure set_PrintToFile(value: Boolean);
    function get_ShowHelp: Boolean;
    procedure set_ShowHelp(value: Boolean);
    function get_ShowNetwork: Boolean;
    procedure set_ShowNetwork(value: Boolean);
    function get_UseEXDialog: Boolean;
    procedure set_UseEXDialog(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HelpRequest(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Reset;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowCurrentPage: Boolean read get_AllowCurrentPage write set_AllowCurrentPage;
    property AllowSomePages: Boolean read get_AllowSomePages write set_AllowSomePages;
    property AllowPrintToFile: Boolean read get_AllowPrintToFile write set_AllowPrintToFile;
    property AllowSelection: Boolean read get_AllowSelection write set_AllowSelection;
    property Document: DDN.System.Drawing.DNPrintDocument read get_Document write set_Document;
    property PrinterSettings: DDN.System.Drawing.DNPrinterSettings read get_PrinterSettings write set_PrinterSettings;
    property PrintToFile: Boolean read get_PrintToFile write set_PrintToFile;
    property ShowHelp: Boolean read get_ShowHelp write set_ShowHelp;
    property ShowNetwork: Boolean read get_ShowNetwork write set_ShowNetwork;
    property UseEXDialog: Boolean read get_UseEXDialog write set_UseEXDialog;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPrintDialog = class(TDNGenericImport<DNPrintDialogClass, DNPrintDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNControlClass = interface(DNObjectClass)
  ['{A2FF600A-BC30-52FA-9A54-0043869C69DC}']
  { static getter & setter } 

    {class} function get_CheckForIllegalCrossThreadCalls: Boolean;
    {class} procedure set_CheckForIllegalCrossThreadCalls(value: Boolean);
    {class} function get_DefaultBackColor: DDN.System.Drawing.DNColor;
    {class} function get_DefaultFont: DDN.System.Drawing.DNFont;
    {class} function get_DefaultForeColor: DDN.System.Drawing.DNColor;
    {class} function get_ModifierKeys: DNKeys;
    {class} function get_MouseButtons: DNMouseButtons;
    {class} function get_MousePosition: DDN.System.Drawing.DNPoint;

  { constructors } 

    {class} function init: DNControl; overload;
    {class} function init(text: string): DNControl; overload;
    {class} function init(text: string; left: Int32; top: Int32; width: Int32; height: Int32): DNControl; overload;
    {class} function init(parent: DNControl; text: string): DNControl; overload;
    {class} function init(parent: DNControl; text: string; left: Int32; top: Int32; width: Int32; height: Int32): DNControl; overload;

  { static methods } 

    {class} function FromChildHandle(handle: IntPtr): DNControl;
    {class} function FromHandle(handle: IntPtr): DNControl;
    {class} function IsKeyLocked(keyVal: DNKeys): Boolean;
    {class} function IsMnemonic(charCode: Char; text: string): Boolean;

  { static propertys } 

    {class} property CheckForIllegalCrossThreadCalls: Boolean read get_CheckForIllegalCrossThreadCalls write set_CheckForIllegalCrossThreadCalls;
    {class} property DefaultBackColor: DDN.System.Drawing.DNColor read get_DefaultBackColor;
    {class} property DefaultFont: DDN.System.Drawing.DNFont read get_DefaultFont;
    {class} property DefaultForeColor: DDN.System.Drawing.DNColor read get_DefaultForeColor;
    {class} property ModifierKeys: DNKeys read get_ModifierKeys;
    {class} property MouseButtons: DNMouseButtons read get_MouseButtons;
    {class} property MousePosition: DDN.System.Drawing.DNPoint read get_MousePosition;
  end;

  [DNTypeName('System.Windows.Forms.Control')]
  DNControl = interface(DNObject)
  ['{D51BE7D3-5EA4-3D65-B9C5-B9087E6F974F}']
  { getters & setters } 

    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNControl = class(TDNGenericImport<DNControlClass, DNControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHostClass = interface(DNControlClass)
  ['{C6AD2E61-FDAF-576E-8123-8E1F1A650D0C}']
  { static getter & setter } 

    procedure set_Site(value: DDN.System.DNISite);

  { static propertys } 

    {class} property Site: DDN.System.DNISite write set_Site;
  end;

  [DNTypeName('System.Windows.Forms.AxHost')]
  DNAxHost = interface(DNControl)
  ['{5AE0F540-8B2A-3436-BEA4-94B028521F49}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_RightToLeft: Boolean;
    procedure set_RightToLeft(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_EditMode: Boolean;
    function get_HasAboutBox: Boolean;
    procedure set_Site(value: DDN.System.DNISite);
    function get_OcxState: DNAxHost_State;
    procedure set_OcxState(value: DNAxHost_State);
    function get_ContainingControl: DNContainerControl;
    procedure set_ContainingControl(value: DNContainerControl);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_MouseClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseDoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginInit;
    procedure EndInit;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ShowAboutBox;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    procedure DoVerb(verb: Int32);
    procedure InvokeEditMode;
    function GetOcx: DDN.mscorlib.DNObject;
    function HasPropertyPages: Boolean;
    procedure MakeDirty;
    procedure ShowPropertyPages; overload;
    procedure ShowPropertyPages(control: DNControl); overload;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property RightToLeft: Boolean read get_RightToLeft write set_RightToLeft;
    property Text: string read get_Text write set_Text;
    property EditMode: Boolean read get_EditMode;
    property HasAboutBox: Boolean read get_HasAboutBox;
    property Site: DDN.System.DNISite write set_Site;
    property OcxState: DNAxHost_State read get_OcxState write set_OcxState;
    property ContainingControl: DNContainerControl read get_ContainingControl write set_ContainingControl;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNAxHost = class(TDNGenericImport<DNAxHostClass, DNAxHost>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNButtonBaseClass = interface(DNControlClass)
  ['{E8F927D8-3377-5C42-8E50-0F1E57CA48DB}']
  end;

  [DNTypeName('System.Windows.Forms.ButtonBase')]
  DNButtonBase = interface(DNControl)
  ['{F758A1F6-4102-36BE-81E9-8A674DAD908C}']
  { getters & setters } 

    function get_AutoEllipsis: Boolean;
    procedure set_AutoEllipsis(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FlatAppearance: DNFlatButtonAppearance;
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_UseMnemonic: Boolean;
    procedure set_UseMnemonic(value: Boolean);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_UseVisualStyleBackColor: Boolean;
    procedure set_UseVisualStyleBackColor(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoEllipsis: Boolean read get_AutoEllipsis write set_AutoEllipsis;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FlatAppearance: DNFlatButtonAppearance read get_FlatAppearance;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property UseMnemonic: Boolean read get_UseMnemonic write set_UseMnemonic;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property UseVisualStyleBackColor: Boolean read get_UseVisualStyleBackColor write set_UseVisualStyleBackColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNButtonBase = class(TDNGenericImport<DNButtonBaseClass, DNButtonBase>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNButtonClass = interface(DNButtonBaseClass)
  ['{623C809A-1E47-5CA2-BD94-4779A7405C68}']
  { constructors } 

    {class} function init: DNButton;

  end;

  [DNTypeName('System.Windows.Forms.Button')]
  DNButton = interface(DNButtonBase)
  ['{1FCBDA5D-6F09-3A66-ACB8-1B0D748F5C13}']
  { getters & setters } 

    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_DialogResult: DNDialogResult;
    procedure set_DialogResult(value: DNDialogResult);
    function get_AutoEllipsis: Boolean;
    procedure set_AutoEllipsis(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FlatAppearance: DNFlatButtonAppearance;
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_UseMnemonic: Boolean;
    procedure set_UseMnemonic(value: Boolean);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_UseVisualStyleBackColor: Boolean;
    procedure set_UseVisualStyleBackColor(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure NotifyDefault(value: Boolean);
    procedure PerformClick;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property DialogResult: DNDialogResult read get_DialogResult write set_DialogResult;
    property AutoEllipsis: Boolean read get_AutoEllipsis write set_AutoEllipsis;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FlatAppearance: DNFlatButtonAppearance read get_FlatAppearance;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property UseMnemonic: Boolean read get_UseMnemonic write set_UseMnemonic;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property UseVisualStyleBackColor: Boolean read get_UseVisualStyleBackColor write set_UseVisualStyleBackColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNButton = class(TDNGenericImport<DNButtonClass, DNButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckBoxClass = interface(DNButtonBaseClass)
  ['{CC6C8117-3FB3-50EE-8831-5D311FCA4354}']
  { constructors } 

    {class} function init: DNCheckBox;

  end;

  [DNTypeName('System.Windows.Forms.CheckBox')]
  DNCheckBox = interface(DNButtonBase)
  ['{C2D6EA6E-E423-3B53-B06B-419F95F34F68}']
  { getters & setters } 

    function get_Appearance: DNAppearance;
    procedure set_Appearance(value: DNAppearance);
    function get_AutoCheck: Boolean;
    procedure set_AutoCheck(value: Boolean);
    function get_CheckAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_CheckAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_CheckState: DNCheckState;
    procedure set_CheckState(value: DNCheckState);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_ThreeState: Boolean;
    procedure set_ThreeState(value: Boolean);
    function get_AutoEllipsis: Boolean;
    procedure set_AutoEllipsis(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FlatAppearance: DNFlatButtonAppearance;
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_UseMnemonic: Boolean;
    procedure set_UseMnemonic(value: Boolean);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_UseVisualStyleBackColor: Boolean;
    procedure set_UseVisualStyleBackColor(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AppearanceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AppearanceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CheckStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Appearance: DNAppearance read get_Appearance write set_Appearance;
    property AutoCheck: Boolean read get_AutoCheck write set_AutoCheck;
    property CheckAlign: DDN.System.Drawing.DNContentAlignment read get_CheckAlign write set_CheckAlign;
    property Checked: Boolean read get_Checked write set_Checked;
    property CheckState: DNCheckState read get_CheckState write set_CheckState;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property ThreeState: Boolean read get_ThreeState write set_ThreeState;
    property AutoEllipsis: Boolean read get_AutoEllipsis write set_AutoEllipsis;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FlatAppearance: DNFlatButtonAppearance read get_FlatAppearance;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Text: string read get_Text write set_Text;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property UseMnemonic: Boolean read get_UseMnemonic write set_UseMnemonic;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property UseVisualStyleBackColor: Boolean read get_UseVisualStyleBackColor write set_UseVisualStyleBackColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNCheckBox = class(TDNGenericImport<DNCheckBoxClass, DNCheckBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRadioButtonClass = interface(DNButtonBaseClass)
  ['{80B2112B-C811-5DA2-A303-43C89D3076FF}']
  { constructors } 

    {class} function init: DNRadioButton;

  end;

  [DNTypeName('System.Windows.Forms.RadioButton')]
  DNRadioButton = interface(DNButtonBase)
  ['{FC511C4D-49A7-32AB-AB23-0AC220A9CDB7}']
  { getters & setters } 

    function get_AutoCheck: Boolean;
    procedure set_AutoCheck(value: Boolean);
    function get_Appearance: DNAppearance;
    procedure set_Appearance(value: DNAppearance);
    function get_CheckAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_CheckAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_AutoEllipsis: Boolean;
    procedure set_AutoEllipsis(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FlatAppearance: DNFlatButtonAppearance;
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_UseMnemonic: Boolean;
    procedure set_UseMnemonic(value: Boolean);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_UseVisualStyleBackColor: Boolean;
    procedure set_UseVisualStyleBackColor(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AppearanceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AppearanceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure PerformClick;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoCheck: Boolean read get_AutoCheck write set_AutoCheck;
    property Appearance: DNAppearance read get_Appearance write set_Appearance;
    property CheckAlign: DDN.System.Drawing.DNContentAlignment read get_CheckAlign write set_CheckAlign;
    property Checked: Boolean read get_Checked write set_Checked;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property AutoEllipsis: Boolean read get_AutoEllipsis write set_AutoEllipsis;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FlatAppearance: DNFlatButtonAppearance read get_FlatAppearance;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Text: string read get_Text write set_Text;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property UseMnemonic: Boolean read get_UseMnemonic write set_UseMnemonic;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property UseVisualStyleBackColor: Boolean read get_UseVisualStyleBackColor write set_UseVisualStyleBackColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNRadioButton = class(TDNGenericImport<DNRadioButtonClass, DNRadioButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridClass = interface(DNControlClass)
  ['{386004EA-6097-5376-9514-241C431F8293}']
  { constructors } 

    {class} function init: DNDataGrid;

  end;

  [DNTypeName('System.Windows.Forms.DataGrid')]
  DNDataGrid = interface(DNControl)
  ['{1733CD63-DB91-3506-B433-4DD3700B596F}']
  { getters & setters } 

    function get_AllowSorting: Boolean;
    procedure set_AllowSorting(value: Boolean);
    function get_AlternatingBackColor: DDN.System.Drawing.DNColor;
    procedure set_AlternatingBackColor(value: DDN.System.Drawing.DNColor);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CaptionBackColor: DDN.System.Drawing.DNColor;
    procedure set_CaptionBackColor(value: DDN.System.Drawing.DNColor);
    function get_CaptionForeColor: DDN.System.Drawing.DNColor;
    procedure set_CaptionForeColor(value: DDN.System.Drawing.DNColor);
    function get_CaptionFont: DDN.System.Drawing.DNFont;
    procedure set_CaptionFont(value: DDN.System.Drawing.DNFont);
    function get_CaptionText: string;
    procedure set_CaptionText(value: string);
    function get_CaptionVisible: Boolean;
    procedure set_CaptionVisible(value: Boolean);
    function get_CurrentCell: DNDataGridCell;
    procedure set_CurrentCell(value: DNDataGridCell);
    function get_SelectionBackColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionBackColor(value: DDN.System.Drawing.DNColor);
    function get_SelectionForeColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionForeColor(value: DDN.System.Drawing.DNColor);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DataMember: string;
    procedure set_DataMember(value: string);
    function get_CurrentRowIndex: Int32;
    procedure set_CurrentRowIndex(value: Int32);
    function get_TableStyles: DNGridTableStylesCollection;
    function get_GridLineColor: DDN.System.Drawing.DNColor;
    procedure set_GridLineColor(value: DDN.System.Drawing.DNColor);
    function get_GridLineStyle: DNDataGridLineStyle;
    procedure set_GridLineStyle(value: DNDataGridLineStyle);
    function get_ParentRowsLabelStyle: DNDataGridParentRowsLabelStyle;
    procedure set_ParentRowsLabelStyle(value: DNDataGridParentRowsLabelStyle);
    function get_FirstVisibleColumn: Int32;
    function get_FlatMode: Boolean;
    procedure set_FlatMode(value: Boolean);
    function get_HeaderBackColor: DDN.System.Drawing.DNColor;
    procedure set_HeaderBackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundColor: DDN.System.Drawing.DNColor;
    procedure set_BackgroundColor(value: DDN.System.Drawing.DNColor);
    function get_HeaderFont: DDN.System.Drawing.DNFont;
    procedure set_HeaderFont(value: DDN.System.Drawing.DNFont);
    function get_HeaderForeColor: DDN.System.Drawing.DNColor;
    procedure set_HeaderForeColor(value: DDN.System.Drawing.DNColor);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkHoverColor: DDN.System.Drawing.DNColor;
    procedure set_LinkHoverColor(value: DDN.System.Drawing.DNColor);
    function get_AllowNavigation: Boolean;
    procedure set_AllowNavigation(value: Boolean);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ParentRowsBackColor: DDN.System.Drawing.DNColor;
    procedure set_ParentRowsBackColor(value: DDN.System.Drawing.DNColor);
    function get_ParentRowsForeColor: DDN.System.Drawing.DNColor;
    procedure set_ParentRowsForeColor(value: DDN.System.Drawing.DNColor);
    function get_PreferredColumnWidth: Int32;
    procedure set_PreferredColumnWidth(value: Int32);
    function get_PreferredRowHeight: Int32;
    procedure set_PreferredRowHeight(value: Int32);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_ColumnHeadersVisible: Boolean;
    procedure set_ColumnHeadersVisible(value: Boolean);
    function get_ParentRowsVisible: Boolean;
    procedure set_ParentRowsVisible(value: Boolean);
    function get_RowHeadersVisible: Boolean;
    procedure set_RowHeadersVisible(value: Boolean);
    function get_RowHeaderWidth: Int32;
    procedure set_RowHeaderWidth(value: Int32);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_VisibleColumnCount: Int32;
    function get_VisibleRowCount: Int32;
    function get_Item(rowIndex: Int32; columnIndex: Int32): DDN.mscorlib.DNObject; overload;
    procedure set_Item(rowIndex: Int32; columnIndex: Int32; value: DDN.mscorlib.DNObject); overload;
    function get_Item(cell: DNDataGridCell): DDN.mscorlib.DNObject; overload;
    procedure set_Item(cell: DNDataGridCell; value: DDN.mscorlib.DNObject); overload;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CaptionVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CaptionVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentCellChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentCellChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentRowsLabelStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentRowsLabelStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FlatModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FlatModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AllowNavigationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowNavigationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentRowsVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentRowsVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Navigate(value: DNNavigateEventHandler);
    procedure remove_Navigate(value: DNNavigateEventHandler);
    procedure add_Scroll(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Scroll(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackButtonClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackButtonClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_ShowParentDetailsButtonClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ShowParentDetailsButtonClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function BeginEdit(gridColumn: DNDataGridColumnStyle; rowNumber: Int32): Boolean;
    procedure BeginInit;
    function EndEdit(gridColumn: DNDataGridColumnStyle; rowNumber: Int32; shouldAbort: Boolean): Boolean;
    procedure EndInit;
    procedure ResetAlternatingBackColor;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetSelectionBackColor;
    procedure ResetSelectionForeColor;
    procedure SetDataBinding(dataSource: DDN.mscorlib.DNObject; dataMember: string);
    procedure ResetGridLineColor;
    procedure ResetHeaderBackColor;
    procedure ResetHeaderFont;
    procedure ResetHeaderForeColor;
    procedure ResetLinkColor;
    procedure ResetLinkHoverColor;
    procedure Collapse(row: Int32);
    procedure Expand(row: Int32);
    function GetCurrentCellBounds: DDN.System.Drawing.DNRectangle;
    function GetCellBounds(row: Int32; col: Int32): DDN.System.Drawing.DNRectangle; overload;
    function GetCellBounds(dgc: DNDataGridCell): DDN.System.Drawing.DNRectangle; overload;
    function HitTest(x: Int32; y: Int32): DNDataGrid_HitTestInfo; overload;
    function HitTest(position: DDN.System.Drawing.DNPoint): DNDataGrid_HitTestInfo; overload;
    function IsExpanded(rowNumber: Int32): Boolean;
    function IsSelected(row: Int32): Boolean;
    procedure NavigateBack;
    procedure NavigateTo(rowNumber: Int32; relationName: string);
    procedure Select(row: Int32); overload;
    procedure SubObjectsSiteChange(site: Boolean);
    procedure UnSelect(row: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowSorting: Boolean read get_AllowSorting write set_AllowSorting;
    property AlternatingBackColor: DDN.System.Drawing.DNColor read get_AlternatingBackColor write set_AlternatingBackColor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CaptionBackColor: DDN.System.Drawing.DNColor read get_CaptionBackColor write set_CaptionBackColor;
    property CaptionForeColor: DDN.System.Drawing.DNColor read get_CaptionForeColor write set_CaptionForeColor;
    property CaptionFont: DDN.System.Drawing.DNFont read get_CaptionFont write set_CaptionFont;
    property CaptionText: string read get_CaptionText write set_CaptionText;
    property CaptionVisible: Boolean read get_CaptionVisible write set_CaptionVisible;
    property CurrentCell: DNDataGridCell read get_CurrentCell write set_CurrentCell;
    property SelectionBackColor: DDN.System.Drawing.DNColor read get_SelectionBackColor write set_SelectionBackColor;
    property SelectionForeColor: DDN.System.Drawing.DNColor read get_SelectionForeColor write set_SelectionForeColor;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DataMember: string read get_DataMember write set_DataMember;
    property CurrentRowIndex: Int32 read get_CurrentRowIndex write set_CurrentRowIndex;
    property TableStyles: DNGridTableStylesCollection read get_TableStyles;
    property GridLineColor: DDN.System.Drawing.DNColor read get_GridLineColor write set_GridLineColor;
    property GridLineStyle: DNDataGridLineStyle read get_GridLineStyle write set_GridLineStyle;
    property ParentRowsLabelStyle: DNDataGridParentRowsLabelStyle read get_ParentRowsLabelStyle write set_ParentRowsLabelStyle;
    property FirstVisibleColumn: Int32 read get_FirstVisibleColumn;
    property FlatMode: Boolean read get_FlatMode write set_FlatMode;
    property HeaderBackColor: DDN.System.Drawing.DNColor read get_HeaderBackColor write set_HeaderBackColor;
    property BackgroundColor: DDN.System.Drawing.DNColor read get_BackgroundColor write set_BackgroundColor;
    property HeaderFont: DDN.System.Drawing.DNFont read get_HeaderFont write set_HeaderFont;
    property HeaderForeColor: DDN.System.Drawing.DNColor read get_HeaderForeColor write set_HeaderForeColor;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property LinkHoverColor: DDN.System.Drawing.DNColor read get_LinkHoverColor write set_LinkHoverColor;
    property AllowNavigation: Boolean read get_AllowNavigation write set_AllowNavigation;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ParentRowsBackColor: DDN.System.Drawing.DNColor read get_ParentRowsBackColor write set_ParentRowsBackColor;
    property ParentRowsForeColor: DDN.System.Drawing.DNColor read get_ParentRowsForeColor write set_ParentRowsForeColor;
    property PreferredColumnWidth: Int32 read get_PreferredColumnWidth write set_PreferredColumnWidth;
    property PreferredRowHeight: Int32 read get_PreferredRowHeight write set_PreferredRowHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property ColumnHeadersVisible: Boolean read get_ColumnHeadersVisible write set_ColumnHeadersVisible;
    property ParentRowsVisible: Boolean read get_ParentRowsVisible write set_ParentRowsVisible;
    property RowHeadersVisible: Boolean read get_RowHeadersVisible write set_RowHeadersVisible;
    property RowHeaderWidth: Int32 read get_RowHeaderWidth write set_RowHeaderWidth;
    property Text: string read get_Text write set_Text;
    property VisibleColumnCount: Int32 read get_VisibleColumnCount;
    property VisibleRowCount: Int32 read get_VisibleRowCount;
    property Item[rowIndex: Int32; columnIndex: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
    property Item[cell: DNDataGridCell]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGrid = class(TDNGenericImport<DNDataGridClass, DNDataGrid>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewClass = interface(DNControlClass)
  ['{DAC9BD07-EB63-5D9B-83BB-205090656490}']
  { constructors } 

    {class} function init: DNDataGridView;

  end;

  [DNTypeName('System.Windows.Forms.DataGridView')]
  DNDataGridView = interface(DNControl)
  ['{E21338E1-4794-3125-9211-92A7510202E8}']
  { getters & setters } 

    function get_AdjustedTopLeftHeaderBorderStyle: DNDataGridViewAdvancedBorderStyle;
    function get_AdvancedCellBorderStyle: DNDataGridViewAdvancedBorderStyle;
    function get_AdvancedColumnHeadersBorderStyle: DNDataGridViewAdvancedBorderStyle;
    function get_AdvancedRowHeadersBorderStyle: DNDataGridViewAdvancedBorderStyle;
    function get_AllowUserToAddRows: Boolean;
    procedure set_AllowUserToAddRows(value: Boolean);
    function get_AllowUserToDeleteRows: Boolean;
    procedure set_AllowUserToDeleteRows(value: Boolean);
    function get_AllowUserToOrderColumns: Boolean;
    procedure set_AllowUserToOrderColumns(value: Boolean);
    function get_AllowUserToResizeColumns: Boolean;
    procedure set_AllowUserToResizeColumns(value: Boolean);
    function get_AllowUserToResizeRows: Boolean;
    procedure set_AllowUserToResizeRows(value: Boolean);
    function get_AlternatingRowsDefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_AlternatingRowsDefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_AutoGenerateColumns: Boolean;
    procedure set_AutoGenerateColumns(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeColumnsMode: DNDataGridViewAutoSizeColumnsMode;
    procedure set_AutoSizeColumnsMode(value: DNDataGridViewAutoSizeColumnsMode);
    function get_AutoSizeRowsMode: DNDataGridViewAutoSizeRowsMode;
    procedure set_AutoSizeRowsMode(value: DNDataGridViewAutoSizeRowsMode);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundColor: DDN.System.Drawing.DNColor;
    procedure set_BackgroundColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CellBorderStyle: DNDataGridViewCellBorderStyle;
    procedure set_CellBorderStyle(value: DNDataGridViewCellBorderStyle);
    function get_ClipboardCopyMode: DNDataGridViewClipboardCopyMode;
    procedure set_ClipboardCopyMode(value: DNDataGridViewClipboardCopyMode);
    function get_ColumnCount: Int32;
    procedure set_ColumnCount(value: Int32);
    function get_ColumnHeadersBorderStyle: DNDataGridViewHeaderBorderStyle;
    procedure set_ColumnHeadersBorderStyle(value: DNDataGridViewHeaderBorderStyle);
    function get_ColumnHeadersDefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_ColumnHeadersDefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_ColumnHeadersHeight: Int32;
    procedure set_ColumnHeadersHeight(value: Int32);
    function get_ColumnHeadersHeightSizeMode: DNDataGridViewColumnHeadersHeightSizeMode;
    procedure set_ColumnHeadersHeightSizeMode(value: DNDataGridViewColumnHeadersHeightSizeMode);
    function get_ColumnHeadersVisible: Boolean;
    procedure set_ColumnHeadersVisible(value: Boolean);
    function get_Columns: DNDataGridViewColumnCollection;
    function get_CurrentCell: DNDataGridViewCell;
    procedure set_CurrentCell(value: DNDataGridViewCell);
    function get_CurrentCellAddress: DDN.System.Drawing.DNPoint;
    function get_CurrentRow: DNDataGridViewRow;
    function get_DataMember: string;
    procedure set_DataMember(value: string);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_EditMode: DNDataGridViewEditMode;
    procedure set_EditMode(value: DNDataGridViewEditMode);
    function get_EditingControl: DNControl;
    function get_EditingPanel: DNPanel;
    function get_EnableHeadersVisualStyles: Boolean;
    procedure set_EnableHeadersVisualStyles(value: Boolean);
    function get_FirstDisplayedCell: DNDataGridViewCell;
    procedure set_FirstDisplayedCell(value: DNDataGridViewCell);
    function get_FirstDisplayedScrollingColumnHiddenWidth: Int32;
    function get_FirstDisplayedScrollingColumnIndex: Int32;
    procedure set_FirstDisplayedScrollingColumnIndex(value: Int32);
    function get_FirstDisplayedScrollingRowIndex: Int32;
    procedure set_FirstDisplayedScrollingRowIndex(value: Int32);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_GridColor: DDN.System.Drawing.DNColor;
    procedure set_GridColor(value: DDN.System.Drawing.DNColor);
    function get_HorizontalScrollingOffset: Int32;
    procedure set_HorizontalScrollingOffset(value: Int32);
    function get_IsCurrentCellDirty: Boolean;
    function get_IsCurrentCellInEditMode: Boolean;
    function get_IsCurrentRowDirty: Boolean;
    function get_MultiSelect: Boolean;
    procedure set_MultiSelect(value: Boolean);
    function get_NewRowIndex: Int32;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_RowCount: Int32;
    procedure set_RowCount(value: Int32);
    function get_RowHeadersBorderStyle: DNDataGridViewHeaderBorderStyle;
    procedure set_RowHeadersBorderStyle(value: DNDataGridViewHeaderBorderStyle);
    function get_RowHeadersDefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_RowHeadersDefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_RowHeadersVisible: Boolean;
    procedure set_RowHeadersVisible(value: Boolean);
    function get_RowHeadersWidth: Int32;
    procedure set_RowHeadersWidth(value: Int32);
    function get_RowHeadersWidthSizeMode: DNDataGridViewRowHeadersWidthSizeMode;
    procedure set_RowHeadersWidthSizeMode(value: DNDataGridViewRowHeadersWidthSizeMode);
    function get_Rows: DNDataGridViewRowCollection;
    function get_RowsDefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_RowsDefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_RowTemplate: DNDataGridViewRow;
    procedure set_RowTemplate(value: DNDataGridViewRow);
    function get_ScrollBars: DNScrollBars;
    procedure set_ScrollBars(value: DNScrollBars);
    function get_SelectedCells: DNDataGridViewSelectedCellCollection;
    function get_SelectedColumns: DNDataGridViewSelectedColumnCollection;
    function get_SelectedRows: DNDataGridViewSelectedRowCollection;
    function get_SelectionMode: DNDataGridViewSelectionMode;
    procedure set_SelectionMode(value: DNDataGridViewSelectionMode);
    function get_ShowCellErrors: Boolean;
    procedure set_ShowCellErrors(value: Boolean);
    function get_ShowCellToolTips: Boolean;
    procedure set_ShowCellToolTips(value: Boolean);
    function get_ShowEditingIcon: Boolean;
    procedure set_ShowEditingIcon(value: Boolean);
    function get_ShowRowErrors: Boolean;
    procedure set_ShowRowErrors(value: Boolean);
    function get_SortedColumn: DNDataGridViewColumn;
    function get_SortOrder: DNSortOrder;
    function get_StandardTab: Boolean;
    procedure set_StandardTab(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Item(columnIndex: Int32; rowIndex: Int32): DNDataGridViewCell; overload;
    procedure set_Item(columnIndex: Int32; rowIndex: Int32; value: DNDataGridViewCell); overload;
    function get_Item(columnName: string; rowIndex: Int32): DNDataGridViewCell; overload;
    procedure set_Item(columnName: string; rowIndex: Int32; value: DNDataGridViewCell); overload;
    function get_TopLeftHeaderCell: DNDataGridViewHeaderCell;
    procedure set_TopLeftHeaderCell(value: DNDataGridViewHeaderCell);
    function get_UserSetCursor: DNCursor;
    function get_VerticalScrollingOffset: Int32;
    function get_VirtualMode: Boolean;
    procedure set_VirtualMode(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AllowUserToAddRowsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowUserToAddRowsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AllowUserToDeleteRowsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowUserToDeleteRowsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AllowUserToOrderColumnsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowUserToOrderColumnsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AllowUserToResizeColumnsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowUserToResizeColumnsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AllowUserToResizeRowsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowUserToResizeRowsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AlternatingRowsDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AlternatingRowsDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoGenerateColumnsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoGenerateColumnsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeColumnsModeChanged(value: DNDataGridViewAutoSizeColumnsModeEventHandler);
    procedure remove_AutoSizeColumnsModeChanged(value: DNDataGridViewAutoSizeColumnsModeEventHandler);
    procedure add_AutoSizeRowsModeChanged(value: DNDataGridViewAutoSizeModeEventHandler);
    procedure remove_AutoSizeRowsModeChanged(value: DNDataGridViewAutoSizeModeEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CellBorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CellBorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ColumnHeadersBorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ColumnHeadersBorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ColumnHeadersDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ColumnHeadersDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ColumnHeadersHeightChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ColumnHeadersHeightChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ColumnHeadersHeightSizeModeChanged(value: DNDataGridViewAutoSizeModeEventHandler);
    procedure remove_ColumnHeadersHeightSizeModeChanged(value: DNDataGridViewAutoSizeModeEventHandler);
    procedure add_DataMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EditModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EditModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GridColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GridColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultiSelectChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultiSelectChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RowHeadersBorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RowHeadersBorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RowHeadersDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RowHeadersDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RowHeadersWidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RowHeadersWidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RowHeadersWidthSizeModeChanged(value: DNDataGridViewAutoSizeModeEventHandler);
    procedure remove_RowHeadersWidthSizeModeChanged(value: DNDataGridViewAutoSizeModeEventHandler);
    procedure add_RowsDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RowsDefaultCellStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeColumnModeChanged(value: DNDataGridViewAutoSizeColumnModeEventHandler);
    procedure remove_AutoSizeColumnModeChanged(value: DNDataGridViewAutoSizeColumnModeEventHandler);
    procedure add_CancelRowEdit(value: DNQuestionEventHandler);
    procedure remove_CancelRowEdit(value: DNQuestionEventHandler);
    procedure add_CellBeginEdit(value: DNDataGridViewCellCancelEventHandler);
    procedure remove_CellBeginEdit(value: DNDataGridViewCellCancelEventHandler);
    procedure add_CellClick(value: DNDataGridViewCellEventHandler);
    procedure remove_CellClick(value: DNDataGridViewCellEventHandler);
    procedure add_CellContentClick(value: DNDataGridViewCellEventHandler);
    procedure remove_CellContentClick(value: DNDataGridViewCellEventHandler);
    procedure add_CellContentDoubleClick(value: DNDataGridViewCellEventHandler);
    procedure remove_CellContentDoubleClick(value: DNDataGridViewCellEventHandler);
    procedure add_CellContextMenuStripChanged(value: DNDataGridViewCellEventHandler);
    procedure remove_CellContextMenuStripChanged(value: DNDataGridViewCellEventHandler);
    procedure add_CellContextMenuStripNeeded(value: DNDataGridViewCellContextMenuStripNeededEventHandler);
    procedure remove_CellContextMenuStripNeeded(value: DNDataGridViewCellContextMenuStripNeededEventHandler);
    procedure add_CellDoubleClick(value: DNDataGridViewCellEventHandler);
    procedure remove_CellDoubleClick(value: DNDataGridViewCellEventHandler);
    procedure add_CellEndEdit(value: DNDataGridViewCellEventHandler);
    procedure remove_CellEndEdit(value: DNDataGridViewCellEventHandler);
    procedure add_CellEnter(value: DNDataGridViewCellEventHandler);
    procedure remove_CellEnter(value: DNDataGridViewCellEventHandler);
    procedure add_CellErrorTextChanged(value: DNDataGridViewCellEventHandler);
    procedure remove_CellErrorTextChanged(value: DNDataGridViewCellEventHandler);
    procedure add_CellErrorTextNeeded(value: DNDataGridViewCellErrorTextNeededEventHandler);
    procedure remove_CellErrorTextNeeded(value: DNDataGridViewCellErrorTextNeededEventHandler);
    procedure add_CellFormatting(value: DNDataGridViewCellFormattingEventHandler);
    procedure remove_CellFormatting(value: DNDataGridViewCellFormattingEventHandler);
    procedure add_CellLeave(value: DNDataGridViewCellEventHandler);
    procedure remove_CellLeave(value: DNDataGridViewCellEventHandler);
    procedure add_CellMouseClick(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_CellMouseClick(value: DNDataGridViewCellMouseEventHandler);
    procedure add_CellMouseDoubleClick(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_CellMouseDoubleClick(value: DNDataGridViewCellMouseEventHandler);
    procedure add_CellMouseDown(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_CellMouseDown(value: DNDataGridViewCellMouseEventHandler);
    procedure add_CellMouseEnter(value: DNDataGridViewCellEventHandler);
    procedure remove_CellMouseEnter(value: DNDataGridViewCellEventHandler);
    procedure add_CellMouseLeave(value: DNDataGridViewCellEventHandler);
    procedure remove_CellMouseLeave(value: DNDataGridViewCellEventHandler);
    procedure add_CellMouseMove(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_CellMouseMove(value: DNDataGridViewCellMouseEventHandler);
    procedure add_CellMouseUp(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_CellMouseUp(value: DNDataGridViewCellMouseEventHandler);
    procedure add_CellPainting(value: DNDataGridViewCellPaintingEventHandler);
    procedure remove_CellPainting(value: DNDataGridViewCellPaintingEventHandler);
    procedure add_CellParsing(value: DNDataGridViewCellParsingEventHandler);
    procedure remove_CellParsing(value: DNDataGridViewCellParsingEventHandler);
    procedure add_CellStateChanged(value: DNDataGridViewCellStateChangedEventHandler);
    procedure remove_CellStateChanged(value: DNDataGridViewCellStateChangedEventHandler);
    procedure add_CellStyleChanged(value: DNDataGridViewCellEventHandler);
    procedure remove_CellStyleChanged(value: DNDataGridViewCellEventHandler);
    procedure add_CellStyleContentChanged(value: DNDataGridViewCellStyleContentChangedEventHandler);
    procedure remove_CellStyleContentChanged(value: DNDataGridViewCellStyleContentChangedEventHandler);
    procedure add_CellToolTipTextChanged(value: DNDataGridViewCellEventHandler);
    procedure remove_CellToolTipTextChanged(value: DNDataGridViewCellEventHandler);
    procedure add_CellToolTipTextNeeded(value: DNDataGridViewCellToolTipTextNeededEventHandler);
    procedure remove_CellToolTipTextNeeded(value: DNDataGridViewCellToolTipTextNeededEventHandler);
    procedure add_CellValidated(value: DNDataGridViewCellEventHandler);
    procedure remove_CellValidated(value: DNDataGridViewCellEventHandler);
    procedure add_CellValidating(value: DNDataGridViewCellValidatingEventHandler);
    procedure remove_CellValidating(value: DNDataGridViewCellValidatingEventHandler);
    procedure add_CellValueChanged(value: DNDataGridViewCellEventHandler);
    procedure remove_CellValueChanged(value: DNDataGridViewCellEventHandler);
    procedure add_CellValueNeeded(value: DNDataGridViewCellValueEventHandler);
    procedure remove_CellValueNeeded(value: DNDataGridViewCellValueEventHandler);
    procedure add_CellValuePushed(value: DNDataGridViewCellValueEventHandler);
    procedure remove_CellValuePushed(value: DNDataGridViewCellValueEventHandler);
    procedure add_ColumnAdded(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnAdded(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnContextMenuStripChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnContextMenuStripChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnDataPropertyNameChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnDataPropertyNameChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnDefaultCellStyleChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnDefaultCellStyleChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnDisplayIndexChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnDisplayIndexChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnDividerDoubleClick(value: DNDataGridViewColumnDividerDoubleClickEventHandler);
    procedure remove_ColumnDividerDoubleClick(value: DNDataGridViewColumnDividerDoubleClickEventHandler);
    procedure add_ColumnDividerWidthChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnDividerWidthChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnHeaderMouseClick(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_ColumnHeaderMouseClick(value: DNDataGridViewCellMouseEventHandler);
    procedure add_ColumnHeaderMouseDoubleClick(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_ColumnHeaderMouseDoubleClick(value: DNDataGridViewCellMouseEventHandler);
    procedure add_ColumnHeaderCellChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnHeaderCellChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnMinimumWidthChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnMinimumWidthChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnNameChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnNameChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnRemoved(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnRemoved(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnSortModeChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnSortModeChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnStateChanged(value: DNDataGridViewColumnStateChangedEventHandler);
    procedure remove_ColumnStateChanged(value: DNDataGridViewColumnStateChangedEventHandler);
    procedure add_ColumnToolTipTextChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnToolTipTextChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_ColumnWidthChanged(value: DNDataGridViewColumnEventHandler);
    procedure remove_ColumnWidthChanged(value: DNDataGridViewColumnEventHandler);
    procedure add_CurrentCellChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentCellChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentCellDirtyStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentCellDirtyStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataBindingComplete(value: DNDataGridViewBindingCompleteEventHandler);
    procedure remove_DataBindingComplete(value: DNDataGridViewBindingCompleteEventHandler);
    procedure add_DataError(value: DNDataGridViewDataErrorEventHandler);
    procedure remove_DataError(value: DNDataGridViewDataErrorEventHandler);
    procedure add_DefaultValuesNeeded(value: DNDataGridViewRowEventHandler);
    procedure remove_DefaultValuesNeeded(value: DNDataGridViewRowEventHandler);
    procedure add_EditingControlShowing(value: DNDataGridViewEditingControlShowingEventHandler);
    procedure remove_EditingControlShowing(value: DNDataGridViewEditingControlShowingEventHandler);
    procedure add_NewRowNeeded(value: DNDataGridViewRowEventHandler);
    procedure remove_NewRowNeeded(value: DNDataGridViewRowEventHandler);
    procedure add_RowContextMenuStripChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowContextMenuStripChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowContextMenuStripNeeded(value: DNDataGridViewRowContextMenuStripNeededEventHandler);
    procedure remove_RowContextMenuStripNeeded(value: DNDataGridViewRowContextMenuStripNeededEventHandler);
    procedure add_RowDefaultCellStyleChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowDefaultCellStyleChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowDirtyStateNeeded(value: DNQuestionEventHandler);
    procedure remove_RowDirtyStateNeeded(value: DNQuestionEventHandler);
    procedure add_RowDividerDoubleClick(value: DNDataGridViewRowDividerDoubleClickEventHandler);
    procedure remove_RowDividerDoubleClick(value: DNDataGridViewRowDividerDoubleClickEventHandler);
    procedure add_RowDividerHeightChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowDividerHeightChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowEnter(value: DNDataGridViewCellEventHandler);
    procedure remove_RowEnter(value: DNDataGridViewCellEventHandler);
    procedure add_RowErrorTextChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowErrorTextChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowErrorTextNeeded(value: DNDataGridViewRowErrorTextNeededEventHandler);
    procedure remove_RowErrorTextNeeded(value: DNDataGridViewRowErrorTextNeededEventHandler);
    procedure add_RowHeaderMouseClick(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_RowHeaderMouseClick(value: DNDataGridViewCellMouseEventHandler);
    procedure add_RowHeaderMouseDoubleClick(value: DNDataGridViewCellMouseEventHandler);
    procedure remove_RowHeaderMouseDoubleClick(value: DNDataGridViewCellMouseEventHandler);
    procedure add_RowHeaderCellChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowHeaderCellChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowHeightChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowHeightChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowHeightInfoNeeded(value: DNDataGridViewRowHeightInfoNeededEventHandler);
    procedure remove_RowHeightInfoNeeded(value: DNDataGridViewRowHeightInfoNeededEventHandler);
    procedure add_RowHeightInfoPushed(value: DNDataGridViewRowHeightInfoPushedEventHandler);
    procedure remove_RowHeightInfoPushed(value: DNDataGridViewRowHeightInfoPushedEventHandler);
    procedure add_RowLeave(value: DNDataGridViewCellEventHandler);
    procedure remove_RowLeave(value: DNDataGridViewCellEventHandler);
    procedure add_RowMinimumHeightChanged(value: DNDataGridViewRowEventHandler);
    procedure remove_RowMinimumHeightChanged(value: DNDataGridViewRowEventHandler);
    procedure add_RowPostPaint(value: DNDataGridViewRowPostPaintEventHandler);
    procedure remove_RowPostPaint(value: DNDataGridViewRowPostPaintEventHandler);
    procedure add_RowPrePaint(value: DNDataGridViewRowPrePaintEventHandler);
    procedure remove_RowPrePaint(value: DNDataGridViewRowPrePaintEventHandler);
    procedure add_RowsAdded(value: DNDataGridViewRowsAddedEventHandler);
    procedure remove_RowsAdded(value: DNDataGridViewRowsAddedEventHandler);
    procedure add_RowsRemoved(value: DNDataGridViewRowsRemovedEventHandler);
    procedure remove_RowsRemoved(value: DNDataGridViewRowsRemovedEventHandler);
    procedure add_RowStateChanged(value: DNDataGridViewRowStateChangedEventHandler);
    procedure remove_RowStateChanged(value: DNDataGridViewRowStateChangedEventHandler);
    procedure add_RowUnshared(value: DNDataGridViewRowEventHandler);
    procedure remove_RowUnshared(value: DNDataGridViewRowEventHandler);
    procedure add_RowValidated(value: DNDataGridViewCellEventHandler);
    procedure remove_RowValidated(value: DNDataGridViewCellEventHandler);
    procedure add_RowValidating(value: DNDataGridViewCellCancelEventHandler);
    procedure remove_RowValidating(value: DNDataGridViewCellCancelEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_SelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SortCompare(value: DNDataGridViewSortCompareEventHandler);
    procedure remove_SortCompare(value: DNDataGridViewSortCompareEventHandler);
    procedure add_Sorted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Sorted(value: DDN.mscorlib.DNEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_UserAddedRow(value: DNDataGridViewRowEventHandler);
    procedure remove_UserAddedRow(value: DNDataGridViewRowEventHandler);
    procedure add_UserDeletedRow(value: DNDataGridViewRowEventHandler);
    procedure remove_UserDeletedRow(value: DNDataGridViewRowEventHandler);
    procedure add_UserDeletingRow(value: DNDataGridViewRowCancelEventHandler);
    procedure remove_UserDeletingRow(value: DNDataGridViewRowCancelEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function AdjustColumnHeaderBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; isFirstDisplayedColumn: Boolean; isLastVisibleColumn: Boolean): DNDataGridViewAdvancedBorderStyle;
    function BeginEdit(selectAll: Boolean): Boolean;
    procedure NotifyCurrentCellDirty(dirty: Boolean);
    procedure ResetText;
    procedure Sort(dataGridViewColumn: DNDataGridViewColumn; direction: DDN.System.DNListSortDirection); overload;
    procedure Sort(comparer: DDN.mscorlib.DNIComparer); overload;
    function AreAllCellsSelected(includeInvisibleCells: Boolean): Boolean;
    procedure AutoResizeColumn(columnIndex: Int32); overload;
    procedure AutoResizeColumn(columnIndex: Int32; autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode); overload;
    procedure AutoResizeColumnHeadersHeight; overload;
    procedure AutoResizeColumnHeadersHeight(columnIndex: Int32); overload;
    procedure AutoResizeColumns; overload;
    procedure AutoResizeColumns(autoSizeColumnsMode: DNDataGridViewAutoSizeColumnsMode); overload;
    procedure AutoResizeRow(rowIndex: Int32); overload;
    procedure AutoResizeRow(rowIndex: Int32; autoSizeRowMode: DNDataGridViewAutoSizeRowMode); overload;
    procedure AutoResizeRowHeadersWidth(rowHeadersWidthSizeMode: DNDataGridViewRowHeadersWidthSizeMode); overload;
    procedure AutoResizeRowHeadersWidth(rowIndex: Int32; rowHeadersWidthSizeMode: DNDataGridViewRowHeadersWidthSizeMode); overload;
    procedure AutoResizeRows; overload;
    procedure AutoResizeRows(autoSizeRowsMode: DNDataGridViewAutoSizeRowsMode); overload;
    function CancelEdit: Boolean;
    procedure ClearSelection;
    function CommitEdit(context: DNDataGridViewDataErrorContexts): Boolean;
    function DisplayedColumnCount(includePartialColumns: Boolean): Int32;
    function DisplayedRowCount(includePartialRow: Boolean): Int32;
    function EndEdit: Boolean; overload;
    function EndEdit(context: DNDataGridViewDataErrorContexts): Boolean; overload;
    function GetCellCount(includeFilter: DNDataGridViewElementStates): Int32;
    function GetCellDisplayRectangle(columnIndex: Int32; rowIndex: Int32; cutOverflow: Boolean): DDN.System.Drawing.DNRectangle;
    function GetClipboardContent: DNDataObject;
    function GetColumnDisplayRectangle(columnIndex: Int32; cutOverflow: Boolean): DDN.System.Drawing.DNRectangle;
    function GetRowDisplayRectangle(rowIndex: Int32; cutOverflow: Boolean): DDN.System.Drawing.DNRectangle;
    function HitTest(x: Int32; y: Int32): DNDataGridView_HitTestInfo;
    procedure InvalidateCell(dataGridViewCell: DNDataGridViewCell); overload;
    procedure InvalidateCell(columnIndex: Int32; rowIndex: Int32); overload;
    procedure InvalidateColumn(columnIndex: Int32);
    procedure InvalidateRow(rowIndex: Int32);
    function RefreshEdit: Boolean;
    procedure SelectAll;
    procedure UpdateCellErrorText(columnIndex: Int32; rowIndex: Int32);
    procedure UpdateCellValue(columnIndex: Int32; rowIndex: Int32);
    procedure UpdateRowErrorText(rowIndex: Int32); overload;
    procedure UpdateRowErrorText(rowIndexStart: Int32; rowIndexEnd: Int32); overload;
    procedure UpdateRowHeightInfo(rowIndex: Int32; updateToEnd: Boolean);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AdjustedTopLeftHeaderBorderStyle: DNDataGridViewAdvancedBorderStyle read get_AdjustedTopLeftHeaderBorderStyle;
    property AdvancedCellBorderStyle: DNDataGridViewAdvancedBorderStyle read get_AdvancedCellBorderStyle;
    property AdvancedColumnHeadersBorderStyle: DNDataGridViewAdvancedBorderStyle read get_AdvancedColumnHeadersBorderStyle;
    property AdvancedRowHeadersBorderStyle: DNDataGridViewAdvancedBorderStyle read get_AdvancedRowHeadersBorderStyle;
    property AllowUserToAddRows: Boolean read get_AllowUserToAddRows write set_AllowUserToAddRows;
    property AllowUserToDeleteRows: Boolean read get_AllowUserToDeleteRows write set_AllowUserToDeleteRows;
    property AllowUserToOrderColumns: Boolean read get_AllowUserToOrderColumns write set_AllowUserToOrderColumns;
    property AllowUserToResizeColumns: Boolean read get_AllowUserToResizeColumns write set_AllowUserToResizeColumns;
    property AllowUserToResizeRows: Boolean read get_AllowUserToResizeRows write set_AllowUserToResizeRows;
    property AlternatingRowsDefaultCellStyle: DNDataGridViewCellStyle read get_AlternatingRowsDefaultCellStyle write set_AlternatingRowsDefaultCellStyle;
    property AutoGenerateColumns: Boolean read get_AutoGenerateColumns write set_AutoGenerateColumns;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeColumnsMode: DNDataGridViewAutoSizeColumnsMode read get_AutoSizeColumnsMode write set_AutoSizeColumnsMode;
    property AutoSizeRowsMode: DNDataGridViewAutoSizeRowsMode read get_AutoSizeRowsMode write set_AutoSizeRowsMode;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundColor: DDN.System.Drawing.DNColor read get_BackgroundColor write set_BackgroundColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CellBorderStyle: DNDataGridViewCellBorderStyle read get_CellBorderStyle write set_CellBorderStyle;
    property ClipboardCopyMode: DNDataGridViewClipboardCopyMode read get_ClipboardCopyMode write set_ClipboardCopyMode;
    property ColumnCount: Int32 read get_ColumnCount write set_ColumnCount;
    property ColumnHeadersBorderStyle: DNDataGridViewHeaderBorderStyle read get_ColumnHeadersBorderStyle write set_ColumnHeadersBorderStyle;
    property ColumnHeadersDefaultCellStyle: DNDataGridViewCellStyle read get_ColumnHeadersDefaultCellStyle write set_ColumnHeadersDefaultCellStyle;
    property ColumnHeadersHeight: Int32 read get_ColumnHeadersHeight write set_ColumnHeadersHeight;
    property ColumnHeadersHeightSizeMode: DNDataGridViewColumnHeadersHeightSizeMode read get_ColumnHeadersHeightSizeMode write set_ColumnHeadersHeightSizeMode;
    property ColumnHeadersVisible: Boolean read get_ColumnHeadersVisible write set_ColumnHeadersVisible;
    property Columns: DNDataGridViewColumnCollection read get_Columns;
    property CurrentCell: DNDataGridViewCell read get_CurrentCell write set_CurrentCell;
    property CurrentCellAddress: DDN.System.Drawing.DNPoint read get_CurrentCellAddress;
    property CurrentRow: DNDataGridViewRow read get_CurrentRow;
    property DataMember: string read get_DataMember write set_DataMember;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property EditMode: DNDataGridViewEditMode read get_EditMode write set_EditMode;
    property EditingControl: DNControl read get_EditingControl;
    property EditingPanel: DNPanel read get_EditingPanel;
    property EnableHeadersVisualStyles: Boolean read get_EnableHeadersVisualStyles write set_EnableHeadersVisualStyles;
    property FirstDisplayedCell: DNDataGridViewCell read get_FirstDisplayedCell write set_FirstDisplayedCell;
    property FirstDisplayedScrollingColumnHiddenWidth: Int32 read get_FirstDisplayedScrollingColumnHiddenWidth;
    property FirstDisplayedScrollingColumnIndex: Int32 read get_FirstDisplayedScrollingColumnIndex write set_FirstDisplayedScrollingColumnIndex;
    property FirstDisplayedScrollingRowIndex: Int32 read get_FirstDisplayedScrollingRowIndex write set_FirstDisplayedScrollingRowIndex;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property GridColor: DDN.System.Drawing.DNColor read get_GridColor write set_GridColor;
    property HorizontalScrollingOffset: Int32 read get_HorizontalScrollingOffset write set_HorizontalScrollingOffset;
    property IsCurrentCellDirty: Boolean read get_IsCurrentCellDirty;
    property IsCurrentCellInEditMode: Boolean read get_IsCurrentCellInEditMode;
    property IsCurrentRowDirty: Boolean read get_IsCurrentRowDirty;
    property MultiSelect: Boolean read get_MultiSelect write set_MultiSelect;
    property NewRowIndex: Int32 read get_NewRowIndex;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property RowCount: Int32 read get_RowCount write set_RowCount;
    property RowHeadersBorderStyle: DNDataGridViewHeaderBorderStyle read get_RowHeadersBorderStyle write set_RowHeadersBorderStyle;
    property RowHeadersDefaultCellStyle: DNDataGridViewCellStyle read get_RowHeadersDefaultCellStyle write set_RowHeadersDefaultCellStyle;
    property RowHeadersVisible: Boolean read get_RowHeadersVisible write set_RowHeadersVisible;
    property RowHeadersWidth: Int32 read get_RowHeadersWidth write set_RowHeadersWidth;
    property RowHeadersWidthSizeMode: DNDataGridViewRowHeadersWidthSizeMode read get_RowHeadersWidthSizeMode write set_RowHeadersWidthSizeMode;
    property Rows: DNDataGridViewRowCollection read get_Rows;
    property RowsDefaultCellStyle: DNDataGridViewCellStyle read get_RowsDefaultCellStyle write set_RowsDefaultCellStyle;
    property RowTemplate: DNDataGridViewRow read get_RowTemplate write set_RowTemplate;
    property ScrollBars: DNScrollBars read get_ScrollBars write set_ScrollBars;
    property SelectedCells: DNDataGridViewSelectedCellCollection read get_SelectedCells;
    property SelectedColumns: DNDataGridViewSelectedColumnCollection read get_SelectedColumns;
    property SelectedRows: DNDataGridViewSelectedRowCollection read get_SelectedRows;
    property SelectionMode: DNDataGridViewSelectionMode read get_SelectionMode write set_SelectionMode;
    property ShowCellErrors: Boolean read get_ShowCellErrors write set_ShowCellErrors;
    property ShowCellToolTips: Boolean read get_ShowCellToolTips write set_ShowCellToolTips;
    property ShowEditingIcon: Boolean read get_ShowEditingIcon write set_ShowEditingIcon;
    property ShowRowErrors: Boolean read get_ShowRowErrors write set_ShowRowErrors;
    property SortedColumn: DNDataGridViewColumn read get_SortedColumn;
    property SortOrder: DNSortOrder read get_SortOrder;
    property StandardTab: Boolean read get_StandardTab write set_StandardTab;
    property Text: string read get_Text write set_Text;
    property Item[columnIndex: Int32; rowIndex: Int32]: DNDataGridViewCell read get_Item write set_Item; default;
    property Item[columnName: string; rowIndex: Int32]: DNDataGridViewCell read get_Item write set_Item; default;
    property TopLeftHeaderCell: DNDataGridViewHeaderCell read get_TopLeftHeaderCell write set_TopLeftHeaderCell;
    property UserSetCursor: DNCursor read get_UserSetCursor;
    property VerticalScrollingOffset: Int32 read get_VerticalScrollingOffset;
    property VirtualMode: Boolean read get_VirtualMode write set_VirtualMode;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridView = class(TDNGenericImport<DNDataGridViewClass, DNDataGridView>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDateTimePickerClass = interface(DNControlClass)
  ['{B37138C8-7C35-5DA9-9054-A299542090D0}']
  { static getter & setter } 

    {class} function get_MaximumDateTime: DDN.mscorlib.DNDateTime;
    {class} function get_MinimumDateTime: DDN.mscorlib.DNDateTime;

  { constructors } 

    {class} function init: DNDateTimePicker;

  { static fields getter & setter } 

   function __fakeFieldGet_MinDateTime: DDN.mscorlib.DNDateTime;
   function __fakeFieldGet_MaxDateTime: DDN.mscorlib.DNDateTime;

  { static fields } 

    {class} property MinDateTime: DDN.mscorlib.DNDateTime read __fakeFieldGet_MinDateTime;
    {class} property MaxDateTime: DDN.mscorlib.DNDateTime read __fakeFieldGet_MaxDateTime;

  { static propertys } 

    {class} property MaximumDateTime: DDN.mscorlib.DNDateTime read get_MaximumDateTime;
    {class} property MinimumDateTime: DDN.mscorlib.DNDateTime read get_MinimumDateTime;
  end;

  [DNTypeName('System.Windows.Forms.DateTimePicker')]
  DNDateTimePicker = interface(DNControl)
  ['{4D09932A-CC59-3DB0-9826-D515941D2D92}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_CalendarForeColor: DDN.System.Drawing.DNColor;
    procedure set_CalendarForeColor(value: DDN.System.Drawing.DNColor);
    function get_CalendarFont: DDN.System.Drawing.DNFont;
    procedure set_CalendarFont(value: DDN.System.Drawing.DNFont);
    function get_CalendarTitleBackColor: DDN.System.Drawing.DNColor;
    procedure set_CalendarTitleBackColor(value: DDN.System.Drawing.DNColor);
    function get_CalendarTitleForeColor: DDN.System.Drawing.DNColor;
    procedure set_CalendarTitleForeColor(value: DDN.System.Drawing.DNColor);
    function get_CalendarTrailingForeColor: DDN.System.Drawing.DNColor;
    procedure set_CalendarTrailingForeColor(value: DDN.System.Drawing.DNColor);
    function get_CalendarMonthBackground: DDN.System.Drawing.DNColor;
    procedure set_CalendarMonthBackground(value: DDN.System.Drawing.DNColor);
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_CustomFormat: string;
    procedure set_CustomFormat(value: string);
    function get_DropDownAlign: DNLeftRightAlignment;
    procedure set_DropDownAlign(value: DNLeftRightAlignment);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Format: DNDateTimePickerFormat;
    procedure set_Format(value: DNDateTimePickerFormat);
    function get_MaxDate: DDN.mscorlib.DNDateTime;
    procedure set_MaxDate(value: DDN.mscorlib.DNDateTime);
    function get_MinDate: DDN.mscorlib.DNDateTime;
    procedure set_MinDate(value: DDN.mscorlib.DNDateTime);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_ShowCheckBox: Boolean;
    procedure set_ShowCheckBox(value: Boolean);
    function get_ShowUpDown: Boolean;
    procedure set_ShowUpDown(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Value: DDN.mscorlib.DNDateTime;
    procedure set_Value(value: DDN.mscorlib.DNDateTime);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormatChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CloseUp(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CloseUp(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property CalendarForeColor: DDN.System.Drawing.DNColor read get_CalendarForeColor write set_CalendarForeColor;
    property CalendarFont: DDN.System.Drawing.DNFont read get_CalendarFont write set_CalendarFont;
    property CalendarTitleBackColor: DDN.System.Drawing.DNColor read get_CalendarTitleBackColor write set_CalendarTitleBackColor;
    property CalendarTitleForeColor: DDN.System.Drawing.DNColor read get_CalendarTitleForeColor write set_CalendarTitleForeColor;
    property CalendarTrailingForeColor: DDN.System.Drawing.DNColor read get_CalendarTrailingForeColor write set_CalendarTrailingForeColor;
    property CalendarMonthBackground: DDN.System.Drawing.DNColor read get_CalendarMonthBackground write set_CalendarMonthBackground;
    property Checked: Boolean read get_Checked write set_Checked;
    property CustomFormat: string read get_CustomFormat write set_CustomFormat;
    property DropDownAlign: DNLeftRightAlignment read get_DropDownAlign write set_DropDownAlign;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Format: DNDateTimePickerFormat read get_Format write set_Format;
    property MaxDate: DDN.mscorlib.DNDateTime read get_MaxDate write set_MaxDate;
    property MinDate: DDN.mscorlib.DNDateTime read get_MinDate write set_MinDate;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property ShowCheckBox: Boolean read get_ShowCheckBox write set_ShowCheckBox;
    property ShowUpDown: Boolean read get_ShowUpDown write set_ShowUpDown;
    property Text: string read get_Text write set_Text;
    property Value: DDN.mscorlib.DNDateTime read get_Value write set_Value;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDateTimePicker = class(TDNGenericImport<DNDateTimePickerClass, DNDateTimePicker>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGroupBoxClass = interface(DNControlClass)
  ['{8572BCFF-2319-52C4-AC09-6F1EBF931CAC}']
  { constructors } 

    {class} function init: DNGroupBox;

  end;

  [DNTypeName('System.Windows.Forms.GroupBox')]
  DNGroupBox = interface(DNControl)
  ['{C5CD51C2-EE05-358A-9B53-07F9060E435F}']
  { getters & setters } 

    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNGroupBox = class(TDNGenericImport<DNGroupBoxClass, DNGroupBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLabelClass = interface(DNControlClass)
  ['{F25ED550-1004-595F-B4D0-C972AD04599D}']
  { constructors } 

    {class} function init: DNLabel;

  end;

  [DNTypeName('System.Windows.Forms.Label')]
  DNLabel = interface(DNControl)
  ['{93D7475B-94A4-3C10-92E6-FD64BBE5745F}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoEllipsis: Boolean;
    procedure set_AutoEllipsis(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_LiveSetting: DNAutomationLiveSetting;
    procedure set_LiveSetting(value: DNAutomationLiveSetting);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_PreferredHeight: Int32;
    function get_PreferredWidth: Int32;
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_UseMnemonic: Boolean;
    procedure set_UseMnemonic(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function ToString: string;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoEllipsis: Boolean read get_AutoEllipsis write set_AutoEllipsis;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property LiveSetting: DNAutomationLiveSetting read get_LiveSetting write set_LiveSetting;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property PreferredWidth: Int32 read get_PreferredWidth;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property Text: string read get_Text write set_Text;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property UseMnemonic: Boolean read get_UseMnemonic write set_UseMnemonic;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNLabel = class(TDNGenericImport<DNLabelClass, DNLabel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkLabelClass = interface(DNLabelClass)
  ['{A1394DEA-2C33-56D3-9CB8-A9045EC0A3F9}']
  { constructors } 

    {class} function init: DNLinkLabel;

  end;

  [DNTypeName('System.Windows.Forms.LinkLabel')]
  DNLinkLabel = interface(DNLabel)
  ['{C116EE15-015E-3760-92F9-59C2D99236F1}']
  { getters & setters } 

    function get_ActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_ActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_DisabledLinkColor: DDN.System.Drawing.DNColor;
    procedure set_DisabledLinkColor(value: DDN.System.Drawing.DNColor);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_LinkArea: DNLinkArea;
    procedure set_LinkArea(value: DNLinkArea);
    function get_LinkBehavior: DNLinkBehavior;
    procedure set_LinkBehavior(value: DNLinkBehavior);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_Links: DNLinkLabel_LinkCollection;
    function get_LinkVisited: Boolean;
    procedure set_LinkVisited(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_VisitedLinkColor: DDN.System.Drawing.DNColor;
    procedure set_VisitedLinkColor(value: DDN.System.Drawing.DNColor);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoEllipsis: Boolean;
    procedure set_AutoEllipsis(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_LiveSetting: DNAutomationLiveSetting;
    procedure set_LiveSetting(value: DNAutomationLiveSetting);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_PreferredHeight: Int32;
    function get_PreferredWidth: Int32;
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_UseMnemonic: Boolean;
    procedure set_UseMnemonic(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LinkClicked(value: DNLinkLabelLinkClickedEventHandler);
    procedure remove_LinkClicked(value: DNLinkLabelLinkClickedEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function ToString: string;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ActiveLinkColor: DDN.System.Drawing.DNColor read get_ActiveLinkColor write set_ActiveLinkColor;
    property DisabledLinkColor: DDN.System.Drawing.DNColor read get_DisabledLinkColor write set_DisabledLinkColor;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property LinkArea: DNLinkArea read get_LinkArea write set_LinkArea;
    property LinkBehavior: DNLinkBehavior read get_LinkBehavior write set_LinkBehavior;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property Links: DNLinkLabel_LinkCollection read get_Links;
    property LinkVisited: Boolean read get_LinkVisited write set_LinkVisited;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property Padding: DNPadding read get_Padding write set_Padding;
    property VisitedLinkColor: DDN.System.Drawing.DNColor read get_VisitedLinkColor write set_VisitedLinkColor;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoEllipsis: Boolean read get_AutoEllipsis write set_AutoEllipsis;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property LiveSetting: DNAutomationLiveSetting read get_LiveSetting write set_LiveSetting;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property PreferredWidth: Int32 read get_PreferredWidth;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property UseMnemonic: Boolean read get_UseMnemonic write set_UseMnemonic;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNLinkLabel = class(TDNGenericImport<DNLinkLabelClass, DNLinkLabel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListControlClass = interface(DNControlClass)
  ['{4223BF03-C11A-52A5-911C-FBBBC6241997}']
  end;

  [DNTypeName('System.Windows.Forms.ListControl')]
  DNListControl = interface(DNControl)
  ['{63E13B8A-0FD1-33BD-AEA2-4283D081657B}']
  { getters & setters } 

    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_FormatString: string;
    procedure set_FormatString(value: string);
    function get_FormattingEnabled: Boolean;
    procedure set_FormattingEnabled(value: Boolean);
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedValue: DDN.mscorlib.DNObject;
    procedure set_SelectedValue(value: DDN.mscorlib.DNObject);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Format(value: DNListControlConvertEventHandler);
    procedure remove_Format(value: DNListControlConvertEventHandler);
    procedure add_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetItemText(item: DDN.mscorlib.DNObject): string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property FormatString: string read get_FormatString write set_FormatString;
    property FormattingEnabled: Boolean read get_FormattingEnabled write set_FormattingEnabled;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedValue: DDN.mscorlib.DNObject read get_SelectedValue write set_SelectedValue;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNListControl = class(TDNGenericImport<DNListControlClass, DNListControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNComboBoxClass = interface(DNListControlClass)
  ['{4F0E6539-FFB5-5AE7-81B3-5259F70706D9}']
  { constructors } 

    {class} function init: DNComboBox;

  end;

  [DNTypeName('System.Windows.Forms.ComboBox')]
  DNComboBox = interface(DNListControl)
  ['{FE644CA9-E687-308B-AF40-1D0CFABD2AD8}']
  { getters & setters } 

    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DrawMode: DNDrawMode;
    procedure set_DrawMode(value: DNDrawMode);
    function get_DropDownWidth: Int32;
    procedure set_DropDownWidth(value: Int32);
    function get_DropDownHeight: Int32;
    procedure set_DropDownHeight(value: Int32);
    function get_DroppedDown: Boolean;
    procedure set_DroppedDown(value: Boolean);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_IntegralHeight: Boolean;
    procedure set_IntegralHeight(value: Boolean);
    function get_ItemHeight: Int32;
    procedure set_ItemHeight(value: Int32);
    function get_Items: DNComboBox_ObjectCollection;
    function get_MaxDropDownItems: Int32;
    procedure set_MaxDropDownItems(value: Int32);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedItem: DDN.mscorlib.DNObject;
    procedure set_SelectedItem(value: DDN.mscorlib.DNObject);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_DropDownStyle: DNComboBoxStyle;
    procedure set_DropDownStyle(value: DNComboBoxStyle);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_FormatString: string;
    procedure set_FormatString(value: string);
    function get_FormattingEnabled: Boolean;
    procedure set_FormattingEnabled(value: Boolean);
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_SelectedValue: DDN.mscorlib.DNObject;
    procedure set_SelectedValue(value: DDN.mscorlib.DNObject);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DrawItem(value: DNDrawItemEventHandler);
    procedure remove_DrawItem(value: DNDrawItemEventHandler);
    procedure add_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure add_MeasureItem(value: DNMeasureItemEventHandler);
    procedure remove_MeasureItem(value: DNMeasureItemEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectionChangeCommitted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectionChangeCommitted(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_TextUpdate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextUpdate(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Format(value: DNListControlConvertEventHandler);
    procedure remove_Format(value: DNListControlConvertEventHandler);
    procedure add_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetText;
    procedure BeginUpdate;
    procedure EndUpdate;
    function FindString(s: string): Int32; overload;
    function FindString(s: string; startIndex: Int32): Int32; overload;
    function FindStringExact(s: string): Int32; overload;
    function FindStringExact(s: string; startIndex: Int32): Int32; overload;
    function GetItemHeight(index: Int32): Int32;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    function GetItemText(item: DDN.mscorlib.DNObject): string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DrawMode: DNDrawMode read get_DrawMode write set_DrawMode;
    property DropDownWidth: Int32 read get_DropDownWidth write set_DropDownWidth;
    property DropDownHeight: Int32 read get_DropDownHeight write set_DropDownHeight;
    property DroppedDown: Boolean read get_DroppedDown write set_DroppedDown;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property IntegralHeight: Boolean read get_IntegralHeight write set_IntegralHeight;
    property ItemHeight: Int32 read get_ItemHeight write set_ItemHeight;
    property Items: DNComboBox_ObjectCollection read get_Items;
    property MaxDropDownItems: Int32 read get_MaxDropDownItems write set_MaxDropDownItems;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedItem: DDN.mscorlib.DNObject read get_SelectedItem write set_SelectedItem;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property DropDownStyle: DNComboBoxStyle read get_DropDownStyle write set_DropDownStyle;
    property Text: string read get_Text write set_Text;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property FormatString: string read get_FormatString write set_FormatString;
    property FormattingEnabled: Boolean read get_FormattingEnabled write set_FormattingEnabled;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property SelectedValue: DDN.mscorlib.DNObject read get_SelectedValue write set_SelectedValue;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNComboBox = class(TDNGenericImport<DNComboBoxClass, DNComboBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewComboBoxEditingControlClass = interface(DNComboBoxClass)
  ['{533F32BD-4516-559C-9F7E-29DCEE10053E}']
  { constructors } 

    {class} function init: DNDataGridViewComboBoxEditingControl;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewComboBoxEditingControl')]
  DNDataGridViewComboBoxEditingControl = interface(DNComboBox)
  ['{82596187-3FA3-3CFF-A0CD-151C3598597C}']
  { getters & setters } 

    function get_EditingControlDataGridView: DNDataGridView;
    procedure set_EditingControlDataGridView(value: DNDataGridView);
    function get_EditingControlFormattedValue: DDN.mscorlib.DNObject;
    procedure set_EditingControlFormattedValue(value: DDN.mscorlib.DNObject);
    function get_EditingControlRowIndex: Int32;
    procedure set_EditingControlRowIndex(value: Int32);
    function get_EditingControlValueChanged: Boolean;
    procedure set_EditingControlValueChanged(value: Boolean);
    function get_EditingPanelCursor: DNCursor;
    function get_RepositionEditingControlOnValueChange: Boolean;
    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DrawMode: DNDrawMode;
    procedure set_DrawMode(value: DNDrawMode);
    function get_DropDownWidth: Int32;
    procedure set_DropDownWidth(value: Int32);
    function get_DropDownHeight: Int32;
    procedure set_DropDownHeight(value: Int32);
    function get_DroppedDown: Boolean;
    procedure set_DroppedDown(value: Boolean);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_IntegralHeight: Boolean;
    procedure set_IntegralHeight(value: Boolean);
    function get_ItemHeight: Int32;
    procedure set_ItemHeight(value: Int32);
    function get_Items: DNComboBox_ObjectCollection;
    function get_MaxDropDownItems: Int32;
    procedure set_MaxDropDownItems(value: Int32);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedItem: DDN.mscorlib.DNObject;
    procedure set_SelectedItem(value: DDN.mscorlib.DNObject);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_DropDownStyle: DNComboBoxStyle;
    procedure set_DropDownStyle(value: DNComboBoxStyle);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_FormatString: string;
    procedure set_FormatString(value: string);
    function get_FormattingEnabled: Boolean;
    procedure set_FormattingEnabled(value: Boolean);
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_SelectedValue: DDN.mscorlib.DNObject;
    procedure set_SelectedValue(value: DDN.mscorlib.DNObject);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DrawItem(value: DNDrawItemEventHandler);
    procedure remove_DrawItem(value: DNDrawItemEventHandler);
    procedure add_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure add_MeasureItem(value: DNMeasureItemEventHandler);
    procedure remove_MeasureItem(value: DNMeasureItemEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectionChangeCommitted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectionChangeCommitted(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_TextUpdate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextUpdate(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Format(value: DNListControlConvertEventHandler);
    procedure remove_Format(value: DNListControlConvertEventHandler);
    procedure add_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ApplyCellStyleToEditingControl(dataGridViewCellStyle: DNDataGridViewCellStyle);
    function EditingControlWantsInputKey(keyData: DNKeys; dataGridViewWantsInputKey: Boolean): Boolean;
    function GetEditingControlFormattedValue(context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure PrepareEditingControlForEdit(selectAll: Boolean);
    procedure ResetText;
    procedure BeginUpdate;
    procedure EndUpdate;
    function FindString(s: string): Int32; overload;
    function FindString(s: string; startIndex: Int32): Int32; overload;
    function FindStringExact(s: string): Int32; overload;
    function FindStringExact(s: string; startIndex: Int32): Int32; overload;
    function GetItemHeight(index: Int32): Int32;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    function GetItemText(item: DDN.mscorlib.DNObject): string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property EditingControlDataGridView: DNDataGridView read get_EditingControlDataGridView write set_EditingControlDataGridView;
    property EditingControlFormattedValue: DDN.mscorlib.DNObject read get_EditingControlFormattedValue write set_EditingControlFormattedValue;
    property EditingControlRowIndex: Int32 read get_EditingControlRowIndex write set_EditingControlRowIndex;
    property EditingControlValueChanged: Boolean read get_EditingControlValueChanged write set_EditingControlValueChanged;
    property EditingPanelCursor: DNCursor read get_EditingPanelCursor;
    property RepositionEditingControlOnValueChange: Boolean read get_RepositionEditingControlOnValueChange;
    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DrawMode: DNDrawMode read get_DrawMode write set_DrawMode;
    property DropDownWidth: Int32 read get_DropDownWidth write set_DropDownWidth;
    property DropDownHeight: Int32 read get_DropDownHeight write set_DropDownHeight;
    property DroppedDown: Boolean read get_DroppedDown write set_DroppedDown;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property IntegralHeight: Boolean read get_IntegralHeight write set_IntegralHeight;
    property ItemHeight: Int32 read get_ItemHeight write set_ItemHeight;
    property Items: DNComboBox_ObjectCollection read get_Items;
    property MaxDropDownItems: Int32 read get_MaxDropDownItems write set_MaxDropDownItems;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedItem: DDN.mscorlib.DNObject read get_SelectedItem write set_SelectedItem;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property DropDownStyle: DNComboBoxStyle read get_DropDownStyle write set_DropDownStyle;
    property Text: string read get_Text write set_Text;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property FormatString: string read get_FormatString write set_FormatString;
    property FormattingEnabled: Boolean read get_FormattingEnabled write set_FormattingEnabled;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property SelectedValue: DDN.mscorlib.DNObject read get_SelectedValue write set_SelectedValue;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridViewComboBoxEditingControl = class(TDNGenericImport<DNDataGridViewComboBoxEditingControlClass, DNDataGridViewComboBoxEditingControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBoxClass = interface(DNListControlClass)
  ['{10A8AA47-4F9D-5FC5-88CC-EEED08BBBB38}']
  { constructors } 

    {class} function init: DNListBox;

  end;

  [DNTypeName('System.Windows.Forms.ListBox')]
  DNListBox = interface(DNListControl)
  ['{D7AC7195-477C-3ABA-BA10-6CF8BE334A86}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_ColumnWidth: Int32;
    procedure set_ColumnWidth(value: Int32);
    function get_UseCustomTabOffsets: Boolean;
    procedure set_UseCustomTabOffsets(value: Boolean);
    function get_DrawMode: DNDrawMode;
    procedure set_DrawMode(value: DNDrawMode);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HorizontalExtent: Int32;
    procedure set_HorizontalExtent(value: Int32);
    function get_HorizontalScrollbar: Boolean;
    procedure set_HorizontalScrollbar(value: Boolean);
    function get_IntegralHeight: Boolean;
    procedure set_IntegralHeight(value: Boolean);
    function get_ItemHeight: Int32;
    procedure set_ItemHeight(value: Int32);
    function get_Items: DNListBox_ObjectCollection;
    function get_MultiColumn: Boolean;
    procedure set_MultiColumn(value: Boolean);
    function get_PreferredHeight: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_ScrollAlwaysVisible: Boolean;
    procedure set_ScrollAlwaysVisible(value: Boolean);
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedIndices: DNListBox_SelectedIndexCollection;
    function get_SelectedItem: DDN.mscorlib.DNObject;
    procedure set_SelectedItem(value: DDN.mscorlib.DNObject);
    function get_SelectedItems: DNListBox_SelectedObjectCollection;
    function get_SelectionMode: DNSelectionMode;
    procedure set_SelectionMode(value: DNSelectionMode);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TopIndex: Int32;
    procedure set_TopIndex(value: Int32);
    function get_UseTabStops: Boolean;
    procedure set_UseTabStops(value: Boolean);
    function get_CustomTabOffsets: DNListBox_IntegerCollection;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_FormatString: string;
    procedure set_FormatString(value: string);
    function get_FormattingEnabled: Boolean;
    procedure set_FormattingEnabled(value: Boolean);
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_SelectedValue: DDN.mscorlib.DNObject;
    procedure set_SelectedValue(value: DDN.mscorlib.DNObject);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_DrawItem(value: DNDrawItemEventHandler);
    procedure remove_DrawItem(value: DNDrawItemEventHandler);
    procedure add_MeasureItem(value: DNMeasureItemEventHandler);
    procedure remove_MeasureItem(value: DNMeasureItemEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Format(value: DNListControlConvertEventHandler);
    procedure remove_Format(value: DNListControlConvertEventHandler);
    procedure add_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginUpdate;
    procedure EndUpdate;
    procedure Refresh;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ClearSelected;
    function FindString(s: string): Int32; overload;
    function FindString(s: string; startIndex: Int32): Int32; overload;
    function FindStringExact(s: string): Int32; overload;
    function FindStringExact(s: string; startIndex: Int32): Int32; overload;
    function GetItemHeight(index: Int32): Int32;
    function GetItemRectangle(index: Int32): DDN.System.Drawing.DNRectangle;
    function GetSelected(index: Int32): Boolean;
    function IndexFromPoint(p: DDN.System.Drawing.DNPoint): Int32; overload;
    function IndexFromPoint(x: Int32; y: Int32): Int32; overload;
    procedure SetSelected(index: Int32; value: Boolean);
    function ToString: string;
    function GetItemText(item: DDN.mscorlib.DNObject): string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property ColumnWidth: Int32 read get_ColumnWidth write set_ColumnWidth;
    property UseCustomTabOffsets: Boolean read get_UseCustomTabOffsets write set_UseCustomTabOffsets;
    property DrawMode: DNDrawMode read get_DrawMode write set_DrawMode;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HorizontalExtent: Int32 read get_HorizontalExtent write set_HorizontalExtent;
    property HorizontalScrollbar: Boolean read get_HorizontalScrollbar write set_HorizontalScrollbar;
    property IntegralHeight: Boolean read get_IntegralHeight write set_IntegralHeight;
    property ItemHeight: Int32 read get_ItemHeight write set_ItemHeight;
    property Items: DNListBox_ObjectCollection read get_Items;
    property MultiColumn: Boolean read get_MultiColumn write set_MultiColumn;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property ScrollAlwaysVisible: Boolean read get_ScrollAlwaysVisible write set_ScrollAlwaysVisible;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedIndices: DNListBox_SelectedIndexCollection read get_SelectedIndices;
    property SelectedItem: DDN.mscorlib.DNObject read get_SelectedItem write set_SelectedItem;
    property SelectedItems: DNListBox_SelectedObjectCollection read get_SelectedItems;
    property SelectionMode: DNSelectionMode read get_SelectionMode write set_SelectionMode;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property Text: string read get_Text write set_Text;
    property TopIndex: Int32 read get_TopIndex write set_TopIndex;
    property UseTabStops: Boolean read get_UseTabStops write set_UseTabStops;
    property CustomTabOffsets: DNListBox_IntegerCollection read get_CustomTabOffsets;
    property Padding: DNPadding read get_Padding write set_Padding;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property FormatString: string read get_FormatString write set_FormatString;
    property FormattingEnabled: Boolean read get_FormattingEnabled write set_FormattingEnabled;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property SelectedValue: DDN.mscorlib.DNObject read get_SelectedValue write set_SelectedValue;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNListBox = class(TDNGenericImport<DNListBoxClass, DNListBox>)
  public const
   NoMatches = -1;
   DefaultItemHeight = 13;
  end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckedListBoxClass = interface(DNListBoxClass)
  ['{580F6D71-0C3D-5FBF-AADF-54AFE5D90C6A}']
  { constructors } 

    {class} function init: DNCheckedListBox;

  end;

  [DNTypeName('System.Windows.Forms.CheckedListBox')]
  DNCheckedListBox = interface(DNListBox)
  ['{D8004AA1-697A-30C4-869E-F8F82595E05A}']
  { getters & setters } 

    function get_CheckOnClick: Boolean;
    procedure set_CheckOnClick(value: Boolean);
    function get_CheckedIndices: DNCheckedListBox_CheckedIndexCollection;
    function get_CheckedItems: DNCheckedListBox_CheckedItemCollection;
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_DrawMode: DNDrawMode;
    procedure set_DrawMode(value: DNDrawMode);
    function get_ItemHeight: Int32;
    procedure set_ItemHeight(value: Int32);
    function get_Items: DNCheckedListBox_ObjectCollection;
    function get_SelectionMode: DNSelectionMode;
    procedure set_SelectionMode(value: DNSelectionMode);
    function get_ThreeDCheckBoxes: Boolean;
    procedure set_ThreeDCheckBoxes(value: Boolean);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_ColumnWidth: Int32;
    procedure set_ColumnWidth(value: Int32);
    function get_UseCustomTabOffsets: Boolean;
    procedure set_UseCustomTabOffsets(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HorizontalExtent: Int32;
    procedure set_HorizontalExtent(value: Int32);
    function get_HorizontalScrollbar: Boolean;
    procedure set_HorizontalScrollbar(value: Boolean);
    function get_IntegralHeight: Boolean;
    procedure set_IntegralHeight(value: Boolean);
    function get_MultiColumn: Boolean;
    procedure set_MultiColumn(value: Boolean);
    function get_PreferredHeight: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_ScrollAlwaysVisible: Boolean;
    procedure set_ScrollAlwaysVisible(value: Boolean);
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedIndices: DNListBox_SelectedIndexCollection;
    function get_SelectedItem: DDN.mscorlib.DNObject;
    procedure set_SelectedItem(value: DDN.mscorlib.DNObject);
    function get_SelectedItems: DNListBox_SelectedObjectCollection;
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TopIndex: Int32;
    procedure set_TopIndex(value: Int32);
    function get_UseTabStops: Boolean;
    procedure set_UseTabStops(value: Boolean);
    function get_CustomTabOffsets: DNListBox_IntegerCollection;
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_FormatString: string;
    procedure set_FormatString(value: string);
    function get_FormattingEnabled: Boolean;
    procedure set_FormattingEnabled(value: Boolean);
    function get_SelectedValue: DDN.mscorlib.DNObject;
    procedure set_SelectedValue(value: DDN.mscorlib.DNObject);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DataSourceChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemCheck(value: DNItemCheckEventHandler);
    procedure remove_ItemCheck(value: DNItemCheckEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_DrawItem(value: DNDrawItemEventHandler);
    procedure remove_DrawItem(value: DNDrawItemEventHandler);
    procedure add_MeasureItem(value: DNMeasureItemEventHandler);
    procedure remove_MeasureItem(value: DNMeasureItemEventHandler);
    procedure add_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueMemberChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Format(value: DNListControlConvertEventHandler);
    procedure remove_Format(value: DNListControlConvertEventHandler);
    procedure add_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatInfoChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormatStringChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FormattingEnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetItemCheckState(index: Int32): DNCheckState;
    function GetItemChecked(index: Int32): Boolean;
    procedure SetItemCheckState(index: Int32; value: DNCheckState);
    procedure SetItemChecked(index: Int32; value: Boolean);
    procedure BeginUpdate;
    procedure EndUpdate;
    procedure Refresh;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ClearSelected;
    function FindString(s: string): Int32; overload;
    function FindString(s: string; startIndex: Int32): Int32; overload;
    function FindStringExact(s: string): Int32; overload;
    function FindStringExact(s: string; startIndex: Int32): Int32; overload;
    function GetItemHeight(index: Int32): Int32;
    function GetItemRectangle(index: Int32): DDN.System.Drawing.DNRectangle;
    function GetSelected(index: Int32): Boolean;
    function IndexFromPoint(p: DDN.System.Drawing.DNPoint): Int32; overload;
    function IndexFromPoint(x: Int32; y: Int32): Int32; overload;
    procedure SetSelected(index: Int32; value: Boolean);
    function ToString: string;
    function GetItemText(item: DDN.mscorlib.DNObject): string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CheckOnClick: Boolean read get_CheckOnClick write set_CheckOnClick;
    property CheckedIndices: DNCheckedListBox_CheckedIndexCollection read get_CheckedIndices;
    property CheckedItems: DNCheckedListBox_CheckedItemCollection read get_CheckedItems;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property DrawMode: DNDrawMode read get_DrawMode write set_DrawMode;
    property ItemHeight: Int32 read get_ItemHeight write set_ItemHeight;
    property Items: DNCheckedListBox_ObjectCollection read get_Items;
    property SelectionMode: DNSelectionMode read get_SelectionMode write set_SelectionMode;
    property ThreeDCheckBoxes: Boolean read get_ThreeDCheckBoxes write set_ThreeDCheckBoxes;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property Padding: DNPadding read get_Padding write set_Padding;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property ColumnWidth: Int32 read get_ColumnWidth write set_ColumnWidth;
    property UseCustomTabOffsets: Boolean read get_UseCustomTabOffsets write set_UseCustomTabOffsets;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HorizontalExtent: Int32 read get_HorizontalExtent write set_HorizontalExtent;
    property HorizontalScrollbar: Boolean read get_HorizontalScrollbar write set_HorizontalScrollbar;
    property IntegralHeight: Boolean read get_IntegralHeight write set_IntegralHeight;
    property MultiColumn: Boolean read get_MultiColumn write set_MultiColumn;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property ScrollAlwaysVisible: Boolean read get_ScrollAlwaysVisible write set_ScrollAlwaysVisible;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedIndices: DNListBox_SelectedIndexCollection read get_SelectedIndices;
    property SelectedItem: DDN.mscorlib.DNObject read get_SelectedItem write set_SelectedItem;
    property SelectedItems: DNListBox_SelectedObjectCollection read get_SelectedItems;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property Text: string read get_Text write set_Text;
    property TopIndex: Int32 read get_TopIndex write set_TopIndex;
    property UseTabStops: Boolean read get_UseTabStops write set_UseTabStops;
    property CustomTabOffsets: DNListBox_IntegerCollection read get_CustomTabOffsets;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property FormatString: string read get_FormatString write set_FormatString;
    property FormattingEnabled: Boolean read get_FormattingEnabled write set_FormattingEnabled;
    property SelectedValue: DDN.mscorlib.DNObject read get_SelectedValue write set_SelectedValue;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNCheckedListBox = class(TDNGenericImport<DNCheckedListBoxClass, DNCheckedListBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewClass = interface(DNControlClass)
  ['{0159E89D-BEEE-59C4-8864-D0C4BAED576F}']
  { constructors } 

    {class} function init: DNListView;

  end;

  [DNTypeName('System.Windows.Forms.ListView')]
  DNListView = interface(DNControl)
  ['{53DCAC10-BF48-3670-BE8A-7E38FF839C71}']
  { getters & setters } 

    function get_Activation: DNItemActivation;
    procedure set_Activation(value: DNItemActivation);
    function get_Alignment: DNListViewAlignment;
    procedure set_Alignment(value: DNListViewAlignment);
    function get_AllowColumnReorder: Boolean;
    procedure set_AllowColumnReorder(value: Boolean);
    function get_AutoArrange: Boolean;
    procedure set_AutoArrange(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackgroundImageTiled: Boolean;
    procedure set_BackgroundImageTiled(value: Boolean);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CheckBoxes: Boolean;
    procedure set_CheckBoxes(value: Boolean);
    function get_CheckedIndices: DNListView_CheckedIndexCollection;
    function get_CheckedItems: DNListView_CheckedListViewItemCollection;
    function get_Columns: DNListView_ColumnHeaderCollection;
    function get_FocusedItem: DNListViewItem;
    procedure set_FocusedItem(value: DNListViewItem);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_FullRowSelect: Boolean;
    procedure set_FullRowSelect(value: Boolean);
    function get_GridLines: Boolean;
    procedure set_GridLines(value: Boolean);
    function get_Groups: DNListViewGroupCollection;
    function get_HeaderStyle: DNColumnHeaderStyle;
    procedure set_HeaderStyle(value: DNColumnHeaderStyle);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_HotTracking: Boolean;
    procedure set_HotTracking(value: Boolean);
    function get_HoverSelection: Boolean;
    procedure set_HoverSelection(value: Boolean);
    function get_InsertionMark: DNListViewInsertionMark;
    function get_Items: DNListView_ListViewItemCollection;
    function get_LabelEdit: Boolean;
    procedure set_LabelEdit(value: Boolean);
    function get_LabelWrap: Boolean;
    procedure set_LabelWrap(value: Boolean);
    function get_LargeImageList: DNImageList;
    procedure set_LargeImageList(value: DNImageList);
    function get_ListViewItemSorter: DDN.mscorlib.DNIComparer;
    procedure set_ListViewItemSorter(value: DDN.mscorlib.DNIComparer);
    function get_MultiSelect: Boolean;
    procedure set_MultiSelect(value: Boolean);
    function get_OwnerDraw: Boolean;
    procedure set_OwnerDraw(value: Boolean);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_Scrollable: Boolean;
    procedure set_Scrollable(value: Boolean);
    function get_SelectedIndices: DNListView_SelectedIndexCollection;
    function get_SelectedItems: DNListView_SelectedListViewItemCollection;
    function get_ShowGroups: Boolean;
    procedure set_ShowGroups(value: Boolean);
    function get_SmallImageList: DNImageList;
    procedure set_SmallImageList(value: DNImageList);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_Sorting: DNSortOrder;
    procedure set_Sorting(value: DNSortOrder);
    function get_StateImageList: DNImageList;
    procedure set_StateImageList(value: DNImageList);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TileSize: DDN.System.Drawing.DNSize;
    procedure set_TileSize(value: DDN.System.Drawing.DNSize);
    function get_TopItem: DNListViewItem;
    procedure set_TopItem(value: DNListViewItem);
    function get_UseCompatibleStateImageBehavior: Boolean;
    procedure set_UseCompatibleStateImageBehavior(value: Boolean);
    function get_View: DNView;
    procedure set_View(value: DNView);
    function get_VirtualListSize: Int32;
    procedure set_VirtualListSize(value: Int32);
    function get_VirtualMode: Boolean;
    procedure set_VirtualMode(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AfterLabelEdit(value: DNLabelEditEventHandler);
    procedure remove_AfterLabelEdit(value: DNLabelEditEventHandler);
    procedure add_BeforeLabelEdit(value: DNLabelEditEventHandler);
    procedure remove_BeforeLabelEdit(value: DNLabelEditEventHandler);
    procedure add_CacheVirtualItems(value: DNCacheVirtualItemsEventHandler);
    procedure remove_CacheVirtualItems(value: DNCacheVirtualItemsEventHandler);
    procedure add_ColumnClick(value: DNColumnClickEventHandler);
    procedure remove_ColumnClick(value: DNColumnClickEventHandler);
    procedure add_ColumnReordered(value: DNColumnReorderedEventHandler);
    procedure remove_ColumnReordered(value: DNColumnReorderedEventHandler);
    procedure add_ColumnWidthChanged(value: DNColumnWidthChangedEventHandler);
    procedure remove_ColumnWidthChanged(value: DNColumnWidthChangedEventHandler);
    procedure add_ColumnWidthChanging(value: DNColumnWidthChangingEventHandler);
    procedure remove_ColumnWidthChanging(value: DNColumnWidthChangingEventHandler);
    procedure add_DrawColumnHeader(value: DNDrawListViewColumnHeaderEventHandler);
    procedure remove_DrawColumnHeader(value: DNDrawListViewColumnHeaderEventHandler);
    procedure add_DrawItem(value: DNDrawListViewItemEventHandler);
    procedure remove_DrawItem(value: DNDrawListViewItemEventHandler);
    procedure add_DrawSubItem(value: DNDrawListViewSubItemEventHandler);
    procedure remove_DrawSubItem(value: DNDrawListViewSubItemEventHandler);
    procedure add_ItemActivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ItemActivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemCheck(value: DNItemCheckEventHandler);
    procedure remove_ItemCheck(value: DNItemCheckEventHandler);
    procedure add_ItemChecked(value: DNItemCheckedEventHandler);
    procedure remove_ItemChecked(value: DNItemCheckedEventHandler);
    procedure add_ItemDrag(value: DNItemDragEventHandler);
    procedure remove_ItemDrag(value: DNItemDragEventHandler);
    procedure add_ItemMouseHover(value: DNListViewItemMouseHoverEventHandler);
    procedure remove_ItemMouseHover(value: DNListViewItemMouseHoverEventHandler);
    procedure add_ItemSelectionChanged(value: DNListViewItemSelectionChangedEventHandler);
    procedure remove_ItemSelectionChanged(value: DNListViewItemSelectionChangedEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_RetrieveVirtualItem(value: DNRetrieveVirtualItemEventHandler);
    procedure remove_RetrieveVirtualItem(value: DNRetrieveVirtualItemEventHandler);
    procedure add_SearchForVirtualItem(value: DNSearchForVirtualItemEventHandler);
    procedure remove_SearchForVirtualItem(value: DNSearchForVirtualItemEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VirtualItemsSelectionRangeChanged(value: DNListViewVirtualItemsSelectionRangeChangedEventHandler);
    procedure remove_VirtualItemsSelectionRangeChanged(value: DNListViewVirtualItemsSelectionRangeChangedEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ArrangeIcons(value: DNListViewAlignment); overload;
    procedure ArrangeIcons; overload;
    procedure AutoResizeColumns(headerAutoResize: DNColumnHeaderAutoResizeStyle);
    procedure AutoResizeColumn(columnIndex: Int32; headerAutoResize: DNColumnHeaderAutoResizeStyle);
    procedure BeginUpdate;
    procedure Clear;
    procedure EndUpdate;
    procedure EnsureVisible(index: Int32);
    function FindItemWithText(text: string): DNListViewItem; overload;
    function FindItemWithText(text: string; includeSubItemsInSearch: Boolean; startIndex: Int32): DNListViewItem; overload;
    function FindItemWithText(text: string; includeSubItemsInSearch: Boolean; startIndex: Int32; isPrefixSearch: Boolean): DNListViewItem; overload;
    function FindNearestItem(dir: DNSearchDirectionHint; point: DDN.System.Drawing.DNPoint): DNListViewItem; overload;
    function FindNearestItem(searchDirection: DNSearchDirectionHint; x: Int32; y: Int32): DNListViewItem; overload;
    function GetItemAt(x: Int32; y: Int32): DNListViewItem;
    function GetItemRect(index: Int32): DDN.System.Drawing.DNRectangle; overload;
    function GetItemRect(index: Int32; portion: DNItemBoundsPortion): DDN.System.Drawing.DNRectangle; overload;
    function HitTest(point: DDN.System.Drawing.DNPoint): DNListViewHitTestInfo; overload;
    function HitTest(x: Int32; y: Int32): DNListViewHitTestInfo; overload;
    procedure RedrawItems(startIndex: Int32; endIndex: Int32; invalidateOnly: Boolean);
    procedure Sort;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Activation: DNItemActivation read get_Activation write set_Activation;
    property Alignment: DNListViewAlignment read get_Alignment write set_Alignment;
    property AllowColumnReorder: Boolean read get_AllowColumnReorder write set_AllowColumnReorder;
    property AutoArrange: Boolean read get_AutoArrange write set_AutoArrange;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackgroundImageTiled: Boolean read get_BackgroundImageTiled write set_BackgroundImageTiled;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CheckBoxes: Boolean read get_CheckBoxes write set_CheckBoxes;
    property CheckedIndices: DNListView_CheckedIndexCollection read get_CheckedIndices;
    property CheckedItems: DNListView_CheckedListViewItemCollection read get_CheckedItems;
    property Columns: DNListView_ColumnHeaderCollection read get_Columns;
    property FocusedItem: DNListViewItem read get_FocusedItem write set_FocusedItem;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property FullRowSelect: Boolean read get_FullRowSelect write set_FullRowSelect;
    property GridLines: Boolean read get_GridLines write set_GridLines;
    property Groups: DNListViewGroupCollection read get_Groups;
    property HeaderStyle: DNColumnHeaderStyle read get_HeaderStyle write set_HeaderStyle;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property HotTracking: Boolean read get_HotTracking write set_HotTracking;
    property HoverSelection: Boolean read get_HoverSelection write set_HoverSelection;
    property InsertionMark: DNListViewInsertionMark read get_InsertionMark;
    property Items: DNListView_ListViewItemCollection read get_Items;
    property LabelEdit: Boolean read get_LabelEdit write set_LabelEdit;
    property LabelWrap: Boolean read get_LabelWrap write set_LabelWrap;
    property LargeImageList: DNImageList read get_LargeImageList write set_LargeImageList;
    property ListViewItemSorter: DDN.mscorlib.DNIComparer read get_ListViewItemSorter write set_ListViewItemSorter;
    property MultiSelect: Boolean read get_MultiSelect write set_MultiSelect;
    property OwnerDraw: Boolean read get_OwnerDraw write set_OwnerDraw;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property Scrollable: Boolean read get_Scrollable write set_Scrollable;
    property SelectedIndices: DNListView_SelectedIndexCollection read get_SelectedIndices;
    property SelectedItems: DNListView_SelectedListViewItemCollection read get_SelectedItems;
    property ShowGroups: Boolean read get_ShowGroups write set_ShowGroups;
    property SmallImageList: DNImageList read get_SmallImageList write set_SmallImageList;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property Sorting: DNSortOrder read get_Sorting write set_Sorting;
    property StateImageList: DNImageList read get_StateImageList write set_StateImageList;
    property Text: string read get_Text write set_Text;
    property TileSize: DDN.System.Drawing.DNSize read get_TileSize write set_TileSize;
    property TopItem: DNListViewItem read get_TopItem write set_TopItem;
    property UseCompatibleStateImageBehavior: Boolean read get_UseCompatibleStateImageBehavior write set_UseCompatibleStateImageBehavior;
    property View: DNView read get_View write set_View;
    property VirtualListSize: Int32 read get_VirtualListSize write set_VirtualListSize;
    property VirtualMode: Boolean read get_VirtualMode write set_VirtualMode;
    property Padding: DNPadding read get_Padding write set_Padding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNListView = class(TDNGenericImport<DNListViewClass, DNListView>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMdiClientClass = interface(DNControlClass)
  ['{D72845C4-3B54-53C0-BA97-AD89B6D8B5B8}']
  { constructors } 

    {class} function init: DNMdiClient;

  end;

  [DNTypeName('System.Windows.Forms.MdiClient')]
  DNMdiClient = interface(DNControl)
  ['{CE6E4B0C-1473-3184-B1E3-0027D76E3618}']
  { getters & setters } 

    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_MdiChildren: TArray<DNForm>;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure LayoutMdi(value: DNMdiLayout);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property MdiChildren: TArray<DNForm> read get_MdiChildren;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMdiClient = class(TDNGenericImport<DNMdiClientClass, DNMdiClient>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMonthCalendarClass = interface(DNControlClass)
  ['{AA52BF8D-356D-5081-88CA-FFC842BEE2B8}']
  { constructors } 

    {class} function init: DNMonthCalendar;

  end;

  [DNTypeName('System.Windows.Forms.MonthCalendar')]
  DNMonthCalendar = interface(DNControl)
  ['{B6782E31-494F-32EB-8405-6F24AC68BDBD}']
  { getters & setters } 

    function get_AnnuallyBoldedDates: TArray<DDN.mscorlib.DNDateTime>;
    procedure set_AnnuallyBoldedDates(value: TArray<DDN.mscorlib.DNDateTime>);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BoldedDates: TArray<DDN.mscorlib.DNDateTime>;
    procedure set_BoldedDates(value: TArray<DDN.mscorlib.DNDateTime>);
    function get_CalendarDimensions: DDN.System.Drawing.DNSize;
    procedure set_CalendarDimensions(value: DDN.System.Drawing.DNSize);
    function get_FirstDayOfWeek: DNDay;
    procedure set_FirstDayOfWeek(value: DNDay);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_MaxDate: DDN.mscorlib.DNDateTime;
    procedure set_MaxDate(value: DDN.mscorlib.DNDateTime);
    function get_MaxSelectionCount: Int32;
    procedure set_MaxSelectionCount(value: Int32);
    function get_MinDate: DDN.mscorlib.DNDateTime;
    procedure set_MinDate(value: DDN.mscorlib.DNDateTime);
    function get_MonthlyBoldedDates: TArray<DDN.mscorlib.DNDateTime>;
    procedure set_MonthlyBoldedDates(value: TArray<DDN.mscorlib.DNDateTime>);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_ScrollChange: Int32;
    procedure set_ScrollChange(value: Int32);
    function get_SelectionEnd: DDN.mscorlib.DNDateTime;
    procedure set_SelectionEnd(value: DDN.mscorlib.DNDateTime);
    function get_SelectionStart: DDN.mscorlib.DNDateTime;
    procedure set_SelectionStart(value: DDN.mscorlib.DNDateTime);
    function get_SelectionRange: DNSelectionRange;
    procedure set_SelectionRange(value: DNSelectionRange);
    function get_ShowToday: Boolean;
    procedure set_ShowToday(value: Boolean);
    function get_ShowTodayCircle: Boolean;
    procedure set_ShowTodayCircle(value: Boolean);
    function get_ShowWeekNumbers: Boolean;
    procedure set_ShowWeekNumbers(value: Boolean);
    function get_SingleMonthSize: DDN.System.Drawing.DNSize;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TodayDate: DDN.mscorlib.DNDateTime;
    procedure set_TodayDate(value: DDN.mscorlib.DNDateTime);
    function get_TodayDateSet: Boolean;
    function get_TitleBackColor: DDN.System.Drawing.DNColor;
    procedure set_TitleBackColor(value: DDN.System.Drawing.DNColor);
    function get_TitleForeColor: DDN.System.Drawing.DNColor;
    procedure set_TitleForeColor(value: DDN.System.Drawing.DNColor);
    function get_TrailingForeColor: DDN.System.Drawing.DNColor;
    procedure set_TrailingForeColor(value: DDN.System.Drawing.DNColor);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DateChanged(value: DNDateRangeEventHandler);
    procedure remove_DateChanged(value: DNDateRangeEventHandler);
    procedure add_DateSelected(value: DNDateRangeEventHandler);
    procedure remove_DateSelected(value: DNDateRangeEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure AddAnnuallyBoldedDate(date: DDN.mscorlib.DNDateTime);
    procedure AddBoldedDate(date: DDN.mscorlib.DNDateTime);
    procedure AddMonthlyBoldedDate(date: DDN.mscorlib.DNDateTime);
    function GetDisplayRange(visible: Boolean): DNSelectionRange;
    function HitTest(x: Int32; y: Int32): DNMonthCalendar_HitTestInfo; overload;
    function HitTest(point: DDN.System.Drawing.DNPoint): DNMonthCalendar_HitTestInfo; overload;
    procedure RemoveAllAnnuallyBoldedDates;
    procedure RemoveAllBoldedDates;
    procedure RemoveAllMonthlyBoldedDates;
    procedure RemoveAnnuallyBoldedDate(date: DDN.mscorlib.DNDateTime);
    procedure RemoveBoldedDate(date: DDN.mscorlib.DNDateTime);
    procedure RemoveMonthlyBoldedDate(date: DDN.mscorlib.DNDateTime);
    procedure SetCalendarDimensions(x: Int32; y: Int32);
    procedure SetDate(date: DDN.mscorlib.DNDateTime);
    procedure SetSelectionRange(date1: DDN.mscorlib.DNDateTime; date2: DDN.mscorlib.DNDateTime);
    function ToString: string;
    procedure UpdateBoldedDates;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AnnuallyBoldedDates: TArray<DDN.mscorlib.DNDateTime> read get_AnnuallyBoldedDates write set_AnnuallyBoldedDates;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BoldedDates: TArray<DDN.mscorlib.DNDateTime> read get_BoldedDates write set_BoldedDates;
    property CalendarDimensions: DDN.System.Drawing.DNSize read get_CalendarDimensions write set_CalendarDimensions;
    property FirstDayOfWeek: DNDay read get_FirstDayOfWeek write set_FirstDayOfWeek;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property MaxDate: DDN.mscorlib.DNDateTime read get_MaxDate write set_MaxDate;
    property MaxSelectionCount: Int32 read get_MaxSelectionCount write set_MaxSelectionCount;
    property MinDate: DDN.mscorlib.DNDateTime read get_MinDate write set_MinDate;
    property MonthlyBoldedDates: TArray<DDN.mscorlib.DNDateTime> read get_MonthlyBoldedDates write set_MonthlyBoldedDates;
    property Padding: DNPadding read get_Padding write set_Padding;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property ScrollChange: Int32 read get_ScrollChange write set_ScrollChange;
    property SelectionEnd: DDN.mscorlib.DNDateTime read get_SelectionEnd write set_SelectionEnd;
    property SelectionStart: DDN.mscorlib.DNDateTime read get_SelectionStart write set_SelectionStart;
    property SelectionRange: DNSelectionRange read get_SelectionRange write set_SelectionRange;
    property ShowToday: Boolean read get_ShowToday write set_ShowToday;
    property ShowTodayCircle: Boolean read get_ShowTodayCircle write set_ShowTodayCircle;
    property ShowWeekNumbers: Boolean read get_ShowWeekNumbers write set_ShowWeekNumbers;
    property SingleMonthSize: DDN.System.Drawing.DNSize read get_SingleMonthSize;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Text: string read get_Text write set_Text;
    property TodayDate: DDN.mscorlib.DNDateTime read get_TodayDate write set_TodayDate;
    property TodayDateSet: Boolean read get_TodayDateSet;
    property TitleBackColor: DDN.System.Drawing.DNColor read get_TitleBackColor write set_TitleBackColor;
    property TitleForeColor: DDN.System.Drawing.DNColor read get_TitleForeColor write set_TitleForeColor;
    property TrailingForeColor: DDN.System.Drawing.DNColor read get_TrailingForeColor write set_TrailingForeColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMonthCalendar = class(TDNGenericImport<DNMonthCalendarClass, DNMonthCalendar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPictureBoxClass = interface(DNControlClass)
  ['{DB74F40B-FCDB-5856-B356-52398DE4CB7E}']
  { constructors } 

    {class} function init: DNPictureBox;

  end;

  [DNTypeName('System.Windows.Forms.PictureBox')]
  DNPictureBox = interface(DNControl)
  ['{492B7BBA-A930-38FF-B51A-32B81068FA89}']
  { getters & setters } 

    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ErrorImage: DDN.System.Drawing.DNImage;
    procedure set_ErrorImage(value: DDN.System.Drawing.DNImage);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageLocation: string;
    procedure set_ImageLocation(value: string);
    function get_InitialImage: DDN.System.Drawing.DNImage;
    procedure set_InitialImage(value: DDN.System.Drawing.DNImage);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_SizeMode: DNPictureBoxSizeMode;
    procedure set_SizeMode(value: DNPictureBoxSizeMode);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_WaitOnLoad: Boolean;
    procedure set_WaitOnLoad(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LoadCompleted(value: DDN.System.DNAsyncCompletedEventHandler);
    procedure remove_LoadCompleted(value: DDN.System.DNAsyncCompletedEventHandler);
    procedure add_LoadProgressChanged(value: DDN.System.DNProgressChangedEventHandler);
    procedure remove_LoadProgressChanged(value: DDN.System.DNProgressChangedEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure CancelAsync;
    procedure Load; overload;
    procedure Load(url: string); overload;
    procedure LoadAsync; overload;
    procedure LoadAsync(url: string); overload;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ErrorImage: DDN.System.Drawing.DNImage read get_ErrorImage write set_ErrorImage;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageLocation: string read get_ImageLocation write set_ImageLocation;
    property InitialImage: DDN.System.Drawing.DNImage read get_InitialImage write set_InitialImage;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property SizeMode: DNPictureBoxSizeMode read get_SizeMode write set_SizeMode;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Text: string read get_Text write set_Text;
    property WaitOnLoad: Boolean read get_WaitOnLoad write set_WaitOnLoad;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPictureBox = class(TDNGenericImport<DNPictureBoxClass, DNPictureBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPrintPreviewControlClass = interface(DNControlClass)
  ['{47BAF6BF-DF41-5AF3-8137-AA7AF56A7F1B}']
  { constructors } 

    {class} function init: DNPrintPreviewControl;

  end;

  [DNTypeName('System.Windows.Forms.PrintPreviewControl')]
  DNPrintPreviewControl = interface(DNControl)
  ['{C064EAE9-D1DD-32AC-BBFD-8882189841F3}']
  { getters & setters } 

    function get_UseAntiAlias: Boolean;
    procedure set_UseAntiAlias(value: Boolean);
    function get_AutoZoom: Boolean;
    procedure set_AutoZoom(value: Boolean);
    function get_Document: DDN.System.Drawing.DNPrintDocument;
    procedure set_Document(value: DDN.System.Drawing.DNPrintDocument);
    function get_Columns: Int32;
    procedure set_Columns(value: Int32);
    function get_Rows: Int32;
    procedure set_Rows(value: Int32);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_StartPage: Int32;
    procedure set_StartPage(value: Int32);
    function get_Zoom: Double;
    procedure set_Zoom(value: Double);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_StartPageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StartPageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure InvalidatePreview;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property UseAntiAlias: Boolean read get_UseAntiAlias write set_UseAntiAlias;
    property AutoZoom: Boolean read get_AutoZoom write set_AutoZoom;
    property Document: DDN.System.Drawing.DNPrintDocument read get_Document write set_Document;
    property Columns: Int32 read get_Columns write set_Columns;
    property Rows: Int32 read get_Rows write set_Rows;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Text: string read get_Text write set_Text;
    property StartPage: Int32 read get_StartPage write set_StartPage;
    property Zoom: Double read get_Zoom write set_Zoom;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPrintPreviewControl = class(TDNGenericImport<DNPrintPreviewControlClass, DNPrintPreviewControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNProgressBarClass = interface(DNControlClass)
  ['{1CF4C159-1471-5DB8-B90D-8976EF668ADC}']
  { constructors } 

    {class} function init: DNProgressBar;

  end;

  [DNTypeName('System.Windows.Forms.ProgressBar')]
  DNProgressBar = interface(DNControl)
  ['{409F95BB-E848-3A04-8B5A-8F13148651A9}']
  { getters & setters } 

    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_Style: DNProgressBarStyle;
    procedure set_Style(value: DNProgressBarStyle);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_MarqueeAnimationSpeed: Int32;
    procedure set_MarqueeAnimationSpeed(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_Step: Int32;
    procedure set_Step(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetForeColor;
    procedure Increment(value: Int32);
    procedure PerformStep;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property Style: DNProgressBarStyle read get_Style write set_Style;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property MarqueeAnimationSpeed: Int32 read get_MarqueeAnimationSpeed write set_MarqueeAnimationSpeed;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property Padding: DNPadding read get_Padding write set_Padding;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property Step: Int32 read get_Step write set_Step;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property Value: Int32 read get_Value write set_Value;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNProgressBar = class(TDNGenericImport<DNProgressBarClass, DNProgressBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollableControlClass = interface(DNControlClass)
  ['{8C5276CE-1BC8-58B6-8F82-499FD1B4AA86}']
  { constructors } 

    {class} function init: DNScrollableControl;

  end;

  [DNTypeName('System.Windows.Forms.ScrollableControl')]
  DNScrollableControl = interface(DNControl)
  ['{73156525-C0E7-39EF-8C35-1E7C522CB07F}']
  { getters & setters } 

    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNScrollableControl = class(TDNGenericImport<DNScrollableControlClass, DNScrollableControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNContainerControlClass = interface(DNScrollableControlClass)
  ['{4720C7BA-B479-5034-88B4-DEF3909A6363}']
  { constructors } 

    {class} function init: DNContainerControl;

  end;

  [DNTypeName('System.Windows.Forms.ContainerControl')]
  DNContainerControl = interface(DNScrollableControl)
  ['{BD20E131-9782-3651-AE3A-4BBAADDC62D8}']
  { getters & setters } 

    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNContainerControl = class(TDNGenericImport<DNContainerControlClass, DNContainerControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFormClass = interface(DNContainerControlClass)
  ['{991DE17B-D8A9-56B1-B576-EEAB25D40007}']
  { static getter & setter } 

    {class} function get_ActiveForm: DNForm;

  { constructors } 

    {class} function init: DNForm;

  { static methods } 

    {class} function GetAutoScaleSize(font: DDN.System.Drawing.DNFont): DDN.System.Drawing.DNSizeF;

  { static propertys } 

    {class} property ActiveForm: DNForm read get_ActiveForm;
  end;

  [DNTypeName('System.Windows.Forms.Form')]
  DNForm = interface(DNContainerControl)
  ['{C60F986A-D86B-3E50-B959-83F196BE2E16}']
  { getters & setters } 

    function get_AcceptButton: DNIButtonControl;
    procedure set_AcceptButton(value: DNIButtonControl);
    function get_ActiveMdiChild: DNForm;
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_AutoScale: Boolean;
    procedure set_AutoScale(value: Boolean);
    function get_AutoScaleBaseSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScaleBaseSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FormBorderStyle: DNFormBorderStyle;
    procedure set_FormBorderStyle(value: DNFormBorderStyle);
    function get_CancelButton: DNIButtonControl;
    procedure set_CancelButton(value: DNIButtonControl);
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_ControlBox: Boolean;
    procedure set_ControlBox(value: Boolean);
    function get_DesktopBounds: DDN.System.Drawing.DNRectangle;
    procedure set_DesktopBounds(value: DDN.System.Drawing.DNRectangle);
    function get_DesktopLocation: DDN.System.Drawing.DNPoint;
    procedure set_DesktopLocation(value: DDN.System.Drawing.DNPoint);
    function get_DialogResult: DNDialogResult;
    procedure set_DialogResult(value: DNDialogResult);
    function get_HelpButton: Boolean;
    procedure set_HelpButton(value: Boolean);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_IsMdiChild: Boolean;
    function get_IsMdiContainer: Boolean;
    procedure set_IsMdiContainer(value: Boolean);
    function get_IsRestrictedWindow: Boolean;
    function get_KeyPreview: Boolean;
    procedure set_KeyPreview(value: Boolean);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MainMenuStrip: DNMenuStrip;
    procedure set_MainMenuStrip(value: DNMenuStrip);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Menu: DNMainMenu;
    procedure set_Menu(value: DNMainMenu);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaximizeBox: Boolean;
    procedure set_MaximizeBox(value: Boolean);
    function get_MdiChildren: TArray<DNForm>;
    function get_MdiParent: DNForm;
    procedure set_MdiParent(value: DNForm);
    function get_MergedMenu: DNMainMenu;
    function get_MinimizeBox: Boolean;
    procedure set_MinimizeBox(value: Boolean);
    function get_Modal: Boolean;
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OwnedForms: TArray<DNForm>;
    function get_Owner: DNForm;
    procedure set_Owner(value: DNForm);
    function get_RestoreBounds: DDN.System.Drawing.DNRectangle;
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_ShowInTaskbar: Boolean;
    procedure set_ShowInTaskbar(value: Boolean);
    function get_ShowIcon: Boolean;
    procedure set_ShowIcon(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_SizeGripStyle: DNSizeGripStyle;
    procedure set_SizeGripStyle(value: DNSizeGripStyle);
    function get_StartPosition: DNFormStartPosition;
    procedure set_StartPosition(value: DNFormStartPosition);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TopMost: Boolean;
    procedure set_TopMost(value: Boolean);
    function get_TransparencyKey: DDN.System.Drawing.DNColor;
    procedure set_TransparencyKey(value: DDN.System.Drawing.DNColor);
    function get_WindowState: DNFormWindowState;
    procedure set_WindowState(value: DNFormWindowState);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure remove_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure add_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closing(value: DDN.System.DNCancelEventHandler);
    procedure remove_Closing(value: DDN.System.DNCancelEventHandler);
    procedure add_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormClosing(value: DNFormClosingEventHandler);
    procedure remove_FormClosing(value: DNFormClosingEventHandler);
    procedure add_FormClosed(value: DNFormClosedEventHandler);
    procedure remove_FormClosed(value: DNFormClosedEventHandler);
    procedure add_Load(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Load(value: DDN.mscorlib.DNEventHandler);
    procedure add_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure add_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure remove_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure add_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure remove_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChanged(value: DNDpiChangedEventHandler);
    procedure remove_DpiChanged(value: DNDpiChangedEventHandler);
    procedure add_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure add_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure Activate;
    procedure AddOwnedForm(ownedForm: DNForm);
    procedure Close;
    procedure LayoutMdi(value: DNMdiLayout);
    procedure RemoveOwnedForm(ownedForm: DNForm);
    procedure SetDesktopBounds(x: Int32; y: Int32; width: Int32; height: Int32);
    procedure SetDesktopLocation(x: Int32; y: Int32);
    procedure Show(owner: DNIWin32Window); overload;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    function ToString: string;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show; overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AcceptButton: DNIButtonControl read get_AcceptButton write set_AcceptButton;
    property ActiveMdiChild: DNForm read get_ActiveMdiChild;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property AutoScale: Boolean read get_AutoScale write set_AutoScale;
    property AutoScaleBaseSize: DDN.System.Drawing.DNSize read get_AutoScaleBaseSize write set_AutoScaleBaseSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FormBorderStyle: DNFormBorderStyle read get_FormBorderStyle write set_FormBorderStyle;
    property CancelButton: DNIButtonControl read get_CancelButton write set_CancelButton;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property ControlBox: Boolean read get_ControlBox write set_ControlBox;
    property DesktopBounds: DDN.System.Drawing.DNRectangle read get_DesktopBounds write set_DesktopBounds;
    property DesktopLocation: DDN.System.Drawing.DNPoint read get_DesktopLocation write set_DesktopLocation;
    property DialogResult: DNDialogResult read get_DialogResult write set_DialogResult;
    property HelpButton: Boolean read get_HelpButton write set_HelpButton;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property IsMdiChild: Boolean read get_IsMdiChild;
    property IsMdiContainer: Boolean read get_IsMdiContainer write set_IsMdiContainer;
    property IsRestrictedWindow: Boolean read get_IsRestrictedWindow;
    property KeyPreview: Boolean read get_KeyPreview write set_KeyPreview;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MainMenuStrip: DNMenuStrip read get_MainMenuStrip write set_MainMenuStrip;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Menu: DNMainMenu read get_Menu write set_Menu;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaximizeBox: Boolean read get_MaximizeBox write set_MaximizeBox;
    property MdiChildren: TArray<DNForm> read get_MdiChildren;
    property MdiParent: DNForm read get_MdiParent write set_MdiParent;
    property MergedMenu: DNMainMenu read get_MergedMenu;
    property MinimizeBox: Boolean read get_MinimizeBox write set_MinimizeBox;
    property Modal: Boolean read get_Modal;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OwnedForms: TArray<DNForm> read get_OwnedForms;
    property Owner: DNForm read get_Owner write set_Owner;
    property RestoreBounds: DDN.System.Drawing.DNRectangle read get_RestoreBounds;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property ShowInTaskbar: Boolean read get_ShowInTaskbar write set_ShowInTaskbar;
    property ShowIcon: Boolean read get_ShowIcon write set_ShowIcon;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property SizeGripStyle: DNSizeGripStyle read get_SizeGripStyle write set_SizeGripStyle;
    property StartPosition: DNFormStartPosition read get_StartPosition write set_StartPosition;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TopMost: Boolean read get_TopMost write set_TopMost;
    property TransparencyKey: DDN.System.Drawing.DNColor read get_TransparencyKey write set_TransparencyKey;
    property WindowState: DNFormWindowState read get_WindowState write set_WindowState;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNForm = class(TDNGenericImport<DNFormClass, DNForm>) end;

  //-------------namespace: System.Windows.Forms.Design----------------
  DNComponentEditorFormClass = interface(DNFormClass)
  ['{4810F15A-F262-55F7-99FC-BC5BDB4AC74F}']
  { constructors } 

    {class} function init(component: DDN.mscorlib.DNObject; pageTypes: TArray<DDN.mscorlib.DNType>): DNComponentEditorForm;

  end;

  [DNTypeName('System.Windows.Forms.Design.ComponentEditorForm')]
  DNComponentEditorForm = interface(DNForm)
  ['{C77973E5-77C1-3382-8F5D-694DF4F16F3D}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AcceptButton: DNIButtonControl;
    procedure set_AcceptButton(value: DNIButtonControl);
    function get_ActiveMdiChild: DNForm;
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_AutoScale: Boolean;
    procedure set_AutoScale(value: Boolean);
    function get_AutoScaleBaseSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScaleBaseSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FormBorderStyle: DNFormBorderStyle;
    procedure set_FormBorderStyle(value: DNFormBorderStyle);
    function get_CancelButton: DNIButtonControl;
    procedure set_CancelButton(value: DNIButtonControl);
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_ControlBox: Boolean;
    procedure set_ControlBox(value: Boolean);
    function get_DesktopBounds: DDN.System.Drawing.DNRectangle;
    procedure set_DesktopBounds(value: DDN.System.Drawing.DNRectangle);
    function get_DesktopLocation: DDN.System.Drawing.DNPoint;
    procedure set_DesktopLocation(value: DDN.System.Drawing.DNPoint);
    function get_DialogResult: DNDialogResult;
    procedure set_DialogResult(value: DNDialogResult);
    function get_HelpButton: Boolean;
    procedure set_HelpButton(value: Boolean);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_IsMdiChild: Boolean;
    function get_IsMdiContainer: Boolean;
    procedure set_IsMdiContainer(value: Boolean);
    function get_IsRestrictedWindow: Boolean;
    function get_KeyPreview: Boolean;
    procedure set_KeyPreview(value: Boolean);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MainMenuStrip: DNMenuStrip;
    procedure set_MainMenuStrip(value: DNMenuStrip);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Menu: DNMainMenu;
    procedure set_Menu(value: DNMainMenu);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaximizeBox: Boolean;
    procedure set_MaximizeBox(value: Boolean);
    function get_MdiChildren: TArray<DNForm>;
    function get_MdiParent: DNForm;
    procedure set_MdiParent(value: DNForm);
    function get_MergedMenu: DNMainMenu;
    function get_MinimizeBox: Boolean;
    procedure set_MinimizeBox(value: Boolean);
    function get_Modal: Boolean;
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OwnedForms: TArray<DNForm>;
    function get_Owner: DNForm;
    procedure set_Owner(value: DNForm);
    function get_RestoreBounds: DDN.System.Drawing.DNRectangle;
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_ShowInTaskbar: Boolean;
    procedure set_ShowInTaskbar(value: Boolean);
    function get_ShowIcon: Boolean;
    procedure set_ShowIcon(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_SizeGripStyle: DNSizeGripStyle;
    procedure set_SizeGripStyle(value: DNSizeGripStyle);
    function get_StartPosition: DNFormStartPosition;
    procedure set_StartPosition(value: DNFormStartPosition);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TopMost: Boolean;
    procedure set_TopMost(value: Boolean);
    function get_TransparencyKey: DDN.System.Drawing.DNColor;
    procedure set_TransparencyKey(value: DDN.System.Drawing.DNColor);
    function get_WindowState: DNFormWindowState;
    procedure set_WindowState(value: DNFormWindowState);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure remove_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure add_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closing(value: DDN.System.DNCancelEventHandler);
    procedure remove_Closing(value: DDN.System.DNCancelEventHandler);
    procedure add_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormClosing(value: DNFormClosingEventHandler);
    procedure remove_FormClosing(value: DNFormClosingEventHandler);
    procedure add_FormClosed(value: DNFormClosedEventHandler);
    procedure remove_FormClosed(value: DNFormClosedEventHandler);
    procedure add_Load(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Load(value: DDN.mscorlib.DNEventHandler);
    procedure add_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure add_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure remove_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure add_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure remove_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChanged(value: DNDpiChangedEventHandler);
    procedure remove_DpiChanged(value: DNDpiChangedEventHandler);
    procedure add_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure add_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function PreProcessMessage(out msg: DNMessage): Boolean;
    function ShowForm: DNDialogResult; overload;
    function ShowForm(page: Int32): DNDialogResult; overload;
    function ShowForm(owner: DNIWin32Window): DNDialogResult; overload;
    function ShowForm(owner: DNIWin32Window; page: Int32): DNDialogResult; overload;
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure Activate;
    procedure AddOwnedForm(ownedForm: DNForm);
    procedure Close;
    procedure LayoutMdi(value: DNMdiLayout);
    procedure RemoveOwnedForm(ownedForm: DNForm);
    procedure SetDesktopBounds(x: Int32; y: Int32; width: Int32; height: Int32);
    procedure SetDesktopLocation(x: Int32; y: Int32);
    procedure Show(owner: DNIWin32Window); overload;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    function ToString: string;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show; overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AcceptButton: DNIButtonControl read get_AcceptButton write set_AcceptButton;
    property ActiveMdiChild: DNForm read get_ActiveMdiChild;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property AutoScale: Boolean read get_AutoScale write set_AutoScale;
    property AutoScaleBaseSize: DDN.System.Drawing.DNSize read get_AutoScaleBaseSize write set_AutoScaleBaseSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FormBorderStyle: DNFormBorderStyle read get_FormBorderStyle write set_FormBorderStyle;
    property CancelButton: DNIButtonControl read get_CancelButton write set_CancelButton;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property ControlBox: Boolean read get_ControlBox write set_ControlBox;
    property DesktopBounds: DDN.System.Drawing.DNRectangle read get_DesktopBounds write set_DesktopBounds;
    property DesktopLocation: DDN.System.Drawing.DNPoint read get_DesktopLocation write set_DesktopLocation;
    property DialogResult: DNDialogResult read get_DialogResult write set_DialogResult;
    property HelpButton: Boolean read get_HelpButton write set_HelpButton;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property IsMdiChild: Boolean read get_IsMdiChild;
    property IsMdiContainer: Boolean read get_IsMdiContainer write set_IsMdiContainer;
    property IsRestrictedWindow: Boolean read get_IsRestrictedWindow;
    property KeyPreview: Boolean read get_KeyPreview write set_KeyPreview;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MainMenuStrip: DNMenuStrip read get_MainMenuStrip write set_MainMenuStrip;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Menu: DNMainMenu read get_Menu write set_Menu;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaximizeBox: Boolean read get_MaximizeBox write set_MaximizeBox;
    property MdiChildren: TArray<DNForm> read get_MdiChildren;
    property MdiParent: DNForm read get_MdiParent write set_MdiParent;
    property MergedMenu: DNMainMenu read get_MergedMenu;
    property MinimizeBox: Boolean read get_MinimizeBox write set_MinimizeBox;
    property Modal: Boolean read get_Modal;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OwnedForms: TArray<DNForm> read get_OwnedForms;
    property Owner: DNForm read get_Owner write set_Owner;
    property RestoreBounds: DDN.System.Drawing.DNRectangle read get_RestoreBounds;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property ShowInTaskbar: Boolean read get_ShowInTaskbar write set_ShowInTaskbar;
    property ShowIcon: Boolean read get_ShowIcon write set_ShowIcon;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property SizeGripStyle: DNSizeGripStyle read get_SizeGripStyle write set_SizeGripStyle;
    property StartPosition: DNFormStartPosition read get_StartPosition write set_StartPosition;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TopMost: Boolean read get_TopMost write set_TopMost;
    property TransparencyKey: DDN.System.Drawing.DNColor read get_TransparencyKey write set_TransparencyKey;
    property WindowState: DNFormWindowState read get_WindowState write set_WindowState;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNComponentEditorForm = class(TDNGenericImport<DNComponentEditorFormClass, DNComponentEditorForm>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPrintPreviewDialogClass = interface(DNFormClass)
  ['{D88EE087-9AD0-5BC4-B739-BBF9DF74DDA8}']
  { constructors } 

    {class} function init: DNPrintPreviewDialog;

  end;

  [DNTypeName('System.Windows.Forms.PrintPreviewDialog')]
  DNPrintPreviewDialog = interface(DNForm)
  ['{17438D08-1CA5-3C2D-B1E0-BF241CA83E5A}']
  { getters & setters } 

    function get_AcceptButton: DNIButtonControl;
    procedure set_AcceptButton(value: DNIButtonControl);
    function get_AutoScale: Boolean;
    procedure set_AutoScale(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_CancelButton: DNIButtonControl;
    procedure set_CancelButton(value: DNIButtonControl);
    function get_ControlBox: Boolean;
    procedure set_ControlBox(value: Boolean);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_FormBorderStyle: DNFormBorderStyle;
    procedure set_FormBorderStyle(value: DNFormBorderStyle);
    function get_HelpButton: Boolean;
    procedure set_HelpButton(value: Boolean);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_IsMdiContainer: Boolean;
    procedure set_IsMdiContainer(value: Boolean);
    function get_KeyPreview: Boolean;
    procedure set_KeyPreview(value: Boolean);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MaximizeBox: Boolean;
    procedure set_MaximizeBox(value: Boolean);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Menu: DNMainMenu;
    procedure set_Menu(value: DNMainMenu);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_StartPosition: DNFormStartPosition;
    procedure set_StartPosition(value: DNFormStartPosition);
    function get_TopMost: Boolean;
    procedure set_TopMost(value: Boolean);
    function get_TransparencyKey: DDN.System.Drawing.DNColor;
    procedure set_TransparencyKey(value: DDN.System.Drawing.DNColor);
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_WindowState: DNFormWindowState;
    procedure set_WindowState(value: DNFormWindowState);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_DataBindings: DNControlBindingsCollection;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_UseAntiAlias: Boolean;
    procedure set_UseAntiAlias(value: Boolean);
    function get_AutoScaleBaseSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScaleBaseSize(value: DDN.System.Drawing.DNSize);
    function get_Document: DDN.System.Drawing.DNPrintDocument;
    procedure set_Document(value: DDN.System.Drawing.DNPrintDocument);
    function get_MinimizeBox: Boolean;
    procedure set_MinimizeBox(value: Boolean);
    function get_PrintPreviewControl: DNPrintPreviewControl;
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_ShowInTaskbar: Boolean;
    procedure set_ShowInTaskbar(value: Boolean);
    function get_SizeGripStyle: DNSizeGripStyle;
    procedure set_SizeGripStyle(value: DNSizeGripStyle);
    function get_ActiveMdiChild: DNForm;
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_DesktopBounds: DDN.System.Drawing.DNRectangle;
    procedure set_DesktopBounds(value: DDN.System.Drawing.DNRectangle);
    function get_DesktopLocation: DDN.System.Drawing.DNPoint;
    procedure set_DesktopLocation(value: DDN.System.Drawing.DNPoint);
    function get_DialogResult: DNDialogResult;
    procedure set_DialogResult(value: DNDialogResult);
    function get_IsMdiChild: Boolean;
    function get_IsRestrictedWindow: Boolean;
    function get_MainMenuStrip: DNMenuStrip;
    procedure set_MainMenuStrip(value: DNMenuStrip);
    function get_MdiChildren: TArray<DNForm>;
    function get_MdiParent: DNForm;
    procedure set_MdiParent(value: DNForm);
    function get_MergedMenu: DNMainMenu;
    function get_Modal: Boolean;
    function get_OwnedForms: TArray<DNForm>;
    function get_Owner: DNForm;
    procedure set_Owner(value: DNForm);
    function get_RestoreBounds: DDN.System.Drawing.DNRectangle;
    function get_ShowIcon: Boolean;
    procedure set_ShowIcon(value: Boolean);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure remove_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure add_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closing(value: DDN.System.DNCancelEventHandler);
    procedure remove_Closing(value: DDN.System.DNCancelEventHandler);
    procedure add_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormClosing(value: DNFormClosingEventHandler);
    procedure remove_FormClosing(value: DNFormClosingEventHandler);
    procedure add_FormClosed(value: DNFormClosedEventHandler);
    procedure remove_FormClosed(value: DNFormClosedEventHandler);
    procedure add_Load(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Load(value: DDN.mscorlib.DNEventHandler);
    procedure add_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure add_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure remove_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure add_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure remove_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure add_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChanged(value: DNDpiChangedEventHandler);
    procedure remove_DpiChanged(value: DNDpiChangedEventHandler);
    procedure add_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure add_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure Activate;
    procedure AddOwnedForm(ownedForm: DNForm);
    procedure Close;
    procedure LayoutMdi(value: DNMdiLayout);
    procedure RemoveOwnedForm(ownedForm: DNForm);
    procedure SetDesktopBounds(x: Int32; y: Int32; width: Int32; height: Int32);
    procedure SetDesktopLocation(x: Int32; y: Int32);
    procedure Show(owner: DNIWin32Window); overload;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    function ToString: string;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show; overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AcceptButton: DNIButtonControl read get_AcceptButton write set_AcceptButton;
    property AutoScale: Boolean read get_AutoScale write set_AutoScale;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property CancelButton: DNIButtonControl read get_CancelButton write set_CancelButton;
    property ControlBox: Boolean read get_ControlBox write set_ControlBox;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property FormBorderStyle: DNFormBorderStyle read get_FormBorderStyle write set_FormBorderStyle;
    property HelpButton: Boolean read get_HelpButton write set_HelpButton;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property IsMdiContainer: Boolean read get_IsMdiContainer write set_IsMdiContainer;
    property KeyPreview: Boolean read get_KeyPreview write set_KeyPreview;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MaximizeBox: Boolean read get_MaximizeBox write set_MaximizeBox;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Menu: DNMainMenu read get_Menu write set_Menu;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property StartPosition: DNFormStartPosition read get_StartPosition write set_StartPosition;
    property TopMost: Boolean read get_TopMost write set_TopMost;
    property TransparencyKey: DDN.System.Drawing.DNColor read get_TransparencyKey write set_TransparencyKey;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property WindowState: DNFormWindowState read get_WindowState write set_WindowState;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Visible: Boolean read get_Visible write set_Visible;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property UseAntiAlias: Boolean read get_UseAntiAlias write set_UseAntiAlias;
    property AutoScaleBaseSize: DDN.System.Drawing.DNSize read get_AutoScaleBaseSize write set_AutoScaleBaseSize;
    property Document: DDN.System.Drawing.DNPrintDocument read get_Document write set_Document;
    property MinimizeBox: Boolean read get_MinimizeBox write set_MinimizeBox;
    property PrintPreviewControl: DNPrintPreviewControl read get_PrintPreviewControl;
    property Opacity: Double read get_Opacity write set_Opacity;
    property ShowInTaskbar: Boolean read get_ShowInTaskbar write set_ShowInTaskbar;
    property SizeGripStyle: DNSizeGripStyle read get_SizeGripStyle write set_SizeGripStyle;
    property ActiveMdiChild: DNForm read get_ActiveMdiChild;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property DesktopBounds: DDN.System.Drawing.DNRectangle read get_DesktopBounds write set_DesktopBounds;
    property DesktopLocation: DDN.System.Drawing.DNPoint read get_DesktopLocation write set_DesktopLocation;
    property DialogResult: DNDialogResult read get_DialogResult write set_DialogResult;
    property IsMdiChild: Boolean read get_IsMdiChild;
    property IsRestrictedWindow: Boolean read get_IsRestrictedWindow;
    property MainMenuStrip: DNMenuStrip read get_MainMenuStrip write set_MainMenuStrip;
    property MdiChildren: TArray<DNForm> read get_MdiChildren;
    property MdiParent: DNForm read get_MdiParent write set_MdiParent;
    property MergedMenu: DNMainMenu read get_MergedMenu;
    property Modal: Boolean read get_Modal;
    property OwnedForms: TArray<DNForm> read get_OwnedForms;
    property Owner: DNForm read get_Owner write set_Owner;
    property RestoreBounds: DDN.System.Drawing.DNRectangle read get_RestoreBounds;
    property ShowIcon: Boolean read get_ShowIcon write set_ShowIcon;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPrintPreviewDialog = class(TDNGenericImport<DNPrintPreviewDialogClass, DNPrintPreviewDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNThreadExceptionDialogClass = interface(DNFormClass)
  ['{0926CCF4-4479-5776-9150-F315913A589A}']
  { constructors } 

    {class} function init(t: DDN.mscorlib.DNException): DNThreadExceptionDialog;

  end;

  [DNTypeName('System.Windows.Forms.ThreadExceptionDialog')]
  DNThreadExceptionDialog = interface(DNForm)
  ['{9DC61A7B-E1FC-3397-8EFA-DF03927AD3FC}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AcceptButton: DNIButtonControl;
    procedure set_AcceptButton(value: DNIButtonControl);
    function get_ActiveMdiChild: DNForm;
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_AutoScale: Boolean;
    procedure set_AutoScale(value: Boolean);
    function get_AutoScaleBaseSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScaleBaseSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_FormBorderStyle: DNFormBorderStyle;
    procedure set_FormBorderStyle(value: DNFormBorderStyle);
    function get_CancelButton: DNIButtonControl;
    procedure set_CancelButton(value: DNIButtonControl);
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_ControlBox: Boolean;
    procedure set_ControlBox(value: Boolean);
    function get_DesktopBounds: DDN.System.Drawing.DNRectangle;
    procedure set_DesktopBounds(value: DDN.System.Drawing.DNRectangle);
    function get_DesktopLocation: DDN.System.Drawing.DNPoint;
    procedure set_DesktopLocation(value: DDN.System.Drawing.DNPoint);
    function get_DialogResult: DNDialogResult;
    procedure set_DialogResult(value: DNDialogResult);
    function get_HelpButton: Boolean;
    procedure set_HelpButton(value: Boolean);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_IsMdiChild: Boolean;
    function get_IsMdiContainer: Boolean;
    procedure set_IsMdiContainer(value: Boolean);
    function get_IsRestrictedWindow: Boolean;
    function get_KeyPreview: Boolean;
    procedure set_KeyPreview(value: Boolean);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MainMenuStrip: DNMenuStrip;
    procedure set_MainMenuStrip(value: DNMenuStrip);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Menu: DNMainMenu;
    procedure set_Menu(value: DNMainMenu);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaximizeBox: Boolean;
    procedure set_MaximizeBox(value: Boolean);
    function get_MdiChildren: TArray<DNForm>;
    function get_MdiParent: DNForm;
    procedure set_MdiParent(value: DNForm);
    function get_MergedMenu: DNMainMenu;
    function get_MinimizeBox: Boolean;
    procedure set_MinimizeBox(value: Boolean);
    function get_Modal: Boolean;
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OwnedForms: TArray<DNForm>;
    function get_Owner: DNForm;
    procedure set_Owner(value: DNForm);
    function get_RestoreBounds: DDN.System.Drawing.DNRectangle;
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_ShowInTaskbar: Boolean;
    procedure set_ShowInTaskbar(value: Boolean);
    function get_ShowIcon: Boolean;
    procedure set_ShowIcon(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_SizeGripStyle: DNSizeGripStyle;
    procedure set_SizeGripStyle(value: DNSizeGripStyle);
    function get_StartPosition: DNFormStartPosition;
    procedure set_StartPosition(value: DNFormStartPosition);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TopMost: Boolean;
    procedure set_TopMost(value: Boolean);
    function get_TransparencyKey: DDN.System.Drawing.DNColor;
    procedure set_TransparencyKey(value: DDN.System.Drawing.DNColor);
    function get_WindowState: DNFormWindowState;
    procedure set_WindowState(value: DNFormWindowState);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure remove_HelpButtonClicked(value: DDN.System.DNCancelEventHandler);
    procedure add_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximizedBoundsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaximumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MinimumSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Activated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closing(value: DDN.System.DNCancelEventHandler);
    procedure remove_Closing(value: DDN.System.DNCancelEventHandler);
    procedure add_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Closed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Deactivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_FormClosing(value: DNFormClosingEventHandler);
    procedure remove_FormClosing(value: DNFormClosingEventHandler);
    procedure add_FormClosed(value: DNFormClosedEventHandler);
    procedure remove_FormClosed(value: DNFormClosedEventHandler);
    procedure add_Load(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Load(value: DDN.mscorlib.DNEventHandler);
    procedure add_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MdiChildActivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuComplete(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuStart(value: DDN.mscorlib.DNEventHandler);
    procedure add_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure remove_InputLanguageChanged(value: DNInputLanguageChangedEventHandler);
    procedure add_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure remove_InputLanguageChanging(value: DNInputLanguageChangingEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Shown(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChanged(value: DNDpiChangedEventHandler);
    procedure remove_DpiChanged(value: DNDpiChangedEventHandler);
    procedure add_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeBegin(value: DDN.mscorlib.DNEventHandler);
    procedure add_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ResizeEnd(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure Activate;
    procedure AddOwnedForm(ownedForm: DNForm);
    procedure Close;
    procedure LayoutMdi(value: DNMdiLayout);
    procedure RemoveOwnedForm(ownedForm: DNForm);
    procedure SetDesktopBounds(x: Int32; y: Int32; width: Int32; height: Int32);
    procedure SetDesktopLocation(x: Int32; y: Int32);
    procedure Show(owner: DNIWin32Window); overload;
    function ShowDialog: DNDialogResult; overload;
    function ShowDialog(owner: DNIWin32Window): DNDialogResult; overload;
    function ToString: string;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show; overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AcceptButton: DNIButtonControl read get_AcceptButton write set_AcceptButton;
    property ActiveMdiChild: DNForm read get_ActiveMdiChild;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property AutoScale: Boolean read get_AutoScale write set_AutoScale;
    property AutoScaleBaseSize: DDN.System.Drawing.DNSize read get_AutoScaleBaseSize write set_AutoScaleBaseSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property FormBorderStyle: DNFormBorderStyle read get_FormBorderStyle write set_FormBorderStyle;
    property CancelButton: DNIButtonControl read get_CancelButton write set_CancelButton;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property ControlBox: Boolean read get_ControlBox write set_ControlBox;
    property DesktopBounds: DDN.System.Drawing.DNRectangle read get_DesktopBounds write set_DesktopBounds;
    property DesktopLocation: DDN.System.Drawing.DNPoint read get_DesktopLocation write set_DesktopLocation;
    property DialogResult: DNDialogResult read get_DialogResult write set_DialogResult;
    property HelpButton: Boolean read get_HelpButton write set_HelpButton;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property IsMdiChild: Boolean read get_IsMdiChild;
    property IsMdiContainer: Boolean read get_IsMdiContainer write set_IsMdiContainer;
    property IsRestrictedWindow: Boolean read get_IsRestrictedWindow;
    property KeyPreview: Boolean read get_KeyPreview write set_KeyPreview;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MainMenuStrip: DNMenuStrip read get_MainMenuStrip write set_MainMenuStrip;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Menu: DNMainMenu read get_Menu write set_Menu;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaximizeBox: Boolean read get_MaximizeBox write set_MaximizeBox;
    property MdiChildren: TArray<DNForm> read get_MdiChildren;
    property MdiParent: DNForm read get_MdiParent write set_MdiParent;
    property MergedMenu: DNMainMenu read get_MergedMenu;
    property MinimizeBox: Boolean read get_MinimizeBox write set_MinimizeBox;
    property Modal: Boolean read get_Modal;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OwnedForms: TArray<DNForm> read get_OwnedForms;
    property Owner: DNForm read get_Owner write set_Owner;
    property RestoreBounds: DDN.System.Drawing.DNRectangle read get_RestoreBounds;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property ShowInTaskbar: Boolean read get_ShowInTaskbar write set_ShowInTaskbar;
    property ShowIcon: Boolean read get_ShowIcon write set_ShowIcon;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property SizeGripStyle: DNSizeGripStyle read get_SizeGripStyle write set_SizeGripStyle;
    property StartPosition: DNFormStartPosition read get_StartPosition write set_StartPosition;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TopMost: Boolean read get_TopMost write set_TopMost;
    property TransparencyKey: DDN.System.Drawing.DNColor read get_TransparencyKey write set_TransparencyKey;
    property WindowState: DNFormWindowState read get_WindowState write set_WindowState;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNThreadExceptionDialog = class(TDNGenericImport<DNThreadExceptionDialogClass, DNThreadExceptionDialog>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPropertyGridClass = interface(DNContainerControlClass)
  ['{44518AF1-542E-5DA9-9782-4C39AA801BE4}']
  { constructors } 

    {class} function init: DNPropertyGrid;

  end;

  [DNTypeName('System.Windows.Forms.PropertyGrid')]
  DNPropertyGrid = interface(DNContainerControl)
  ['{DC0ED10F-FEA5-3A43-8CA1-19E036DF370F}']
  { getters & setters } 

    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BrowsableAttributes: DDN.System.DNAttributeCollection;
    procedure set_BrowsableAttributes(value: DDN.System.DNAttributeCollection);
    function get_CanShowCommands: Boolean;
    function get_CategoryForeColor: DDN.System.Drawing.DNColor;
    procedure set_CategoryForeColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsBackColor: DDN.System.Drawing.DNColor;
    procedure set_CommandsBackColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsForeColor: DDN.System.Drawing.DNColor;
    procedure set_CommandsForeColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsLinkColor: DDN.System.Drawing.DNColor;
    procedure set_CommandsLinkColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_CommandsActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsDisabledLinkColor: DDN.System.Drawing.DNColor;
    procedure set_CommandsDisabledLinkColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsBorderColor: DDN.System.Drawing.DNColor;
    procedure set_CommandsBorderColor(value: DDN.System.Drawing.DNColor);
    function get_CommandsVisible: Boolean;
    function get_CommandsVisibleIfAvailable: Boolean;
    procedure set_CommandsVisibleIfAvailable(value: Boolean);
    function get_ContextMenuDefaultLocation: DDN.System.Drawing.DNPoint;
    function get_Controls: DNControl_ControlCollection;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HelpBackColor: DDN.System.Drawing.DNColor;
    procedure set_HelpBackColor(value: DDN.System.Drawing.DNColor);
    function get_HelpForeColor: DDN.System.Drawing.DNColor;
    procedure set_HelpForeColor(value: DDN.System.Drawing.DNColor);
    function get_HelpBorderColor: DDN.System.Drawing.DNColor;
    procedure set_HelpBorderColor(value: DDN.System.Drawing.DNColor);
    function get_HelpVisible: Boolean;
    procedure set_HelpVisible(value: Boolean);
    function get_SelectedItemWithFocusBackColor: DDN.System.Drawing.DNColor;
    procedure set_SelectedItemWithFocusBackColor(value: DDN.System.Drawing.DNColor);
    function get_SelectedItemWithFocusForeColor: DDN.System.Drawing.DNColor;
    procedure set_SelectedItemWithFocusForeColor(value: DDN.System.Drawing.DNColor);
    function get_DisabledItemForeColor: DDN.System.Drawing.DNColor;
    procedure set_DisabledItemForeColor(value: DDN.System.Drawing.DNColor);
    function get_CategorySplitterColor: DDN.System.Drawing.DNColor;
    procedure set_CategorySplitterColor(value: DDN.System.Drawing.DNColor);
    function get_CanShowVisualStyleGlyphs: Boolean;
    procedure set_CanShowVisualStyleGlyphs(value: Boolean);
    function get_LineColor: DDN.System.Drawing.DNColor;
    procedure set_LineColor(value: DDN.System.Drawing.DNColor);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PropertySort: DNPropertySort;
    procedure set_PropertySort(value: DNPropertySort);
    function get_PropertyTabs: DNPropertyGrid_PropertyTabCollection;
    function get_SelectedObject: DDN.mscorlib.DNObject;
    procedure set_SelectedObject(value: DDN.mscorlib.DNObject);
    function get_SelectedObjects: TArray<DDN.mscorlib.DNObject>;
    procedure set_SelectedObjects(value: TArray<DDN.mscorlib.DNObject>);
    function get_SelectedTab: DNPropertyTab;
    function get_SelectedGridItem: DNGridItem;
    procedure set_SelectedGridItem(value: DNGridItem);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_LargeButtons: Boolean;
    procedure set_LargeButtons(value: Boolean);
    function get_ToolbarVisible: Boolean;
    procedure set_ToolbarVisible(value: Boolean);
    function get_ViewBackColor: DDN.System.Drawing.DNColor;
    procedure set_ViewBackColor(value: DDN.System.Drawing.DNColor);
    function get_ViewForeColor: DDN.System.Drawing.DNColor;
    procedure set_ViewForeColor(value: DDN.System.Drawing.DNColor);
    function get_ViewBorderColor: DDN.System.Drawing.DNColor;
    procedure set_ViewBorderColor(value: DDN.System.Drawing.DNColor);
    function get_UseCompatibleTextRendering: Boolean;
    procedure set_UseCompatibleTextRendering(value: Boolean);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_PropertyValueChanged(value: DNPropertyValueChangedEventHandler);
    procedure remove_PropertyValueChanged(value: DNPropertyValueChangedEventHandler);
    procedure add_PropertyTabChanged(value: DNPropertyTabChangedEventHandler);
    procedure remove_PropertyTabChanged(value: DNPropertyTabChangedEventHandler);
    procedure add_PropertySortChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PropertySortChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedGridItemChanged(value: DNSelectedGridItemChangedEventHandler);
    procedure remove_SelectedGridItemChanged(value: DNSelectedGridItemChangedEventHandler);
    procedure add_SelectedObjectsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedObjectsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Refresh;
    procedure CollapseAllGridItems;
    procedure ExpandAllGridItems;
    procedure RefreshTabs(tabScope: DDN.System.DNPropertyTabScope);
    procedure ResetSelectedProperty;
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BrowsableAttributes: DDN.System.DNAttributeCollection read get_BrowsableAttributes write set_BrowsableAttributes;
    property CanShowCommands: Boolean read get_CanShowCommands;
    property CategoryForeColor: DDN.System.Drawing.DNColor read get_CategoryForeColor write set_CategoryForeColor;
    property CommandsBackColor: DDN.System.Drawing.DNColor read get_CommandsBackColor write set_CommandsBackColor;
    property CommandsForeColor: DDN.System.Drawing.DNColor read get_CommandsForeColor write set_CommandsForeColor;
    property CommandsLinkColor: DDN.System.Drawing.DNColor read get_CommandsLinkColor write set_CommandsLinkColor;
    property CommandsActiveLinkColor: DDN.System.Drawing.DNColor read get_CommandsActiveLinkColor write set_CommandsActiveLinkColor;
    property CommandsDisabledLinkColor: DDN.System.Drawing.DNColor read get_CommandsDisabledLinkColor write set_CommandsDisabledLinkColor;
    property CommandsBorderColor: DDN.System.Drawing.DNColor read get_CommandsBorderColor write set_CommandsBorderColor;
    property CommandsVisible: Boolean read get_CommandsVisible;
    property CommandsVisibleIfAvailable: Boolean read get_CommandsVisibleIfAvailable write set_CommandsVisibleIfAvailable;
    property ContextMenuDefaultLocation: DDN.System.Drawing.DNPoint read get_ContextMenuDefaultLocation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HelpBackColor: DDN.System.Drawing.DNColor read get_HelpBackColor write set_HelpBackColor;
    property HelpForeColor: DDN.System.Drawing.DNColor read get_HelpForeColor write set_HelpForeColor;
    property HelpBorderColor: DDN.System.Drawing.DNColor read get_HelpBorderColor write set_HelpBorderColor;
    property HelpVisible: Boolean read get_HelpVisible write set_HelpVisible;
    property SelectedItemWithFocusBackColor: DDN.System.Drawing.DNColor read get_SelectedItemWithFocusBackColor write set_SelectedItemWithFocusBackColor;
    property SelectedItemWithFocusForeColor: DDN.System.Drawing.DNColor read get_SelectedItemWithFocusForeColor write set_SelectedItemWithFocusForeColor;
    property DisabledItemForeColor: DDN.System.Drawing.DNColor read get_DisabledItemForeColor write set_DisabledItemForeColor;
    property CategorySplitterColor: DDN.System.Drawing.DNColor read get_CategorySplitterColor write set_CategorySplitterColor;
    property CanShowVisualStyleGlyphs: Boolean read get_CanShowVisualStyleGlyphs write set_CanShowVisualStyleGlyphs;
    property LineColor: DDN.System.Drawing.DNColor read get_LineColor write set_LineColor;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PropertySort: DNPropertySort read get_PropertySort write set_PropertySort;
    property PropertyTabs: DNPropertyGrid_PropertyTabCollection read get_PropertyTabs;
    property SelectedObject: DDN.mscorlib.DNObject read get_SelectedObject write set_SelectedObject;
    property SelectedObjects: TArray<DDN.mscorlib.DNObject> read get_SelectedObjects write set_SelectedObjects;
    property SelectedTab: DNPropertyTab read get_SelectedTab;
    property SelectedGridItem: DNGridItem read get_SelectedGridItem write set_SelectedGridItem;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Text: string read get_Text write set_Text;
    property LargeButtons: Boolean read get_LargeButtons write set_LargeButtons;
    property ToolbarVisible: Boolean read get_ToolbarVisible write set_ToolbarVisible;
    property ViewBackColor: DDN.System.Drawing.DNColor read get_ViewBackColor write set_ViewBackColor;
    property ViewForeColor: DDN.System.Drawing.DNColor read get_ViewForeColor write set_ViewForeColor;
    property ViewBorderColor: DDN.System.Drawing.DNColor read get_ViewBorderColor write set_ViewBorderColor;
    property UseCompatibleTextRendering: Boolean read get_UseCompatibleTextRendering write set_UseCompatibleTextRendering;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPropertyGrid = class(TDNGenericImport<DNPropertyGridClass, DNPropertyGrid>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSplitContainerClass = interface(DNContainerControlClass)
  ['{B7CB36B8-21FF-5F79-AB77-DD0008B0D624}']
  { constructors } 

    {class} function init: DNSplitContainer;

  end;

  [DNTypeName('System.Windows.Forms.SplitContainer')]
  DNSplitContainer = interface(DNContainerControl)
  ['{F3F633A7-CA31-3CFC-A958-D8F04B946665}']
  { getters & setters } 

    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Controls: DNControl_ControlCollection;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_FixedPanel: DNFixedPanel;
    procedure set_FixedPanel(value: DNFixedPanel);
    function get_IsSplitterFixed: Boolean;
    procedure set_IsSplitterFixed(value: Boolean);
    function get_Orientation: DNOrientation;
    procedure set_Orientation(value: DNOrientation);
    function get_Panel1: DNSplitterPanel;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Panel1Collapsed: Boolean;
    procedure set_Panel1Collapsed(value: Boolean);
    function get_Panel2Collapsed: Boolean;
    procedure set_Panel2Collapsed(value: Boolean);
    function get_Panel1MinSize: Int32;
    procedure set_Panel1MinSize(value: Int32);
    function get_Panel2: DNSplitterPanel;
    function get_Panel2MinSize: Int32;
    procedure set_Panel2MinSize(value: Int32);
    function get_SplitterDistance: Int32;
    procedure set_SplitterDistance(value: Int32);
    function get_SplitterIncrement: Int32;
    procedure set_SplitterIncrement(value: Int32);
    function get_SplitterRectangle: DDN.System.Drawing.DNRectangle;
    function get_SplitterWidth: Int32;
    procedure set_SplitterWidth(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SplitterMoving(value: DNSplitterCancelEventHandler);
    procedure remove_SplitterMoving(value: DNSplitterCancelEventHandler);
    procedure add_SplitterMoved(value: DNSplitterEventHandler);
    procedure remove_SplitterMoved(value: DNSplitterEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginInit;
    procedure EndInit;
    procedure OnSplitterMoving(e: DNSplitterCancelEventArgs);
    procedure OnSplitterMoved(e: DNSplitterEventArgs);
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property FixedPanel: DNFixedPanel read get_FixedPanel write set_FixedPanel;
    property IsSplitterFixed: Boolean read get_IsSplitterFixed write set_IsSplitterFixed;
    property Orientation: DNOrientation read get_Orientation write set_Orientation;
    property Panel1: DNSplitterPanel read get_Panel1;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Panel1Collapsed: Boolean read get_Panel1Collapsed write set_Panel1Collapsed;
    property Panel2Collapsed: Boolean read get_Panel2Collapsed write set_Panel2Collapsed;
    property Panel1MinSize: Int32 read get_Panel1MinSize write set_Panel1MinSize;
    property Panel2: DNSplitterPanel read get_Panel2;
    property Panel2MinSize: Int32 read get_Panel2MinSize write set_Panel2MinSize;
    property SplitterDistance: Int32 read get_SplitterDistance write set_SplitterDistance;
    property SplitterIncrement: Int32 read get_SplitterIncrement write set_SplitterIncrement;
    property SplitterRectangle: DDN.System.Drawing.DNRectangle read get_SplitterRectangle;
    property SplitterWidth: Int32 read get_SplitterWidth write set_SplitterWidth;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNSplitContainer = class(TDNGenericImport<DNSplitContainerClass, DNSplitContainer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripContainerClass = interface(DNContainerControlClass)
  ['{D816CEE0-E72F-5BE6-8742-EA7C182B4DFD}']
  { constructors } 

    {class} function init: DNToolStripContainer;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripContainer')]
  DNToolStripContainer = interface(DNContainerControl)
  ['{C0FF87FD-7051-300E-ACC9-8F1A43FC2969}']
  { getters & setters } 

    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BottomToolStripPanel: DNToolStripPanel;
    function get_BottomToolStripPanelVisible: Boolean;
    procedure set_BottomToolStripPanelVisible(value: Boolean);
    function get_ContentPanel: DNToolStripContentPanel;
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_LeftToolStripPanel: DNToolStripPanel;
    function get_LeftToolStripPanelVisible: Boolean;
    procedure set_LeftToolStripPanelVisible(value: Boolean);
    function get_RightToolStripPanel: DNToolStripPanel;
    function get_RightToolStripPanelVisible: Boolean;
    procedure set_RightToolStripPanelVisible(value: Boolean);
    function get_TopToolStripPanel: DNToolStripPanel;
    function get_TopToolStripPanelVisible: Boolean;
    procedure set_TopToolStripPanelVisible(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BottomToolStripPanel: DNToolStripPanel read get_BottomToolStripPanel;
    property BottomToolStripPanelVisible: Boolean read get_BottomToolStripPanelVisible write set_BottomToolStripPanelVisible;
    property ContentPanel: DNToolStripContentPanel read get_ContentPanel;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property LeftToolStripPanel: DNToolStripPanel read get_LeftToolStripPanel;
    property LeftToolStripPanelVisible: Boolean read get_LeftToolStripPanelVisible write set_LeftToolStripPanelVisible;
    property RightToolStripPanel: DNToolStripPanel read get_RightToolStripPanel;
    property RightToolStripPanelVisible: Boolean read get_RightToolStripPanelVisible write set_RightToolStripPanelVisible;
    property TopToolStripPanel: DNToolStripPanel read get_TopToolStripPanel;
    property TopToolStripPanelVisible: Boolean read get_TopToolStripPanelVisible write set_TopToolStripPanelVisible;
    property Controls: DNControl_ControlCollection read get_Controls;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripContainer = class(TDNGenericImport<DNToolStripContainerClass, DNToolStripContainer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripPanelClass = interface(DNContainerControlClass)
  ['{35CDB5CA-4733-50BC-A02D-BC6D6F73C83E}']
  { constructors } 

    {class} function init: DNToolStripPanel;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripPanel')]
  DNToolStripPanel = interface(DNContainerControl)
  ['{935030C0-F6CE-367E-BA86-CBF721D0E3B6}']
  { getters & setters } 

    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_RowMargin: DNPadding;
    procedure set_RowMargin(value: DNPadding);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Locked: Boolean;
    procedure set_Locked(value: Boolean);
    function get_Orientation: DNOrientation;
    procedure set_Orientation(value: DNOrientation);
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_Rows: TArray<DNToolStripPanelRow>;
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Join(toolStripToDrag: DNToolStrip; location: DDN.System.Drawing.DNPoint); overload;
    procedure BeginInit;
    procedure EndInit;
    procedure Join(toolStripToDrag: DNToolStrip); overload;
    procedure Join(toolStripToDrag: DNToolStrip; row: Int32); overload;
    procedure Join(toolStripToDrag: DNToolStrip; x: Int32; y: Int32); overload;
    function PointToRow(clientLocation: DDN.System.Drawing.DNPoint): DNToolStripPanelRow;
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property RowMargin: DNPadding read get_RowMargin write set_RowMargin;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Locked: Boolean read get_Locked write set_Locked;
    property Orientation: DNOrientation read get_Orientation write set_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property Rows: TArray<DNToolStripPanelRow> read get_Rows;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripPanel = class(TDNGenericImport<DNToolStripPanelClass, DNToolStripPanel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNUpDownBaseClass = interface(DNContainerControlClass)
  ['{8A5860D9-62E3-5A8F-94A1-6794ACF3567F}']
  { constructors } 

    {class} function init: DNUpDownBase;

  end;

  [DNTypeName('System.Windows.Forms.UpDownBase')]
  DNUpDownBase = interface(DNContainerControl)
  ['{70B6F6D3-64FE-373B-85A7-CC5FAB179F55}']
  { getters & setters } 

    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_InterceptArrowKeys: Boolean;
    procedure set_InterceptArrowKeys(value: Boolean);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_UpDownAlign: DNLeftRightAlignment;
    procedure set_UpDownAlign(value: DNLeftRightAlignment);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure DownButton;
    procedure Select(start: Int32; length: Int32); overload;
    procedure UpButton;
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property InterceptArrowKeys: Boolean read get_InterceptArrowKeys write set_InterceptArrowKeys;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property UpDownAlign: DNLeftRightAlignment read get_UpDownAlign write set_UpDownAlign;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNUpDownBase = class(TDNGenericImport<DNUpDownBaseClass, DNUpDownBase>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDomainUpDownClass = interface(DNUpDownBaseClass)
  ['{4F07A9E6-0931-5D7F-9817-903423240B47}']
  { constructors } 

    {class} function init: DNDomainUpDown;

  end;

  [DNTypeName('System.Windows.Forms.DomainUpDown')]
  DNDomainUpDown = interface(DNUpDownBase)
  ['{D1C50548-6109-3199-9042-FFAF6834AA01}']
  { getters & setters } 

    function get_Items: DNDomainUpDown_DomainUpDownItemCollection;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedItem: DDN.mscorlib.DNObject;
    procedure set_SelectedItem(value: DDN.mscorlib.DNObject);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_Wrap: Boolean;
    procedure set_Wrap(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_InterceptArrowKeys: Boolean;
    procedure set_InterceptArrowKeys(value: Boolean);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_UpDownAlign: DNLeftRightAlignment;
    procedure set_UpDownAlign(value: DNLeftRightAlignment);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure DownButton;
    function ToString: string;
    procedure UpButton;
    procedure Select(start: Int32; length: Int32); overload;
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Items: DNDomainUpDown_DomainUpDownItemCollection read get_Items;
    property Padding: DNPadding read get_Padding write set_Padding;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedItem: DDN.mscorlib.DNObject read get_SelectedItem write set_SelectedItem;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property Wrap: Boolean read get_Wrap write set_Wrap;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property InterceptArrowKeys: Boolean read get_InterceptArrowKeys write set_InterceptArrowKeys;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property UpDownAlign: DNLeftRightAlignment read get_UpDownAlign write set_UpDownAlign;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDomainUpDown = class(TDNGenericImport<DNDomainUpDownClass, DNDomainUpDown>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNumericUpDownClass = interface(DNUpDownBaseClass)
  ['{52F24128-928C-571E-A1EF-5600206A7A11}']
  { constructors } 

    {class} function init: DNNumericUpDown;

  end;

  [DNTypeName('System.Windows.Forms.NumericUpDown')]
  DNNumericUpDown = interface(DNUpDownBase)
  ['{E2035BFE-7A03-3AF5-B1FC-4A1F34BFD448}']
  { getters & setters } 

    function get_Accelerations: DNNumericUpDownAccelerationCollection;
    function get_DecimalPlaces: Int32;
    procedure set_DecimalPlaces(value: Int32);
    function get_Hexadecimal: Boolean;
    procedure set_Hexadecimal(value: Boolean);
    function get_Increment: DDN.mscorlib.DNDecimal;
    procedure set_Increment(value: DDN.mscorlib.DNDecimal);
    function get_Maximum: DDN.mscorlib.DNDecimal;
    procedure set_Maximum(value: DDN.mscorlib.DNDecimal);
    function get_Minimum: DDN.mscorlib.DNDecimal;
    procedure set_Minimum(value: DDN.mscorlib.DNDecimal);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ThousandsSeparator: Boolean;
    procedure set_ThousandsSeparator(value: Boolean);
    function get_Value: DDN.mscorlib.DNDecimal;
    procedure set_Value(value: DDN.mscorlib.DNDecimal);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_InterceptArrowKeys: Boolean;
    procedure set_InterceptArrowKeys(value: Boolean);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_UpDownAlign: DNLeftRightAlignment;
    procedure set_UpDownAlign(value: DNLeftRightAlignment);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginInit;
    procedure DownButton;
    procedure EndInit;
    procedure UpButton;
    function ToString: string;
    procedure Select(start: Int32; length: Int32); overload;
    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Accelerations: DNNumericUpDownAccelerationCollection read get_Accelerations;
    property DecimalPlaces: Int32 read get_DecimalPlaces write set_DecimalPlaces;
    property Hexadecimal: Boolean read get_Hexadecimal write set_Hexadecimal;
    property Increment: DDN.mscorlib.DNDecimal read get_Increment write set_Increment;
    property Maximum: DDN.mscorlib.DNDecimal read get_Maximum write set_Maximum;
    property Minimum: DDN.mscorlib.DNDecimal read get_Minimum write set_Minimum;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Text: string read get_Text write set_Text;
    property ThousandsSeparator: Boolean read get_ThousandsSeparator write set_ThousandsSeparator;
    property Value: DDN.mscorlib.DNDecimal read get_Value write set_Value;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property InterceptArrowKeys: Boolean read get_InterceptArrowKeys write set_InterceptArrowKeys;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property UpDownAlign: DNLeftRightAlignment read get_UpDownAlign write set_UpDownAlign;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNNumericUpDown = class(TDNGenericImport<DNNumericUpDownClass, DNNumericUpDown>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNUserControlClass = interface(DNContainerControlClass)
  ['{699AF9F0-EA9D-5D75-9D8F-1F0EDE193E07}']
  { constructors } 

    {class} function init: DNUserControl;

  end;

  [DNTypeName('System.Windows.Forms.UserControl')]
  DNUserControl = interface(DNContainerControl)
  ['{07427F79-1FC2-3632-B5F4-02B51BA44E18}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_AutoValidate: DNAutoValidate;
    procedure set_AutoValidate(value: DNAutoValidate);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    procedure set_AutoScaleDimensions(value: DDN.System.Drawing.DNSizeF);
    function get_AutoScaleMode: DNAutoScaleMode;
    procedure set_AutoScaleMode(value: DNAutoScaleMode);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_ActiveControl: DNControl;
    procedure set_ActiveControl(value: DNControl);
    function get_CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF;
    function get_ParentForm: DNForm;
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoValidateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Load(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Load(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ValidateChildren: Boolean; overload;
    function ValidateChildren(validationConstraints: DNValidationConstraints): Boolean; overload;
    procedure PerformAutoScale;
    function Validate: Boolean; overload;
    function Validate(checkAutoValidate: Boolean): Boolean; overload;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property AutoValidate: DNAutoValidate read get_AutoValidate write set_AutoValidate;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Text: string read get_Text write set_Text;
    property AutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_AutoScaleDimensions write set_AutoScaleDimensions;
    property AutoScaleMode: DNAutoScaleMode read get_AutoScaleMode write set_AutoScaleMode;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property ActiveControl: DNControl read get_ActiveControl write set_ActiveControl;
    property CurrentAutoScaleDimensions: DDN.System.Drawing.DNSizeF read get_CurrentAutoScaleDimensions;
    property ParentForm: DNForm read get_ParentForm;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNUserControl = class(TDNGenericImport<DNUserControlClass, DNUserControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPanelClass = interface(DNScrollableControlClass)
  ['{8FD10034-E38C-53F0-AE5F-8BAD5C39BE6C}']
  { constructors } 

    {class} function init: DNPanel;

  end;

  [DNTypeName('System.Windows.Forms.Panel')]
  DNPanel = interface(DNScrollableControl)
  ['{165C9F64-CCB8-3C9B-8AAF-95352F86B99B}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNPanel = class(TDNGenericImport<DNPanelClass, DNPanel>) end;

  //-------------namespace: System.Windows.Forms.Design----------------
  DNComponentEditorPageClass = interface(DNPanelClass)
  ['{EFA8338C-27A1-5E7F-8D06-BA0C2D2B0EEE}']
  { constructors } 

    {class} function init: DNComponentEditorPage;

  end;

  [DNTypeName('System.Windows.Forms.Design.ComponentEditorPage')]
  DNComponentEditorPage = interface(DNPanel)
  ['{D621B2A0-D07D-301E-8204-A33F0242EC8F}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_CommitOnDeactivate: Boolean;
    procedure set_CommitOnDeactivate(value: Boolean);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_Title: string;
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Activate;
    procedure ApplyChanges;
    procedure Deactivate;
    function GetControl: DNControl;
    function IsPageMessage(out msg: DNMessage): Boolean;
    procedure OnApplyComplete;
    procedure SetComponent(component: DDN.System.DNIComponent);
    procedure SetSite(site: DNIComponentEditorPageSite);
    procedure ShowHelp;
    function SupportsHelp: Boolean;
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property CommitOnDeactivate: Boolean read get_CommitOnDeactivate write set_CommitOnDeactivate;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property Title: string read get_Title;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNComponentEditorPage = class(TDNGenericImport<DNComponentEditorPageClass, DNComponentEditorPage>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFlowLayoutPanelClass = interface(DNPanelClass)
  ['{112C4515-1B4A-597A-8880-D7629E0291A6}']
  { constructors } 

    {class} function init: DNFlowLayoutPanel;

  end;

  [DNTypeName('System.Windows.Forms.FlowLayoutPanel')]
  DNFlowLayoutPanel = interface(DNPanel)
  ['{BA92792E-F10D-3EFC-A100-52757A4C184C}']
  { getters & setters } 

    function get_LayoutEngine: DNLayoutEngine;
    function get_FlowDirection: DNFlowDirection;
    procedure set_FlowDirection(value: DNFlowDirection);
    function get_WrapContents: Boolean;
    procedure set_WrapContents(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetFlowBreak(control: DNControl): Boolean;
    procedure SetFlowBreak(control: DNControl; value: Boolean);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property FlowDirection: DNFlowDirection read get_FlowDirection write set_FlowDirection;
    property WrapContents: Boolean read get_WrapContents write set_WrapContents;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNFlowLayoutPanel = class(TDNGenericImport<DNFlowLayoutPanelClass, DNFlowLayoutPanel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSplitterPanelClass = interface(DNPanelClass)
  ['{B0A5B0D2-07A1-57F2-BE72-FA12C99007D6}']
  { constructors } 

    {class} function init(owner: DNSplitContainer): DNSplitterPanel;

  end;

  [DNTypeName('System.Windows.Forms.SplitterPanel')]
  DNSplitterPanel = interface(DNPanel)
  ['{89812DAE-F080-30C8-8969-F334C09A9960}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property Height: Int32 read get_Height write set_Height;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Text: string read get_Text write set_Text;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNSplitterPanel = class(TDNGenericImport<DNSplitterPanelClass, DNSplitterPanel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutPanelClass = interface(DNPanelClass)
  ['{FC51F582-83AE-51D1-A6D8-E7EA3031E6EA}']
  { constructors } 

    {class} function init: DNTableLayoutPanel;

  end;

  [DNTypeName('System.Windows.Forms.TableLayoutPanel')]
  DNTableLayoutPanel = interface(DNPanel)
  ['{ABBA8E63-B2D0-346C-80ED-9E0C215069CB}']
  { getters & setters } 

    function get_LayoutEngine: DNLayoutEngine;
    function get_LayoutSettings: DNTableLayoutSettings;
    procedure set_LayoutSettings(value: DNTableLayoutSettings);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CellBorderStyle: DNTableLayoutPanelCellBorderStyle;
    procedure set_CellBorderStyle(value: DNTableLayoutPanelCellBorderStyle);
    function get_Controls: DNTableLayoutControlCollection;
    function get_ColumnCount: Int32;
    procedure set_ColumnCount(value: Int32);
    function get_GrowStyle: DNTableLayoutPanelGrowStyle;
    procedure set_GrowStyle(value: DNTableLayoutPanelGrowStyle);
    function get_RowCount: Int32;
    procedure set_RowCount(value: Int32);
    function get_RowStyles: DNTableLayoutRowStyleCollection;
    function get_ColumnStyles: DNTableLayoutColumnStyleCollection;
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_CellPaint(value: DNTableLayoutCellPaintEventHandler);
    procedure remove_CellPaint(value: DNTableLayoutCellPaintEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure SetRow(control: DNControl; row: Int32);
    procedure SetColumn(control: DNControl; column: Int32);
    function GetColumnSpan(control: DNControl): Int32;
    procedure SetColumnSpan(control: DNControl; value: Int32);
    function GetRowSpan(control: DNControl): Int32;
    procedure SetRowSpan(control: DNControl; value: Int32);
    function GetRow(control: DNControl): Int32;
    function GetCellPosition(control: DNControl): DNTableLayoutPanelCellPosition;
    procedure SetCellPosition(control: DNControl; position: DNTableLayoutPanelCellPosition);
    function GetColumn(control: DNControl): Int32;
    function GetControlFromPosition(column: Int32; row: Int32): DNControl;
    function GetPositionFromControl(control: DNControl): DNTableLayoutPanelCellPosition;
    function GetColumnWidths: TArray<Int32>;
    function GetRowHeights: TArray<Int32>;
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property LayoutSettings: DNTableLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CellBorderStyle: DNTableLayoutPanelCellBorderStyle read get_CellBorderStyle write set_CellBorderStyle;
    property Controls: DNTableLayoutControlCollection read get_Controls;
    property ColumnCount: Int32 read get_ColumnCount write set_ColumnCount;
    property GrowStyle: DNTableLayoutPanelGrowStyle read get_GrowStyle write set_GrowStyle;
    property RowCount: Int32 read get_RowCount write set_RowCount;
    property RowStyles: DNTableLayoutRowStyleCollection read get_RowStyles;
    property ColumnStyles: DNTableLayoutColumnStyleCollection read get_ColumnStyles;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTableLayoutPanel = class(TDNGenericImport<DNTableLayoutPanelClass, DNTableLayoutPanel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabPageClass = interface(DNPanelClass)
  ['{20E44D9B-97BF-52E1-BF94-C84870A1BF49}']
  { constructors } 

    {class} function init: DNTabPage; overload;
    {class} function init(text: string): DNTabPage; overload;

  { static methods } 

    {class} function GetTabPageOfComponent(comp: DDN.mscorlib.DNObject): DNTabPage;

  end;

  [DNTypeName('System.Windows.Forms.TabPage')]
  DNTabPage = interface(DNPanel)
  ['{BBD78147-59D7-34A8-9BD3-62E28E957F28}']
  { getters & setters } 

    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_UseVisualStyleBackColor: Boolean;
    procedure set_UseVisualStyleBackColor(value: Boolean);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property UseVisualStyleBackColor: Boolean read get_UseVisualStyleBackColor write set_UseVisualStyleBackColor;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTabPage = class(TDNGenericImport<DNTabPageClass, DNTabPage>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripContentPanelClass = interface(DNPanelClass)
  ['{DD3D60BB-7462-500C-B744-779DDD923AF8}']
  { constructors } 

    {class} function init: DNToolStripContentPanel;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripContentPanel')]
  DNToolStripContentPanel = interface(DNPanel)
  ['{D34F0B81-5AF3-34B1-8CB8-E2166D5733F9}']
  { getters & setters } 

    function get_AutoSizeMode: DNAutoSizeMode;
    procedure set_AutoSizeMode(value: DNAutoSizeMode);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Load(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Load(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSizeMode: DNAutoSizeMode read get_AutoSizeMode write set_AutoSizeMode;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property Name: string read get_Name write set_Name;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Text: string read get_Text write set_Text;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripContentPanel = class(TDNGenericImport<DNToolStripContentPanelClass, DNToolStripContentPanel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripClass = interface(DNScrollableControlClass)
  ['{49C73CB7-CBD0-5C45-B7D9-06D85F4DF834}']
  { constructors } 

    {class} function init: DNToolStrip; overload;
    {class} function init(items: TArray<DNToolStripItem>): DNToolStrip; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStrip')]
  DNToolStrip = interface(DNScrollableControl)
  ['{DAF7A547-5A5D-3095-9268-1425F428702E}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_LayoutEngine: DNLayoutEngine;
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_Orientation: DNOrientation;
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property Orientation: DNOrientation read get_Orientation;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStrip = class(TDNGenericImport<DNToolStripClass, DNToolStrip>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingNavigatorClass = interface(DNToolStripClass)
  ['{4F4C61BF-9B63-5402-8CC2-4FD08B04CCAB}']
  { constructors } 

    {class} function init: DNBindingNavigator; overload;
    {class} function init(bindingSource: DNBindingSource): DNBindingNavigator; overload;
    {class} function init(container: DDN.System.DNIContainer): DNBindingNavigator; overload;
    {class} function init(addStandardItems: Boolean): DNBindingNavigator; overload;

  end;

  [DNTypeName('System.Windows.Forms.BindingNavigator')]
  DNBindingNavigator = interface(DNToolStrip)
  ['{8D907746-455E-39A7-BD31-BC9F81468347}']
  { getters & setters } 

    function get_BindingSource: DNBindingSource;
    procedure set_BindingSource(value: DNBindingSource);
    function get_MoveFirstItem: DNToolStripItem;
    procedure set_MoveFirstItem(value: DNToolStripItem);
    function get_MovePreviousItem: DNToolStripItem;
    procedure set_MovePreviousItem(value: DNToolStripItem);
    function get_MoveNextItem: DNToolStripItem;
    procedure set_MoveNextItem(value: DNToolStripItem);
    function get_MoveLastItem: DNToolStripItem;
    procedure set_MoveLastItem(value: DNToolStripItem);
    function get_AddNewItem: DNToolStripItem;
    procedure set_AddNewItem(value: DNToolStripItem);
    function get_DeleteItem: DNToolStripItem;
    procedure set_DeleteItem(value: DNToolStripItem);
    function get_PositionItem: DNToolStripItem;
    procedure set_PositionItem(value: DNToolStripItem);
    function get_CountItem: DNToolStripItem;
    procedure set_CountItem(value: DNToolStripItem);
    function get_CountItemFormat: string;
    procedure set_CountItemFormat(value: string);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_LayoutEngine: DNLayoutEngine;
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_Orientation: DNOrientation;
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_RefreshItems(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RefreshItems(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginInit;
    procedure EndInit;
    procedure AddStandardItems;
    function Validate: Boolean;
    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BindingSource: DNBindingSource read get_BindingSource write set_BindingSource;
    property MoveFirstItem: DNToolStripItem read get_MoveFirstItem write set_MoveFirstItem;
    property MovePreviousItem: DNToolStripItem read get_MovePreviousItem write set_MovePreviousItem;
    property MoveNextItem: DNToolStripItem read get_MoveNextItem write set_MoveNextItem;
    property MoveLastItem: DNToolStripItem read get_MoveLastItem write set_MoveLastItem;
    property AddNewItem: DNToolStripItem read get_AddNewItem write set_AddNewItem;
    property DeleteItem: DNToolStripItem read get_DeleteItem write set_DeleteItem;
    property PositionItem: DNToolStripItem read get_PositionItem write set_PositionItem;
    property CountItem: DNToolStripItem read get_CountItem write set_CountItem;
    property CountItemFormat: string read get_CountItemFormat write set_CountItemFormat;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property Orientation: DNOrientation read get_Orientation;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNBindingNavigator = class(TDNGenericImport<DNBindingNavigatorClass, DNBindingNavigator>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMenuStripClass = interface(DNToolStripClass)
  ['{E14EF24E-6D6E-5C88-A444-2B3D85559D2E}']
  { constructors } 

    {class} function init: DNMenuStrip;

  end;

  [DNTypeName('System.Windows.Forms.MenuStrip')]
  DNMenuStrip = interface(DNToolStrip)
  ['{C930C2F7-CFDA-3940-916C-51BEC9C4D316}']
  { getters & setters } 

    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_MdiWindowListItem: DNToolStripMenuItem;
    procedure set_MdiWindowListItem(value: DNToolStripMenuItem);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_LayoutEngine: DNLayoutEngine;
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_Orientation: DNOrientation;
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_MenuActivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuActivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_MenuDeactivate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MenuDeactivate(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property MdiWindowListItem: DNToolStripMenuItem read get_MdiWindowListItem write set_MdiWindowListItem;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property Orientation: DNOrientation read get_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMenuStrip = class(TDNGenericImport<DNMenuStripClass, DNMenuStrip>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNStatusStripClass = interface(DNToolStripClass)
  ['{84AA0EF2-5293-592E-857A-E390AE5225B5}']
  { constructors } 

    {class} function init: DNStatusStrip;

  end;

  [DNTypeName('System.Windows.Forms.StatusStrip')]
  DNStatusStrip = interface(DNToolStrip)
  ['{E6F7736E-221C-377D-8080-EBA946D3BFE4}']
  { getters & setters } 

    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_SizingGrip: Boolean;
    procedure set_SizingGrip(value: Boolean);
    function get_SizeGripBounds: DDN.System.Drawing.DNRectangle;
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_LayoutEngine: DNLayoutEngine;
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_Orientation: DNOrientation;
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property SizingGrip: Boolean read get_SizingGrip write set_SizingGrip;
    property SizeGripBounds: DDN.System.Drawing.DNRectangle read get_SizeGripBounds;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property Orientation: DNOrientation read get_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNStatusStrip = class(TDNGenericImport<DNStatusStripClass, DNStatusStrip>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownClass = interface(DNToolStripClass)
  ['{3EFB5491-ADBE-5706-8967-24433EB6B861}']
  { constructors } 

    {class} function init: DNToolStripDropDown;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDown')]
  DNToolStripDropDown = interface(DNToolStrip)
  ['{E7FAC3BE-6AA2-37D6-894F-472D8F064FAB}']
  { getters & setters } 

    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoClose: Boolean;
    procedure set_AutoClose(value: Boolean);
    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DropShadowEnabled: Boolean;
    procedure set_DropShadowEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_IsAutoGenerated: Boolean;
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_OwnerItem: DNToolStripItem;
    procedure set_OwnerItem(value: DNToolStripItem);
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_LayoutEngine: DNLayoutEngine;
    function get_Orientation: DNOrientation;
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure remove_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure add_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure remove_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_Opening(value: DDN.System.DNCancelEventHandler);
    procedure remove_Opening(value: DDN.System.DNCancelEventHandler);
    procedure add_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Close; overload;
    procedure Close(reason: DNToolStripDropDownCloseReason); overload;
    procedure Show; overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint); overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(control: DNControl; x: Int32; y: Int32); overload;
    procedure Show(screenLocation: DDN.System.Drawing.DNPoint); overload;
    procedure Show(position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(x: Int32; y: Int32); overload;
    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoClose: Boolean read get_AutoClose write set_AutoClose;
    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DropShadowEnabled: Boolean read get_DropShadowEnabled write set_DropShadowEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property IsAutoGenerated: Boolean read get_IsAutoGenerated;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property OwnerItem: DNToolStripItem read get_OwnerItem write set_OwnerItem;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Visible: Boolean read get_Visible write set_Visible;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Orientation: DNOrientation read get_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripDropDown = class(TDNGenericImport<DNToolStripDropDownClass, DNToolStripDropDown>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownMenuClass = interface(DNToolStripDropDownClass)
  ['{CA4F15A4-A6CE-5C6E-B440-49828A46DF07}']
  { constructors } 

    {class} function init: DNToolStripDropDownMenu;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownMenu')]
  DNToolStripDropDownMenu = interface(DNToolStripDropDown)
  ['{5458C631-6A29-344D-B571-DE58784BD9E0}']
  { getters & setters } 

    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_LayoutEngine: DNLayoutEngine;
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_ShowImageMargin: Boolean;
    procedure set_ShowImageMargin(value: Boolean);
    function get_ShowCheckMargin: Boolean;
    procedure set_ShowCheckMargin(value: Boolean);
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoClose: Boolean;
    procedure set_AutoClose(value: Boolean);
    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DropShadowEnabled: Boolean;
    procedure set_DropShadowEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_IsAutoGenerated: Boolean;
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_OwnerItem: DNToolStripItem;
    procedure set_OwnerItem(value: DNToolStripItem);
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_Orientation: DNOrientation;
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure remove_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure add_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure remove_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_Opening(value: DDN.System.DNCancelEventHandler);
    procedure remove_Opening(value: DDN.System.DNCancelEventHandler);
    procedure add_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Close; overload;
    procedure Close(reason: DNToolStripDropDownCloseReason); overload;
    procedure Show; overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint); overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(control: DNControl; x: Int32; y: Int32); overload;
    procedure Show(screenLocation: DDN.System.Drawing.DNPoint); overload;
    procedure Show(position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(x: Int32; y: Int32); overload;
    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property ShowImageMargin: Boolean read get_ShowImageMargin write set_ShowImageMargin;
    property ShowCheckMargin: Boolean read get_ShowCheckMargin write set_ShowCheckMargin;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoClose: Boolean read get_AutoClose write set_AutoClose;
    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DropShadowEnabled: Boolean read get_DropShadowEnabled write set_DropShadowEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property IsAutoGenerated: Boolean read get_IsAutoGenerated;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property OwnerItem: DNToolStripItem read get_OwnerItem write set_OwnerItem;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Visible: Boolean read get_Visible write set_Visible;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property Orientation: DNOrientation read get_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripDropDownMenu = class(TDNGenericImport<DNToolStripDropDownMenuClass, DNToolStripDropDownMenu>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNContextMenuStripClass = interface(DNToolStripDropDownMenuClass)
  ['{A1BA2ED1-59FC-5422-A45C-065376609563}']
  { constructors } 

    {class} function init(container: DDN.System.DNIContainer): DNContextMenuStrip; overload;
    {class} function init: DNContextMenuStrip; overload;

  end;

  [DNTypeName('System.Windows.Forms.ContextMenuStrip')]
  DNContextMenuStrip = interface(DNToolStripDropDownMenu)
  ['{D84F5EBD-F1F2-3849-98D7-6FDBA13AC6AB}']
  { getters & setters } 

    function get_SourceControl: DNControl;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_LayoutEngine: DNLayoutEngine;
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_ShowImageMargin: Boolean;
    procedure set_ShowImageMargin(value: Boolean);
    function get_ShowCheckMargin: Boolean;
    procedure set_ShowCheckMargin(value: Boolean);
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoClose: Boolean;
    procedure set_AutoClose(value: Boolean);
    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DropShadowEnabled: Boolean;
    procedure set_DropShadowEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_IsAutoGenerated: Boolean;
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_OwnerItem: DNToolStripItem;
    procedure set_OwnerItem(value: DNToolStripItem);
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_Items: DNToolStripItemCollection;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_Orientation: DNOrientation;
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure remove_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure add_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure remove_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_Opening(value: DDN.System.DNCancelEventHandler);
    procedure remove_Opening(value: DDN.System.DNCancelEventHandler);
    procedure add_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Close; overload;
    procedure Close(reason: DNToolStripDropDownCloseReason); overload;
    procedure Show; overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint); overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(control: DNControl; x: Int32; y: Int32); overload;
    procedure Show(screenLocation: DDN.System.Drawing.DNPoint); overload;
    procedure Show(position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(x: Int32; y: Int32); overload;
    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property SourceControl: DNControl read get_SourceControl;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property ShowImageMargin: Boolean read get_ShowImageMargin write set_ShowImageMargin;
    property ShowCheckMargin: Boolean read get_ShowCheckMargin write set_ShowCheckMargin;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoClose: Boolean read get_AutoClose write set_AutoClose;
    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DropShadowEnabled: Boolean read get_DropShadowEnabled write set_DropShadowEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property IsAutoGenerated: Boolean read get_IsAutoGenerated;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property OwnerItem: DNToolStripItem read get_OwnerItem write set_OwnerItem;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Visible: Boolean read get_Visible write set_Visible;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property Items: DNToolStripItemCollection read get_Items;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property Orientation: DNOrientation read get_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNContextMenuStrip = class(TDNGenericImport<DNContextMenuStripClass, DNContextMenuStrip>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripOverflowClass = interface(DNToolStripDropDownClass)
  ['{B5595BCA-378A-558E-8D40-F27848EA2FC2}']
  { constructors } 

    {class} function init(parentItem: DNToolStripItem): DNToolStripOverflow;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripOverflow')]
  DNToolStripOverflow = interface(DNToolStripDropDown)
  ['{8C9707C6-8357-3E1D-9BFF-FA52004A47CF}']
  { getters & setters } 

    function get_Items: DNToolStripItemCollection;
    function get_LayoutEngine: DNLayoutEngine;
    function get_AllowItemReorder: Boolean;
    procedure set_AllowItemReorder(value: Boolean);
    function get_AllowTransparency: Boolean;
    procedure set_AllowTransparency(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoClose: Boolean;
    procedure set_AutoClose(value: Boolean);
    function get_CanOverflow: Boolean;
    procedure set_CanOverflow(value: Boolean);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultDropDownDirection: DNToolStripDropDownDirection;
    procedure set_DefaultDropDownDirection(value: DNToolStripDropDownDirection);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DropShadowEnabled: Boolean;
    procedure set_DropShadowEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_GripDisplayStyle: DNToolStripGripDisplayStyle;
    function get_GripRectangle: DDN.System.Drawing.DNRectangle;
    function get_GripMargin: DNPadding;
    procedure set_GripMargin(value: DNPadding);
    function get_GripStyle: DNToolStripGripStyle;
    procedure set_GripStyle(value: DNToolStripGripStyle);
    function get_IsAutoGenerated: Boolean;
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Opacity: Double;
    procedure set_Opacity(value: Double);
    function get_OverflowButton: DNToolStripOverflowButton;
    function get_OwnerItem: DNToolStripItem;
    procedure set_OwnerItem(value: DNToolStripItem);
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Stretch: Boolean;
    procedure set_Stretch(value: Boolean);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TopLevel: Boolean;
    procedure set_TopLevel(value: Boolean);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_AutoScroll: Boolean;
    procedure set_AutoScroll(value: Boolean);
    function get_AutoScrollMargin: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMargin(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollMinSize: DDN.System.Drawing.DNSize;
    procedure set_AutoScrollMinSize(value: DDN.System.Drawing.DNSize);
    function get_AutoScrollPosition: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollPosition(value: DDN.System.Drawing.DNPoint);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AllowMerge: Boolean;
    procedure set_AllowMerge(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_Controls: DNControl_ControlCollection;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HasChildren: Boolean;
    function get_HorizontalScroll: DNHScrollProperties;
    function get_ImageScalingSize: DDN.System.Drawing.DNSize;
    procedure set_ImageScalingSize(value: DDN.System.Drawing.DNSize);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_IsCurrentlyDragging: Boolean;
    function get_IsDropDown: Boolean;
    function get_LayoutSettings: DNLayoutSettings;
    procedure set_LayoutSettings(value: DNLayoutSettings);
    function get_LayoutStyle: DNToolStripLayoutStyle;
    procedure set_LayoutStyle(value: DNToolStripLayoutStyle);
    function get_Orientation: DNOrientation;
    function get_Renderer: DNToolStripRenderer;
    procedure set_Renderer(value: DNToolStripRenderer);
    function get_RenderMode: DNToolStripRenderMode;
    procedure set_RenderMode(value: DNToolStripRenderMode);
    function get_ShowItemToolTips: Boolean;
    procedure set_ShowItemToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_VerticalScroll: DNVScrollProperties;
    function get_DockPadding: DNScrollableControl_DockPaddingEdges;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure remove_Closed(value: DNToolStripDropDownClosedEventHandler);
    procedure add_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure remove_Closing(value: DNToolStripDropDownClosingEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_Opening(value: DDN.System.DNCancelEventHandler);
    procedure remove_Opening(value: DDN.System.DNCancelEventHandler);
    procedure add_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Opened(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BeginDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EndDrag(value: DDN.mscorlib.DNEventHandler);
    procedure add_ItemAdded(value: DNToolStripItemEventHandler);
    procedure remove_ItemAdded(value: DNToolStripItemEventHandler);
    procedure add_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_ItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure remove_ItemRemoved(value: DNToolStripItemEventHandler);
    procedure add_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutCompleted(value: DDN.mscorlib.DNEventHandler);
    procedure add_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LayoutStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaintGrip(value: DNPaintEventHandler);
    procedure remove_PaintGrip(value: DNPaintEventHandler);
    procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure Close; overload;
    procedure Close(reason: DNToolStripDropDownCloseReason); overload;
    procedure Show; overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint); overload;
    procedure Show(control: DNControl; position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(control: DNControl; x: Int32; y: Int32); overload;
    procedure Show(screenLocation: DDN.System.Drawing.DNPoint); overload;
    procedure Show(position: DDN.System.Drawing.DNPoint; direction: DNToolStripDropDownDirection); overload;
    procedure Show(x: Int32; y: Int32); overload;
    function GetNextItem(start: DNToolStripItem; direction: DNArrowDirection): DNToolStripItem;
    function GetChildAtPoint(point: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetItemAt(x: Int32; y: Int32): DNToolStripItem; overload;
    function GetItemAt(point: DDN.System.Drawing.DNPoint): DNToolStripItem; overload;
    procedure ResetMinimumSize;
    procedure SetAutoScrollMargin(x: Int32; y: Int32);
    function ToString: string;
    procedure ScrollControlIntoView(activeControl: DNControl);
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Items: DNToolStripItemCollection read get_Items;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property AllowItemReorder: Boolean read get_AllowItemReorder write set_AllowItemReorder;
    property AllowTransparency: Boolean read get_AllowTransparency write set_AllowTransparency;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoClose: Boolean read get_AutoClose write set_AutoClose;
    property CanOverflow: Boolean read get_CanOverflow write set_CanOverflow;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultDropDownDirection: DNToolStripDropDownDirection read get_DefaultDropDownDirection write set_DefaultDropDownDirection;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DropShadowEnabled: Boolean read get_DropShadowEnabled write set_DropShadowEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property GripDisplayStyle: DNToolStripGripDisplayStyle read get_GripDisplayStyle;
    property GripRectangle: DDN.System.Drawing.DNRectangle read get_GripRectangle;
    property GripMargin: DNPadding read get_GripMargin write set_GripMargin;
    property GripStyle: DNToolStripGripStyle read get_GripStyle write set_GripStyle;
    property IsAutoGenerated: Boolean read get_IsAutoGenerated;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Opacity: Double read get_Opacity write set_Opacity;
    property OverflowButton: DNToolStripOverflowButton read get_OverflowButton;
    property OwnerItem: DNToolStripItem read get_OwnerItem write set_OwnerItem;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Stretch: Boolean read get_Stretch write set_Stretch;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TopLevel: Boolean read get_TopLevel write set_TopLevel;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Visible: Boolean read get_Visible write set_Visible;
    property AutoScroll: Boolean read get_AutoScroll write set_AutoScroll;
    property AutoScrollMargin: DDN.System.Drawing.DNSize read get_AutoScrollMargin write set_AutoScrollMargin;
    property AutoScrollMinSize: DDN.System.Drawing.DNSize read get_AutoScrollMinSize write set_AutoScrollMinSize;
    property AutoScrollPosition: DDN.System.Drawing.DNPoint read get_AutoScrollPosition write set_AutoScrollPosition;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AllowMerge: Boolean read get_AllowMerge write set_AllowMerge;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HasChildren: Boolean read get_HasChildren;
    property HorizontalScroll: DNHScrollProperties read get_HorizontalScroll;
    property ImageScalingSize: DDN.System.Drawing.DNSize read get_ImageScalingSize write set_ImageScalingSize;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property IsCurrentlyDragging: Boolean read get_IsCurrentlyDragging;
    property IsDropDown: Boolean read get_IsDropDown;
    property LayoutSettings: DNLayoutSettings read get_LayoutSettings write set_LayoutSettings;
    property LayoutStyle: DNToolStripLayoutStyle read get_LayoutStyle write set_LayoutStyle;
    property Orientation: DNOrientation read get_Orientation;
    property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    property RenderMode: DNToolStripRenderMode read get_RenderMode write set_RenderMode;
    property ShowItemToolTips: Boolean read get_ShowItemToolTips write set_ShowItemToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property VerticalScroll: DNVScrollProperties read get_VerticalScroll;
    property DockPadding: DNScrollableControl_DockPaddingEdges read get_DockPadding;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripOverflow = class(TDNGenericImport<DNToolStripOverflowClass, DNToolStripOverflow>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollBarClass = interface(DNControlClass)
  ['{8C5DA27E-58A7-54E1-BC16-408DDAEB8895}']
  { constructors } 

    {class} function init: DNScrollBar;

  end;

  [DNTypeName('System.Windows.Forms.ScrollBar')]
  DNScrollBar = interface(DNControl)
  ['{526FCC1C-A977-34DE-848F-D2D18F15AD43}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_ScaleScrollBarForDpiChange: Boolean;
    procedure set_ScaleScrollBarForDpiChange(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property Value: Int32 read get_Value write set_Value;
    property ScaleScrollBarForDpiChange: Boolean read get_ScaleScrollBarForDpiChange write set_ScaleScrollBarForDpiChange;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNScrollBar = class(TDNGenericImport<DNScrollBarClass, DNScrollBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHScrollBarClass = interface(DNScrollBarClass)
  ['{3700CA5E-C721-518C-80DC-84A3B0E3551B}']
  { constructors } 

    {class} function init: DNHScrollBar;

  end;

  [DNTypeName('System.Windows.Forms.HScrollBar')]
  DNHScrollBar = interface(DNScrollBar)
  ['{F835D22E-51EB-3A49-93A3-34558BE9C825}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_ScaleScrollBarForDpiChange: Boolean;
    procedure set_ScaleScrollBarForDpiChange(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property Value: Int32 read get_Value write set_Value;
    property ScaleScrollBarForDpiChange: Boolean read get_ScaleScrollBarForDpiChange write set_ScaleScrollBarForDpiChange;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNHScrollBar = class(TDNGenericImport<DNHScrollBarClass, DNHScrollBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNVScrollBarClass = interface(DNScrollBarClass)
  ['{89592981-030C-59A3-9F59-BB9D4C499549}']
  { constructors } 

    {class} function init: DNVScrollBar;

  end;

  [DNTypeName('System.Windows.Forms.VScrollBar')]
  DNVScrollBar = interface(DNScrollBar)
  ['{CB040AB2-71CB-3546-9881-53CA472CEB3B}']
  { getters & setters } 

    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_ScaleScrollBarForDpiChange: Boolean;
    procedure set_ScaleScrollBarForDpiChange(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_Scroll(value: DNScrollEventHandler);
    procedure remove_Scroll(value: DNScrollEventHandler);
    procedure add_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property Value: Int32 read get_Value write set_Value;
    property ScaleScrollBarForDpiChange: Boolean read get_ScaleScrollBarForDpiChange write set_ScaleScrollBarForDpiChange;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNVScrollBar = class(TDNGenericImport<DNVScrollBarClass, DNVScrollBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSplitterClass = interface(DNControlClass)
  ['{13A57FEF-760F-5786-89F7-56EACA41D280}']
  { constructors } 

    {class} function init: DNSplitter;

  end;

  [DNTypeName('System.Windows.Forms.Splitter')]
  DNSplitter = interface(DNControl)
  ['{4BDF38BF-91E6-33D0-AC66-BF7682617615}']
  { getters & setters } 

    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_MinExtra: Int32;
    procedure set_MinExtra(value: Int32);
    function get_MinSize: Int32;
    procedure set_MinSize(value: Int32);
    function get_SplitPosition: Int32;
    procedure set_SplitPosition(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_SplitterMoving(value: DNSplitterEventHandler);
    procedure remove_SplitterMoving(value: DNSplitterEventHandler);
    procedure add_SplitterMoved(value: DNSplitterEventHandler);
    procedure remove_SplitterMoved(value: DNSplitterEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property MinExtra: Int32 read get_MinExtra write set_MinExtra;
    property MinSize: Int32 read get_MinSize write set_MinSize;
    property SplitPosition: Int32 read get_SplitPosition write set_SplitPosition;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNSplitter = class(TDNGenericImport<DNSplitterClass, DNSplitter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNStatusBarClass = interface(DNControlClass)
  ['{07396B11-FBD6-574E-99C7-0E524CC6DE8B}']
  { constructors } 

    {class} function init: DNStatusBar;

  end;

  [DNTypeName('System.Windows.Forms.StatusBar')]
  DNStatusBar = interface(DNControl)
  ['{632D5C3D-6594-33E9-B361-9BCF6946B45A}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Panels: DNStatusBar_StatusBarPanelCollection;
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ShowPanels: Boolean;
    procedure set_ShowPanels(value: Boolean);
    function get_SizingGrip: Boolean;
    procedure set_SizingGrip(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DrawItem(value: DNStatusBarDrawItemEventHandler);
    procedure remove_DrawItem(value: DNStatusBarDrawItemEventHandler);
    procedure add_PanelClick(value: DNStatusBarPanelClickEventHandler);
    procedure remove_PanelClick(value: DNStatusBarPanelClickEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Panels: DNStatusBar_StatusBarPanelCollection read get_Panels;
    property Text: string read get_Text write set_Text;
    property ShowPanels: Boolean read get_ShowPanels write set_ShowPanels;
    property SizingGrip: Boolean read get_SizingGrip write set_SizingGrip;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNStatusBar = class(TDNGenericImport<DNStatusBarClass, DNStatusBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabControlClass = interface(DNControlClass)
  ['{FB4A7A83-32E3-54B8-8DD0-8B4A3D2582AF}']
  { constructors } 

    {class} function init: DNTabControl;

  end;

  [DNTypeName('System.Windows.Forms.TabControl')]
  DNTabControl = interface(DNControl)
  ['{3863B485-0904-3D25-89D0-190AD0321D29}']
  { getters & setters } 

    function get_Alignment: DNTabAlignment;
    procedure set_Alignment(value: DNTabAlignment);
    function get_Appearance: DNTabAppearance;
    procedure set_Appearance(value: DNTabAppearance);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_DrawMode: DNTabDrawMode;
    procedure set_DrawMode(value: DNTabDrawMode);
    function get_HotTrack: Boolean;
    procedure set_HotTrack(value: Boolean);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ItemSize: DDN.System.Drawing.DNSize;
    procedure set_ItemSize(value: DDN.System.Drawing.DNSize);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_Padding: DDN.System.Drawing.DNPoint;
    procedure set_Padding(value: DDN.System.Drawing.DNPoint);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_RowCount: Int32;
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedTab: DNTabPage;
    procedure set_SelectedTab(value: DNTabPage);
    function get_SizeMode: DNTabSizeMode;
    procedure set_SizeMode(value: DNTabSizeMode);
    function get_ShowToolTips: Boolean;
    procedure set_ShowToolTips(value: Boolean);
    function get_TabCount: Int32;
    function get_TabPages: DNTabControl_TabPageCollection;
    function get_Text: string;
    procedure set_Text(value: string);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DrawItem(value: DNDrawItemEventHandler);
    procedure remove_DrawItem(value: DNDrawItemEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Selecting(value: DNTabControlCancelEventHandler);
    procedure remove_Selecting(value: DNTabControlCancelEventHandler);
    procedure add_Selected(value: DNTabControlEventHandler);
    procedure remove_Selected(value: DNTabControlEventHandler);
    procedure add_Deselecting(value: DNTabControlCancelEventHandler);
    procedure remove_Deselecting(value: DNTabControlCancelEventHandler);
    procedure add_Deselected(value: DNTabControlEventHandler);
    procedure remove_Deselected(value: DNTabControlEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure DeselectTab(index: Int32); overload;
    procedure DeselectTab(tabPage: DNTabPage); overload;
    procedure DeselectTab(tabPageName: string); overload;
    function GetControl(index: Int32): DNControl;
    function GetTabRect(index: Int32): DDN.System.Drawing.DNRectangle;
    procedure SelectTab(index: Int32); overload;
    procedure SelectTab(tabPage: DNTabPage); overload;
    procedure SelectTab(tabPageName: string); overload;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Alignment: DNTabAlignment read get_Alignment write set_Alignment;
    property Appearance: DNTabAppearance read get_Appearance write set_Appearance;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property DrawMode: DNTabDrawMode read get_DrawMode write set_DrawMode;
    property HotTrack: Boolean read get_HotTrack write set_HotTrack;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ItemSize: DDN.System.Drawing.DNSize read get_ItemSize write set_ItemSize;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property Padding: DDN.System.Drawing.DNPoint read get_Padding write set_Padding;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property RowCount: Int32 read get_RowCount;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedTab: DNTabPage read get_SelectedTab write set_SelectedTab;
    property SizeMode: DNTabSizeMode read get_SizeMode write set_SizeMode;
    property ShowToolTips: Boolean read get_ShowToolTips write set_ShowToolTips;
    property TabCount: Int32 read get_TabCount;
    property TabPages: DNTabControl_TabPageCollection read get_TabPages;
    property Text: string read get_Text write set_Text;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTabControl = class(TDNGenericImport<DNTabControlClass, DNTabControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTextBoxBaseClass = interface(DNControlClass)
  ['{D8A6799F-DB1A-5813-89CB-62A956376F98}']
  end;

  [DNTypeName('System.Windows.Forms.TextBoxBase')]
  DNTextBoxBase = interface(DNControl)
  ['{B19C1A95-B668-36DA-8D1D-A2F020F78C3C}']
  { getters & setters } 

    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CanUndo: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextLength: Int32;
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    procedure AppendText(text: string);
    procedure Clear;
    procedure ClearUndo;
    procedure Copy;
    procedure Cut;
    procedure Paste;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    function GetFirstCharIndexOfCurrentLine: Int32;
    procedure ScrollToCaret;
    procedure DeselectAll;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    procedure Undo;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CanUndo: Boolean read get_CanUndo;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Modified: Boolean read get_Modified write set_Modified;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property Text: string read get_Text write set_Text;
    property TextLength: Int32 read get_TextLength;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTextBoxBase = class(TDNGenericImport<DNTextBoxBaseClass, DNTextBoxBase>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMaskedTextBoxClass = interface(DNTextBoxBaseClass)
  ['{C03678C6-964A-546E-AF77-0D3ED16C9CBC}']
  { constructors } 

    {class} function init: DNMaskedTextBox; overload;
    {class} function init(mask: string): DNMaskedTextBox; overload;
    {class} function init(maskedTextProvider: DDN.System.DNMaskedTextProvider): DNMaskedTextBox; overload;

  end;

  [DNTypeName('System.Windows.Forms.MaskedTextBox')]
  DNMaskedTextBox = interface(DNTextBoxBase)
  ['{9C5E8CFB-CAC0-3167-ACEE-BFDD8B5D2238}']
  { getters & setters } 

    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_AllowPromptAsInput: Boolean;
    procedure set_AllowPromptAsInput(value: Boolean);
    function get_AsciiOnly: Boolean;
    procedure set_AsciiOnly(value: Boolean);
    function get_BeepOnError: Boolean;
    procedure set_BeepOnError(value: Boolean);
    function get_CanUndo: Boolean;
    function get_Culture: DDN.mscorlib.DNCultureInfo;
    procedure set_Culture(value: DDN.mscorlib.DNCultureInfo);
    function get_CutCopyMaskFormat: DNMaskFormat;
    procedure set_CutCopyMaskFormat(value: DNMaskFormat);
    function get_FormatProvider: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatProvider(value: DDN.mscorlib.DNIFormatProvider);
    function get_HidePromptOnLeave: Boolean;
    procedure set_HidePromptOnLeave(value: Boolean);
    function get_InsertKeyMode: DNInsertKeyMode;
    procedure set_InsertKeyMode(value: DNInsertKeyMode);
    function get_IsOverwriteMode: Boolean;
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_Mask: string;
    procedure set_Mask(value: string);
    function get_MaskCompleted: Boolean;
    function get_MaskFull: Boolean;
    function get_MaskedTextProvider: DDN.System.DNMaskedTextProvider;
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_PasswordChar: Char;
    procedure set_PasswordChar(value: Char);
    function get_PromptChar: Char;
    procedure set_PromptChar(value: Char);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_RejectInputOnFirstFailure: Boolean;
    procedure set_RejectInputOnFirstFailure(value: Boolean);
    function get_ResetOnPrompt: Boolean;
    procedure set_ResetOnPrompt(value: Boolean);
    function get_ResetOnSpace: Boolean;
    procedure set_ResetOnSpace(value: Boolean);
    function get_SkipLiterals: Boolean;
    procedure set_SkipLiterals(value: Boolean);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextLength: Int32;
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_TextMaskFormat: DNMaskFormat;
    procedure set_TextMaskFormat(value: DNMaskFormat);
    function get_UseSystemPasswordChar: Boolean;
    procedure set_UseSystemPasswordChar(value: Boolean);
    function get_ValidatingType: DDN.mscorlib.DNType;
    procedure set_ValidatingType(value: DDN.mscorlib.DNType);
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_IsOverwriteModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_IsOverwriteModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MaskChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MaskChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MaskInputRejected(value: DNMaskInputRejectedEventHandler);
    procedure remove_MaskInputRejected(value: DNMaskInputRejectedEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TypeValidationCompleted(value: DNTypeValidationEventHandler);
    procedure remove_TypeValidationCompleted(value: DNTypeValidationEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    function ToString: string;
    procedure ClearUndo;
    function GetFirstCharIndexOfCurrentLine: Int32;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    procedure ScrollToCaret;
    procedure Undo;
    function ValidateText: DDN.mscorlib.DNObject;
    procedure AppendText(text: string);
    procedure Clear;
    procedure Copy;
    procedure Cut;
    procedure Paste;
    procedure DeselectAll;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property AllowPromptAsInput: Boolean read get_AllowPromptAsInput write set_AllowPromptAsInput;
    property AsciiOnly: Boolean read get_AsciiOnly write set_AsciiOnly;
    property BeepOnError: Boolean read get_BeepOnError write set_BeepOnError;
    property CanUndo: Boolean read get_CanUndo;
    property Culture: DDN.mscorlib.DNCultureInfo read get_Culture write set_Culture;
    property CutCopyMaskFormat: DNMaskFormat read get_CutCopyMaskFormat write set_CutCopyMaskFormat;
    property FormatProvider: DDN.mscorlib.DNIFormatProvider read get_FormatProvider write set_FormatProvider;
    property HidePromptOnLeave: Boolean read get_HidePromptOnLeave write set_HidePromptOnLeave;
    property InsertKeyMode: DNInsertKeyMode read get_InsertKeyMode write set_InsertKeyMode;
    property IsOverwriteMode: Boolean read get_IsOverwriteMode;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property Mask: string read get_Mask write set_Mask;
    property MaskCompleted: Boolean read get_MaskCompleted;
    property MaskFull: Boolean read get_MaskFull;
    property MaskedTextProvider: DDN.System.DNMaskedTextProvider read get_MaskedTextProvider;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property PasswordChar: Char read get_PasswordChar write set_PasswordChar;
    property PromptChar: Char read get_PromptChar write set_PromptChar;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property RejectInputOnFirstFailure: Boolean read get_RejectInputOnFirstFailure write set_RejectInputOnFirstFailure;
    property ResetOnPrompt: Boolean read get_ResetOnPrompt write set_ResetOnPrompt;
    property ResetOnSpace: Boolean read get_ResetOnSpace write set_ResetOnSpace;
    property SkipLiterals: Boolean read get_SkipLiterals write set_SkipLiterals;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property Text: string read get_Text write set_Text;
    property TextLength: Int32 read get_TextLength;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property TextMaskFormat: DNMaskFormat read get_TextMaskFormat write set_TextMaskFormat;
    property UseSystemPasswordChar: Boolean read get_UseSystemPasswordChar write set_UseSystemPasswordChar;
    property ValidatingType: DDN.mscorlib.DNType read get_ValidatingType write set_ValidatingType;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Modified: Boolean read get_Modified write set_Modified;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMaskedTextBox = class(TDNGenericImport<DNMaskedTextBoxClass, DNMaskedTextBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRichTextBoxClass = interface(DNTextBoxBaseClass)
  ['{DB27FB09-966A-5042-B9AF-752471AF157F}']
  { constructors } 

    {class} function init: DNRichTextBox;

  end;

  [DNTypeName('System.Windows.Forms.RichTextBox')]
  DNRichTextBox = interface(DNTextBoxBase)
  ['{5FBA0DDC-0B9F-3E4F-B99D-B3F297E9820D}']
  { getters & setters } 

    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoWordSelection: Boolean;
    procedure set_AutoWordSelection(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BulletIndent: Int32;
    procedure set_BulletIndent(value: Int32);
    function get_CanRedo: Boolean;
    function get_DetectUrls: Boolean;
    procedure set_DetectUrls(value: Boolean);
    function get_EnableAutoDragDrop: Boolean;
    procedure set_EnableAutoDragDrop(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_LanguageOption: DNRichTextBoxLanguageOptions;
    procedure set_LanguageOption(value: DNRichTextBoxLanguageOptions);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_RedoActionName: string;
    function get_RichTextShortcutsEnabled: Boolean;
    procedure set_RichTextShortcutsEnabled(value: Boolean);
    function get_RightMargin: Int32;
    procedure set_RightMargin(value: Int32);
    function get_Rtf: string;
    procedure set_Rtf(value: string);
    function get_ScrollBars: DNRichTextBoxScrollBars;
    procedure set_ScrollBars(value: DNRichTextBoxScrollBars);
    function get_SelectionAlignment: DNHorizontalAlignment;
    procedure set_SelectionAlignment(value: DNHorizontalAlignment);
    function get_SelectionBullet: Boolean;
    procedure set_SelectionBullet(value: Boolean);
    function get_SelectionCharOffset: Int32;
    procedure set_SelectionCharOffset(value: Int32);
    function get_SelectionColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionColor(value: DDN.System.Drawing.DNColor);
    function get_SelectionBackColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionBackColor(value: DDN.System.Drawing.DNColor);
    function get_SelectionFont: DDN.System.Drawing.DNFont;
    procedure set_SelectionFont(value: DDN.System.Drawing.DNFont);
    function get_SelectionHangingIndent: Int32;
    procedure set_SelectionHangingIndent(value: Int32);
    function get_SelectionIndent: Int32;
    procedure set_SelectionIndent(value: Int32);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionProtected: Boolean;
    procedure set_SelectionProtected(value: Boolean);
    function get_SelectedRtf: string;
    procedure set_SelectedRtf(value: string);
    function get_SelectionRightIndent: Int32;
    procedure set_SelectionRightIndent(value: Int32);
    function get_SelectionTabs: TArray<Int32>;
    procedure set_SelectionTabs(value: TArray<Int32>);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionType: DNRichTextBoxSelectionTypes;
    function get_ShowSelectionMargin: Boolean;
    procedure set_ShowSelectionMargin(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextLength: Int32;
    function get_UndoActionName: string;
    function get_ZoomFactor: Single;
    procedure set_ZoomFactor(value: Single);
    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CanUndo: Boolean;
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContentsResized(value: DNContentsResizedEventHandler);
    procedure remove_ContentsResized(value: DNContentsResizedEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_HScroll(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HScroll(value: DDN.mscorlib.DNEventHandler);
    procedure add_LinkClicked(value: DNLinkClickedEventHandler);
    procedure remove_LinkClicked(value: DNLinkClickedEventHandler);
    procedure add_ImeChange(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeChange(value: DDN.mscorlib.DNEventHandler);
    procedure add_Protected(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Protected(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VScroll(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VScroll(value: DDN.mscorlib.DNEventHandler);
    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    function CanPaste(clipFormat: DNDataFormats_Format): Boolean;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function Find(str: string): Int32; overload;
    function Find(str: string; options: DNRichTextBoxFinds): Int32; overload;
    function Find(str: string; start: Int32; options: DNRichTextBoxFinds): Int32; overload;
    function Find(str: string; start: Int32; &end: Int32; options: DNRichTextBoxFinds): Int32; overload;
    function Find(characterSet: TArray<Char>): Int32; overload;
    function Find(characterSet: TArray<Char>; start: Int32): Int32; overload;
    function Find(characterSet: TArray<Char>; start: Int32; &end: Int32): Int32; overload;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    procedure LoadFile(path: string); overload;
    procedure LoadFile(path: string; fileType: DNRichTextBoxStreamType); overload;
    procedure LoadFile(data: DDN.mscorlib.DNStream; fileType: DNRichTextBoxStreamType); overload;
    procedure Paste(clipFormat: DNDataFormats_Format); overload;
    procedure Redo;
    procedure SaveFile(path: string); overload;
    procedure SaveFile(path: string; fileType: DNRichTextBoxStreamType); overload;
    procedure SaveFile(data: DDN.mscorlib.DNStream; fileType: DNRichTextBoxStreamType); overload;
    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    procedure AppendText(text: string);
    procedure Clear;
    procedure ClearUndo;
    procedure Copy;
    procedure Cut;
    procedure Paste; overload;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    function GetFirstCharIndexOfCurrentLine: Int32;
    procedure ScrollToCaret;
    procedure DeselectAll;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    procedure Undo;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoWordSelection: Boolean read get_AutoWordSelection write set_AutoWordSelection;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BulletIndent: Int32 read get_BulletIndent write set_BulletIndent;
    property CanRedo: Boolean read get_CanRedo;
    property DetectUrls: Boolean read get_DetectUrls write set_DetectUrls;
    property EnableAutoDragDrop: Boolean read get_EnableAutoDragDrop write set_EnableAutoDragDrop;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property LanguageOption: DNRichTextBoxLanguageOptions read get_LanguageOption write set_LanguageOption;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property RedoActionName: string read get_RedoActionName;
    property RichTextShortcutsEnabled: Boolean read get_RichTextShortcutsEnabled write set_RichTextShortcutsEnabled;
    property RightMargin: Int32 read get_RightMargin write set_RightMargin;
    property Rtf: string read get_Rtf write set_Rtf;
    property ScrollBars: DNRichTextBoxScrollBars read get_ScrollBars write set_ScrollBars;
    property SelectionAlignment: DNHorizontalAlignment read get_SelectionAlignment write set_SelectionAlignment;
    property SelectionBullet: Boolean read get_SelectionBullet write set_SelectionBullet;
    property SelectionCharOffset: Int32 read get_SelectionCharOffset write set_SelectionCharOffset;
    property SelectionColor: DDN.System.Drawing.DNColor read get_SelectionColor write set_SelectionColor;
    property SelectionBackColor: DDN.System.Drawing.DNColor read get_SelectionBackColor write set_SelectionBackColor;
    property SelectionFont: DDN.System.Drawing.DNFont read get_SelectionFont write set_SelectionFont;
    property SelectionHangingIndent: Int32 read get_SelectionHangingIndent write set_SelectionHangingIndent;
    property SelectionIndent: Int32 read get_SelectionIndent write set_SelectionIndent;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionProtected: Boolean read get_SelectionProtected write set_SelectionProtected;
    property SelectedRtf: string read get_SelectedRtf write set_SelectedRtf;
    property SelectionRightIndent: Int32 read get_SelectionRightIndent write set_SelectionRightIndent;
    property SelectionTabs: TArray<Int32> read get_SelectionTabs write set_SelectionTabs;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionType: DNRichTextBoxSelectionTypes read get_SelectionType;
    property ShowSelectionMargin: Boolean read get_ShowSelectionMargin write set_ShowSelectionMargin;
    property Text: string read get_Text write set_Text;
    property TextLength: Int32 read get_TextLength;
    property UndoActionName: string read get_UndoActionName;
    property ZoomFactor: Single read get_ZoomFactor write set_ZoomFactor;
    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CanUndo: Boolean read get_CanUndo;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property Modified: Boolean read get_Modified write set_Modified;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNRichTextBox = class(TDNGenericImport<DNRichTextBoxClass, DNRichTextBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTextBoxClass = interface(DNTextBoxBaseClass)
  ['{F4728517-4BAD-5919-B03D-E9347C0EA0AA}']
  { constructors } 

    {class} function init: DNTextBox;

  end;

  [DNTypeName('System.Windows.Forms.TextBox')]
  DNTextBox = interface(DNTextBoxBase)
  ['{63C8A502-7863-3F66-998D-79BD0219D2E0}']
  { getters & setters } 

    function get_AcceptsReturn: Boolean;
    procedure set_AcceptsReturn(value: Boolean);
    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_CharacterCasing: DNCharacterCasing;
    procedure set_CharacterCasing(value: DNCharacterCasing);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_PasswordChar: Char;
    procedure set_PasswordChar(value: Char);
    function get_ScrollBars: DNScrollBars;
    procedure set_ScrollBars(value: DNScrollBars);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_UseSystemPasswordChar: Boolean;
    procedure set_UseSystemPasswordChar(value: Boolean);
    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CanUndo: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_TextLength: Int32;
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Paste(text: string); overload;
    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    procedure AppendText(text: string);
    procedure Clear;
    procedure ClearUndo;
    procedure Copy;
    procedure Cut;
    procedure Paste; overload;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    function GetFirstCharIndexOfCurrentLine: Int32;
    procedure ScrollToCaret;
    procedure DeselectAll;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    procedure Undo;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AcceptsReturn: Boolean read get_AcceptsReturn write set_AcceptsReturn;
    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property CharacterCasing: DNCharacterCasing read get_CharacterCasing write set_CharacterCasing;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property PasswordChar: Char read get_PasswordChar write set_PasswordChar;
    property ScrollBars: DNScrollBars read get_ScrollBars write set_ScrollBars;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property UseSystemPasswordChar: Boolean read get_UseSystemPasswordChar write set_UseSystemPasswordChar;
    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CanUndo: Boolean read get_CanUndo;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Modified: Boolean read get_Modified write set_Modified;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property TextLength: Int32 read get_TextLength;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTextBox = class(TDNGenericImport<DNTextBoxClass, DNTextBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridTextBoxClass = interface(DNTextBoxClass)
  ['{025E2803-ED58-5825-9EBD-5C7A2C371F05}']
  { constructors } 

    {class} function init: DNDataGridTextBox;

  end;

  [DNTypeName('System.Windows.Forms.DataGridTextBox')]
  DNDataGridTextBox = interface(DNTextBox)
  ['{0B420F33-D20B-329D-A609-5783B3E79722}']
  { getters & setters } 

    function get_IsInEditOrNavigateMode: Boolean;
    procedure set_IsInEditOrNavigateMode(value: Boolean);
    function get_AcceptsReturn: Boolean;
    procedure set_AcceptsReturn(value: Boolean);
    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_CharacterCasing: DNCharacterCasing;
    procedure set_CharacterCasing(value: DNCharacterCasing);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_PasswordChar: Char;
    procedure set_PasswordChar(value: Char);
    function get_ScrollBars: DNScrollBars;
    procedure set_ScrollBars(value: DNScrollBars);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_UseSystemPasswordChar: Boolean;
    procedure set_UseSystemPasswordChar(value: Boolean);
    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CanUndo: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_TextLength: Int32;
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure SetDataGrid(parentGrid: DNDataGrid);
    procedure Paste(text: string); overload;
    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    procedure AppendText(text: string);
    procedure Clear;
    procedure ClearUndo;
    procedure Copy;
    procedure Cut;
    procedure Paste; overload;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    function GetFirstCharIndexOfCurrentLine: Int32;
    procedure ScrollToCaret;
    procedure DeselectAll;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    procedure Undo;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property IsInEditOrNavigateMode: Boolean read get_IsInEditOrNavigateMode write set_IsInEditOrNavigateMode;
    property AcceptsReturn: Boolean read get_AcceptsReturn write set_AcceptsReturn;
    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property CharacterCasing: DNCharacterCasing read get_CharacterCasing write set_CharacterCasing;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property PasswordChar: Char read get_PasswordChar write set_PasswordChar;
    property ScrollBars: DNScrollBars read get_ScrollBars write set_ScrollBars;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property UseSystemPasswordChar: Boolean read get_UseSystemPasswordChar write set_UseSystemPasswordChar;
    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CanUndo: Boolean read get_CanUndo;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Modified: Boolean read get_Modified write set_Modified;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property TextLength: Int32 read get_TextLength;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridTextBox = class(TDNGenericImport<DNDataGridTextBoxClass, DNDataGridTextBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewTextBoxEditingControlClass = interface(DNTextBoxClass)
  ['{C598855E-EB08-5EB6-8B78-F2FC6D7A7DA6}']
  { constructors } 

    {class} function init: DNDataGridViewTextBoxEditingControl;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewTextBoxEditingControl')]
  DNDataGridViewTextBoxEditingControl = interface(DNTextBox)
  ['{7065C038-BA07-337A-BFED-DE2179346428}']
  { getters & setters } 

    function get_EditingControlDataGridView: DNDataGridView;
    procedure set_EditingControlDataGridView(value: DNDataGridView);
    function get_EditingControlFormattedValue: DDN.mscorlib.DNObject;
    procedure set_EditingControlFormattedValue(value: DDN.mscorlib.DNObject);
    function get_EditingControlRowIndex: Int32;
    procedure set_EditingControlRowIndex(value: Int32);
    function get_EditingControlValueChanged: Boolean;
    procedure set_EditingControlValueChanged(value: Boolean);
    function get_EditingPanelCursor: DNCursor;
    function get_RepositionEditingControlOnValueChange: Boolean;
    function get_AcceptsReturn: Boolean;
    procedure set_AcceptsReturn(value: Boolean);
    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_CharacterCasing: DNCharacterCasing;
    procedure set_CharacterCasing(value: DNCharacterCasing);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_PasswordChar: Char;
    procedure set_PasswordChar(value: Char);
    function get_ScrollBars: DNScrollBars;
    procedure set_ScrollBars(value: DNScrollBars);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNHorizontalAlignment;
    procedure set_TextAlign(value: DNHorizontalAlignment);
    function get_UseSystemPasswordChar: Boolean;
    procedure set_UseSystemPasswordChar(value: Boolean);
    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CanUndo: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_PreferredHeight: Int32;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_TextLength: Int32;
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ApplyCellStyleToEditingControl(dataGridViewCellStyle: DNDataGridViewCellStyle);
    function GetEditingControlFormattedValue(context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure PrepareEditingControlForEdit(selectAll: Boolean);
    function EditingControlWantsInputKey(keyData: DNKeys; dataGridViewWantsInputKey: Boolean): Boolean;
    procedure Paste(text: string); overload;
    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    procedure AppendText(text: string);
    procedure Clear;
    procedure ClearUndo;
    procedure Copy;
    procedure Cut;
    procedure Paste; overload;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    function GetFirstCharIndexOfCurrentLine: Int32;
    procedure ScrollToCaret;
    procedure DeselectAll;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    procedure Undo;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select; overload;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property EditingControlDataGridView: DNDataGridView read get_EditingControlDataGridView write set_EditingControlDataGridView;
    property EditingControlFormattedValue: DDN.mscorlib.DNObject read get_EditingControlFormattedValue write set_EditingControlFormattedValue;
    property EditingControlRowIndex: Int32 read get_EditingControlRowIndex write set_EditingControlRowIndex;
    property EditingControlValueChanged: Boolean read get_EditingControlValueChanged write set_EditingControlValueChanged;
    property EditingPanelCursor: DNCursor read get_EditingPanelCursor;
    property RepositionEditingControlOnValueChange: Boolean read get_RepositionEditingControlOnValueChange;
    property AcceptsReturn: Boolean read get_AcceptsReturn write set_AcceptsReturn;
    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property CharacterCasing: DNCharacterCasing read get_CharacterCasing write set_CharacterCasing;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property PasswordChar: Char read get_PasswordChar write set_PasswordChar;
    property ScrollBars: DNScrollBars read get_ScrollBars write set_ScrollBars;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNHorizontalAlignment read get_TextAlign write set_TextAlign;
    property UseSystemPasswordChar: Boolean read get_UseSystemPasswordChar write set_UseSystemPasswordChar;
    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CanUndo: Boolean read get_CanUndo;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Modified: Boolean read get_Modified write set_Modified;
    property Padding: DNPadding read get_Padding write set_Padding;
    property PreferredHeight: Int32 read get_PreferredHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property TextLength: Int32 read get_TextLength;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridViewTextBoxEditingControl = class(TDNGenericImport<DNDataGridViewTextBoxEditingControlClass, DNDataGridViewTextBoxEditingControl>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolBarClass = interface(DNControlClass)
  ['{D3395705-5E79-5112-AEF7-43EF848BE817}']
  { constructors } 

    {class} function init: DNToolBar;

  end;

  [DNTypeName('System.Windows.Forms.ToolBar')]
  DNToolBar = interface(DNControl)
  ['{4E885C2A-C86F-3641-8D7B-9B3501449F45}']
  { getters & setters } 

    function get_Appearance: DNToolBarAppearance;
    procedure set_Appearance(value: DNToolBarAppearance);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_Buttons: DNToolBar_ToolBarButtonCollection;
    function get_ButtonSize: DDN.System.Drawing.DNSize;
    procedure set_ButtonSize(value: DDN.System.Drawing.DNSize);
    function get_Divider: Boolean;
    procedure set_Divider(value: Boolean);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DropDownArrows: Boolean;
    procedure set_DropDownArrows(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_ImageSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_ShowToolTips: Boolean;
    procedure set_ShowToolTips(value: Boolean);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DNToolBarTextAlign;
    procedure set_TextAlign(value: DNToolBarTextAlign);
    function get_Wrappable: Boolean;
    procedure set_Wrappable(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ButtonClick(value: DNToolBarButtonClickEventHandler);
    procedure remove_ButtonClick(value: DNToolBarButtonClickEventHandler);
    procedure add_ButtonDropDown(value: DNToolBarButtonClickEventHandler);
    procedure remove_ButtonDropDown(value: DNToolBarButtonClickEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Appearance: DNToolBarAppearance read get_Appearance write set_Appearance;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property Buttons: DNToolBar_ToolBarButtonCollection read get_Buttons;
    property ButtonSize: DDN.System.Drawing.DNSize read get_ButtonSize write set_ButtonSize;
    property Divider: Boolean read get_Divider write set_Divider;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DropDownArrows: Boolean read get_DropDownArrows write set_DropDownArrows;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property ImageSize: DDN.System.Drawing.DNSize read get_ImageSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property ShowToolTips: Boolean read get_ShowToolTips write set_ShowToolTips;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Text: string read get_Text write set_Text;
    property TextAlign: DNToolBarTextAlign read get_TextAlign write set_TextAlign;
    property Wrappable: Boolean read get_Wrappable write set_Wrappable;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolBar = class(TDNGenericImport<DNToolBarClass, DNToolBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTrackBarClass = interface(DNControlClass)
  ['{38B9D200-DB07-5E6F-B431-2797C20C0139}']
  { constructors } 

    {class} function init: DNTrackBar;

  end;

  [DNTypeName('System.Windows.Forms.TrackBar')]
  DNTrackBar = interface(DNControl)
  ['{606C2474-80A5-3E09-B952-724F97B00C01}']
  { getters & setters } 

    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_Orientation: DNOrientation;
    procedure set_Orientation(value: DNOrientation);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TickStyle: DNTickStyle;
    procedure set_TickStyle(value: DNTickStyle);
    function get_TickFrequency: Int32;
    procedure set_TickFrequency(value: Int32);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Scroll(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Scroll(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginInit;
    procedure EndInit;
    procedure SetRange(minValue: Int32; maxValue: Int32);
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property Orientation: DNOrientation read get_Orientation write set_Orientation;
    property Padding: DNPadding read get_Padding write set_Padding;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property Text: string read get_Text write set_Text;
    property TickStyle: DNTickStyle read get_TickStyle write set_TickStyle;
    property TickFrequency: Int32 read get_TickFrequency write set_TickFrequency;
    property Value: Int32 read get_Value write set_Value;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTrackBar = class(TDNGenericImport<DNTrackBarClass, DNTrackBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeViewClass = interface(DNControlClass)
  ['{B588051B-8918-58FF-9800-0B0385A4EC55}']
  { constructors } 

    {class} function init: DNTreeView;

  end;

  [DNTypeName('System.Windows.Forms.TreeView')]
  DNTreeView = interface(DNControl)
  ['{6FAB6F50-DFFE-35B5-9A5F-210DB36909B7}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CheckBoxes: Boolean;
    procedure set_CheckBoxes(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_FullRowSelect: Boolean;
    procedure set_FullRowSelect(value: Boolean);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_HotTracking: Boolean;
    procedure set_HotTracking(value: Boolean);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    procedure set_ImageList(value: DNImageList);
    function get_StateImageList: DNImageList;
    procedure set_StateImageList(value: DNImageList);
    function get_Indent: Int32;
    procedure set_Indent(value: Int32);
    function get_ItemHeight: Int32;
    procedure set_ItemHeight(value: Int32);
    function get_LabelEdit: Boolean;
    procedure set_LabelEdit(value: Boolean);
    function get_LineColor: DDN.System.Drawing.DNColor;
    procedure set_LineColor(value: DDN.System.Drawing.DNColor);
    function get_Nodes: DNTreeNodeCollection;
    function get_DrawMode: DNTreeViewDrawMode;
    procedure set_DrawMode(value: DNTreeViewDrawMode);
    function get_PathSeparator: string;
    procedure set_PathSeparator(value: string);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_Scrollable: Boolean;
    procedure set_Scrollable(value: Boolean);
    function get_SelectedImageIndex: Int32;
    procedure set_SelectedImageIndex(value: Int32);
    function get_SelectedImageKey: string;
    procedure set_SelectedImageKey(value: string);
    function get_SelectedNode: DNTreeNode;
    procedure set_SelectedNode(value: DNTreeNode);
    function get_ShowLines: Boolean;
    procedure set_ShowLines(value: Boolean);
    function get_ShowNodeToolTips: Boolean;
    procedure set_ShowNodeToolTips(value: Boolean);
    function get_ShowPlusMinus: Boolean;
    procedure set_ShowPlusMinus(value: Boolean);
    function get_ShowRootLines: Boolean;
    procedure set_ShowRootLines(value: Boolean);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_TreeViewNodeSorter: DDN.mscorlib.DNIComparer;
    procedure set_TreeViewNodeSorter(value: DDN.mscorlib.DNIComparer);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TopNode: DNTreeNode;
    procedure set_TopNode(value: DNTreeNode);
    function get_VisibleCount: Int32;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BeforeLabelEdit(value: DNNodeLabelEditEventHandler);
    procedure remove_BeforeLabelEdit(value: DNNodeLabelEditEventHandler);
    procedure add_AfterLabelEdit(value: DNNodeLabelEditEventHandler);
    procedure remove_AfterLabelEdit(value: DNNodeLabelEditEventHandler);
    procedure add_BeforeCheck(value: DNTreeViewCancelEventHandler);
    procedure remove_BeforeCheck(value: DNTreeViewCancelEventHandler);
    procedure add_AfterCheck(value: DNTreeViewEventHandler);
    procedure remove_AfterCheck(value: DNTreeViewEventHandler);
    procedure add_BeforeCollapse(value: DNTreeViewCancelEventHandler);
    procedure remove_BeforeCollapse(value: DNTreeViewCancelEventHandler);
    procedure add_AfterCollapse(value: DNTreeViewEventHandler);
    procedure remove_AfterCollapse(value: DNTreeViewEventHandler);
    procedure add_BeforeExpand(value: DNTreeViewCancelEventHandler);
    procedure remove_BeforeExpand(value: DNTreeViewCancelEventHandler);
    procedure add_AfterExpand(value: DNTreeViewEventHandler);
    procedure remove_AfterExpand(value: DNTreeViewEventHandler);
    procedure add_DrawNode(value: DNDrawTreeNodeEventHandler);
    procedure remove_DrawNode(value: DNDrawTreeNodeEventHandler);
    procedure add_ItemDrag(value: DNItemDragEventHandler);
    procedure remove_ItemDrag(value: DNItemDragEventHandler);
    procedure add_NodeMouseHover(value: DNTreeNodeMouseHoverEventHandler);
    procedure remove_NodeMouseHover(value: DNTreeNodeMouseHoverEventHandler);
    procedure add_BeforeSelect(value: DNTreeViewCancelEventHandler);
    procedure remove_BeforeSelect(value: DNTreeViewCancelEventHandler);
    procedure add_AfterSelect(value: DNTreeViewEventHandler);
    procedure remove_AfterSelect(value: DNTreeViewEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_NodeMouseClick(value: DNTreeNodeMouseClickEventHandler);
    procedure remove_NodeMouseClick(value: DNTreeNodeMouseClickEventHandler);
    procedure add_NodeMouseDoubleClick(value: DNTreeNodeMouseClickEventHandler);
    procedure remove_NodeMouseDoubleClick(value: DNTreeNodeMouseClickEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginUpdate;
    procedure CollapseAll;
    procedure EndUpdate;
    procedure ExpandAll;
    function HitTest(pt: DDN.System.Drawing.DNPoint): DNTreeViewHitTestInfo; overload;
    function HitTest(x: Int32; y: Int32): DNTreeViewHitTestInfo; overload;
    function GetNodeCount(includeSubTrees: Boolean): Int32;
    function GetNodeAt(pt: DDN.System.Drawing.DNPoint): DNTreeNode; overload;
    function GetNodeAt(x: Int32; y: Int32): DNTreeNode; overload;
    procedure Sort;
    function ToString: string;
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CheckBoxes: Boolean read get_CheckBoxes write set_CheckBoxes;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property FullRowSelect: Boolean read get_FullRowSelect write set_FullRowSelect;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property HotTracking: Boolean read get_HotTracking write set_HotTracking;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList write set_ImageList;
    property StateImageList: DNImageList read get_StateImageList write set_StateImageList;
    property Indent: Int32 read get_Indent write set_Indent;
    property ItemHeight: Int32 read get_ItemHeight write set_ItemHeight;
    property LabelEdit: Boolean read get_LabelEdit write set_LabelEdit;
    property LineColor: DDN.System.Drawing.DNColor read get_LineColor write set_LineColor;
    property Nodes: DNTreeNodeCollection read get_Nodes;
    property DrawMode: DNTreeViewDrawMode read get_DrawMode write set_DrawMode;
    property PathSeparator: string read get_PathSeparator write set_PathSeparator;
    property Padding: DNPadding read get_Padding write set_Padding;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property Scrollable: Boolean read get_Scrollable write set_Scrollable;
    property SelectedImageIndex: Int32 read get_SelectedImageIndex write set_SelectedImageIndex;
    property SelectedImageKey: string read get_SelectedImageKey write set_SelectedImageKey;
    property SelectedNode: DNTreeNode read get_SelectedNode write set_SelectedNode;
    property ShowLines: Boolean read get_ShowLines write set_ShowLines;
    property ShowNodeToolTips: Boolean read get_ShowNodeToolTips write set_ShowNodeToolTips;
    property ShowPlusMinus: Boolean read get_ShowPlusMinus write set_ShowPlusMinus;
    property ShowRootLines: Boolean read get_ShowRootLines write set_ShowRootLines;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property TreeViewNodeSorter: DDN.mscorlib.DNIComparer read get_TreeViewNodeSorter write set_TreeViewNodeSorter;
    property Text: string read get_Text write set_Text;
    property TopNode: DNTreeNode read get_TopNode write set_TopNode;
    property VisibleCount: Int32 read get_VisibleCount;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTreeView = class(TDNGenericImport<DNTreeViewClass, DNTreeView>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserBaseClass = interface(DNControlClass)
  ['{AA183FA7-DB08-58AE-9B11-C533FDCDB8B5}']
  { static getter & setter } 

    procedure set_Site(value: DDN.System.DNISite);

  { static propertys } 

    {class} property Site: DDN.System.DNISite write set_Site;
  end;

  [DNTypeName('System.Windows.Forms.WebBrowserBase')]
  DNWebBrowserBase = interface(DNControl)
  ['{1E48F5C9-4F40-3059-8F37-70C77E397522}']
  { getters & setters } 

    function get_ActiveXInstance: DDN.mscorlib.DNObject;
    procedure set_Site(value: DDN.System.DNISite);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Focused: Boolean;
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure Refresh;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ActiveXInstance: DDN.mscorlib.DNObject read get_ActiveXInstance;
    property Site: DDN.System.DNISite write set_Site;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Text: string read get_Text write set_Text;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Focused: Boolean read get_Focused;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNWebBrowserBase = class(TDNGenericImport<DNWebBrowserBaseClass, DNWebBrowserBase>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserClass = interface(DNWebBrowserBaseClass)
  ['{8A69BCAA-E6D9-51D5-9746-DA06DD5F8CCC}']
  { static getter & setter } 

    procedure set_Site(value: DDN.System.DNISite);

  { constructors } 

    {class} function init: DNWebBrowser;

  { static propertys } 

    {class} property Site: DDN.System.DNISite write set_Site;
  end;

  [DNTypeName('System.Windows.Forms.WebBrowser')]
  DNWebBrowser = interface(DNWebBrowserBase)
  ['{322BC601-B652-3088-A0C8-47A7A02E78F4}']
  { getters & setters } 

    function get_AllowNavigation: Boolean;
    procedure set_AllowNavigation(value: Boolean);
    function get_AllowWebBrowserDrop: Boolean;
    procedure set_AllowWebBrowserDrop(value: Boolean);
    function get_ScriptErrorsSuppressed: Boolean;
    procedure set_ScriptErrorsSuppressed(value: Boolean);
    function get_WebBrowserShortcutsEnabled: Boolean;
    procedure set_WebBrowserShortcutsEnabled(value: Boolean);
    function get_CanGoBack: Boolean;
    function get_CanGoForward: Boolean;
    function get_Document: DNHtmlDocument;
    function get_DocumentStream: DDN.mscorlib.DNStream;
    procedure set_DocumentStream(value: DDN.mscorlib.DNStream);
    function get_DocumentText: string;
    procedure set_DocumentText(value: string);
    function get_DocumentTitle: string;
    function get_DocumentType: string;
    function get_EncryptionLevel: DNWebBrowserEncryptionLevel;
    function get_IsBusy: Boolean;
    function get_IsOffline: Boolean;
    function get_IsWebBrowserContextMenuEnabled: Boolean;
    procedure set_IsWebBrowserContextMenuEnabled(value: Boolean);
    function get_ObjectForScripting: DDN.mscorlib.DNObject;
    procedure set_ObjectForScripting(value: DDN.mscorlib.DNObject);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ReadyState: DNWebBrowserReadyState;
    function get_StatusText: string;
    function get_Url: DDN.System.DNUri;
    procedure set_Url(value: DDN.System.DNUri);
    function get_Version: DDN.mscorlib.DNVersion;
    function get_ScrollBarsEnabled: Boolean;
    procedure set_ScrollBarsEnabled(value: Boolean);
    function get_Focused: Boolean;
    function get_ActiveXInstance: DDN.mscorlib.DNObject;
    procedure set_Site(value: DDN.System.DNISite);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_ImeMode: DNImeMode;
    procedure set_ImeMode(value: DNImeMode);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_UseWaitCursor: Boolean;
    procedure set_UseWaitCursor(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoScrollOffset: DDN.System.Drawing.DNPoint;
    procedure set_AutoScrollOffset(value: DDN.System.Drawing.DNPoint);
    function get_LayoutEngine: DNLayoutEngine;
    function get_BindingContext: DNBindingContext;
    procedure set_BindingContext(value: DNBindingContext);
    function get_Bottom: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    procedure set_Bounds(value: DDN.System.Drawing.DNRectangle);
    function get_CanFocus: Boolean;
    function get_CanSelect: Boolean;
    function get_Capture: Boolean;
    procedure set_Capture(value: Boolean);
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_ClientSize: DDN.System.Drawing.DNSize;
    procedure set_ClientSize(value: DDN.System.Drawing.DNSize);
    function get_CompanyName: string;
    function get_ContainsFocus: Boolean;
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Controls: DNControl_ControlCollection;
    function get_Created: Boolean;
    function get_DataBindings: DNControlBindingsCollection;
    function get_DeviceDpi: Int32;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_IsDisposed: Boolean;
    function get_Disposing: Boolean;
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Handle: IntPtr;
    function get_HasChildren: Boolean;
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsHandleCreated: Boolean;
    function get_InvokeRequired: Boolean;
    function get_IsAccessible: Boolean;
    procedure set_IsAccessible(value: Boolean);
    function get_IsMirrored: Boolean;
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Location: DDN.System.Drawing.DNPoint;
    procedure set_Location(value: DDN.System.Drawing.DNPoint);
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MaximumSize: DDN.System.Drawing.DNSize;
    procedure set_MaximumSize(value: DDN.System.Drawing.DNSize);
    function get_MinimumSize: DDN.System.Drawing.DNSize;
    procedure set_MinimumSize(value: DDN.System.Drawing.DNSize);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNControl;
    procedure set_Parent(value: DNControl);
    function get_ProductName: string;
    function get_ProductVersion: string;
    function get_RecreatingHandle: Boolean;
    function get_Region: DDN.System.Drawing.DNRegion;
    procedure set_Region(value: DDN.System.Drawing.DNRegion);
    function get_Right: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_TabIndex: Int32;
    procedure set_TabIndex(value: Int32);
    function get_TabStop: Boolean;
    procedure set_TabStop(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_TopLevelControl: DNControl;
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_WindowTarget: DNIWindowTarget;
    procedure set_WindowTarget(value: DNIWindowTarget);
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PaddingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CanGoBackChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CanGoBackChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CanGoForwardChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CanGoForwardChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DocumentCompleted(value: DNWebBrowserDocumentCompletedEventHandler);
    procedure remove_DocumentCompleted(value: DNWebBrowserDocumentCompletedEventHandler);
    procedure add_DocumentTitleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DocumentTitleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EncryptionLevelChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EncryptionLevelChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FileDownload(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FileDownload(value: DDN.mscorlib.DNEventHandler);
    procedure add_Navigated(value: DNWebBrowserNavigatedEventHandler);
    procedure remove_Navigated(value: DNWebBrowserNavigatedEventHandler);
    procedure add_Navigating(value: DNWebBrowserNavigatingEventHandler);
    procedure remove_Navigating(value: DNWebBrowserNavigatingEventHandler);
    procedure add_NewWindow(value: DDN.System.DNCancelEventHandler);
    procedure remove_NewWindow(value: DDN.System.DNCancelEventHandler);
    procedure add_ProgressChanged(value: DNWebBrowserProgressChangedEventHandler);
    procedure remove_ProgressChanged(value: DNWebBrowserProgressChangedEventHandler);
    procedure add_StatusTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StatusTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseCaptureChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackgroundImageChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BindingContextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CursorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_HelpRequested(value: DNHelpEventHandler);
    procedure remove_HelpRequested(value: DNHelpEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ImeModeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Layout(value: DNLayoutEventHandler);
    procedure remove_Layout(value: DNLayoutEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_MouseWheel(value: DNMouseEventHandler);
    procedure remove_MouseWheel(value: DNMouseEventHandler);
    procedure add_ChangeUICues(value: DNUICuesEventHandler);
    procedure remove_ChangeUICues(value: DNUICuesEventHandler);
    procedure add_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_StyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AutoSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CausesValidationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ClientSizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ContextMenuStripChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DockChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MarginChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RegionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SizeChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TabStopChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ControlAdded(value: DNControlEventHandler);
    procedure remove_ControlAdded(value: DNControlEventHandler);
    procedure add_ControlRemoved(value: DNControlEventHandler);
    procedure remove_ControlRemoved(value: DNControlEventHandler);
    procedure add_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleCreated(value: DDN.mscorlib.DNEventHandler);
    procedure add_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HandleDestroyed(value: DDN.mscorlib.DNEventHandler);
    procedure add_Invalidated(value: DNInvalidateEventHandler);
    procedure remove_Invalidated(value: DNInvalidateEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedBeforeParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DpiChangedAfterParent(value: DDN.mscorlib.DNEventHandler);
    procedure add_Move(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Move(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure remove_PreviewKeyDown(value: DNPreviewKeyDownEventHandler);
    procedure add_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Resize(value: DDN.mscorlib.DNEventHandler);
    procedure add_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SystemColorsChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ParentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Refresh; overload;
    function GoBack: Boolean;
    function GoForward: Boolean;
    procedure GoHome;
    procedure GoSearch;
    procedure Navigate(url: DDN.System.DNUri); overload;
    procedure Navigate(urlString: string); overload;
    procedure Navigate(url: DDN.System.DNUri; targetFrameName: string); overload;
    procedure Navigate(urlString: string; targetFrameName: string); overload;
    procedure Navigate(url: DDN.System.DNUri; newWindow: Boolean); overload;
    procedure Navigate(urlString: string; newWindow: Boolean); overload;
    procedure Navigate(url: DDN.System.DNUri; targetFrameName: string; postData: TArray<Byte>; additionalHeaders: string); overload;
    procedure Navigate(urlString: string; targetFrameName: string; postData: TArray<Byte>; additionalHeaders: string); overload;
    procedure Print;
    procedure Refresh(opt: DNWebBrowserRefreshOption); overload;
    procedure ShowPageSetupDialog;
    procedure ShowPrintDialog;
    procedure ShowPrintPreviewDialog;
    procedure ShowPropertiesDialog;
    procedure ShowSaveAsDialog;
    procedure Stop;
    function PreProcessMessage(out msg: DNMessage): Boolean;
    procedure DrawToBitmap(bitmap: DDN.System.Drawing.DNBitmap; targetBounds: DDN.System.Drawing.DNRectangle);
    function GetPreferredSize(proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNIAsyncResult; overload;
    function EndInvoke(asyncResult: DDN.mscorlib.DNIAsyncResult): DDN.mscorlib.DNObject;
    function Invoke(method: DDN.mscorlib.DNDelegate; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    procedure ResetCursor;
    procedure ResetFont;
    procedure ResetRightToLeft;
    procedure ResetText;
    procedure ResetBindings;
    function BeginInvoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNIAsyncResult; overload;
    procedure BringToFront;
    function &Contains(ctl: DNControl): Boolean;
    function CreateGraphics: DDN.System.Drawing.DNGraphics;
    procedure CreateControl;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function FindForm: DNForm;
    function Focus: Boolean;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint; skipValue: DNGetChildAtPointSkip): DNControl; overload;
    function GetChildAtPoint(pt: DDN.System.Drawing.DNPoint): DNControl; overload;
    function GetContainerControl: DNIContainerControl;
    function GetNextControl(ctl: DNControl; &forward: Boolean): DNControl;
    procedure Hide;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion); overload;
    procedure Invalidate(region: DDN.System.Drawing.DNRegion; invalidateChildren: Boolean); overload;
    procedure Invalidate; overload;
    procedure Invalidate(invalidateChildren: Boolean); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle); overload;
    procedure Invalidate(rc: DDN.System.Drawing.DNRectangle; invalidateChildren: Boolean); overload;
    function Invoke(method: DDN.mscorlib.DNDelegate): DDN.mscorlib.DNObject; overload;
    function LogicalToDeviceUnits(value: Int32): Int32; overload;
    function LogicalToDeviceUnits(value: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    procedure ScaleBitmapLogicalToDevice(out logicalBitmap: DDN.System.Drawing.DNBitmap);
    procedure PerformLayout; overload;
    procedure PerformLayout(affectedControl: DNControl; affectedProperty: string); overload;
    function PointToClient(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PointToScreen(p: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNPoint;
    function PreProcessControlMessage(out msg: DNMessage): DNPreProcessControlState;
    procedure ResetBackColor;
    procedure ResetForeColor;
    function RectangleToClient(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function RectangleToScreen(r: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure ResumeLayout; overload;
    procedure ResumeLayout(performLayout: Boolean); overload;
    procedure Scale(ratio: Single); overload;
    procedure Scale(dx: Single; dy: Single); overload;
    procedure Scale(factor: DDN.System.Drawing.DNSizeF); overload;
    procedure Select;
    function SelectNextControl(ctl: DNControl; &forward: Boolean; tabStopOnly: Boolean; nested: Boolean; wrap: Boolean): Boolean;
    procedure SendToBack;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32); overload;
    procedure SetBounds(x: Int32; y: Int32; width: Int32; height: Int32; specified: DNBoundsSpecified); overload;
    procedure Show;
    procedure SuspendLayout;
    procedure Update;
    procedure ResetImeMode;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowNavigation: Boolean read get_AllowNavigation write set_AllowNavigation;
    property AllowWebBrowserDrop: Boolean read get_AllowWebBrowserDrop write set_AllowWebBrowserDrop;
    property ScriptErrorsSuppressed: Boolean read get_ScriptErrorsSuppressed write set_ScriptErrorsSuppressed;
    property WebBrowserShortcutsEnabled: Boolean read get_WebBrowserShortcutsEnabled write set_WebBrowserShortcutsEnabled;
    property CanGoBack: Boolean read get_CanGoBack;
    property CanGoForward: Boolean read get_CanGoForward;
    property Document: DNHtmlDocument read get_Document;
    property DocumentStream: DDN.mscorlib.DNStream read get_DocumentStream write set_DocumentStream;
    property DocumentText: string read get_DocumentText write set_DocumentText;
    property DocumentTitle: string read get_DocumentTitle;
    property DocumentType: string read get_DocumentType;
    property EncryptionLevel: DNWebBrowserEncryptionLevel read get_EncryptionLevel;
    property IsBusy: Boolean read get_IsBusy;
    property IsOffline: Boolean read get_IsOffline;
    property IsWebBrowserContextMenuEnabled: Boolean read get_IsWebBrowserContextMenuEnabled write set_IsWebBrowserContextMenuEnabled;
    property ObjectForScripting: DDN.mscorlib.DNObject read get_ObjectForScripting write set_ObjectForScripting;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ReadyState: DNWebBrowserReadyState read get_ReadyState;
    property StatusText: string read get_StatusText;
    property Url: DDN.System.DNUri read get_Url write set_Url;
    property Version: DDN.mscorlib.DNVersion read get_Version;
    property ScrollBarsEnabled: Boolean read get_ScrollBarsEnabled write set_ScrollBarsEnabled;
    property Focused: Boolean read get_Focused;
    property ActiveXInstance: DDN.mscorlib.DNObject read get_ActiveXInstance;
    property Site: DDN.System.DNISite write set_Site;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property ImeMode: DNImeMode read get_ImeMode write set_ImeMode;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Text: string read get_Text write set_Text;
    property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoScrollOffset: DDN.System.Drawing.DNPoint read get_AutoScrollOffset write set_AutoScrollOffset;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property BindingContext: DNBindingContext read get_BindingContext write set_BindingContext;
    property Bottom: Int32 read get_Bottom;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds write set_Bounds;
    property CanFocus: Boolean read get_CanFocus;
    property CanSelect: Boolean read get_CanSelect;
    property Capture: Boolean read get_Capture write set_Capture;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property ClientSize: DDN.System.Drawing.DNSize read get_ClientSize write set_ClientSize;
    property CompanyName: string read get_CompanyName;
    property ContainsFocus: Boolean read get_ContainsFocus;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Controls: DNControl_ControlCollection read get_Controls;
    property Created: Boolean read get_Created;
    property DataBindings: DNControlBindingsCollection read get_DataBindings;
    property DeviceDpi: Int32 read get_DeviceDpi;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property IsDisposed: Boolean read get_IsDisposed;
    property Disposing: Boolean read get_Disposing;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Handle: IntPtr read get_Handle;
    property HasChildren: Boolean read get_HasChildren;
    property Height: Int32 read get_Height write set_Height;
    property IsHandleCreated: Boolean read get_IsHandleCreated;
    property InvokeRequired: Boolean read get_InvokeRequired;
    property IsAccessible: Boolean read get_IsAccessible write set_IsAccessible;
    property IsMirrored: Boolean read get_IsMirrored;
    property Left: Int32 read get_Left write set_Left;
    property Location: DDN.System.Drawing.DNPoint read get_Location write set_Location;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MaximumSize: DDN.System.Drawing.DNSize read get_MaximumSize write set_MaximumSize;
    property MinimumSize: DDN.System.Drawing.DNSize read get_MinimumSize write set_MinimumSize;
    property Name: string read get_Name write set_Name;
    property Parent: DNControl read get_Parent write set_Parent;
    property ProductName: string read get_ProductName;
    property ProductVersion: string read get_ProductVersion;
    property RecreatingHandle: Boolean read get_RecreatingHandle;
    property Region: DDN.System.Drawing.DNRegion read get_Region write set_Region;
    property Right: Int32 read get_Right;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property TabIndex: Int32 read get_TabIndex write set_TabIndex;
    property TabStop: Boolean read get_TabStop write set_TabStop;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Top: Int32 read get_Top write set_Top;
    property TopLevelControl: DNControl read get_TopLevelControl;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property WindowTarget: DNIWindowTarget read get_WindowTarget write set_WindowTarget;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNWebBrowser = class(TDNGenericImport<DNWebBrowserClass, DNWebBrowser>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridColumnStyleClass = interface(DNObjectClass)
  ['{FD8E013D-EC02-5BAE-8E1D-1D48A033701C}']
  { constructors } 

    {class} function init: DNDataGridColumnStyle; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor): DNDataGridColumnStyle; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridColumnStyle')]
  DNDataGridColumnStyle = interface(DNObject)
  ['{B32E5C93-A0BB-35C3-A97A-A3882479A2FF}']
  { getters & setters } 

    function get_Alignment: DNHorizontalAlignment;
    procedure set_Alignment(value: DNHorizontalAlignment);
    function get_HeaderAccessibleObject: DNAccessibleObject;
    function get_PropertyDescriptor: DDN.System.DNPropertyDescriptor;
    procedure set_PropertyDescriptor(value: DDN.System.DNPropertyDescriptor);
    function get_DataGridTableStyle: DNDataGridTableStyle;
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_MappingName: string;
    procedure set_MappingName(value: string);
    function get_NullText: string;
    procedure set_NullText(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AlignmentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AlignmentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PropertyDescriptorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PropertyDescriptorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HeaderTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HeaderTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_NullTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_NullTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_WidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_WidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetHeaderText;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Alignment: DNHorizontalAlignment read get_Alignment write set_Alignment;
    property HeaderAccessibleObject: DNAccessibleObject read get_HeaderAccessibleObject;
    property PropertyDescriptor: DDN.System.DNPropertyDescriptor read get_PropertyDescriptor write set_PropertyDescriptor;
    property DataGridTableStyle: DNDataGridTableStyle read get_DataGridTableStyle;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property MappingName: string read get_MappingName write set_MappingName;
    property NullText: string read get_NullText write set_NullText;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridColumnStyle = class(TDNGenericImport<DNDataGridColumnStyleClass, DNDataGridColumnStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridBoolColumnClass = interface(DNDataGridColumnStyleClass)
  ['{C9506396-5CB8-5A26-B420-BE4D297782EE}']
  { constructors } 

    {class} function init: DNDataGridBoolColumn; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor): DNDataGridBoolColumn; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor; isDefault: Boolean): DNDataGridBoolColumn; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridBoolColumn')]
  DNDataGridBoolColumn = interface(DNDataGridColumnStyle)
  ['{EC50ACDB-D883-3078-AA08-DF934E688BCF}']
  { getters & setters } 

    function get_TrueValue: DDN.mscorlib.DNObject;
    procedure set_TrueValue(value: DDN.mscorlib.DNObject);
    function get_FalseValue: DDN.mscorlib.DNObject;
    procedure set_FalseValue(value: DDN.mscorlib.DNObject);
    function get_NullValue: DDN.mscorlib.DNObject;
    procedure set_NullValue(value: DDN.mscorlib.DNObject);
    function get_AllowNull: Boolean;
    procedure set_AllowNull(value: Boolean);
    function get_Alignment: DNHorizontalAlignment;
    procedure set_Alignment(value: DNHorizontalAlignment);
    function get_HeaderAccessibleObject: DNAccessibleObject;
    function get_PropertyDescriptor: DDN.System.DNPropertyDescriptor;
    procedure set_PropertyDescriptor(value: DDN.System.DNPropertyDescriptor);
    function get_DataGridTableStyle: DNDataGridTableStyle;
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_MappingName: string;
    procedure set_MappingName(value: string);
    function get_NullText: string;
    procedure set_NullText(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_TrueValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TrueValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FalseValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FalseValueChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AllowNullChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowNullChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AlignmentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AlignmentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PropertyDescriptorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PropertyDescriptorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HeaderTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HeaderTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_NullTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_NullTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_WidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_WidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetHeaderText;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property TrueValue: DDN.mscorlib.DNObject read get_TrueValue write set_TrueValue;
    property FalseValue: DDN.mscorlib.DNObject read get_FalseValue write set_FalseValue;
    property NullValue: DDN.mscorlib.DNObject read get_NullValue write set_NullValue;
    property AllowNull: Boolean read get_AllowNull write set_AllowNull;
    property Alignment: DNHorizontalAlignment read get_Alignment write set_Alignment;
    property HeaderAccessibleObject: DNAccessibleObject read get_HeaderAccessibleObject;
    property PropertyDescriptor: DDN.System.DNPropertyDescriptor read get_PropertyDescriptor write set_PropertyDescriptor;
    property DataGridTableStyle: DNDataGridTableStyle read get_DataGridTableStyle;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property MappingName: string read get_MappingName write set_MappingName;
    property NullText: string read get_NullText write set_NullText;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridBoolColumn = class(TDNGenericImport<DNDataGridBoolColumnClass, DNDataGridBoolColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridTextBoxColumnClass = interface(DNDataGridColumnStyleClass)
  ['{15968C00-7996-5C2E-9F42-5F1D55ED4C9A}']
  { static getter & setter } 

    procedure set_PropertyDescriptor(value: DDN.System.DNPropertyDescriptor);

  { constructors } 

    {class} function init: DNDataGridTextBoxColumn; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor): DNDataGridTextBoxColumn; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor; format: string): DNDataGridTextBoxColumn; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor; format: string; isDefault: Boolean): DNDataGridTextBoxColumn; overload;
    {class} function init(prop: DDN.System.DNPropertyDescriptor; isDefault: Boolean): DNDataGridTextBoxColumn; overload;

  { static propertys } 

    {class} property PropertyDescriptor: DDN.System.DNPropertyDescriptor write set_PropertyDescriptor;
  end;

  [DNTypeName('System.Windows.Forms.DataGridTextBoxColumn')]
  DNDataGridTextBoxColumn = interface(DNDataGridColumnStyle)
  ['{053DF5A6-9E9E-3082-8383-67FCEA89CD22}']
  { getters & setters } 

    function get_TextBox: DNTextBox;
    procedure set_PropertyDescriptor(value: DDN.System.DNPropertyDescriptor);
    function get_Format: string;
    procedure set_Format(value: string);
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Alignment: DNHorizontalAlignment;
    procedure set_Alignment(value: DNHorizontalAlignment);
    function get_HeaderAccessibleObject: DNAccessibleObject;
    function get_DataGridTableStyle: DNDataGridTableStyle;
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_MappingName: string;
    procedure set_MappingName(value: string);
    function get_NullText: string;
    procedure set_NullText(value: string);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AlignmentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AlignmentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PropertyDescriptorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PropertyDescriptorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_FontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HeaderTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HeaderTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_NullTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_NullTextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_WidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_WidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetHeaderText;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property TextBox: DNTextBox read get_TextBox;
    property PropertyDescriptor: DDN.System.DNPropertyDescriptor write set_PropertyDescriptor;
    property Format: string read get_Format write set_Format;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Alignment: DNHorizontalAlignment read get_Alignment write set_Alignment;
    property HeaderAccessibleObject: DNAccessibleObject read get_HeaderAccessibleObject;
    property DataGridTableStyle: DNDataGridTableStyle read get_DataGridTableStyle;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property MappingName: string read get_MappingName write set_MappingName;
    property NullText: string read get_NullText write set_NullText;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridTextBoxColumn = class(TDNGenericImport<DNDataGridTextBoxColumnClass, DNDataGridTextBoxColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridTableStyleClass = interface(DNObjectClass)
  ['{CF4E39F3-22AE-5466-9C57-542CB6621BA2}']
  { constructors } 

    {class} function init(isDefaultTableStyle: Boolean): DNDataGridTableStyle; overload;
    {class} function init: DNDataGridTableStyle; overload;
    {class} function init(listManager: DNCurrencyManager): DNDataGridTableStyle; overload;

  { static fields getter & setter } 

   function __fakeFieldGet_DefaultTableStyle: DNDataGridTableStyle;

  { static fields } 

    {class} property DefaultTableStyle: DNDataGridTableStyle read __fakeFieldGet_DefaultTableStyle;

  end;

  [DNTypeName('System.Windows.Forms.DataGridTableStyle')]
  DNDataGridTableStyle = interface(DNObject)
  ['{6E8FC561-E6C9-3858-885D-584EAE73521C}']
  { getters & setters } 

    function get_AllowSorting: Boolean;
    procedure set_AllowSorting(value: Boolean);
    function get_AlternatingBackColor: DDN.System.Drawing.DNColor;
    procedure set_AlternatingBackColor(value: DDN.System.Drawing.DNColor);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_GridLineColor: DDN.System.Drawing.DNColor;
    procedure set_GridLineColor(value: DDN.System.Drawing.DNColor);
    function get_GridLineStyle: DNDataGridLineStyle;
    procedure set_GridLineStyle(value: DNDataGridLineStyle);
    function get_HeaderBackColor: DDN.System.Drawing.DNColor;
    procedure set_HeaderBackColor(value: DDN.System.Drawing.DNColor);
    function get_HeaderFont: DDN.System.Drawing.DNFont;
    procedure set_HeaderFont(value: DDN.System.Drawing.DNFont);
    function get_HeaderForeColor: DDN.System.Drawing.DNColor;
    procedure set_HeaderForeColor(value: DDN.System.Drawing.DNColor);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkHoverColor: DDN.System.Drawing.DNColor;
    procedure set_LinkHoverColor(value: DDN.System.Drawing.DNColor);
    function get_PreferredColumnWidth: Int32;
    procedure set_PreferredColumnWidth(value: Int32);
    function get_PreferredRowHeight: Int32;
    procedure set_PreferredRowHeight(value: Int32);
    function get_ColumnHeadersVisible: Boolean;
    procedure set_ColumnHeadersVisible(value: Boolean);
    function get_RowHeadersVisible: Boolean;
    procedure set_RowHeadersVisible(value: Boolean);
    function get_RowHeaderWidth: Int32;
    procedure set_RowHeaderWidth(value: Int32);
    function get_SelectionBackColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionBackColor(value: DDN.System.Drawing.DNColor);
    function get_SelectionForeColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionForeColor(value: DDN.System.Drawing.DNColor);
    function get_MappingName: string;
    procedure set_MappingName(value: string);
    function get_GridColumnStyles: DNGridColumnStylesCollection;
    function get_DataGrid: DNDataGrid;
    procedure set_DataGrid(value: DNDataGrid);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AllowSortingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AllowSortingChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AlternatingBackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AlternatingBackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GridLineColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GridLineColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GridLineStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GridLineStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HeaderBackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HeaderBackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HeaderFontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HeaderFontChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HeaderForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HeaderForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LinkColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LinkColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_LinkHoverColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LinkHoverColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreferredColumnWidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PreferredColumnWidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_PreferredRowHeightChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PreferredRowHeightChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ColumnHeadersVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ColumnHeadersVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RowHeadersVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RowHeadersVisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RowHeaderWidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RowHeaderWidthChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectionBackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectionBackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectionForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectionForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MappingNameChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ResetAlternatingBackColor;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetGridLineColor;
    procedure ResetHeaderBackColor;
    procedure ResetHeaderFont;
    procedure ResetHeaderForeColor;
    procedure ResetLinkColor;
    procedure ResetLinkHoverColor;
    procedure ResetSelectionBackColor;
    procedure ResetSelectionForeColor;
    function BeginEdit(gridColumn: DNDataGridColumnStyle; rowNumber: Int32): Boolean;
    function EndEdit(gridColumn: DNDataGridColumnStyle; rowNumber: Int32; shouldAbort: Boolean): Boolean;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AllowSorting: Boolean read get_AllowSorting write set_AllowSorting;
    property AlternatingBackColor: DDN.System.Drawing.DNColor read get_AlternatingBackColor write set_AlternatingBackColor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property GridLineColor: DDN.System.Drawing.DNColor read get_GridLineColor write set_GridLineColor;
    property GridLineStyle: DNDataGridLineStyle read get_GridLineStyle write set_GridLineStyle;
    property HeaderBackColor: DDN.System.Drawing.DNColor read get_HeaderBackColor write set_HeaderBackColor;
    property HeaderFont: DDN.System.Drawing.DNFont read get_HeaderFont write set_HeaderFont;
    property HeaderForeColor: DDN.System.Drawing.DNColor read get_HeaderForeColor write set_HeaderForeColor;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property LinkHoverColor: DDN.System.Drawing.DNColor read get_LinkHoverColor write set_LinkHoverColor;
    property PreferredColumnWidth: Int32 read get_PreferredColumnWidth write set_PreferredColumnWidth;
    property PreferredRowHeight: Int32 read get_PreferredRowHeight write set_PreferredRowHeight;
    property ColumnHeadersVisible: Boolean read get_ColumnHeadersVisible write set_ColumnHeadersVisible;
    property RowHeadersVisible: Boolean read get_RowHeadersVisible write set_RowHeadersVisible;
    property RowHeaderWidth: Int32 read get_RowHeaderWidth write set_RowHeaderWidth;
    property SelectionBackColor: DDN.System.Drawing.DNColor read get_SelectionBackColor write set_SelectionBackColor;
    property SelectionForeColor: DDN.System.Drawing.DNColor read get_SelectionForeColor write set_SelectionForeColor;
    property MappingName: string read get_MappingName write set_MappingName;
    property GridColumnStyles: DNGridColumnStylesCollection read get_GridColumnStyles;
    property DataGrid: DNDataGrid read get_DataGrid write set_DataGrid;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNDataGridTableStyle = class(TDNGenericImport<DNDataGridTableStyleClass, DNDataGridTableStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNErrorProviderClass = interface(DNObjectClass)
  ['{4F75DB50-B325-536A-8136-40ECEAF54865}']
  { static getter & setter } 

    procedure set_Site(value: DDN.System.DNISite);

  { constructors } 

    {class} function init: DNErrorProvider; overload;
    {class} function init(parentControl: DNContainerControl): DNErrorProvider; overload;
    {class} function init(container: DDN.System.DNIContainer): DNErrorProvider; overload;

  { static propertys } 

    {class} property Site: DDN.System.DNISite write set_Site;
  end;

  [DNTypeName('System.Windows.Forms.ErrorProvider')]
  DNErrorProvider = interface(DNObject)
  ['{68772932-8A22-32E0-B921-563E1FA8AFD3}']
  { getters & setters } 

    procedure set_Site(value: DDN.System.DNISite);
    function get_BlinkStyle: DNErrorBlinkStyle;
    procedure set_BlinkStyle(value: DNErrorBlinkStyle);
    function get_ContainerControl: DNContainerControl;
    procedure set_ContainerControl(value: DNContainerControl);
    function get_RightToLeft: Boolean;
    procedure set_RightToLeft(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DataMember: string;
    procedure set_DataMember(value: string);
    function get_BlinkRate: Int32;
    procedure set_BlinkRate(value: Int32);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function CanExtend(extendee: DDN.mscorlib.DNObject): Boolean;
    procedure BindToDataAndErrors(newDataSource: DDN.mscorlib.DNObject; newDataMember: string);
    procedure UpdateBinding;
    procedure Clear;
    function GetError(control: DNControl): string;
    function GetIconAlignment(control: DNControl): DNErrorIconAlignment;
    function GetIconPadding(control: DNControl): Int32;
    procedure SetError(control: DNControl; value: string);
    procedure SetIconAlignment(control: DNControl; value: DNErrorIconAlignment);
    procedure SetIconPadding(control: DNControl; padding: Int32);
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Site: DDN.System.DNISite write set_Site;
    property BlinkStyle: DNErrorBlinkStyle read get_BlinkStyle write set_BlinkStyle;
    property ContainerControl: DNContainerControl read get_ContainerControl write set_ContainerControl;
    property RightToLeft: Boolean read get_RightToLeft write set_RightToLeft;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DataMember: string read get_DataMember write set_DataMember;
    property BlinkRate: Int32 read get_BlinkRate write set_BlinkRate;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNErrorProvider = class(TDNGenericImport<DNErrorProviderClass, DNErrorProvider>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHelpProviderClass = interface(DNObjectClass)
  ['{2FDF9025-64C4-5084-AF0E-5BAA1FCF7F3C}']
  { constructors } 

    {class} function init: DNHelpProvider;

  end;

  [DNTypeName('System.Windows.Forms.HelpProvider')]
  DNHelpProvider = interface(DNObject)
  ['{0BB6DF3F-A528-38F0-89E7-C523515BC933}']
  { getters & setters } 

    function get_HelpNamespace: string;
    procedure set_HelpNamespace(value: string);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function CanExtend(target: DDN.mscorlib.DNObject): Boolean;
    function GetHelpKeyword(ctl: DNControl): string;
    function GetHelpNavigator(ctl: DNControl): DNHelpNavigator;
    function GetHelpString(ctl: DNControl): string;
    function GetShowHelp(ctl: DNControl): Boolean;
    procedure SetHelpString(ctl: DNControl; helpString: string);
    procedure SetHelpKeyword(ctl: DNControl; keyword: string);
    procedure SetHelpNavigator(ctl: DNControl; navigator: DNHelpNavigator);
    procedure SetShowHelp(ctl: DNControl; value: Boolean);
    procedure ResetShowHelp(ctl: DNControl);
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property HelpNamespace: string read get_HelpNamespace write set_HelpNamespace;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNHelpProvider = class(TDNGenericImport<DNHelpProviderClass, DNHelpProvider>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImageListClass = interface(DNObjectClass)
  ['{422E0292-D869-562D-A6CA-0E2346D58E0F}']
  { constructors } 

    {class} function init: DNImageList; overload;
    {class} function init(container: DDN.System.DNIContainer): DNImageList; overload;

  end;

  [DNTypeName('System.Windows.Forms.ImageList')]
  DNImageList = interface(DNObject)
  ['{95D7E8F1-57F9-3914-A588-2DE97144DB25}']
  { getters & setters } 

    function get_ColorDepth: DNColorDepth;
    procedure set_ColorDepth(value: DNColorDepth);
    function get_Handle: IntPtr;
    function get_HandleCreated: Boolean;
    function get_Images: DNImageList_ImageCollection;
    function get_ImageSize: DDN.System.Drawing.DNSize;
    procedure set_ImageSize(value: DDN.System.Drawing.DNSize);
    function get_ImageStream: DNImageListStreamer;
    procedure set_ImageStream(value: DNImageListStreamer);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_TransparentColor: DDN.System.Drawing.DNColor;
    procedure set_TransparentColor(value: DDN.System.Drawing.DNColor);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_RecreateHandle(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RecreateHandle(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Draw(g: DDN.System.Drawing.DNGraphics; pt: DDN.System.Drawing.DNPoint; index: Int32); overload;
    procedure Draw(g: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; index: Int32); overload;
    procedure Draw(g: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; index: Int32); overload;
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ColorDepth: DNColorDepth read get_ColorDepth write set_ColorDepth;
    property Handle: IntPtr read get_Handle;
    property HandleCreated: Boolean read get_HandleCreated;
    property Images: DNImageList_ImageCollection read get_Images;
    property ImageSize: DDN.System.Drawing.DNSize read get_ImageSize write set_ImageSize;
    property ImageStream: DNImageListStreamer read get_ImageStream write set_ImageStream;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property TransparentColor: DDN.System.Drawing.DNColor read get_TransparentColor write set_TransparentColor;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNImageList = class(TDNGenericImport<DNImageListClass, DNImageList>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMenuClass = interface(DNObjectClass)
  ['{D0BB7FEB-5A5D-5BD5-AC77-66DBEE11DBF7}']
  end;

  [DNTypeName('System.Windows.Forms.Menu')]
  DNMenu = interface(DNObject)
  ['{1A0D9297-F79E-375E-8697-F63F74C2BE51}']
  { getters & setters } 

    function get_Handle: IntPtr;
    function get_IsParent: Boolean;
    function get_MdiListItem: DNMenuItem;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_MenuItems: DNMenu_MenuItemCollection;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure MergeMenu(menuSrc: DNMenu);
    function FindMenuItem(&type: Int32; value: IntPtr): DNMenuItem;
    function GetContextMenu: DNContextMenu;
    function GetMainMenu: DNMainMenu;
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Handle: IntPtr read get_Handle;
    property IsParent: Boolean read get_IsParent;
    property MdiListItem: DNMenuItem read get_MdiListItem;
    property Name: string read get_Name write set_Name;
    property MenuItems: DNMenu_MenuItemCollection read get_MenuItems;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMenu = class(TDNGenericImport<DNMenuClass, DNMenu>)
  public const
   FindHandle = 0;
   FindShortcut = 1;
  end;

  //-------------namespace: System.Windows.Forms----------------
  DNContextMenuClass = interface(DNMenuClass)
  ['{48418AEC-7798-5F67-93CD-5990205D219D}']
  { constructors } 

    {class} function init: DNContextMenu; overload;
    {class} function init(menuItems: TArray<DNMenuItem>): DNContextMenu; overload;

  end;

  [DNTypeName('System.Windows.Forms.ContextMenu')]
  DNContextMenu = interface(DNMenu)
  ['{F0F59969-8309-30C3-9D2F-8CDBAB13E41F}']
  { getters & setters } 

    function get_SourceControl: DNControl;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Handle: IntPtr;
    function get_IsParent: Boolean;
    function get_MdiListItem: DNMenuItem;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_MenuItems: DNMenu_MenuItemCollection;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Popup(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Popup(value: DDN.mscorlib.DNEventHandler);
    procedure add_Collapse(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Collapse(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Show(control: DNControl; pos: DDN.System.Drawing.DNPoint); overload;
    procedure Show(control: DNControl; pos: DDN.System.Drawing.DNPoint; alignment: DNLeftRightAlignment); overload;
    procedure MergeMenu(menuSrc: DNMenu);
    function FindMenuItem(&type: Int32; value: IntPtr): DNMenuItem;
    function GetContextMenu: DNContextMenu;
    function GetMainMenu: DNMainMenu;
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property SourceControl: DNControl read get_SourceControl;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Handle: IntPtr read get_Handle;
    property IsParent: Boolean read get_IsParent;
    property MdiListItem: DNMenuItem read get_MdiListItem;
    property Name: string read get_Name write set_Name;
    property MenuItems: DNMenu_MenuItemCollection read get_MenuItems;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNContextMenu = class(TDNGenericImport<DNContextMenuClass, DNContextMenu>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMainMenuClass = interface(DNMenuClass)
  ['{F028FE53-4E19-5783-AD0C-4F5A7F1CDEBD}']
  { constructors } 

    {class} function init: DNMainMenu; overload;
    {class} function init(container: DDN.System.DNIContainer): DNMainMenu; overload;
    {class} function init(items: TArray<DNMenuItem>): DNMainMenu; overload;

  end;

  [DNTypeName('System.Windows.Forms.MainMenu')]
  DNMainMenu = interface(DNMenu)
  ['{D059BF92-58C5-3094-83E4-6F83D53EAD72}']
  { getters & setters } 

    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Handle: IntPtr;
    function get_IsParent: Boolean;
    function get_MdiListItem: DNMenuItem;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_MenuItems: DNMenu_MenuItemCollection;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Collapse(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Collapse(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function CloneMenu: DNMainMenu;
    function ToString: string;
    function GetForm: DNForm;
    procedure MergeMenu(menuSrc: DNMenu);
    function FindMenuItem(&type: Int32; value: IntPtr): DNMenuItem;
    function GetContextMenu: DNContextMenu;
    function GetMainMenu: DNMainMenu;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Handle: IntPtr read get_Handle;
    property IsParent: Boolean read get_IsParent;
    property MdiListItem: DNMenuItem read get_MdiListItem;
    property Name: string read get_Name write set_Name;
    property MenuItems: DNMenu_MenuItemCollection read get_MenuItems;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMainMenu = class(TDNGenericImport<DNMainMenuClass, DNMainMenu>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMenuItemClass = interface(DNMenuClass)
  ['{05E9E0A0-4C01-56EB-9168-30B22EF77D7A}']
  { constructors } 

    {class} function init: DNMenuItem; overload;
    {class} function init(text: string): DNMenuItem; overload;
    {class} function init(text: string; onClick: DDN.mscorlib.DNEventHandler): DNMenuItem; overload;
    {class} function init(text: string; onClick: DDN.mscorlib.DNEventHandler; shortcut: DNShortcut): DNMenuItem; overload;
    {class} function init(text: string; items: TArray<DNMenuItem>): DNMenuItem; overload;
    {class} function init(mergeType: DNMenuMerge; mergeOrder: Int32; shortcut: DNShortcut; text: string; onClick: DDN.mscorlib.DNEventHandler; onPopup: DDN.mscorlib.DNEventHandler; onSelect: DDN.mscorlib.DNEventHandler; items: TArray<DNMenuItem>): DNMenuItem; overload;

  end;

  [DNTypeName('System.Windows.Forms.MenuItem')]
  DNMenuItem = interface(DNMenu)
  ['{AC165C73-2DA0-3CF8-AB41-D4B1D4ABA90F}']
  { getters & setters } 

    function get_BarBreak: Boolean;
    procedure set_BarBreak(value: Boolean);
    function get_Break: Boolean;
    procedure set_Break(value: Boolean);
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_DefaultItem: Boolean;
    procedure set_DefaultItem(value: Boolean);
    function get_OwnerDraw: Boolean;
    procedure set_OwnerDraw(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Index: Int32;
    procedure set_Index(value: Int32);
    function get_IsParent: Boolean;
    function get_MdiList: Boolean;
    procedure set_MdiList(value: Boolean);
    function get_MergeType: DNMenuMerge;
    procedure set_MergeType(value: DNMenuMerge);
    function get_MergeOrder: Int32;
    procedure set_MergeOrder(value: Int32);
    function get_Mnemonic: Char;
    function get_Parent: DNMenu;
    function get_RadioCheck: Boolean;
    procedure set_RadioCheck(value: Boolean);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Shortcut: DNShortcut;
    procedure set_Shortcut(value: DNShortcut);
    function get_ShowShortcut: Boolean;
    procedure set_ShowShortcut(value: Boolean);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Handle: IntPtr;
    function get_MdiListItem: DNMenuItem;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_MenuItems: DNMenu_MenuItemCollection;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DrawItem(value: DNDrawItemEventHandler);
    procedure remove_DrawItem(value: DNDrawItemEventHandler);
    procedure add_MeasureItem(value: DNMeasureItemEventHandler);
    procedure remove_MeasureItem(value: DNMeasureItemEventHandler);
    procedure add_Popup(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Popup(value: DDN.mscorlib.DNEventHandler);
    procedure add_Select(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Select(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function CloneMenu: DNMenuItem;
    function MergeMenu: DNMenuItem; overload;
    procedure PerformSelect;
    procedure MergeMenu(itemSrc: DNMenuItem); overload;
    procedure PerformClick;
    function ToString: string;
    procedure MergeMenu(menuSrc: DNMenu); overload;
    function FindMenuItem(&type: Int32; value: IntPtr): DNMenuItem;
    function GetContextMenu: DNContextMenu;
    function GetMainMenu: DNMainMenu;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BarBreak: Boolean read get_BarBreak write set_BarBreak;
    property Break: Boolean read get_Break write set_Break;
    property Checked: Boolean read get_Checked write set_Checked;
    property DefaultItem: Boolean read get_DefaultItem write set_DefaultItem;
    property OwnerDraw: Boolean read get_OwnerDraw write set_OwnerDraw;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Index: Int32 read get_Index write set_Index;
    property IsParent: Boolean read get_IsParent;
    property MdiList: Boolean read get_MdiList write set_MdiList;
    property MergeType: DNMenuMerge read get_MergeType write set_MergeType;
    property MergeOrder: Int32 read get_MergeOrder write set_MergeOrder;
    property Mnemonic: Char read get_Mnemonic;
    property Parent: DNMenu read get_Parent;
    property RadioCheck: Boolean read get_RadioCheck write set_RadioCheck;
    property Text: string read get_Text write set_Text;
    property Shortcut: DNShortcut read get_Shortcut write set_Shortcut;
    property ShowShortcut: Boolean read get_ShowShortcut write set_ShowShortcut;
    property Visible: Boolean read get_Visible write set_Visible;
    property Handle: IntPtr read get_Handle;
    property MdiListItem: DNMenuItem read get_MdiListItem;
    property Name: string read get_Name write set_Name;
    property MenuItems: DNMenu_MenuItemCollection read get_MenuItems;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNMenuItem = class(TDNGenericImport<DNMenuItemClass, DNMenuItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNotifyIconClass = interface(DNObjectClass)
  ['{51B84C2F-D3BF-5EB9-B61F-7EA9D1C38A74}']
  { constructors } 

    {class} function init: DNNotifyIcon; overload;
    {class} function init(container: DDN.System.DNIContainer): DNNotifyIcon; overload;

  end;

  [DNTypeName('System.Windows.Forms.NotifyIcon')]
  DNNotifyIcon = interface(DNObject)
  ['{91DAAEAA-8EFC-37AA-AB7E-0826BFC4ADE2}']
  { getters & setters } 

    function get_BalloonTipText: string;
    procedure set_BalloonTipText(value: string);
    function get_BalloonTipIcon: DNToolTipIcon;
    procedure set_BalloonTipIcon(value: DNToolTipIcon);
    function get_BalloonTipTitle: string;
    procedure set_BalloonTipTitle(value: string);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_BalloonTipClicked(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BalloonTipClicked(value: DDN.mscorlib.DNEventHandler);
    procedure add_BalloonTipClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BalloonTipClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_BalloonTipShown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BalloonTipShown(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseClick(value: DNMouseEventHandler);
    procedure remove_MouseClick(value: DNMouseEventHandler);
    procedure add_MouseDoubleClick(value: DNMouseEventHandler);
    procedure remove_MouseDoubleClick(value: DNMouseEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure ShowBalloonTip(timeout: Int32); overload;
    procedure ShowBalloonTip(timeout: Int32; tipTitle: string; tipText: string; tipIcon: DNToolTipIcon); overload;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BalloonTipText: string read get_BalloonTipText write set_BalloonTipText;
    property BalloonTipIcon: DNToolTipIcon read get_BalloonTipIcon write set_BalloonTipIcon;
    property BalloonTipTitle: string read get_BalloonTipTitle write set_BalloonTipTitle;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property Text: string read get_Text write set_Text;
    property Visible: Boolean read get_Visible write set_Visible;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNNotifyIcon = class(TDNGenericImport<DNNotifyIconClass, DNNotifyIcon>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNStatusBarPanelClass = interface(DNObjectClass)
  ['{E0FA72C9-366C-53FA-B734-77C9A333B36D}']
  { constructors } 

    {class} function init: DNStatusBarPanel;

  end;

  [DNTypeName('System.Windows.Forms.StatusBarPanel')]
  DNStatusBarPanel = interface(DNObject)
  ['{CC0CA2B4-D87F-3AB7-A7E7-8BB0343A89F8}']
  { getters & setters } 

    function get_Alignment: DNHorizontalAlignment;
    procedure set_Alignment(value: DNHorizontalAlignment);
    function get_AutoSize: DNStatusBarPanelAutoSize;
    procedure set_AutoSize(value: DNStatusBarPanelAutoSize);
    function get_BorderStyle: DNStatusBarPanelBorderStyle;
    procedure set_BorderStyle(value: DNStatusBarPanelBorderStyle);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_MinWidth: Int32;
    procedure set_MinWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNStatusBar;
    function get_Style: DNStatusBarPanelStyle;
    procedure set_Style(value: DNStatusBarPanelStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure BeginInit;
    procedure EndInit;
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Alignment: DNHorizontalAlignment read get_Alignment write set_Alignment;
    property AutoSize: DNStatusBarPanelAutoSize read get_AutoSize write set_AutoSize;
    property BorderStyle: DNStatusBarPanelBorderStyle read get_BorderStyle write set_BorderStyle;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property MinWidth: Int32 read get_MinWidth write set_MinWidth;
    property Name: string read get_Name write set_Name;
    property Parent: DNStatusBar read get_Parent;
    property Style: DNStatusBarPanelStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNStatusBarPanel = class(TDNGenericImport<DNStatusBarPanelClass, DNStatusBarPanel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTimerClass = interface(DNObjectClass)
  ['{10DB7F7E-2F21-524D-82CC-62C6E64E30CE}']
  { constructors } 

    {class} function init: DNTimer; overload;
    {class} function init(container: DDN.System.DNIContainer): DNTimer; overload;

  end;

  [DNTypeName('System.Windows.Forms.Timer')]
  DNTimer = interface(DNObject)
  ['{E54100EA-EFF0-3D4B-8EEC-175A6EBD902A}']
  { getters & setters } 

    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Interval: Int32;
    procedure set_Interval(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Tick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Tick(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Start;
    procedure Stop;
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Interval: Int32 read get_Interval write set_Interval;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNTimer = class(TDNGenericImport<DNTimerClass, DNTimer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolBarButtonClass = interface(DNObjectClass)
  ['{16069BA7-0255-5F42-9BB3-EBCB4DC72937}']
  { constructors } 

    {class} function init: DNToolBarButton; overload;
    {class} function init(text: string): DNToolBarButton; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolBarButton')]
  DNToolBarButton = interface(DNObject)
  ['{B76AAA2F-01A7-34D9-B40F-EB36A2E22A98}']
  { getters & setters } 

    function get_DropDownMenu: DNMenu;
    procedure set_DropDownMenu(value: DNMenu);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNToolBar;
    function get_PartialPush: Boolean;
    procedure set_PartialPush(value: Boolean);
    function get_Pushed: Boolean;
    procedure set_Pushed(value: Boolean);
    function get_Rectangle: DDN.System.Drawing.DNRectangle;
    function get_Style: DNToolBarButtonStyle;
    procedure set_Style(value: DNToolBarButtonStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DropDownMenu: DNMenu read get_DropDownMenu write set_DropDownMenu;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property Name: string read get_Name write set_Name;
    property Parent: DNToolBar read get_Parent;
    property PartialPush: Boolean read get_PartialPush write set_PartialPush;
    property Pushed: Boolean read get_Pushed write set_Pushed;
    property Rectangle: DDN.System.Drawing.DNRectangle read get_Rectangle;
    property Style: DNToolBarButtonStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolBarButton = class(TDNGenericImport<DNToolBarButtonClass, DNToolBarButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemClass = interface(DNObjectClass)
  ['{411DC45B-5D92-5979-B188-B73E767BC8EC}']
  end;

  [DNTypeName('System.Windows.Forms.ToolStripItem')]
  DNToolStripItem = interface(DNObject)
  ['{8305D656-F0C9-3C0D-B455-F9EFEEFC1DC8}']
  { getters & setters } 

    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_CanSelect: Boolean;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property CanSelect: Boolean read get_CanSelect;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripItem = class(TDNGenericImport<DNToolStripItemClass, DNToolStripItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripButtonClass = interface(DNToolStripItemClass)
  ['{4585F4CD-9B8F-5F8C-B0D0-2D82F28AC2C4}']
  { constructors } 

    {class} function init: DNToolStripButton; overload;
    {class} function init(text: string): DNToolStripButton; overload;
    {class} function init(image: DDN.System.Drawing.DNImage): DNToolStripButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage): DNToolStripButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler): DNToolStripButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler; name: string): DNToolStripButton; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripButton')]
  DNToolStripButton = interface(DNToolStripItem)
  ['{4101DD7B-759E-3F36-8217-77E36CE2CE4F}']
  { getters & setters } 

    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_CanSelect: Boolean;
    function get_CheckOnClick: Boolean;
    procedure set_CheckOnClick(value: Boolean);
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_CheckState: DNCheckState;
    procedure set_CheckState(value: DNCheckState);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CheckStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property CanSelect: Boolean read get_CanSelect;
    property CheckOnClick: Boolean read get_CheckOnClick write set_CheckOnClick;
    property Checked: Boolean read get_Checked write set_Checked;
    property CheckState: DNCheckState read get_CheckState write set_CheckState;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripButton = class(TDNGenericImport<DNToolStripButtonClass, DNToolStripButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripControlHostClass = interface(DNToolStripItemClass)
  ['{311E059D-5E78-5B43-8209-98A57F787D32}']
  { constructors } 

    {class} function init(c: DNControl): DNToolStripControlHost; overload;
    {class} function init(c: DNControl; name: string): DNToolStripControlHost; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripControlHost')]
  DNToolStripControlHost = interface(DNToolStripItem)
  ['{9AAD04E2-CB1F-38E7-9275-6ED8D4BB96D4}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_CanSelect: Boolean;
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ControlAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ControlAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Control: DNControl;
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure Focus;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property CanSelect: Boolean read get_CanSelect;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ControlAlign: DDN.System.Drawing.DNContentAlignment read get_ControlAlign write set_ControlAlign;
    property Control: DNControl read get_Control;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Height: Int32 read get_Height write set_Height;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripControlHost = class(TDNGenericImport<DNToolStripControlHostClass, DNToolStripControlHost>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripComboBoxClass = interface(DNToolStripControlHostClass)
  ['{D51DC0B3-94C4-5D96-811B-AE35BC7CEFE8}']
  { constructors } 

    {class} function init: DNToolStripComboBox; overload;
    {class} function init(name: string): DNToolStripComboBox; overload;
    {class} function init(c: DNControl): DNToolStripComboBox; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripComboBox')]
  DNToolStripComboBox = interface(DNToolStripControlHost)
  ['{580FAB32-FA37-3E06-A1FE-C5132A5A5124}']
  { getters & setters } 

    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_ComboBox: DNComboBox;
    function get_DropDownHeight: Int32;
    procedure set_DropDownHeight(value: Int32);
    function get_DropDownStyle: DNComboBoxStyle;
    procedure set_DropDownStyle(value: DNComboBoxStyle);
    function get_DropDownWidth: Int32;
    procedure set_DropDownWidth(value: Int32);
    function get_DroppedDown: Boolean;
    procedure set_DroppedDown(value: Boolean);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_IntegralHeight: Boolean;
    procedure set_IntegralHeight(value: Boolean);
    function get_Items: DNComboBox_ObjectCollection;
    function get_MaxDropDownItems: Int32;
    procedure set_MaxDropDownItems(value: Int32);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_SelectedIndex: Int32;
    procedure set_SelectedIndex(value: Int32);
    function get_SelectedItem: DDN.mscorlib.DNObject;
    procedure set_SelectedItem(value: DDN.mscorlib.DNObject);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_CanSelect: Boolean;
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ControlAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ControlAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Control: DNControl;
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDown(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_SelectedIndexChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextUpdate(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextUpdate(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure BeginUpdate;
    procedure EndUpdate;
    function FindString(s: string): Int32; overload;
    function FindString(s: string; startIndex: Int32): Int32; overload;
    function FindStringExact(s: string): Int32; overload;
    function FindStringExact(s: string; startIndex: Int32): Int32; overload;
    function GetItemHeight(index: Int32): Int32;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    function ToString: string;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure Focus;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select; overload;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property ComboBox: DNComboBox read get_ComboBox;
    property DropDownHeight: Int32 read get_DropDownHeight write set_DropDownHeight;
    property DropDownStyle: DNComboBoxStyle read get_DropDownStyle write set_DropDownStyle;
    property DropDownWidth: Int32 read get_DropDownWidth write set_DropDownWidth;
    property DroppedDown: Boolean read get_DroppedDown write set_DroppedDown;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property IntegralHeight: Boolean read get_IntegralHeight write set_IntegralHeight;
    property Items: DNComboBox_ObjectCollection read get_Items;
    property MaxDropDownItems: Int32 read get_MaxDropDownItems write set_MaxDropDownItems;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property SelectedIndex: Int32 read get_SelectedIndex write set_SelectedIndex;
    property SelectedItem: DDN.mscorlib.DNObject read get_SelectedItem write set_SelectedItem;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property CanSelect: Boolean read get_CanSelect;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ControlAlign: DDN.System.Drawing.DNContentAlignment read get_ControlAlign write set_ControlAlign;
    property Control: DNControl read get_Control;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Height: Int32 read get_Height write set_Height;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripComboBox = class(TDNGenericImport<DNToolStripComboBoxClass, DNToolStripComboBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripProgressBarClass = interface(DNToolStripControlHostClass)
  ['{E7EA7E9E-193E-520C-883A-145E09AD9B3F}']
  { constructors } 

    {class} function init: DNToolStripProgressBar; overload;
    {class} function init(name: string): DNToolStripProgressBar; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripProgressBar')]
  DNToolStripProgressBar = interface(DNToolStripControlHost)
  ['{A5CE4C50-EFA6-3A52-A932-7CC4E40C772B}']
  { getters & setters } 

    function get_ProgressBar: DNProgressBar;
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_MarqueeAnimationSpeed: Int32;
    procedure set_MarqueeAnimationSpeed(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_RightToLeftLayout: Boolean;
    procedure set_RightToLeftLayout(value: Boolean);
    function get_Step: Int32;
    procedure set_Step(value: Int32);
    function get_Style: DNProgressBarStyle;
    procedure set_Style(value: DNProgressBarStyle);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_CanSelect: Boolean;
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ControlAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ControlAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Control: DNControl;
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftLayoutChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Increment(value: Int32);
    procedure PerformStep;
    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure Focus;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ProgressBar: DNProgressBar read get_ProgressBar;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property MarqueeAnimationSpeed: Int32 read get_MarqueeAnimationSpeed write set_MarqueeAnimationSpeed;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property RightToLeftLayout: Boolean read get_RightToLeftLayout write set_RightToLeftLayout;
    property Step: Int32 read get_Step write set_Step;
    property Style: DNProgressBarStyle read get_Style write set_Style;
    property Text: string read get_Text write set_Text;
    property Value: Int32 read get_Value write set_Value;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property CanSelect: Boolean read get_CanSelect;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ControlAlign: DDN.System.Drawing.DNContentAlignment read get_ControlAlign write set_ControlAlign;
    property Control: DNControl read get_Control;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Height: Int32 read get_Height write set_Height;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripProgressBar = class(TDNGenericImport<DNToolStripProgressBarClass, DNToolStripProgressBar>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripTextBoxClass = interface(DNToolStripControlHostClass)
  ['{674FCCEB-723D-58BC-94AF-0372AA8D5359}']
  { constructors } 

    {class} function init: DNToolStripTextBox; overload;
    {class} function init(name: string): DNToolStripTextBox; overload;
    {class} function init(c: DNControl): DNToolStripTextBox; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripTextBox')]
  DNToolStripTextBox = interface(DNToolStripControlHost)
  ['{630C166D-BB59-3FCB-96AC-C253EFD73B03}']
  { getters & setters } 

    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_TextBox: DNTextBox;
    function get_AcceptsTab: Boolean;
    procedure set_AcceptsTab(value: Boolean);
    function get_AcceptsReturn: Boolean;
    procedure set_AcceptsReturn(value: Boolean);
    function get_AutoCompleteCustomSource: DNAutoCompleteStringCollection;
    procedure set_AutoCompleteCustomSource(value: DNAutoCompleteStringCollection);
    function get_AutoCompleteMode: DNAutoCompleteMode;
    procedure set_AutoCompleteMode(value: DNAutoCompleteMode);
    function get_AutoCompleteSource: DNAutoCompleteSource;
    procedure set_AutoCompleteSource(value: DNAutoCompleteSource);
    function get_BorderStyle: DNBorderStyle;
    procedure set_BorderStyle(value: DNBorderStyle);
    function get_CanUndo: Boolean;
    function get_CharacterCasing: DNCharacterCasing;
    procedure set_CharacterCasing(value: DNCharacterCasing);
    function get_HideSelection: Boolean;
    procedure set_HideSelection(value: Boolean);
    function get_Lines: TArray<string>;
    procedure set_Lines(value: TArray<string>);
    function get_MaxLength: Int32;
    procedure set_MaxLength(value: Int32);
    function get_Modified: Boolean;
    procedure set_Modified(value: Boolean);
    function get_Multiline: Boolean;
    procedure set_Multiline(value: Boolean);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_SelectedText: string;
    procedure set_SelectedText(value: string);
    function get_SelectionLength: Int32;
    procedure set_SelectionLength(value: Int32);
    function get_SelectionStart: Int32;
    procedure set_SelectionStart(value: Int32);
    function get_ShortcutsEnabled: Boolean;
    procedure set_ShortcutsEnabled(value: Boolean);
    function get_TextLength: Int32;
    function get_TextBoxTextAlign: DNHorizontalAlignment;
    procedure set_TextBoxTextAlign(value: DNHorizontalAlignment);
    function get_WordWrap: Boolean;
    procedure set_WordWrap(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_CanSelect: Boolean;
    function get_CausesValidation: Boolean;
    procedure set_CausesValidation(value: Boolean);
    function get_ControlAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ControlAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Control: DNControl;
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Focused: Boolean;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AcceptsTabChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BorderStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_HideSelectionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ModifiedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MultilineChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ReadOnlyChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextBoxTextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextBoxTextAlignChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Enter(value: DDN.mscorlib.DNEventHandler);
    procedure add_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_GotFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Leave(value: DDN.mscorlib.DNEventHandler);
    procedure add_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LostFocus(value: DDN.mscorlib.DNEventHandler);
    procedure add_KeyDown(value: DNKeyEventHandler);
    procedure remove_KeyDown(value: DNKeyEventHandler);
    procedure add_KeyPress(value: DNKeyPressEventHandler);
    procedure remove_KeyPress(value: DNKeyPressEventHandler);
    procedure add_KeyUp(value: DNKeyEventHandler);
    procedure remove_KeyUp(value: DNKeyEventHandler);
    procedure add_Validating(value: DDN.System.DNCancelEventHandler);
    procedure remove_Validating(value: DDN.System.DNCancelEventHandler);
    procedure add_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Validated(value: DDN.mscorlib.DNEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure AppendText(text: string);
    procedure Clear;
    procedure ClearUndo;
    procedure Copy;
    procedure Cut;
    procedure DeselectAll;
    function GetCharFromPosition(pt: DDN.System.Drawing.DNPoint): Char;
    function GetCharIndexFromPosition(pt: DDN.System.Drawing.DNPoint): Int32;
    function GetFirstCharIndexFromLine(lineNumber: Int32): Int32;
    function GetFirstCharIndexOfCurrentLine: Int32;
    function GetLineFromCharIndex(index: Int32): Int32;
    function GetPositionFromCharIndex(index: Int32): DDN.System.Drawing.DNPoint;
    procedure Paste;
    procedure ScrollToCaret;
    procedure Select(start: Int32; length: Int32); overload;
    procedure SelectAll;
    procedure Undo;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure Focus;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select; overload;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property TextBox: DNTextBox read get_TextBox;
    property AcceptsTab: Boolean read get_AcceptsTab write set_AcceptsTab;
    property AcceptsReturn: Boolean read get_AcceptsReturn write set_AcceptsReturn;
    property AutoCompleteCustomSource: DNAutoCompleteStringCollection read get_AutoCompleteCustomSource write set_AutoCompleteCustomSource;
    property AutoCompleteMode: DNAutoCompleteMode read get_AutoCompleteMode write set_AutoCompleteMode;
    property AutoCompleteSource: DNAutoCompleteSource read get_AutoCompleteSource write set_AutoCompleteSource;
    property BorderStyle: DNBorderStyle read get_BorderStyle write set_BorderStyle;
    property CanUndo: Boolean read get_CanUndo;
    property CharacterCasing: DNCharacterCasing read get_CharacterCasing write set_CharacterCasing;
    property HideSelection: Boolean read get_HideSelection write set_HideSelection;
    property Lines: TArray<string> read get_Lines write set_Lines;
    property MaxLength: Int32 read get_MaxLength write set_MaxLength;
    property Modified: Boolean read get_Modified write set_Modified;
    property Multiline: Boolean read get_Multiline write set_Multiline;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property SelectedText: string read get_SelectedText write set_SelectedText;
    property SelectionLength: Int32 read get_SelectionLength write set_SelectionLength;
    property SelectionStart: Int32 read get_SelectionStart write set_SelectionStart;
    property ShortcutsEnabled: Boolean read get_ShortcutsEnabled write set_ShortcutsEnabled;
    property TextLength: Int32 read get_TextLength;
    property TextBoxTextAlign: DNHorizontalAlignment read get_TextBoxTextAlign write set_TextBoxTextAlign;
    property WordWrap: Boolean read get_WordWrap write set_WordWrap;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property CanSelect: Boolean read get_CanSelect;
    property CausesValidation: Boolean read get_CausesValidation write set_CausesValidation;
    property ControlAlign: DDN.System.Drawing.DNContentAlignment read get_ControlAlign write set_ControlAlign;
    property Control: DNControl read get_Control;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Focused: Boolean read get_Focused;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property Height: Int32 read get_Height write set_Height;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripTextBox = class(TDNGenericImport<DNToolStripTextBoxClass, DNToolStripTextBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownItemClass = interface(DNToolStripItemClass)
  ['{575D0CB2-1AEB-5A82-A7EC-7E08EB118D95}']
  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownItem')]
  DNToolStripDropDownItem = interface(DNToolStripItem)
  ['{7860124D-443D-3662-A12C-6F51BD115546}']
  { getters & setters } 

    function get_DropDown: DNToolStripDropDown;
    procedure set_DropDown(value: DNToolStripDropDown);
    function get_DropDownDirection: DNToolStripDropDownDirection;
    procedure set_DropDownDirection(value: DNToolStripDropDownDirection);
    function get_DropDownItems: DNToolStripItemCollection;
    function get_HasDropDownItems: Boolean;
    function get_HasDropDown: Boolean;
    function get_Pressed: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_CanSelect: Boolean;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure HideDropDown;
    procedure ShowDropDown;
    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DropDown: DNToolStripDropDown read get_DropDown write set_DropDown;
    property DropDownDirection: DNToolStripDropDownDirection read get_DropDownDirection write set_DropDownDirection;
    property DropDownItems: DNToolStripItemCollection read get_DropDownItems;
    property HasDropDownItems: Boolean read get_HasDropDownItems;
    property HasDropDown: Boolean read get_HasDropDown;
    property Pressed: Boolean read get_Pressed;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property CanSelect: Boolean read get_CanSelect;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripDropDownItem = class(TDNGenericImport<DNToolStripDropDownItemClass, DNToolStripDropDownItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownButtonClass = interface(DNToolStripDropDownItemClass)
  ['{CB4409C2-3FBE-53BD-AD72-2AD7F2786C96}']
  { constructors } 

    {class} function init: DNToolStripDropDownButton; overload;
    {class} function init(text: string): DNToolStripDropDownButton; overload;
    {class} function init(image: DDN.System.Drawing.DNImage): DNToolStripDropDownButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage): DNToolStripDropDownButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler): DNToolStripDropDownButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler; name: string): DNToolStripDropDownButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; dropDownItems: TArray<DNToolStripItem>): DNToolStripDropDownButton; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownButton')]
  DNToolStripDropDownButton = interface(DNToolStripDropDownItem)
  ['{2F3993C8-1CC5-386F-A028-D94762AB640A}']
  { getters & setters } 

    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_ShowDropDownArrow: Boolean;
    procedure set_ShowDropDownArrow(value: Boolean);
    function get_DropDown: DNToolStripDropDown;
    procedure set_DropDown(value: DNToolStripDropDown);
    function get_DropDownDirection: DNToolStripDropDownDirection;
    procedure set_DropDownDirection(value: DNToolStripDropDownDirection);
    function get_DropDownItems: DNToolStripItemCollection;
    function get_HasDropDownItems: Boolean;
    function get_HasDropDown: Boolean;
    function get_Pressed: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_CanSelect: Boolean;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure HideDropDown;
    procedure ShowDropDown;
    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property ShowDropDownArrow: Boolean read get_ShowDropDownArrow write set_ShowDropDownArrow;
    property DropDown: DNToolStripDropDown read get_DropDown write set_DropDown;
    property DropDownDirection: DNToolStripDropDownDirection read get_DropDownDirection write set_DropDownDirection;
    property DropDownItems: DNToolStripItemCollection read get_DropDownItems;
    property HasDropDownItems: Boolean read get_HasDropDownItems;
    property HasDropDown: Boolean read get_HasDropDown;
    property Pressed: Boolean read get_Pressed;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property CanSelect: Boolean read get_CanSelect;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripDropDownButton = class(TDNGenericImport<DNToolStripDropDownButtonClass, DNToolStripDropDownButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripOverflowButtonClass = interface(DNToolStripDropDownButtonClass)
  ['{937375DF-28FE-5E50-9CB7-79F9DC2BFA06}']
  end;

  [DNTypeName('System.Windows.Forms.ToolStripOverflowButton')]
  DNToolStripOverflowButton = interface(DNToolStripDropDownButton)
  ['{A74C3E29-C64C-3E31-AC96-0C91BE00C1D3}']
  { getters & setters } 

    function get_HasDropDownItems: Boolean;
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_ShowDropDownArrow: Boolean;
    procedure set_ShowDropDownArrow(value: Boolean);
    function get_DropDown: DNToolStripDropDown;
    procedure set_DropDown(value: DNToolStripDropDown);
    function get_DropDownDirection: DNToolStripDropDownDirection;
    procedure set_DropDownDirection(value: DNToolStripDropDownDirection);
    function get_DropDownItems: DNToolStripItemCollection;
    function get_HasDropDown: Boolean;
    function get_Pressed: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_CanSelect: Boolean;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure HideDropDown;
    procedure ShowDropDown;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property HasDropDownItems: Boolean read get_HasDropDownItems;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property ShowDropDownArrow: Boolean read get_ShowDropDownArrow write set_ShowDropDownArrow;
    property DropDown: DNToolStripDropDown read get_DropDown write set_DropDown;
    property DropDownDirection: DNToolStripDropDownDirection read get_DropDownDirection write set_DropDownDirection;
    property DropDownItems: DNToolStripItemCollection read get_DropDownItems;
    property HasDropDown: Boolean read get_HasDropDown;
    property Pressed: Boolean read get_Pressed;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property CanSelect: Boolean read get_CanSelect;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripOverflowButton = class(TDNGenericImport<DNToolStripOverflowButtonClass, DNToolStripOverflowButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripMenuItemClass = interface(DNToolStripDropDownItemClass)
  ['{419AC716-9A0E-547B-A531-9DBC2598A0C6}']
  { constructors } 

    {class} function init: DNToolStripMenuItem; overload;
    {class} function init(text: string): DNToolStripMenuItem; overload;
    {class} function init(image: DDN.System.Drawing.DNImage): DNToolStripMenuItem; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage): DNToolStripMenuItem; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler): DNToolStripMenuItem; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler; name: string): DNToolStripMenuItem; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; dropDownItems: TArray<DNToolStripItem>): DNToolStripMenuItem; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler; shortcutKeys: DNKeys): DNToolStripMenuItem; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripMenuItem')]
  DNToolStripMenuItem = interface(DNToolStripDropDownItem)
  ['{9C5520DE-2F46-3485-810E-CBDC68B22445}']
  { getters & setters } 

    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_CheckOnClick: Boolean;
    procedure set_CheckOnClick(value: Boolean);
    function get_CheckState: DNCheckState;
    procedure set_CheckState(value: DNCheckState);
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_ShortcutKeys: DNKeys;
    procedure set_ShortcutKeys(value: DNKeys);
    function get_ShortcutKeyDisplayString: string;
    procedure set_ShortcutKeyDisplayString(value: string);
    function get_ShowShortcutKeys: Boolean;
    procedure set_ShowShortcutKeys(value: Boolean);
    function get_IsMdiWindowListEntry: Boolean;
    function get_DropDown: DNToolStripDropDown;
    procedure set_DropDown(value: DNToolStripDropDown);
    function get_DropDownDirection: DNToolStripDropDownDirection;
    procedure set_DropDownDirection(value: DNToolStripDropDownDirection);
    function get_DropDownItems: DNToolStripItemCollection;
    function get_HasDropDownItems: Boolean;
    function get_HasDropDown: Boolean;
    function get_Pressed: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_CanSelect: Boolean;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckedChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CheckStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CheckStateChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure HideDropDown;
    procedure ShowDropDown;
    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Checked: Boolean read get_Checked write set_Checked;
    property CheckOnClick: Boolean read get_CheckOnClick write set_CheckOnClick;
    property CheckState: DNCheckState read get_CheckState write set_CheckState;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property ShortcutKeys: DNKeys read get_ShortcutKeys write set_ShortcutKeys;
    property ShortcutKeyDisplayString: string read get_ShortcutKeyDisplayString write set_ShortcutKeyDisplayString;
    property ShowShortcutKeys: Boolean read get_ShowShortcutKeys write set_ShowShortcutKeys;
    property IsMdiWindowListEntry: Boolean read get_IsMdiWindowListEntry;
    property DropDown: DNToolStripDropDown read get_DropDown write set_DropDown;
    property DropDownDirection: DNToolStripDropDownDirection read get_DropDownDirection write set_DropDownDirection;
    property DropDownItems: DNToolStripItemCollection read get_DropDownItems;
    property HasDropDownItems: Boolean read get_HasDropDownItems;
    property HasDropDown: Boolean read get_HasDropDown;
    property Pressed: Boolean read get_Pressed;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property CanSelect: Boolean read get_CanSelect;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripMenuItem = class(TDNGenericImport<DNToolStripMenuItemClass, DNToolStripMenuItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripSplitButtonClass = interface(DNToolStripDropDownItemClass)
  ['{C87BEB81-1C89-57B5-88A4-F5BE231DEF4E}']
  { constructors } 

    {class} function init: DNToolStripSplitButton; overload;
    {class} function init(text: string): DNToolStripSplitButton; overload;
    {class} function init(image: DDN.System.Drawing.DNImage): DNToolStripSplitButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage): DNToolStripSplitButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler): DNToolStripSplitButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler; name: string): DNToolStripSplitButton; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; dropDownItems: TArray<DNToolStripItem>): DNToolStripSplitButton; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripSplitButton')]
  DNToolStripSplitButton = interface(DNToolStripDropDownItem)
  ['{476756D0-32EB-3E41-980F-7FA49D10EA99}']
  { getters & setters } 

    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_ButtonBounds: DDN.System.Drawing.DNRectangle;
    function get_ButtonPressed: Boolean;
    function get_ButtonSelected: Boolean;
    function get_DefaultItem: DNToolStripItem;
    procedure set_DefaultItem(value: DNToolStripItem);
    function get_DropDownButtonBounds: DDN.System.Drawing.DNRectangle;
    function get_DropDownButtonPressed: Boolean;
    function get_DropDownButtonSelected: Boolean;
    function get_DropDownButtonWidth: Int32;
    procedure set_DropDownButtonWidth(value: Int32);
    function get_SplitterBounds: DDN.System.Drawing.DNRectangle;
    function get_DropDown: DNToolStripDropDown;
    procedure set_DropDown(value: DNToolStripDropDown);
    function get_DropDownDirection: DNToolStripDropDownDirection;
    procedure set_DropDownDirection(value: DNToolStripDropDownDirection);
    function get_DropDownItems: DNToolStripItemCollection;
    function get_HasDropDownItems: Boolean;
    function get_HasDropDown: Boolean;
    function get_Pressed: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_CanSelect: Boolean;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_ButtonClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ButtonClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_ButtonDoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ButtonDoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DefaultItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DefaultItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownClosed(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpening(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DropDownOpened(value: DDN.mscorlib.DNEventHandler);
    procedure add_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure remove_DropDownItemClicked(value: DNToolStripItemClickedEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure OnButtonDoubleClick(e: DDN.mscorlib.DNEventArgs);
    procedure ResetDropDownButtonWidth;
    procedure PerformButtonClick;
    procedure HideDropDown;
    procedure ShowDropDown;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property ButtonBounds: DDN.System.Drawing.DNRectangle read get_ButtonBounds;
    property ButtonPressed: Boolean read get_ButtonPressed;
    property ButtonSelected: Boolean read get_ButtonSelected;
    property DefaultItem: DNToolStripItem read get_DefaultItem write set_DefaultItem;
    property DropDownButtonBounds: DDN.System.Drawing.DNRectangle read get_DropDownButtonBounds;
    property DropDownButtonPressed: Boolean read get_DropDownButtonPressed;
    property DropDownButtonSelected: Boolean read get_DropDownButtonSelected;
    property DropDownButtonWidth: Int32 read get_DropDownButtonWidth write set_DropDownButtonWidth;
    property SplitterBounds: DDN.System.Drawing.DNRectangle read get_SplitterBounds;
    property DropDown: DNToolStripDropDown read get_DropDown write set_DropDown;
    property DropDownDirection: DNToolStripDropDownDirection read get_DropDownDirection write set_DropDownDirection;
    property DropDownItems: DNToolStripItemCollection read get_DropDownItems;
    property HasDropDownItems: Boolean read get_HasDropDownItems;
    property HasDropDown: Boolean read get_HasDropDown;
    property Pressed: Boolean read get_Pressed;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property CanSelect: Boolean read get_CanSelect;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripSplitButton = class(TDNGenericImport<DNToolStripSplitButtonClass, DNToolStripSplitButton>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripLabelClass = interface(DNToolStripItemClass)
  ['{4B9AA276-48AB-5B15-A9FC-A13181689BF8}']
  { constructors } 

    {class} function init: DNToolStripLabel; overload;
    {class} function init(text: string): DNToolStripLabel; overload;
    {class} function init(image: DDN.System.Drawing.DNImage): DNToolStripLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage): DNToolStripLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; isLink: Boolean): DNToolStripLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; isLink: Boolean; onClick: DDN.mscorlib.DNEventHandler): DNToolStripLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; isLink: Boolean; onClick: DDN.mscorlib.DNEventHandler; name: string): DNToolStripLabel; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripLabel')]
  DNToolStripLabel = interface(DNToolStripItem)
  ['{32BB1DB4-E756-3D37-912D-862C6183B7E7}']
  { getters & setters } 

    function get_CanSelect: Boolean;
    function get_IsLink: Boolean;
    procedure set_IsLink(value: Boolean);
    function get_ActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_ActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkBehavior: DNLinkBehavior;
    procedure set_LinkBehavior(value: DNLinkBehavior);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkVisited: Boolean;
    procedure set_LinkVisited(value: Boolean);
    function get_VisitedLinkColor: DDN.System.Drawing.DNColor;
    procedure set_VisitedLinkColor(value: DDN.System.Drawing.DNColor);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CanSelect: Boolean read get_CanSelect;
    property IsLink: Boolean read get_IsLink write set_IsLink;
    property ActiveLinkColor: DDN.System.Drawing.DNColor read get_ActiveLinkColor write set_ActiveLinkColor;
    property LinkBehavior: DNLinkBehavior read get_LinkBehavior write set_LinkBehavior;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property LinkVisited: Boolean read get_LinkVisited write set_LinkVisited;
    property VisitedLinkColor: DDN.System.Drawing.DNColor read get_VisitedLinkColor write set_VisitedLinkColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripLabel = class(TDNGenericImport<DNToolStripLabelClass, DNToolStripLabel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripStatusLabelClass = interface(DNToolStripLabelClass)
  ['{620E525F-2EAD-5F5C-B102-2D8A167C9CCB}']
  { constructors } 

    {class} function init: DNToolStripStatusLabel; overload;
    {class} function init(text: string): DNToolStripStatusLabel; overload;
    {class} function init(image: DDN.System.Drawing.DNImage): DNToolStripStatusLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage): DNToolStripStatusLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler): DNToolStripStatusLabel; overload;
    {class} function init(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler; name: string): DNToolStripStatusLabel; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripStatusLabel')]
  DNToolStripStatusLabel = interface(DNToolStripLabel)
  ['{371FC3B5-A05D-322A-8691-658A18541367}']
  { getters & setters } 

    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_BorderStyle: DNBorder3DStyle;
    procedure set_BorderStyle(value: DNBorder3DStyle);
    function get_BorderSides: DNToolStripStatusLabelBorderSides;
    procedure set_BorderSides(value: DNToolStripStatusLabelBorderSides);
    function get_Spring: Boolean;
    procedure set_Spring(value: Boolean);
    function get_LiveSetting: DNAutomationLiveSetting;
    procedure set_LiveSetting(value: DNAutomationLiveSetting);
    function get_CanSelect: Boolean;
    function get_IsLink: Boolean;
    procedure set_IsLink(value: Boolean);
    function get_ActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_ActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkBehavior: DNLinkBehavior;
    procedure set_LinkBehavior(value: DNLinkBehavior);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkVisited: Boolean;
    procedure set_LinkVisited(value: Boolean);
    function get_VisitedLinkColor: DDN.System.Drawing.DNColor;
    procedure set_VisitedLinkColor(value: DDN.System.Drawing.DNColor);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property BorderStyle: DNBorder3DStyle read get_BorderStyle write set_BorderStyle;
    property BorderSides: DNToolStripStatusLabelBorderSides read get_BorderSides write set_BorderSides;
    property Spring: Boolean read get_Spring write set_Spring;
    property LiveSetting: DNAutomationLiveSetting read get_LiveSetting write set_LiveSetting;
    property CanSelect: Boolean read get_CanSelect;
    property IsLink: Boolean read get_IsLink write set_IsLink;
    property ActiveLinkColor: DDN.System.Drawing.DNColor read get_ActiveLinkColor write set_ActiveLinkColor;
    property LinkBehavior: DNLinkBehavior read get_LinkBehavior write set_LinkBehavior;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property LinkVisited: Boolean read get_LinkVisited write set_LinkVisited;
    property VisitedLinkColor: DDN.System.Drawing.DNColor read get_VisitedLinkColor write set_VisitedLinkColor;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property Available: Boolean read get_Available write set_Available;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property Height: Int32 read get_Height write set_Height;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripStatusLabel = class(TDNGenericImport<DNToolStripStatusLabelClass, DNToolStripStatusLabel>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripSeparatorClass = interface(DNToolStripItemClass)
  ['{4D315639-58C5-5787-9C09-0381E6E5F7DC}']
  { constructors } 

    {class} function init: DNToolStripSeparator;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripSeparator')]
  DNToolStripSeparator = interface(DNToolStripItem)
  ['{4CCC1822-C897-3A8A-82A4-C57762E3F539}']
  { getters & setters } 

    function get_AutoToolTip: Boolean;
    procedure set_AutoToolTip(value: Boolean);
    function get_BackgroundImage: DDN.System.Drawing.DNImage;
    procedure set_BackgroundImage(value: DDN.System.Drawing.DNImage);
    function get_BackgroundImageLayout: DNImageLayout;
    procedure set_BackgroundImageLayout(value: DNImageLayout);
    function get_CanSelect: Boolean;
    function get_DoubleClickEnabled: Boolean;
    procedure set_DoubleClickEnabled(value: Boolean);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_DisplayStyle: DNToolStripItemDisplayStyle;
    procedure set_DisplayStyle(value: DNToolStripItemDisplayStyle);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ImageAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_ImageAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageTransparentColor: DDN.System.Drawing.DNColor;
    procedure set_ImageTransparentColor(value: DDN.System.Drawing.DNColor);
    function get_ImageScaling: DNToolStripItemImageScaling;
    procedure set_ImageScaling(value: DNToolStripItemImageScaling);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TextAlign: DDN.System.Drawing.DNContentAlignment;
    procedure set_TextAlign(value: DDN.System.Drawing.DNContentAlignment);
    function get_TextDirection: DNToolStripTextDirection;
    procedure set_TextDirection(value: DNToolStripTextDirection);
    function get_TextImageRelation: DNTextImageRelation;
    procedure set_TextImageRelation(value: DNTextImageRelation);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_RightToLeftAutoMirrorImage: Boolean;
    procedure set_RightToLeftAutoMirrorImage(value: Boolean);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_AccessibleDefaultActionDescription: string;
    procedure set_AccessibleDefaultActionDescription(value: string);
    function get_AccessibleDescription: string;
    procedure set_AccessibleDescription(value: string);
    function get_AccessibleName: string;
    procedure set_AccessibleName(value: string);
    function get_AccessibleRole: DNAccessibleRole;
    procedure set_AccessibleRole(value: DNAccessibleRole);
    function get_Alignment: DNToolStripItemAlignment;
    procedure set_Alignment(value: DNToolStripItemAlignment);
    function get_AllowDrop: Boolean;
    procedure set_AllowDrop(value: Boolean);
    function get_AutoSize: Boolean;
    procedure set_AutoSize(value: Boolean);
    function get_Available: Boolean;
    procedure set_Available(value: Boolean);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_ContentRectangle: DDN.System.Drawing.DNRectangle;
    function get_Anchor: DNAnchorStyles;
    procedure set_Anchor(value: DNAnchorStyles);
    function get_Dock: DNDockStyle;
    procedure set_Dock(value: DNDockStyle);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_IsDisposed: Boolean;
    function get_IsOnDropDown: Boolean;
    function get_IsOnOverflow: Boolean;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_MergeAction: DNMergeAction;
    procedure set_MergeAction(value: DNMergeAction);
    function get_MergeIndex: Int32;
    procedure set_MergeIndex(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Owner: DNToolStrip;
    procedure set_Owner(value: DNToolStrip);
    function get_OwnerItem: DNToolStripItem;
    function get_Overflow: DNToolStripItemOverflow;
    procedure set_Overflow(value: DNToolStripItemOverflow);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_Placement: DNToolStripItemPlacement;
    function get_Pressed: Boolean;
    function get_RightToLeft: DNRightToLeft;
    procedure set_RightToLeft(value: DNRightToLeft);
    function get_Selected: Boolean;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_EnabledChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DisplayStyleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_TextChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_AvailableChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_BackColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Click(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Click(value: DDN.mscorlib.DNEventHandler);
    procedure add_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DoubleClick(value: DDN.mscorlib.DNEventHandler);
    procedure add_DragDrop(value: DNDragEventHandler);
    procedure remove_DragDrop(value: DNDragEventHandler);
    procedure add_DragEnter(value: DNDragEventHandler);
    procedure remove_DragEnter(value: DNDragEventHandler);
    procedure add_DragOver(value: DNDragEventHandler);
    procedure remove_DragOver(value: DNDragEventHandler);
    procedure add_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_DragLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ForeColorChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure remove_GiveFeedback(value: DNGiveFeedbackEventHandler);
    procedure add_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_LocationChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseDown(value: DNMouseEventHandler);
    procedure remove_MouseDown(value: DNMouseEventHandler);
    procedure add_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseEnter(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseLeave(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MouseHover(value: DDN.mscorlib.DNEventHandler);
    procedure add_MouseMove(value: DNMouseEventHandler);
    procedure remove_MouseMove(value: DNMouseEventHandler);
    procedure add_MouseUp(value: DNMouseEventHandler);
    procedure remove_MouseUp(value: DNMouseEventHandler);
    procedure add_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_OwnerChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Paint(value: DNPaintEventHandler);
    procedure remove_Paint(value: DNPaintEventHandler);
    procedure add_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure remove_QueryContinueDrag(value: DNQueryContinueDragEventHandler);
    procedure add_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure remove_QueryAccessibilityHelp(value: DNQueryAccessibilityHelpEventHandler);
    procedure add_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_RightToLeftChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_VisibleChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetPreferredSize(constrainingSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize;
    procedure ResetDisplayStyle;
    procedure ResetFont;
    procedure ResetImage;
    function DoDragDrop(data: DDN.mscorlib.DNObject; allowedEffects: DNDragDropEffects): DNDragDropEffects;
    function GetCurrentParent: DNToolStrip;
    procedure Invalidate; overload;
    procedure Invalidate(r: DDN.System.Drawing.DNRectangle); overload;
    procedure PerformClick;
    procedure Select;
    procedure ResetBackColor;
    procedure ResetForeColor;
    procedure ResetMargin;
    procedure ResetRightToLeft;
    procedure ResetTextDirection;
    function ToString: string;
    procedure ResetPadding;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoToolTip: Boolean read get_AutoToolTip write set_AutoToolTip;
    property BackgroundImage: DDN.System.Drawing.DNImage read get_BackgroundImage write set_BackgroundImage;
    property BackgroundImageLayout: DNImageLayout read get_BackgroundImageLayout write set_BackgroundImageLayout;
    property CanSelect: Boolean read get_CanSelect;
    property DoubleClickEnabled: Boolean read get_DoubleClickEnabled write set_DoubleClickEnabled;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property DisplayStyle: DNToolStripItemDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ImageAlign: DDN.System.Drawing.DNContentAlignment read get_ImageAlign write set_ImageAlign;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageTransparentColor: DDN.System.Drawing.DNColor read get_ImageTransparentColor write set_ImageTransparentColor;
    property ImageScaling: DNToolStripItemImageScaling read get_ImageScaling write set_ImageScaling;
    property Text: string read get_Text write set_Text;
    property TextAlign: DDN.System.Drawing.DNContentAlignment read get_TextAlign write set_TextAlign;
    property TextDirection: DNToolStripTextDirection read get_TextDirection write set_TextDirection;
    property TextImageRelation: DNTextImageRelation read get_TextImageRelation write set_TextImageRelation;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property RightToLeftAutoMirrorImage: Boolean read get_RightToLeftAutoMirrorImage write set_RightToLeftAutoMirrorImage;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property AccessibleDefaultActionDescription: string read get_AccessibleDefaultActionDescription write set_AccessibleDefaultActionDescription;
    property AccessibleDescription: string read get_AccessibleDescription write set_AccessibleDescription;
    property AccessibleName: string read get_AccessibleName write set_AccessibleName;
    property AccessibleRole: DNAccessibleRole read get_AccessibleRole write set_AccessibleRole;
    property Alignment: DNToolStripItemAlignment read get_Alignment write set_Alignment;
    property AllowDrop: Boolean read get_AllowDrop write set_AllowDrop;
    property AutoSize: Boolean read get_AutoSize write set_AutoSize;
    property Available: Boolean read get_Available write set_Available;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property ContentRectangle: DDN.System.Drawing.DNRectangle read get_ContentRectangle;
    property Anchor: DNAnchorStyles read get_Anchor write set_Anchor;
    property Dock: DNDockStyle read get_Dock write set_Dock;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Height: Int32 read get_Height write set_Height;
    property IsDisposed: Boolean read get_IsDisposed;
    property IsOnDropDown: Boolean read get_IsOnDropDown;
    property IsOnOverflow: Boolean read get_IsOnOverflow;
    property Margin: DNPadding read get_Margin write set_Margin;
    property MergeAction: DNMergeAction read get_MergeAction write set_MergeAction;
    property MergeIndex: Int32 read get_MergeIndex write set_MergeIndex;
    property Name: string read get_Name write set_Name;
    property Owner: DNToolStrip read get_Owner write set_Owner;
    property OwnerItem: DNToolStripItem read get_OwnerItem;
    property Overflow: DNToolStripItemOverflow read get_Overflow write set_Overflow;
    property Padding: DNPadding read get_Padding write set_Padding;
    property Placement: DNToolStripItemPlacement read get_Placement;
    property Pressed: Boolean read get_Pressed;
    property RightToLeft: DNRightToLeft read get_RightToLeft write set_RightToLeft;
    property Selected: Boolean read get_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripSeparator = class(TDNGenericImport<DNToolStripSeparatorClass, DNToolStripSeparator>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripPanelRowClass = interface(DNObjectClass)
  ['{BA20DD6F-AC12-5876-9B86-0AE339ABCD34}']
  { constructors } 

    {class} function init(parent: DNToolStripPanel): DNToolStripPanelRow;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripPanelRow')]
  DNToolStripPanelRow = interface(DNObject)
  ['{9239A3D2-AEDC-345B-991B-A09D30FD4B35}']
  { getters & setters } 

    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Controls: TArray<DNControl>;
    function get_DisplayRectangle: DDN.System.Drawing.DNRectangle;
    function get_LayoutEngine: DNLayoutEngine;
    function get_Margin: DNPadding;
    procedure set_Margin(value: DNPadding);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_ToolStripPanel: DNToolStripPanel;
    function get_Orientation: DNOrientation;
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function CanMove(toolStripToDrag: DNToolStrip): Boolean;
    procedure Dispose;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Controls: TArray<DNControl> read get_Controls;
    property DisplayRectangle: DDN.System.Drawing.DNRectangle read get_DisplayRectangle;
    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property Margin: DNPadding read get_Margin write set_Margin;
    property Padding: DNPadding read get_Padding write set_Padding;
    property ToolStripPanel: DNToolStripPanel read get_ToolStripPanel;
    property Orientation: DNOrientation read get_Orientation;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolStripPanelRow = class(TDNGenericImport<DNToolStripPanelRowClass, DNToolStripPanelRow>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolTipClass = interface(DNObjectClass)
  ['{6FD71D31-6E99-5D76-B4C3-BB396DF0C9E0}']
  { constructors } 

    {class} function init(cont: DDN.System.DNIContainer): DNToolTip; overload;
    {class} function init: DNToolTip; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolTip')]
  DNToolTip = interface(DNObject)
  ['{AB79B8D5-EF8E-35D5-A57F-2EEE8CF5F13E}']
  { getters & setters } 

    function get_Active: Boolean;
    procedure set_Active(value: Boolean);
    function get_AutomaticDelay: Int32;
    procedure set_AutomaticDelay(value: Int32);
    function get_AutoPopDelay: Int32;
    procedure set_AutoPopDelay(value: Int32);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_IsBalloon: Boolean;
    procedure set_IsBalloon(value: Boolean);
    function get_InitialDelay: Int32;
    procedure set_InitialDelay(value: Int32);
    function get_OwnerDraw: Boolean;
    procedure set_OwnerDraw(value: Boolean);
    function get_ReshowDelay: Int32;
    procedure set_ReshowDelay(value: Int32);
    function get_ShowAlways: Boolean;
    procedure set_ShowAlways(value: Boolean);
    function get_StripAmpersands: Boolean;
    procedure set_StripAmpersands(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipIcon: DNToolTipIcon;
    procedure set_ToolTipIcon(value: DNToolTipIcon);
    function get_ToolTipTitle: string;
    procedure set_ToolTipTitle(value: string);
    function get_UseAnimation: Boolean;
    procedure set_UseAnimation(value: Boolean);
    function get_UseFading: Boolean;
    procedure set_UseFading(value: Boolean);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_Container: DDN.System.DNIContainer;

  { events } 

    procedure add_Draw(value: DNDrawToolTipEventHandler);
    procedure remove_Draw(value: DNDrawToolTipEventHandler);
    procedure add_Popup(value: DNPopupEventHandler);
    procedure remove_Popup(value: DNPopupEventHandler);
    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure SetToolTip(control: DNControl; caption: string);
    function CanExtend(target: DDN.mscorlib.DNObject): Boolean;
    function GetToolTip(control: DNControl): string;
    procedure RemoveAll;
    procedure Show(text: string; window: DNIWin32Window); overload;
    procedure Show(text: string; window: DNIWin32Window; duration: Int32); overload;
    procedure Show(text: string; window: DNIWin32Window; point: DDN.System.Drawing.DNPoint); overload;
    procedure Show(text: string; window: DNIWin32Window; point: DDN.System.Drawing.DNPoint; duration: Int32); overload;
    procedure Show(text: string; window: DNIWin32Window; x: Int32; y: Int32); overload;
    procedure Show(text: string; window: DNIWin32Window; x: Int32; y: Int32; duration: Int32); overload;
    procedure Hide(win: DNIWin32Window);
    function ToString: string;
    procedure Dispose;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Active: Boolean read get_Active write set_Active;
    property AutomaticDelay: Int32 read get_AutomaticDelay write set_AutomaticDelay;
    property AutoPopDelay: Int32 read get_AutoPopDelay write set_AutoPopDelay;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property IsBalloon: Boolean read get_IsBalloon write set_IsBalloon;
    property InitialDelay: Int32 read get_InitialDelay write set_InitialDelay;
    property OwnerDraw: Boolean read get_OwnerDraw write set_OwnerDraw;
    property ReshowDelay: Int32 read get_ReshowDelay write set_ReshowDelay;
    property ShowAlways: Boolean read get_ShowAlways write set_ShowAlways;
    property StripAmpersands: Boolean read get_StripAmpersands write set_StripAmpersands;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipIcon: DNToolTipIcon read get_ToolTipIcon write set_ToolTipIcon;
    property ToolTipTitle: string read get_ToolTipTitle write set_ToolTipTitle;
    property UseAnimation: Boolean read get_UseAnimation write set_UseAnimation;
    property UseFading: Boolean read get_UseFading write set_UseFading;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property Container: DDN.System.DNIContainer read get_Container;
  end;

  TDNToolTip = class(TDNGenericImport<DNToolTipClass, DNToolTip>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAccessibleObjectClass = interface(DNObjectClass)
  ['{BAB21A5A-A604-515B-AF3C-C7AECD9B44AD}']
  { constructors } 

    {class} function init: DNAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.AccessibleObject')]
  DNAccessibleObject = interface(DNObject)
  ['{D0CBA7AF-93F5-378A-BB11-2A5D9AA9C4D7}']
  { getters & setters } 

    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetHelpTopic(out fileName: string): Int32;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function RaiseLiveRegionChanged: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value write set_Value;
  end;

  TDNAccessibleObject = class(TDNGenericImport<DNAccessibleObjectClass, DNAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNComboBox_ChildAccessibleObjectClass = interface(DNAccessibleObjectClass)
  ['{147FEA24-04E3-5B24-95FE-D946F311B3FD}']
  { constructors } 

    {class} function init(owner: DNComboBox; handle: IntPtr): DNComboBox_ChildAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ComboBox+ChildAccessibleObject')]
  DNComboBox_ChildAccessibleObject = interface(DNAccessibleObject)
  ['{33C6507C-E445-37C1-B758-A4EDBD1A281A}']
  { getters & setters } 

    function get_Name: string;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Parent: DNAccessibleObject;
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetHelpTopic(out fileName: string): Int32;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function RaiseLiveRegionChanged: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Name: string read get_Name;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Parent: DNAccessibleObject read get_Parent;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value write set_Value;
  end;

  TDNComboBox_ChildAccessibleObject = class(TDNGenericImport<DNComboBox_ChildAccessibleObjectClass, DNComboBox_ChildAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNControl_ControlAccessibleObjectClass = interface(DNAccessibleObjectClass)
  ['{2DC29F54-DADA-5256-9A8A-8A29B96EF3C1}']
  { constructors } 

    {class} function init(ownerControl: DNControl): DNControl_ControlAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.Control+ControlAccessibleObject')]
  DNControl_ControlAccessibleObject = interface(DNAccessibleObject)
  ['{2BF3E914-3241-3DB8-8A4C-BACA642F5360}']
  { getters & setters } 

    function get_DefaultAction: string;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Role: DNAccessibleRole;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Role: DNAccessibleRole read get_Role;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value write set_Value;
  end;

  TDNControl_ControlAccessibleObject = class(TDNGenericImport<DNControl_ControlAccessibleObjectClass, DNControl_ControlAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNButtonBase_ButtonBaseAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{F0AE9A1B-E9A5-521A-B780-B3F316AA4D7F}']
  { constructors } 

    {class} function init(owner: DNControl): DNButtonBase_ButtonBaseAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ButtonBase+ButtonBaseAccessibleObject')]
  DNButtonBase_ButtonBaseAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{B1E01A0E-5413-3ED7-9651-C789752D0969}']
  { getters & setters } 

    function get_State: DNAccessibleStates;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Role: DNAccessibleRole;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    procedure DoDefaultAction;
    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property State: DNAccessibleStates read get_State;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Role: DNAccessibleRole read get_Role;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Value: string read get_Value write set_Value;
  end;

  TDNButtonBase_ButtonBaseAccessibleObject = class(TDNGenericImport<DNButtonBase_ButtonBaseAccessibleObjectClass, DNButtonBase_ButtonBaseAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckBox_CheckBoxAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{43B719E0-19C7-51EE-963B-72D8210A98E0}']
  { constructors } 

    {class} function init(owner: DNControl): DNCheckBox_CheckBoxAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.CheckBox+CheckBoxAccessibleObject')]
  DNCheckBox_CheckBoxAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{5046AA3E-6493-333F-B561-B2BC2453FB5C}']
  { getters & setters } 

    function get_DefaultAction: string;
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    procedure DoDefaultAction;
    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DefaultAction: string read get_DefaultAction;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Value: string read get_Value write set_Value;
  end;

  TDNCheckBox_CheckBoxAccessibleObject = class(TDNGenericImport<DNCheckBox_CheckBoxAccessibleObjectClass, DNCheckBox_CheckBoxAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRadioButton_RadioButtonAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{A4F2938A-1AED-5DC7-843A-6C7876716ED3}']
  { constructors } 

    {class} function init(owner: DNRadioButton): DNRadioButton_RadioButtonAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.RadioButton+RadioButtonAccessibleObject')]
  DNRadioButton_RadioButtonAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{8CEDCFDD-4965-3BB4-8EC3-E31A43AC8C0C}']
  { getters & setters } 

    function get_DefaultAction: string;
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    procedure DoDefaultAction;
    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DefaultAction: string read get_DefaultAction;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Value: string read get_Value write set_Value;
  end;

  TDNRadioButton_RadioButtonAccessibleObject = class(TDNGenericImport<DNRadioButton_RadioButtonAccessibleObjectClass, DNRadioButton_RadioButtonAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDateTimePicker_DateTimePickerAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BA205BE6-B278-5F56-A4E0-4E4F6F21F006}']
  { constructors } 

    {class} function init(owner: DNDateTimePicker): DNDateTimePicker_DateTimePickerAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.DateTimePicker+DateTimePickerAccessibleObject')]
  DNDateTimePicker_DateTimePickerAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{64BC3EEC-A5DA-3E22-BE11-E36CF1C70DF5}']
  { getters & setters } 

    function get_KeyboardShortcut: string;
    function get_Value: string;
    function get_State: DNAccessibleStates;
    function get_Role: DNAccessibleRole;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;

  { methods } 

    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Value: string read get_Value;
    property State: DNAccessibleStates read get_State;
    property Role: DNAccessibleRole read get_Role;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
  end;

  TDNDateTimePicker_DateTimePickerAccessibleObject = class(TDNGenericImport<DNDateTimePicker_DateTimePickerAccessibleObjectClass, DNDateTimePicker_DateTimePickerAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDomainUpDown_DomainUpDownAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B52D8EA7-1478-5C49-B481-97159BE93391}']
  { constructors } 

    {class} function init(owner: DNControl): DNDomainUpDown_DomainUpDownAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject')]
  DNDomainUpDown_DomainUpDownAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{114B32C2-6669-3737-8DE6-326339FF8D85}']
  { getters & setters } 

    function get_Name: string;
    procedure set_Name(value: string);
    function get_Role: DNAccessibleRole;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Name: string read get_Name write set_Name;
    property Role: DNAccessibleRole read get_Role;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value write set_Value;
  end;

  TDNDomainUpDown_DomainUpDownAccessibleObject = class(TDNGenericImport<DNDomainUpDown_DomainUpDownAccessibleObjectClass, DNDomainUpDown_DomainUpDownAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStrip_ToolStripAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{9C3F223E-8775-57F9-AAA2-95C00675A8BB}']
  { constructors } 

    {class} function init(owner: DNToolStrip): DNToolStrip_ToolStripAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ToolStrip+ToolStripAccessibleObject')]
  DNToolStrip_ToolStripAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{BB396E98-E7A8-3D6C-94C6-851F03A2C16D}']
  { getters & setters } 

    function get_Role: DNAccessibleRole;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Role: DNAccessibleRole read get_Role;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value write set_Value;
  end;

  TDNToolStrip_ToolStripAccessibleObject = class(TDNGenericImport<DNToolStrip_ToolStripAccessibleObjectClass, DNToolStrip_ToolStripAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDown_ToolStripDropDownAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B9883991-B999-547D-91B8-AF1FC1539B7D}']
  { constructors } 

    {class} function init(owner: DNToolStripDropDown): DNToolStripDropDown_ToolStripDropDownAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDown+ToolStripDropDownAccessibleObject')]
  DNToolStripDropDown_ToolStripDropDownAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{0FF7EC15-9826-3C63-9070-901926640297}']
  { getters & setters } 

    function get_Name: string;
    procedure set_Name(value: string);
    function get_Role: DNAccessibleRole;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Handle: IntPtr;
    procedure set_Handle(value: IntPtr);
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Parent: DNAccessibleObject;
    function get_Owner: DNControl;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetHelpTopic(out fileName: string): Int32;
    procedure NotifyClients(accEvent: DNAccessibleEvents); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; childID: Int32); overload;
    procedure NotifyClients(accEvent: DNAccessibleEvents; objectID: Int32; childID: Int32); overload;
    function RaiseLiveRegionChanged: Boolean;
    function ToString: string;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Name: string read get_Name write set_Name;
    property Role: DNAccessibleRole read get_Role;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Handle: IntPtr read get_Handle write set_Handle;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Parent: DNAccessibleObject read get_Parent;
    property Owner: DNControl read get_Owner;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value write set_Value;
  end;

  TDNToolStripDropDown_ToolStripDropDownAccessibleObject = class(TDNGenericImport<DNToolStripDropDown_ToolStripDropDownAccessibleObjectClass, DNToolStripDropDown_ToolStripDropDownAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDomainUpDown_DomainItemAccessibleObjectClass = interface(DNAccessibleObjectClass)
  ['{0552A882-0FC9-5270-8F25-E97912D5C3C1}']
  { constructors } 

    {class} function init(name: string; parent: DNAccessibleObject): DNDomainUpDown_DomainItemAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.DomainUpDown+DomainItemAccessibleObject')]
  DNDomainUpDown_DomainItemAccessibleObject = interface(DNAccessibleObject)
  ['{4E47315B-1100-3402-B377-FF94ED7A6D00}']
  { getters & setters } 

    function get_Name: string;
    procedure set_Name(value: string);
    function get_Parent: DNAccessibleObject;
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Value: string;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Help: string;
    function get_KeyboardShortcut: string;

  { methods } 

    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetHelpTopic(out fileName: string): Int32;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure DoDefaultAction;
    function Navigate(navdir: DNAccessibleNavigation): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function RaiseLiveRegionChanged: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Name: string read get_Name write set_Name;
    property Parent: DNAccessibleObject read get_Parent;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Value: string read get_Value;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
  end;

  TDNDomainUpDown_DomainItemAccessibleObject = class(TDNGenericImport<DNDomainUpDown_DomainItemAccessibleObjectClass, DNDomainUpDown_DomainItemAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItem_ToolStripItemAccessibleObjectClass = interface(DNAccessibleObjectClass)
  ['{C2938EEC-5B59-5229-8863-91C705482ED5}']
  { constructors } 

    {class} function init(ownerItem: DNToolStripItem): DNToolStripItem_ToolStripItemAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItem+ToolStripItemAccessibleObject')]
  DNToolStripItem_ToolStripItemAccessibleObject = interface(DNAccessibleObject)
  ['{99F50AB0-0EB5-3E4D-A41A-E25B749FC408}']
  { getters & setters } 

    function get_DefaultAction: string;
    function get_Description: string;
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Parent: DNAccessibleObject;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    procedure DoDefaultAction;
    function GetHelpTopic(out fileName: string): Int32;
    function Navigate(navigationDirection: DNAccessibleNavigation): DNAccessibleObject;
    procedure AddState(state: DNAccessibleStates);
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function RaiseLiveRegionChanged: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Parent: DNAccessibleObject read get_Parent;
    property Value: string read get_Value write set_Value;
  end;

  TDNToolStripItem_ToolStripItemAccessibleObject = class(TDNGenericImport<DNToolStripItem_ToolStripItemAccessibleObjectClass, DNToolStripItem_ToolStripItemAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripDropDownItemAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{F9D4544A-2890-57C8-901B-910FB1E650E2}']
  { constructors } 

    {class} function init(item: DNToolStripDropDownItem): DNToolStripDropDownItemAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripDropDownItemAccessibleObject')]
  DNToolStripDropDownItemAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{F9CD025F-E53C-3516-830F-A3A0BF4A6AF3}']
  { getters & setters } 

    function get_Role: DNAccessibleRole;
    function get_DefaultAction: string;
    function get_Description: string;
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_State: DNAccessibleStates;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Parent: DNAccessibleObject;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    procedure DoDefaultAction;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetHelpTopic(out fileName: string): Int32;
    function Navigate(navigationDirection: DNAccessibleNavigation): DNAccessibleObject;
    procedure AddState(state: DNAccessibleStates);
    function ToString: string;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function RaiseLiveRegionChanged: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Role: DNAccessibleRole read get_Role;
    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property State: DNAccessibleStates read get_State;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Parent: DNAccessibleObject read get_Parent;
    property Value: string read get_Value write set_Value;
  end;

  TDNToolStripDropDownItemAccessibleObject = class(TDNGenericImport<DNToolStripDropDownItemAccessibleObjectClass, DNToolStripDropDownItemAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripSplitButton_ToolStripSplitButtonAccessibleObjectClass = interface(DDN.mscorlib.DNObjectClass)
  ['{18B38840-5E9B-516D-AFCA-320BD5FD8D4F}']
  { constructors } 

    {class} function init(item: DNToolStripSplitButton): DNToolStripSplitButton_ToolStripSplitButtonAccessibleObject;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripSplitButton+ToolStripSplitButtonAccessibleObject')]
  DNToolStripSplitButton_ToolStripSplitButtonAccessibleObject = interface(DDN.mscorlib.DNObject)
  ['{20F7C23D-3E8B-3670-A542-E85E67074966}']
  { getters & setters } 

    function get_DefaultAction: string;
    function get_Description: string;
    function get_Help: string;
    function get_KeyboardShortcut: string;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Role: DNAccessibleRole;
    function get_State: DNAccessibleStates;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Parent: DNAccessibleObject;
    function get_Value: string;
    procedure set_Value(value: string);

  { methods } 

    procedure DoDefaultAction;
    function GetHelpTopic(out fileName: string): Int32;
    function Navigate(navigationDirection: DNAccessibleNavigation): DNAccessibleObject;
    procedure AddState(state: DNAccessibleStates);
    function ToString: string;
    function GetChild(index: Int32): DNAccessibleObject;
    function GetChildCount: Int32;
    function GetFocused: DNAccessibleObject;
    function GetSelected: DNAccessibleObject;
    function HitTest(x: Int32; y: Int32): DNAccessibleObject;
    procedure Select(flags: DNAccessibleSelection);
    function RaiseAutomationNotification(notificationKind: DNAutomationNotificationKind; notificationProcessing: DNAutomationNotificationProcessing; notificationText: string): Boolean;
    function RaiseLiveRegionChanged: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DefaultAction: string read get_DefaultAction;
    property Description: string read get_Description;
    property Help: string read get_Help;
    property KeyboardShortcut: string read get_KeyboardShortcut;
    property Name: string read get_Name write set_Name;
    property Role: DNAccessibleRole read get_Role;
    property State: DNAccessibleStates read get_State;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Parent: DNAccessibleObject read get_Parent;
    property Value: string read get_Value write set_Value;
  end;

  TDNToolStripSplitButton_ToolStripSplitButtonAccessibleObject = class(TDNGenericImport<DNToolStripSplitButton_ToolStripSplitButtonAccessibleObjectClass, DNToolStripSplitButton_ToolStripSplitButtonAccessibleObject>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBaseCollectionClass = interface(DDN.mscorlib.DNMarshalByRefObjectClass)
  ['{96ACD6BE-EDD7-51F9-96BA-010439F95E46}']
  { constructors } 

    {class} function init: DNBaseCollection;

  end;

  [DNTypeName('System.Windows.Forms.BaseCollection')]
  DNBaseCollection = interface(DDN.mscorlib.DNMarshalByRefObject)
  ['{2D06EC45-CB3C-3C33-BCA1-1F6D21B4542D}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { methods } 

    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNBaseCollection = class(TDNGenericImport<DNBaseCollectionClass, DNBaseCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingsCollectionClass = interface(DNBaseCollectionClass)
  ['{BCBCC6F2-2B9A-5D06-8790-7368A1B74F2D}']
  end;

  [DNTypeName('System.Windows.Forms.BindingsCollection')]
  DNBindingsCollection = interface(DNBaseCollection)
  ['{1D9A1DAE-D69E-3926-92A7-2AF2F71FA207}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNBinding;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanging(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanging(value: DDN.System.DNCollectionChangeEventHandler);
    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNBinding read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNBindingsCollection = class(TDNGenericImport<DNBindingsCollectionClass, DNBindingsCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNControlBindingsCollectionClass = interface(DNBindingsCollectionClass)
  ['{B966AF49-7B77-55DB-AACF-C828F7665335}']
  { constructors } 

    {class} function init(control: DNIBindableComponent): DNControlBindingsCollection;

  end;

  [DNTypeName('System.Windows.Forms.ControlBindingsCollection')]
  DNControlBindingsCollection = interface(DNBindingsCollection)
  ['{44FC4BA0-F458-3A8A-B5EE-4AF9E3363346}']
  { getters & setters } 

    function get_BindableComponent: DNIBindableComponent;
    function get_Control: DNControl;
    function get_Item(propertyName: string): DNBinding; overload;
    function get_DefaultDataSourceUpdateMode: DNDataSourceUpdateMode;
    procedure set_DefaultDataSourceUpdateMode(value: DNDataSourceUpdateMode);
    function get_Count: Int32;
    function get_Item(index: Int32): DNBinding; overload;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanging(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanging(value: DDN.System.DNCollectionChangeEventHandler);
    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    procedure Add(binding: DNBinding); overload;
    function Add(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string): DNBinding; overload;
    function Add(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean): DNBinding; overload;
    function Add(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; updateMode: DNDataSourceUpdateMode): DNBinding; overload;
    function Add(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; updateMode: DNDataSourceUpdateMode; nullValue: DDN.mscorlib.DNObject): DNBinding; overload;
    function Add(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; updateMode: DNDataSourceUpdateMode; nullValue: DDN.mscorlib.DNObject; formatString: string): DNBinding; overload;
    function Add(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; updateMode: DNDataSourceUpdateMode; nullValue: DDN.mscorlib.DNObject; formatString: string; formatInfo: DDN.mscorlib.DNIFormatProvider): DNBinding; overload;
    procedure Clear;
    procedure Remove(binding: DNBinding);
    procedure RemoveAt(index: Int32);
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property BindableComponent: DNIBindableComponent read get_BindableComponent;
    property Control: DNControl read get_Control;
    property Item[propertyName: string]: DNBinding read get_Item; default;
    property DefaultDataSourceUpdateMode: DNDataSourceUpdateMode read get_DefaultDataSourceUpdateMode write set_DefaultDataSourceUpdateMode;
    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNBinding read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNControlBindingsCollection = class(TDNGenericImport<DNControlBindingsCollectionClass, DNControlBindingsCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellCollectionClass = interface(DNBaseCollectionClass)
  ['{F949D09F-1AD7-58B8-A37B-AE5B6FA17A39}']
  { constructors } 

    {class} function init(dataGridViewRow: DNDataGridViewRow): DNDataGridViewCellCollection;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellCollection')]
  DNDataGridViewCellCollection = interface(DNBaseCollection)
  ['{F5289DAC-0DB7-36A2-900B-FD8F23604AE9}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridViewCell; overload;
    procedure set_Item(index: Int32; value: DNDataGridViewCell); overload;
    function get_Item(columnName: string): DNDataGridViewCell; overload;
    procedure set_Item(columnName: string; value: DNDataGridViewCell); overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function Add(dataGridViewCell: DNDataGridViewCell): Int32;
    procedure AddRange(dataGridViewCells: TArray<DNDataGridViewCell>);
    procedure Clear;
    function &Contains(dataGridViewCell: DNDataGridViewCell): Boolean;
    procedure Insert(index: Int32; dataGridViewCell: DNDataGridViewCell);
    procedure Remove(cell: DNDataGridViewCell);
    procedure RemoveAt(index: Int32);
    procedure CopyTo(&array: TArray<DNDataGridViewCell>; index: Int32); overload;
    function IndexOf(dataGridViewCell: DNDataGridViewCell): Int32;
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridViewCell read get_Item write set_Item; default;
    property Item[columnName: string]: DNDataGridViewCell read get_Item write set_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNDataGridViewCellCollection = class(TDNGenericImport<DNDataGridViewCellCollectionClass, DNDataGridViewCellCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnCollectionClass = interface(DNBaseCollectionClass)
  ['{A77697B2-7996-52E0-A890-4A3EC5745B04}']
  { constructors } 

    {class} function init(dataGridView: DNDataGridView): DNDataGridViewColumnCollection;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnCollection')]
  DNDataGridViewColumnCollection = interface(DNBaseCollection)
  ['{95E3900B-EA8C-3324-A465-3F90C445445E}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridViewColumn; overload;
    function get_Item(columnName: string): DNDataGridViewColumn; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function Add(columnName: string; headerText: string): Int32; overload;
    function Add(dataGridViewColumn: DNDataGridViewColumn): Int32; overload;
    procedure AddRange(dataGridViewColumns: TArray<DNDataGridViewColumn>);
    function &Contains(dataGridViewColumn: DNDataGridViewColumn): Boolean; overload;
    function &Contains(columnName: string): Boolean; overload;
    procedure Insert(columnIndex: Int32; dataGridViewColumn: DNDataGridViewColumn);
    procedure Remove(dataGridViewColumn: DNDataGridViewColumn); overload;
    procedure Clear;
    procedure CopyTo(&array: TArray<DNDataGridViewColumn>; index: Int32); overload;
    function GetColumnCount(includeFilter: DNDataGridViewElementStates): Int32;
    function GetColumnsWidth(includeFilter: DNDataGridViewElementStates): Int32;
    function GetFirstColumn(includeFilter: DNDataGridViewElementStates): DNDataGridViewColumn; overload;
    function GetFirstColumn(includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): DNDataGridViewColumn; overload;
    function GetLastColumn(includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): DNDataGridViewColumn;
    function GetNextColumn(dataGridViewColumnStart: DNDataGridViewColumn; includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): DNDataGridViewColumn;
    function GetPreviousColumn(dataGridViewColumnStart: DNDataGridViewColumn; includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): DNDataGridViewColumn;
    function IndexOf(dataGridViewColumn: DNDataGridViewColumn): Int32;
    procedure Remove(columnName: string); overload;
    procedure RemoveAt(index: Int32);
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridViewColumn read get_Item; default;
    property Item[columnName: string]: DNDataGridViewColumn read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNDataGridViewColumnCollection = class(TDNGenericImport<DNDataGridViewColumnCollectionClass, DNDataGridViewColumnCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewSelectedCellCollectionClass = interface(DNBaseCollectionClass)
  ['{EA85CCCD-78B2-5E3D-926D-7347B9B08E1B}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewSelectedCellCollection')]
  DNDataGridViewSelectedCellCollection = interface(DNBaseCollection)
  ['{10545630-4150-3DD8-99F6-3A173397174C}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridViewCell;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { methods } 

    procedure Clear;
    function &Contains(dataGridViewCell: DNDataGridViewCell): Boolean;
    procedure CopyTo(&array: TArray<DNDataGridViewCell>; index: Int32); overload;
    procedure Insert(index: Int32; dataGridViewCell: DNDataGridViewCell);
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridViewCell read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNDataGridViewSelectedCellCollection = class(TDNGenericImport<DNDataGridViewSelectedCellCollectionClass, DNDataGridViewSelectedCellCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewSelectedColumnCollectionClass = interface(DNBaseCollectionClass)
  ['{8A1E5889-A5C7-583A-95DD-8674B6E4BB88}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewSelectedColumnCollection')]
  DNDataGridViewSelectedColumnCollection = interface(DNBaseCollection)
  ['{A963AD1B-896B-3D45-B6BC-ED2863A00AB7}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridViewColumn;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { methods } 

    procedure Clear;
    function &Contains(dataGridViewColumn: DNDataGridViewColumn): Boolean;
    procedure CopyTo(&array: TArray<DNDataGridViewColumn>; index: Int32); overload;
    procedure Insert(index: Int32; dataGridViewColumn: DNDataGridViewColumn);
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridViewColumn read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNDataGridViewSelectedColumnCollection = class(TDNGenericImport<DNDataGridViewSelectedColumnCollectionClass, DNDataGridViewSelectedColumnCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewSelectedRowCollectionClass = interface(DNBaseCollectionClass)
  ['{B6C2F0FC-3DF6-5C70-9FE3-492CDB4D1BAF}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewSelectedRowCollection')]
  DNDataGridViewSelectedRowCollection = interface(DNBaseCollection)
  ['{1A3E8A4A-D7F9-3585-948A-443C331A2BB1}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridViewRow;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { methods } 

    procedure Clear;
    function &Contains(dataGridViewRow: DNDataGridViewRow): Boolean;
    procedure CopyTo(&array: TArray<DNDataGridViewRow>; index: Int32); overload;
    procedure Insert(index: Int32; dataGridViewRow: DNDataGridViewRow);
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridViewRow read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNDataGridViewSelectedRowCollection = class(TDNGenericImport<DNDataGridViewSelectedRowCollectionClass, DNDataGridViewSelectedRowCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGridColumnStylesCollectionClass = interface(DNBaseCollectionClass)
  ['{48B06474-BA58-5B10-82CB-7ABC8616B9E5}']
  end;

  [DNTypeName('System.Windows.Forms.GridColumnStylesCollection')]
  DNGridColumnStylesCollection = interface(DNBaseCollection)
  ['{914D6988-A073-3F3E-B5DF-FD09CEFA1721}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridColumnStyle; overload;
    function get_Item(columnName: string): DNDataGridColumnStyle; overload;
    function get_Item(propertyDesciptor: DDN.System.DNPropertyDescriptor): DNDataGridColumnStyle; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function Add(column: DNDataGridColumnStyle): Int32;
    procedure AddRange(columns: TArray<DNDataGridColumnStyle>);
    procedure Clear;
    function &Contains(propertyDescriptor: DDN.System.DNPropertyDescriptor): Boolean; overload;
    function &Contains(column: DNDataGridColumnStyle): Boolean; overload;
    function &Contains(name: string): Boolean; overload;
    function IndexOf(element: DNDataGridColumnStyle): Int32;
    procedure Remove(column: DNDataGridColumnStyle);
    procedure RemoveAt(index: Int32);
    procedure ResetPropertyDescriptors;
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridColumnStyle read get_Item; default;
    property Item[columnName: string]: DNDataGridColumnStyle read get_Item; default;
    property Item[propertyDesciptor: DDN.System.DNPropertyDescriptor]: DNDataGridColumnStyle read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNGridColumnStylesCollection = class(TDNGenericImport<DNGridColumnStylesCollectionClass, DNGridColumnStylesCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGridTableStylesCollectionClass = interface(DNBaseCollectionClass)
  ['{0FBB21F5-72E4-5B46-8EBA-0DBB5E29BA73}']
  end;

  [DNTypeName('System.Windows.Forms.GridTableStylesCollection')]
  DNGridTableStylesCollection = interface(DNBaseCollection)
  ['{74BEF810-E31A-3D93-B986-96F7A25CE874}']
  { getters & setters } 

    function get_Item(index: Int32): DNDataGridTableStyle; overload;
    function get_Item(tableName: string): DNDataGridTableStyle; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function Add(table: DNDataGridTableStyle): Int32;
    procedure AddRange(tables: TArray<DNDataGridTableStyle>);
    procedure Clear;
    function &Contains(table: DNDataGridTableStyle): Boolean; overload;
    function &Contains(name: string): Boolean; overload;
    procedure Remove(table: DNDataGridTableStyle);
    procedure RemoveAt(index: Int32);
    procedure CopyTo(ar: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNDataGridTableStyle read get_Item; default;
    property Item[tableName: string]: DNDataGridTableStyle read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNGridTableStylesCollection = class(TDNGenericImport<DNGridTableStylesCollectionClass, DNGridTableStylesCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNativeWindowClass = interface(DDN.mscorlib.DNMarshalByRefObjectClass)
  ['{75AE2C7E-583E-5774-A462-897877604161}']
  { constructors } 

    {class} function init: DNNativeWindow;

  { static methods } 

    {class} function FromHandle(handle: IntPtr): DNNativeWindow;

  end;

  [DNTypeName('System.Windows.Forms.NativeWindow')]
  DNNativeWindow = interface(DDN.mscorlib.DNMarshalByRefObject)
  ['{4FB15ED7-72C7-30FD-8610-6175F0F566C7}']
  { getters & setters } 

    function get_Handle: IntPtr;

  { methods } 

    procedure CreateHandle(cp: DNCreateParams);
    procedure DestroyHandle;
    procedure AssignHandle(handle: IntPtr);
    procedure DefWndProc(out m: DNMessage);
    procedure ReleaseHandle;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Handle: IntPtr read get_Handle;
  end;

  TDNNativeWindow = class(TDNGenericImport<DNNativeWindowClass, DNNativeWindow>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNumericUpDownAccelerationCollectionClass = interface(DDN.mscorlib.DNMarshalByRefObjectClass)
  ['{EBD24078-7E39-595B-8588-396813814D9C}']
  { constructors } 

    {class} function init: DNNumericUpDownAccelerationCollection;

  end;

  [DNTypeName('System.Windows.Forms.NumericUpDownAccelerationCollection')]
  DNNumericUpDownAccelerationCollection = interface(DDN.mscorlib.DNMarshalByRefObject)
  ['{9970977A-B384-39EB-9013-008C2D2FB6ED}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DNNumericUpDownAcceleration;

  { methods } 

    function &Contains(acceleration: DNNumericUpDownAcceleration): Boolean;
    procedure CopyTo(&array: TArray<DNNumericUpDownAcceleration>; index: Int32);
    procedure AddRange(accelerations: TArray<DNNumericUpDownAcceleration>);
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DNNumericUpDownAcceleration read get_Item; default;
  end;

  TDNNumericUpDownAccelerationCollection = class(TDNGenericImport<DNNumericUpDownAccelerationCollectionClass, DNNumericUpDownAccelerationCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNOwnerDrawPropertyBagClass = interface(DDN.mscorlib.DNMarshalByRefObjectClass)
  ['{1042907C-31FD-54EE-AC6F-3492B99CCD5B}']
  { static methods } 

    {class} function Copy(value: DNOwnerDrawPropertyBag): DNOwnerDrawPropertyBag;

  end;

  [DNTypeName('System.Windows.Forms.OwnerDrawPropertyBag')]
  DNOwnerDrawPropertyBag = interface(DDN.mscorlib.DNMarshalByRefObject)
  ['{DDDB880D-D43D-3453-9EFF-131DBCC5C348}']
  { getters & setters } 

    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);

  { methods } 

    function IsEmpty: Boolean;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
  end;

  TDNOwnerDrawPropertyBag = class(TDNGenericImport<DNOwnerDrawPropertyBagClass, DNOwnerDrawPropertyBag>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeNodeClass = interface(DDN.mscorlib.DNMarshalByRefObjectClass)
  ['{208703F9-717B-51F7-B172-0FC7C97E9C9A}']
  { constructors } 

    {class} function init: DNTreeNode; overload;
    {class} function init(text: string): DNTreeNode; overload;
    {class} function init(text: string; children: TArray<DNTreeNode>): DNTreeNode; overload;
    {class} function init(text: string; imageIndex: Int32; selectedImageIndex: Int32): DNTreeNode; overload;
    {class} function init(text: string; imageIndex: Int32; selectedImageIndex: Int32; children: TArray<DNTreeNode>): DNTreeNode; overload;

  { static methods } 

    {class} function FromHandle(tree: DNTreeView; handle: IntPtr): DNTreeNode;

  end;

  [DNTypeName('System.Windows.Forms.TreeNode')]
  DNTreeNode = interface(DDN.mscorlib.DNMarshalByRefObject)
  ['{6B7EC1BF-EFC1-3E90-8FD2-E6C0D83045F9}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_ContextMenu: DNContextMenu;
    procedure set_ContextMenu(value: DNContextMenu);
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_FirstNode: DNTreeNode;
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_FullPath: string;
    function get_Handle: IntPtr;
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_Index: Int32;
    function get_IsEditing: Boolean;
    function get_IsExpanded: Boolean;
    function get_IsSelected: Boolean;
    function get_IsVisible: Boolean;
    function get_LastNode: DNTreeNode;
    function get_Level: Int32;
    function get_NextNode: DNTreeNode;
    function get_NextVisibleNode: DNTreeNode;
    function get_NodeFont: DDN.System.Drawing.DNFont;
    procedure set_NodeFont(value: DDN.System.Drawing.DNFont);
    function get_Nodes: DNTreeNodeCollection;
    function get_Parent: DNTreeNode;
    function get_PrevNode: DNTreeNode;
    function get_PrevVisibleNode: DNTreeNode;
    function get_SelectedImageIndex: Int32;
    procedure set_SelectedImageIndex(value: Int32);
    function get_SelectedImageKey: string;
    procedure set_SelectedImageKey(value: string);
    function get_StateImageKey: string;
    procedure set_StateImageKey(value: string);
    function get_StateImageIndex: Int32;
    procedure set_StateImageIndex(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_TreeView: DNTreeView;

  { methods } 

    procedure BeginEdit;
    function Clone: DDN.mscorlib.DNObject;
    procedure Collapse(ignoreChildren: Boolean); overload;
    procedure Collapse; overload;
    procedure EndEdit(cancel: Boolean);
    procedure EnsureVisible;
    procedure Expand;
    procedure ExpandAll;
    function GetNodeCount(includeSubTrees: Boolean): Int32;
    procedure Remove;
    procedure Toggle;
    function ToString: string;
    function GetLifetimeService: DDN.mscorlib.DNObject;
    function InitializeLifetimeService: DDN.mscorlib.DNObject;
    function CreateObjRef(requestedType: DDN.mscorlib.DNType): DDN.mscorlib.DNObjRef;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Checked: Boolean read get_Checked write set_Checked;
    property ContextMenu: DNContextMenu read get_ContextMenu write set_ContextMenu;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property FirstNode: DNTreeNode read get_FirstNode;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property FullPath: string read get_FullPath;
    property Handle: IntPtr read get_Handle;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property Index: Int32 read get_Index;
    property IsEditing: Boolean read get_IsEditing;
    property IsExpanded: Boolean read get_IsExpanded;
    property IsSelected: Boolean read get_IsSelected;
    property IsVisible: Boolean read get_IsVisible;
    property LastNode: DNTreeNode read get_LastNode;
    property Level: Int32 read get_Level;
    property NextNode: DNTreeNode read get_NextNode;
    property NextVisibleNode: DNTreeNode read get_NextVisibleNode;
    property NodeFont: DDN.System.Drawing.DNFont read get_NodeFont write set_NodeFont;
    property Nodes: DNTreeNodeCollection read get_Nodes;
    property Parent: DNTreeNode read get_Parent;
    property PrevNode: DNTreeNode read get_PrevNode;
    property PrevVisibleNode: DNTreeNode read get_PrevVisibleNode;
    property SelectedImageIndex: Int32 read get_SelectedImageIndex write set_SelectedImageIndex;
    property SelectedImageKey: string read get_SelectedImageKey write set_SelectedImageKey;
    property StateImageKey: string read get_StateImageKey write set_StateImageKey;
    property StateImageIndex: Int32 read get_StateImageIndex write set_StateImageIndex;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Name: string read get_Name write set_Name;
    property TreeView: DNTreeView read get_TreeView;
  end;

  TDNTreeNode = class(TDNGenericImport<DNTreeNodeClass, DNTreeNode>) end;

  //-------------namespace: System.Resources----------------
  DNResXResourceSetClass = interface(DDN.mscorlib.DNResourceSetClass)
  ['{B3B14CEF-AD4B-5857-95EA-08CA74B07B8A}']
  { constructors } 

    {class} function init(fileName: string): DNResXResourceSet; overload;
    {class} function init(stream: DDN.mscorlib.DNStream): DNResXResourceSet; overload;

  end;

  [DNTypeName('System.Resources.ResXResourceSet')]
  DNResXResourceSet = interface(DDN.mscorlib.DNResourceSet)
  ['{AE6DA700-DFBF-37B4-B61D-8902ADB2B515}']
  { methods } 

    function GetDefaultReader: DDN.mscorlib.DNType;
    function GetDefaultWriter: DDN.mscorlib.DNType;
    procedure Close;
    procedure Dispose;
    function GetEnumerator: DDN.mscorlib.DNIDictionaryEnumerator;
    function GetString(name: string): string; overload;
    function GetString(name: string; ignoreCase: Boolean): string; overload;
    function GetObject(name: string): DDN.mscorlib.DNObject; overload;
    function GetObject(name: string; ignoreCase: Boolean): DDN.mscorlib.DNObject; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNResXResourceSet = class(TDNGenericImport<DNResXResourceSetClass, DNResXResourceSet>) end;

  //-------------namespace: System.Resources----------------
  DNResXDataNodeClass = interface(DNObjectClass)
  ['{EF330372-FE49-571E-AFEC-AA4F42C8F3C7}']
  { constructors } 

    {class} function init(name: string; value: DDN.mscorlib.DNObject): DNResXDataNode; overload;
    {class} function init(name: string; value: DDN.mscorlib.DNObject; typeNameConverter: DDN.mscorlib.DNFunc<DDN.mscorlib.DNType, string>): DNResXDataNode; overload;
    {class} function init(name: string; fileRef: DNResXFileRef): DNResXDataNode; overload;
    {class} function init(name: string; fileRef: DNResXFileRef; typeNameConverter: DDN.mscorlib.DNFunc<DDN.mscorlib.DNType, string>): DNResXDataNode; overload;

  end;

  [DNTypeName('System.Resources.ResXDataNode')]
  DNResXDataNode = interface(DDN.mscorlib.DNISerializable)
  ['{6EB81A1D-012C-32EF-A3E5-0F22DF144767}']
  { getters & setters } 

    function get_Comment: string;
    procedure set_Comment(value: string);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_FileRef: DNResXFileRef;

  { methods } 

    function GetNodePosition: DDN.System.Drawing.DNPoint;
    function GetValueTypeName(typeResolver: DDN.System.DNITypeResolutionService): string; overload;
    function GetValueTypeName(names: TArray<DDN.mscorlib.DNAssemblyName>): string; overload;
    function GetValue(names: TArray<DDN.mscorlib.DNAssemblyName>): DDN.mscorlib.DNObject; overload;
    function GetValue(typeResolver: DDN.System.DNITypeResolutionService): DDN.mscorlib.DNObject; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Comment: string read get_Comment write set_Comment;
    property Name: string read get_Name write set_Name;
    property FileRef: DNResXFileRef read get_FileRef;
  end;

  TDNResXDataNode = class(TDNGenericImport<DNResXDataNodeClass, DNResXDataNode>) end;

  //-------------namespace: System.Resources----------------
  DNResXFileRefClass = interface(DDN.mscorlib.DNObjectClass)
  ['{96E16C2D-EE44-5A7C-8654-956C0AD75412}']
  { constructors } 

    {class} function init(fileName: string; typeName: string): DNResXFileRef; overload;
    {class} function init(fileName: string; typeName: string; textFileEncoding: DDN.mscorlib.DNEncoding): DNResXFileRef; overload;

  end;

  [DNTypeName('System.Resources.ResXFileRef')]
  DNResXFileRef = interface(DDN.mscorlib.DNObject)
  ['{68A4E1A6-359C-3FC7-B31A-4386BFD85E6D}']
  { getters & setters } 

    function get_FileName: string;
    function get_TypeName: string;
    function get_TextFileEncoding: DDN.mscorlib.DNEncoding;

  { methods } 

    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property FileName: string read get_FileName;
    property TypeName: string read get_TypeName;
    property TextFileEncoding: DDN.mscorlib.DNEncoding read get_TextFileEncoding;
  end;

  TDNResXFileRef = class(TDNGenericImport<DNResXFileRefClass, DNResXFileRef>) end;

  //-------------namespace: System.Resources----------------
  DNResXResourceReaderClass = interface(DNObjectClass)
  ['{40FFAD7A-A57A-5D18-BAD8-44FFD526F3B6}']
  { constructors } 

    {class} function init(fileName: string): DNResXResourceReader; overload;
    {class} function init(fileName: string; typeResolver: DDN.System.DNITypeResolutionService): DNResXResourceReader; overload;
    {class} function init(reader: DDN.mscorlib.DNTextReader): DNResXResourceReader; overload;
    {class} function init(reader: DDN.mscorlib.DNTextReader; typeResolver: DDN.System.DNITypeResolutionService): DNResXResourceReader; overload;
    {class} function init(stream: DDN.mscorlib.DNStream): DNResXResourceReader; overload;
    {class} function init(stream: DDN.mscorlib.DNStream; typeResolver: DDN.System.DNITypeResolutionService): DNResXResourceReader; overload;
    {class} function init(stream: DDN.mscorlib.DNStream; assemblyNames: TArray<DDN.mscorlib.DNAssemblyName>): DNResXResourceReader; overload;
    {class} function init(reader: DDN.mscorlib.DNTextReader; assemblyNames: TArray<DDN.mscorlib.DNAssemblyName>): DNResXResourceReader; overload;
    {class} function init(fileName: string; assemblyNames: TArray<DDN.mscorlib.DNAssemblyName>): DNResXResourceReader; overload;

  { static methods } 

    {class} function FromFileContents(fileContents: string): DNResXResourceReader; overload;
    {class} function FromFileContents(fileContents: string; typeResolver: DDN.System.DNITypeResolutionService): DNResXResourceReader; overload;
    {class} function FromFileContents(fileContents: string; assemblyNames: TArray<DDN.mscorlib.DNAssemblyName>): DNResXResourceReader; overload;

  end;

  [DNTypeName('System.Resources.ResXResourceReader')]
  DNResXResourceReader = interface(DDN.mscorlib.DNIResourceReader)
  ['{1FA644D8-8B29-3C40-AB9D-B8000CC9AAF8}']
  { getters & setters } 

    function get_BasePath: string;
    procedure set_BasePath(value: string);
    function get_UseResXDataNodes: Boolean;
    procedure set_UseResXDataNodes(value: Boolean);

  { methods } 

    procedure Close;
    function GetEnumerator: DDN.mscorlib.DNIDictionaryEnumerator;
    function GetMetadataEnumerator: DDN.mscorlib.DNIDictionaryEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property BasePath: string read get_BasePath write set_BasePath;
    property UseResXDataNodes: Boolean read get_UseResXDataNodes write set_UseResXDataNodes;
  end;

  TDNResXResourceReader = class(TDNGenericImport<DNResXResourceReaderClass, DNResXResourceReader>) end;

  //-------------namespace: System.Resources----------------
  DNResXResourceWriterClass = interface(DNObjectClass)
  ['{B18810BC-595C-5842-BD8C-F6DBD747DD8A}']
  { constructors } 

    {class} function init(fileName: string): DNResXResourceWriter; overload;
    {class} function init(fileName: string; typeNameConverter: DDN.mscorlib.DNFunc<DDN.mscorlib.DNType, string>): DNResXResourceWriter; overload;
    {class} function init(stream: DDN.mscorlib.DNStream): DNResXResourceWriter; overload;
    {class} function init(stream: DDN.mscorlib.DNStream; typeNameConverter: DDN.mscorlib.DNFunc<DDN.mscorlib.DNType, string>): DNResXResourceWriter; overload;
    {class} function init(textWriter: DDN.mscorlib.DNTextWriter): DNResXResourceWriter; overload;
    {class} function init(textWriter: DDN.mscorlib.DNTextWriter; typeNameConverter: DDN.mscorlib.DNFunc<DDN.mscorlib.DNType, string>): DNResXResourceWriter; overload;

  { static fields getter & setter } 

   function __fakeFieldGet_BinSerializedObjectMimeType: string;
   function __fakeFieldGet_SoapSerializedObjectMimeType: string;
   function __fakeFieldGet_DefaultSerializedObjectMimeType: string;
   function __fakeFieldGet_ByteArraySerializedObjectMimeType: string;
   function __fakeFieldGet_ResMimeType: string;
   function __fakeFieldGet_Version: string;
   function __fakeFieldGet_ResourceSchema: string;

  { static fields } 

    {class} property BinSerializedObjectMimeType: string read __fakeFieldGet_BinSerializedObjectMimeType;
    {class} property SoapSerializedObjectMimeType: string read __fakeFieldGet_SoapSerializedObjectMimeType;
    {class} property DefaultSerializedObjectMimeType: string read __fakeFieldGet_DefaultSerializedObjectMimeType;
    {class} property ByteArraySerializedObjectMimeType: string read __fakeFieldGet_ByteArraySerializedObjectMimeType;
    {class} property ResMimeType: string read __fakeFieldGet_ResMimeType;
    {class} property Version: string read __fakeFieldGet_Version;
    {class} property ResourceSchema: string read __fakeFieldGet_ResourceSchema;

  end;

  [DNTypeName('System.Resources.ResXResourceWriter')]
  DNResXResourceWriter = interface(DDN.mscorlib.DNIResourceWriter)
  ['{8B27F57B-FB54-3C6D-AA2B-B27532297527}']
  { getters & setters } 

    function get_BasePath: string;
    procedure set_BasePath(value: string);

  { methods } 

    procedure AddAlias(aliasName: string; assemblyName: DDN.mscorlib.DNAssemblyName);
    procedure Close;
    procedure Dispose;
    procedure AddMetadata(name: string; value: TArray<Byte>); overload;
    procedure AddMetadata(name: string; value: string); overload;
    procedure AddMetadata(name: string; value: DDN.mscorlib.DNObject); overload;
    procedure AddResource(name: string; value: TArray<Byte>); overload;
    procedure AddResource(name: string; value: DDN.mscorlib.DNObject); overload;
    procedure AddResource(name: string; value: string); overload;
    procedure AddResource(node: DNResXDataNode); overload;
    procedure Generate;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property BasePath: string read get_BasePath write set_BasePath;
  end;

  TDNResXResourceWriter = class(TDNGenericImport<DNResXResourceWriterClass, DNResXResourceWriter>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWindowsFormsSynchronizationContextClass = interface(DDN.mscorlib.DNSynchronizationContextClass)
  ['{5871FE80-EA6F-591E-AB32-B726938C8571}']
  { static getter & setter } 

    {class} function get_AutoInstall: Boolean;
    {class} procedure set_AutoInstall(value: Boolean);

  { constructors } 

    {class} function init: DNWindowsFormsSynchronizationContext;

  { static methods } 

    {class} procedure Uninstall;

  { static propertys } 

    {class} property AutoInstall: Boolean read get_AutoInstall write set_AutoInstall;
  end;

  [DNTypeName('System.Windows.Forms.WindowsFormsSynchronizationContext')]
  DNWindowsFormsSynchronizationContext = interface(DDN.mscorlib.DNSynchronizationContext)
  ['{38F0CCBF-2D63-3998-A8DF-AA3F47F6621B}']
  { methods } 

    procedure Dispose;
    function CreateCopy: DDN.mscorlib.DNSynchronizationContext;
    procedure Send(d: DDN.mscorlib.DNSendOrPostCallback; state: DDN.mscorlib.DNObject);
    procedure Post(d: DDN.mscorlib.DNSendOrPostCallback; state: DDN.mscorlib.DNObject);
    procedure OperationStarted;
    procedure OperationCompleted;
    function Wait(waitHandles: TArray<IntPtr>; waitAll: Boolean; millisecondsTimeout: Int32): Int32;
    function IsWaitNotificationRequired: Boolean;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNWindowsFormsSynchronizationContext = class(TDNGenericImport<DNWindowsFormsSynchronizationContextClass, DNWindowsFormsSynchronizationContext>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingMemberInfoClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{7824C212-BDBE-5E21-B222-2392E5EBF573}']
  { constructors } 

    {class} function init(dataMember: string): DNBindingMemberInfo;

  end;

  [DNTypeName('System.Windows.Forms.BindingMemberInfo')]
  DNBindingMemberInfo = interface(DDN.mscorlib.DNValueType)
  ['{9A9CEBCE-2EFF-3C69-AF4B-40A034045C13}']
  { getters & setters } 

    function get_BindingPath: string;
    function get_BindingField: string;
    function get_BindingMember: string;

  { methods } 

    function Equals(otherObject: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BindingPath: string read get_BindingPath;
    property BindingField: string read get_BindingField;
    property BindingMember: string read get_BindingMember;
  end;

  TDNBindingMemberInfo = class(TDNGenericImport<DNBindingMemberInfoClass, DNBindingMemberInfo>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridCellClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{78103FCF-FD0D-5C8F-A684-63386478B3C0}']
  { constructors } 

    {class} function init(r: Int32; c: Int32): DNDataGridCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridCell')]
  DNDataGridCell = interface(DDN.mscorlib.DNValueType)
  ['{42B2E57D-B250-3826-AEBD-6AF6FC1B98A2}']
  { getters & setters } 

    function get_ColumnNumber: Int32;
    procedure set_ColumnNumber(value: Int32);
    function get_RowNumber: Int32;
    procedure set_RowNumber(value: Int32);

  { methods } 

    function Equals(o: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ColumnNumber: Int32 read get_ColumnNumber write set_ColumnNumber;
    property RowNumber: Int32 read get_RowNumber write set_RowNumber;
  end;

  TDNDataGridCell = class(TDNGenericImport<DNDataGridCellClass, DNDataGridCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImeModeConversionClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{482FACCC-EB61-55A3-901F-1FC04F354ED7}']
  { static getter & setter } 

    {class} function get_ImeModeConversionBits: DDN.mscorlib.DNDictionary<DNImeMode, DNImeModeConversion>;
    {class} function get_IsCurrentConversionTableSupported: Boolean;

  { static propertys } 

    {class} property ImeModeConversionBits: DDN.mscorlib.DNDictionary<DNImeMode, DNImeModeConversion> read get_ImeModeConversionBits;
    {class} property IsCurrentConversionTableSupported: Boolean read get_IsCurrentConversionTableSupported;
  end;

  [DNTypeName('System.Windows.Forms.ImeModeConversion')]
  DNImeModeConversion = interface(DDN.mscorlib.DNValueType)
  ['{A994BA8F-4ADF-3294-AD1C-E910AA15D279}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function ToString: string;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  end;

  TDNImeModeConversion = class(TDNGenericImport<DNImeModeConversionClass, DNImeModeConversion>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkAreaClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{E79F5CE4-5C4B-5000-9AB9-C4C8A8FD8997}']
  { constructors } 

    {class} function init(start: Int32; length: Int32): DNLinkArea;

  end;

  [DNTypeName('System.Windows.Forms.LinkArea')]
  DNLinkArea = interface(DDN.mscorlib.DNValueType)
  ['{4A344545-1544-388F-A2AE-C63B6022A5FA}']
  { getters & setters } 

    function get_Start: Int32;
    procedure set_Start(value: Int32);
    function get_Length: Int32;
    procedure set_Length(value: Int32);
    function get_IsEmpty: Boolean;

  { methods } 

    function Equals(o: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Start: Int32 read get_Start write set_Start;
    property Length: Int32 read get_Length write set_Length;
    property IsEmpty: Boolean read get_IsEmpty;
  end;

  TDNLinkArea = class(TDNGenericImport<DNLinkAreaClass, DNLinkArea>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMessageClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{57481AC5-BF26-5C7D-8CF0-5756C9E350A4}']
  { static methods } 

    {class} function Create(hWnd: IntPtr; msg: Int32; wparam: IntPtr; lparam: IntPtr): DNMessage;

  end;

  [DNTypeName('System.Windows.Forms.Message')]
  DNMessage = interface(DDN.mscorlib.DNValueType)
  ['{574E6BA0-2385-368A-92A0-EA36702A8D5D}']
  { getters & setters } 

    function get_HWnd: IntPtr;
    procedure set_HWnd(value: IntPtr);
    function get_Msg: Int32;
    procedure set_Msg(value: Int32);
    function get_WParam: IntPtr;
    procedure set_WParam(value: IntPtr);
    function get_LParam: IntPtr;
    procedure set_LParam(value: IntPtr);
    function get_Result: IntPtr;
    procedure set_Result(value: IntPtr);

  { methods } 

    function GetLParam(cls: DDN.mscorlib.DNType): DDN.mscorlib.DNObject;
    function Equals(o: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property HWnd: IntPtr read get_HWnd write set_HWnd;
    property Msg: Int32 read get_Msg write set_Msg;
    property WParam: IntPtr read get_WParam write set_WParam;
    property LParam: IntPtr read get_LParam write set_LParam;
    property Result: IntPtr read get_Result write set_Result;
  end;

  TDNMessage = class(TDNGenericImport<DNMessageClass, DNMessage>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPaddingClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{CFF79F42-4216-51CB-8271-6576AEE25E5A}']
  { constructors } 

    {class} function init(all: Int32): DNPadding; overload;
    {class} function init(left: Int32; top: Int32; right: Int32; bottom: Int32): DNPadding; overload;

  { static fields getter & setter } 

   function __fakeFieldGet_Empty: DNPadding;

  { static fields } 

    {class} property Empty: DNPadding read __fakeFieldGet_Empty;

  { static methods } 

    {class} function Add(p1: DNPadding; p2: DNPadding): DNPadding;
    {class} function Subtract(p1: DNPadding; p2: DNPadding): DNPadding;

  end;

  [DNTypeName('System.Windows.Forms.Padding')]
  DNPadding = interface(DDN.mscorlib.DNValueType)
  ['{71D68DE8-7F91-3C83-BA8F-CE2C01A1A1CD}']
  { getters & setters } 

    function get_All: Int32;
    procedure set_All(value: Int32);
    function get_Bottom: Int32;
    procedure set_Bottom(value: Int32);
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Right: Int32;
    procedure set_Right(value: Int32);
    function get_Top: Int32;
    procedure set_Top(value: Int32);
    function get_Horizontal: Int32;
    function get_Vertical: Int32;
    function get_Size: DDN.System.Drawing.DNSize;

  { methods } 

    function Equals(other: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property All: Int32 read get_All write set_All;
    property Bottom: Int32 read get_Bottom write set_Bottom;
    property Left: Int32 read get_Left write set_Left;
    property Right: Int32 read get_Right write set_Right;
    property Top: Int32 read get_Top write set_Top;
    property Horizontal: Int32 read get_Horizontal;
    property Vertical: Int32 read get_Vertical;
    property Size: DDN.System.Drawing.DNSize read get_Size;
  end;

  TDNPadding = class(TDNGenericImport<DNPaddingClass, DNPadding>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutPanelCellPositionClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{2B7FD8AD-E890-54E4-88B3-E4F054954217}']
  { constructors } 

    {class} function init(column: Int32; row: Int32): DNTableLayoutPanelCellPosition;

  end;

  [DNTypeName('System.Windows.Forms.TableLayoutPanelCellPosition')]
  DNTableLayoutPanelCellPosition = interface(DDN.mscorlib.DNValueType)
  ['{EFD6D819-5055-39C7-9CFC-FCAA75357E5B}']
  { getters & setters } 

    function get_Row: Int32;
    procedure set_Row(value: Int32);
    function get_Column: Int32;
    procedure set_Column(value: Int32);

  { methods } 

    function Equals(other: DDN.mscorlib.DNObject): Boolean;
    function ToString: string;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Row: Int32 read get_Row write set_Row;
    property Column: Int32 read get_Column write set_Column;
  end;

  TDNTableLayoutPanelCellPosition = class(TDNGenericImport<DNTableLayoutPanelCellPositionClass, DNTableLayoutPanelCellPosition>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNTextMetricsClass = interface(DDN.mscorlib.DNValueTypeClass)
  ['{135185E7-67FF-51F2-8DE4-3CB85F847CC3}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.TextMetrics')]
  DNTextMetrics = interface(DDN.mscorlib.DNValueType)
  ['{AC860D9B-362A-3BBB-8ABB-0021C4E75477}']
  { getters & setters } 

    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_Ascent: Int32;
    procedure set_Ascent(value: Int32);
    function get_Descent: Int32;
    procedure set_Descent(value: Int32);
    function get_InternalLeading: Int32;
    procedure set_InternalLeading(value: Int32);
    function get_ExternalLeading: Int32;
    procedure set_ExternalLeading(value: Int32);
    function get_AverageCharWidth: Int32;
    procedure set_AverageCharWidth(value: Int32);
    function get_MaxCharWidth: Int32;
    procedure set_MaxCharWidth(value: Int32);
    function get_Weight: Int32;
    procedure set_Weight(value: Int32);
    function get_Overhang: Int32;
    procedure set_Overhang(value: Int32);
    function get_DigitizedAspectX: Int32;
    procedure set_DigitizedAspectX(value: Int32);
    function get_DigitizedAspectY: Int32;
    procedure set_DigitizedAspectY(value: Int32);
    function get_FirstChar: Char;
    procedure set_FirstChar(value: Char);
    function get_LastChar: Char;
    procedure set_LastChar(value: Char);
    function get_DefaultChar: Char;
    procedure set_DefaultChar(value: Char);
    function get_BreakChar: Char;
    procedure set_BreakChar(value: Char);
    function get_Italic: Boolean;
    procedure set_Italic(value: Boolean);
    function get_Underlined: Boolean;
    procedure set_Underlined(value: Boolean);
    function get_StruckOut: Boolean;
    procedure set_StruckOut(value: Boolean);
    function get_PitchAndFamily: DNTextMetricsPitchAndFamilyValues;
    procedure set_PitchAndFamily(value: DNTextMetricsPitchAndFamilyValues);
    function get_CharSet: DNTextMetricsCharacterSet;
    procedure set_CharSet(value: DNTextMetricsCharacterSet);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function ToString: string;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Height: Int32 read get_Height write set_Height;
    property Ascent: Int32 read get_Ascent write set_Ascent;
    property Descent: Int32 read get_Descent write set_Descent;
    property InternalLeading: Int32 read get_InternalLeading write set_InternalLeading;
    property ExternalLeading: Int32 read get_ExternalLeading write set_ExternalLeading;
    property AverageCharWidth: Int32 read get_AverageCharWidth write set_AverageCharWidth;
    property MaxCharWidth: Int32 read get_MaxCharWidth write set_MaxCharWidth;
    property Weight: Int32 read get_Weight write set_Weight;
    property Overhang: Int32 read get_Overhang write set_Overhang;
    property DigitizedAspectX: Int32 read get_DigitizedAspectX write set_DigitizedAspectX;
    property DigitizedAspectY: Int32 read get_DigitizedAspectY write set_DigitizedAspectY;
    property FirstChar: Char read get_FirstChar write set_FirstChar;
    property LastChar: Char read get_LastChar write set_LastChar;
    property DefaultChar: Char read get_DefaultChar write set_DefaultChar;
    property BreakChar: Char read get_BreakChar write set_BreakChar;
    property Italic: Boolean read get_Italic write set_Italic;
    property Underlined: Boolean read get_Underlined write set_Underlined;
    property StruckOut: Boolean read get_StruckOut write set_StruckOut;
    property PitchAndFamily: DNTextMetricsPitchAndFamilyValues read get_PitchAndFamily write set_PitchAndFamily;
    property CharSet: DNTextMetricsCharacterSet read get_CharSet write set_CharSet;
  end;

  TDNTextMetrics = class(TDNGenericImport<DNTextMetricsClass, DNTextMetrics>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAmbientPropertiesClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8406BEE2-A508-5C92-9740-5E662C613813}']
  { constructors } 

    {class} function init: DNAmbientProperties;

  end;

  [DNTypeName('System.Windows.Forms.AmbientProperties')]
  DNAmbientProperties = interface(DDN.mscorlib.DNObject)
  ['{C097C0CF-9087-3E3C-B760-0E588FB7F959}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Cursor: DNCursor;
    procedure set_Cursor(value: DNCursor);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Cursor: DNCursor read get_Cursor write set_Cursor;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
  end;

  TDNAmbientProperties = class(TDNGenericImport<DNAmbientPropertiesClass, DNAmbientProperties>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNApplicationClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4C9A29C7-6AF3-5A32-9773-434F5B4BB3C2}']
  { static getter & setter } 

    {class} function get_AllowQuit: Boolean;
    {class} function get_CommonAppDataRegistry: DDN.mscorlib.DNRegistryKey;
    {class} function get_CommonAppDataPath: string;
    {class} function get_CompanyName: string;
    {class} function get_CurrentCulture: DDN.mscorlib.DNCultureInfo;
    {class} procedure set_CurrentCulture(value: DDN.mscorlib.DNCultureInfo);
    {class} function get_CurrentInputLanguage: DNInputLanguage;
    {class} procedure set_CurrentInputLanguage(value: DNInputLanguage);
    {class} function get_ExecutablePath: string;
    {class} function get_LocalUserAppDataPath: string;
    {class} function get_MessageLoop: Boolean;
    {class} function get_OpenForms: DNFormCollection;
    {class} function get_ProductName: string;
    {class} function get_ProductVersion: string;
    {class} function get_RenderWithVisualStyles: Boolean;
    {class} function get_SafeTopLevelCaptionFormat: string;
    {class} procedure set_SafeTopLevelCaptionFormat(value: string);
    {class} function get_StartupPath: string;
    {class} function get_UseWaitCursor: Boolean;
    {class} procedure set_UseWaitCursor(value: Boolean);
    {class} function get_UserAppDataPath: string;
    {class} function get_UserAppDataRegistry: DDN.mscorlib.DNRegistryKey;
    {class} function get_VisualStyleState: DNVisualStyleState;
    {class} procedure set_VisualStyleState(value: DNVisualStyleState);

  { static methods } 

    {class} procedure RegisterMessageLoop(callback: DNApplication_MessageLoopCallback);
    {class} procedure UnregisterMessageLoop;
    {class} procedure AddMessageFilter(value: DNIMessageFilter);
    {class} function FilterMessage(out message: DNMessage): Boolean;
    {class} procedure DoEvents;
    {class} procedure EnableVisualStyles;
    {class} procedure &Exit; overload;
    {class} procedure &Exit(e: DDN.System.DNCancelEventArgs); overload;
    {class} procedure ExitThread;
    {class} function OleRequired: DDN.mscorlib.DNApartmentState;
    {class} procedure OnThreadException(t: DDN.mscorlib.DNException);
    {class} procedure RaiseIdle(e: DDN.mscorlib.DNEventArgs);
    {class} procedure RemoveMessageFilter(value: DNIMessageFilter);
    {class} procedure Run; overload;
    {class} procedure Run(mainForm: DNForm); overload;
    {class} procedure Run(context: DNApplicationContext); overload;
    {class} procedure SetCompatibleTextRenderingDefault(defaultValue: Boolean);
    {class} function SetSuspendState(state: DNPowerState; force: Boolean; disableWakeEvent: Boolean): Boolean;
    {class} procedure SetUnhandledExceptionMode(mode: DNUnhandledExceptionMode); overload;
    {class} procedure SetUnhandledExceptionMode(mode: DNUnhandledExceptionMode; threadScope: Boolean); overload;
    {class} procedure Restart;

  { static propertys } 

    {class} property AllowQuit: Boolean read get_AllowQuit;
    {class} property CommonAppDataRegistry: DDN.mscorlib.DNRegistryKey read get_CommonAppDataRegistry;
    {class} property CommonAppDataPath: string read get_CommonAppDataPath;
    {class} property CompanyName: string read get_CompanyName;
    {class} property CurrentCulture: DDN.mscorlib.DNCultureInfo read get_CurrentCulture write set_CurrentCulture;
    {class} property CurrentInputLanguage: DNInputLanguage read get_CurrentInputLanguage write set_CurrentInputLanguage;
    {class} property ExecutablePath: string read get_ExecutablePath;
    {class} property LocalUserAppDataPath: string read get_LocalUserAppDataPath;
    {class} property MessageLoop: Boolean read get_MessageLoop;
    {class} property OpenForms: DNFormCollection read get_OpenForms;
    {class} property ProductName: string read get_ProductName;
    {class} property ProductVersion: string read get_ProductVersion;
    {class} property RenderWithVisualStyles: Boolean read get_RenderWithVisualStyles;
    {class} property SafeTopLevelCaptionFormat: string read get_SafeTopLevelCaptionFormat write set_SafeTopLevelCaptionFormat;
    {class} property StartupPath: string read get_StartupPath;
    {class} property UseWaitCursor: Boolean read get_UseWaitCursor write set_UseWaitCursor;
    {class} property UserAppDataPath: string read get_UserAppDataPath;
    {class} property UserAppDataRegistry: DDN.mscorlib.DNRegistryKey read get_UserAppDataRegistry;
    {class} property VisualStyleState: DNVisualStyleState read get_VisualStyleState write set_VisualStyleState;
  end;

  [DNTypeName('System.Windows.Forms.Application')]
  DNApplication = interface(DDN.mscorlib.DNObject)
  ['{2FB60120-318E-37C5-9698-3777599EA8A0}']
  { events } 

    {class} procedure add_ApplicationExit(value: DDN.mscorlib.DNEventHandler);
    {class} procedure remove_ApplicationExit(value: DDN.mscorlib.DNEventHandler);
    {class} procedure add_Idle(value: DDN.mscorlib.DNEventHandler);
    {class} procedure remove_Idle(value: DDN.mscorlib.DNEventHandler);
    {class} procedure add_EnterThreadModal(value: DDN.mscorlib.DNEventHandler);
    {class} procedure remove_EnterThreadModal(value: DDN.mscorlib.DNEventHandler);
    {class} procedure add_LeaveThreadModal(value: DDN.mscorlib.DNEventHandler);
    {class} procedure remove_LeaveThreadModal(value: DDN.mscorlib.DNEventHandler);
    {class} procedure add_ThreadException(value: DDN.System.DNThreadExceptionEventHandler);
    {class} procedure remove_ThreadException(value: DDN.System.DNThreadExceptionEventHandler);
    {class} procedure add_ThreadExit(value: DDN.mscorlib.DNEventHandler);
    {class} procedure remove_ThreadExit(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNApplication = class(TDNGenericImport<DNApplicationClass, DNApplication>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNApplicationContextClass = interface(DNObjectClass)
  ['{F1960B67-C828-5678-82D5-13806A7D0B33}']
  { constructors } 

    {class} function init: DNApplicationContext; overload;
    {class} function init(mainForm: DNForm): DNApplicationContext; overload;

  end;

  [DNTypeName('System.Windows.Forms.ApplicationContext')]
  DNApplicationContext = interface(DDN.mscorlib.DNIDisposable)
  ['{9C0FC04C-B134-3EFF-84CD-D1FDB0636F78}']
  { getters & setters } 

    function get_MainForm: DNForm;
    procedure set_MainForm(value: DNForm);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);

  { events } 

    procedure add_ThreadExit(value: DDN.mscorlib.DNEventHandler);
    procedure remove_ThreadExit(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure Dispose;
    procedure ExitThread;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property MainForm: DNForm read get_MainForm write set_MainForm;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
  end;

  TDNApplicationContext = class(TDNGenericImport<DNApplicationContextClass, DNApplicationContext>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAutoCompleteStringCollectionClass = interface(DNObjectClass)
  ['{79149C20-4AC0-51F2-99DB-50B33352DF01}']
  { constructors } 

    {class} function init: DNAutoCompleteStringCollection;

  end;

  [DNTypeName('System.Windows.Forms.AutoCompleteStringCollection')]
  DNAutoCompleteStringCollection = interface(DDN.mscorlib.DNIList)
  ['{84F666A8-20C3-3782-AFEE-9E451792F394}']
  { getters & setters } 

    function get_Item(index: Int32): string;
    procedure set_Item(index: Int32; value: string);
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_IsSynchronized: Boolean;
    function get_SyncRoot: DDN.mscorlib.DNObject;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function Add(value: string): Int32;
    procedure AddRange(value: TArray<string>);
    function &Contains(value: string): Boolean;
    procedure CopyTo(&array: TArray<string>; index: Int32);
    function IndexOf(value: string): Int32;
    procedure Insert(index: Int32; value: string);
    procedure Remove(value: string);
    procedure RemoveAt(index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: string read get_Item write set_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property IsSynchronized: Boolean read get_IsSynchronized;
    property SyncRoot: DDN.mscorlib.DNObject read get_SyncRoot;
  end;

  TDNAutoCompleteStringCollection = class(TDNGenericImport<DNAutoCompleteStringCollectionClass, DNAutoCompleteStringCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_ConnectionPointCookieClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0E4B87D9-083D-5720-983D-2FDCE7F432A1}']
  { constructors } 

    {class} function init(source: DDN.mscorlib.DNObject; sink: DDN.mscorlib.DNObject; eventInterface: DDN.mscorlib.DNType): DNAxHost_ConnectionPointCookie;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+ConnectionPointCookie')]
  DNAxHost_ConnectionPointCookie = interface(DDN.mscorlib.DNObject)
  ['{77F5E795-0F50-3468-A004-D580FB60DC59}']
  { methods } 

    procedure Disconnect;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNAxHost_ConnectionPointCookie = class(TDNGenericImport<DNAxHost_ConnectionPointCookieClass, DNAxHost_ConnectionPointCookie>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNAxHost_StateClass = interface(DNObjectClass)
  ['{B89E7B63-7A8E-5A49-83C7-923C1DA8AEFF}']
  { constructors } 

    {class} function init(ms: DDN.mscorlib.DNStream; storageType: Int32; manualUpdate: Boolean; licKey: string): DNAxHost_State;

  end;

  [DNTypeName('System.Windows.Forms.AxHost+State')]
  DNAxHost_State = interface(DDN.mscorlib.DNISerializable)
  ['{67180F66-3F2D-34F6-9606-5F8672211B77}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNAxHost_State = class(TDNGenericImport<DNAxHost_StateClass, DNAxHost_State>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingClass = interface(DDN.mscorlib.DNObjectClass)
  ['{2CEDFE54-9752-590D-ADCA-2053C02473FD}']
  { constructors } 

    {class} function init(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string): DNBinding; overload;
    {class} function init(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean): DNBinding; overload;
    {class} function init(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; dataSourceUpdateMode: DNDataSourceUpdateMode): DNBinding; overload;
    {class} function init(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; dataSourceUpdateMode: DNDataSourceUpdateMode; nullValue: DDN.mscorlib.DNObject): DNBinding; overload;
    {class} function init(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; dataSourceUpdateMode: DNDataSourceUpdateMode; nullValue: DDN.mscorlib.DNObject; formatString: string): DNBinding; overload;
    {class} function init(propertyName: string; dataSource: DDN.mscorlib.DNObject; dataMember: string; formattingEnabled: Boolean; dataSourceUpdateMode: DNDataSourceUpdateMode; nullValue: DDN.mscorlib.DNObject; formatString: string; formatInfo: DDN.mscorlib.DNIFormatProvider): DNBinding; overload;

  end;

  [DNTypeName('System.Windows.Forms.Binding')]
  DNBinding = interface(DDN.mscorlib.DNObject)
  ['{9EA4ED49-47C2-352A-9C7E-F36429211BED}']
  { getters & setters } 

    function get_DataSource: DDN.mscorlib.DNObject;
    function get_BindingMemberInfo: DNBindingMemberInfo;
    function get_BindableComponent: DNIBindableComponent;
    function get_Control: DNControl;
    function get_IsBinding: Boolean;
    function get_BindingManagerBase: DNBindingManagerBase;
    function get_PropertyName: string;
    function get_FormattingEnabled: Boolean;
    procedure set_FormattingEnabled(value: Boolean);
    function get_FormatInfo: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatInfo(value: DDN.mscorlib.DNIFormatProvider);
    function get_FormatString: string;
    procedure set_FormatString(value: string);
    function get_NullValue: DDN.mscorlib.DNObject;
    procedure set_NullValue(value: DDN.mscorlib.DNObject);
    function get_DataSourceNullValue: DDN.mscorlib.DNObject;
    procedure set_DataSourceNullValue(value: DDN.mscorlib.DNObject);
    function get_ControlUpdateMode: DNControlUpdateMode;
    procedure set_ControlUpdateMode(value: DNControlUpdateMode);
    function get_DataSourceUpdateMode: DNDataSourceUpdateMode;
    procedure set_DataSourceUpdateMode(value: DNDataSourceUpdateMode);

  { events } 

    procedure add_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure remove_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure add_Parse(value: DNConvertEventHandler);
    procedure remove_Parse(value: DNConvertEventHandler);
    procedure add_Format(value: DNConvertEventHandler);
    procedure remove_Format(value: DNConvertEventHandler);

  { methods } 

    procedure ReadValue;
    procedure WriteValue;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property DataSource: DDN.mscorlib.DNObject read get_DataSource;
    property BindingMemberInfo: DNBindingMemberInfo read get_BindingMemberInfo;
    property BindableComponent: DNIBindableComponent read get_BindableComponent;
    property Control: DNControl read get_Control;
    property IsBinding: Boolean read get_IsBinding;
    property BindingManagerBase: DNBindingManagerBase read get_BindingManagerBase;
    property PropertyName: string read get_PropertyName;
    property FormattingEnabled: Boolean read get_FormattingEnabled write set_FormattingEnabled;
    property FormatInfo: DDN.mscorlib.DNIFormatProvider read get_FormatInfo write set_FormatInfo;
    property FormatString: string read get_FormatString write set_FormatString;
    property NullValue: DDN.mscorlib.DNObject read get_NullValue write set_NullValue;
    property DataSourceNullValue: DDN.mscorlib.DNObject read get_DataSourceNullValue write set_DataSourceNullValue;
    property ControlUpdateMode: DNControlUpdateMode read get_ControlUpdateMode write set_ControlUpdateMode;
    property DataSourceUpdateMode: DNDataSourceUpdateMode read get_DataSourceUpdateMode write set_DataSourceUpdateMode;
  end;

  TDNBinding = class(TDNGenericImport<DNBindingClass, DNBinding>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingContextClass = interface(DNObjectClass)
  ['{7CB71D86-1E08-50CB-9AA1-96C22EBAAB6B}']
  { constructors } 

    {class} function init: DNBindingContext;

  { static methods } 

    {class} procedure UpdateBinding(newBindingContext: DNBindingContext; binding: DNBinding);

  end;

  [DNTypeName('System.Windows.Forms.BindingContext')]
  DNBindingContext = interface(DDN.mscorlib.DNICollection)
  ['{59E345A7-D82E-3737-BE61-FD31F0EF705E}']
  { getters & setters } 

    function get_IsReadOnly: Boolean;
    function get_Item(dataSource: DDN.mscorlib.DNObject): DNBindingManagerBase; overload;
    function get_Item(dataSource: DDN.mscorlib.DNObject; dataMember: string): DNBindingManagerBase; overload;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function &Contains(dataSource: DDN.mscorlib.DNObject): Boolean; overload;
    function &Contains(dataSource: DDN.mscorlib.DNObject; dataMember: string): Boolean; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[dataSource: DDN.mscorlib.DNObject]: DNBindingManagerBase read get_Item; default;
    property Item[dataSource: DDN.mscorlib.DNObject; dataMember: string]: DNBindingManagerBase read get_Item; default;
  end;

  TDNBindingContext = class(TDNGenericImport<DNBindingContextClass, DNBindingContext>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNBindingManagerBaseClass = interface(DDN.mscorlib.DNObjectClass)
  ['{420C0CF9-AAFB-5987-B578-2CDC6CC0E5BB}']
  { constructors } 

    {class} function init: DNBindingManagerBase;

  end;

  [DNTypeName('System.Windows.Forms.BindingManagerBase')]
  DNBindingManagerBase = interface(DDN.mscorlib.DNObject)
  ['{7B73399A-A8DB-33C2-80D7-445F5A908D1A}']
  { getters & setters } 

    function get_Bindings: DNBindingsCollection;
    function get_Current: DDN.mscorlib.DNObject;
    function get_Position: Int32;
    procedure set_Position(value: Int32);
    function get_IsBindingSuspended: Boolean;
    function get_Count: Int32;

  { events } 

    procedure add_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure remove_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure add_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure remove_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure add_PositionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PositionChanged(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function GetItemProperties: DDN.System.DNPropertyDescriptorCollection;
    procedure CancelCurrentEdit;
    procedure EndCurrentEdit;
    procedure AddNew;
    procedure RemoveAt(index: Int32);
    procedure SuspendBinding;
    procedure ResumeBinding;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Bindings: DNBindingsCollection read get_Bindings;
    property Current: DDN.mscorlib.DNObject read get_Current;
    property Position: Int32 read get_Position write set_Position;
    property IsBindingSuspended: Boolean read get_IsBindingSuspended;
    property Count: Int32 read get_Count;
  end;

  TDNBindingManagerBase = class(TDNGenericImport<DNBindingManagerBaseClass, DNBindingManagerBase>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCurrencyManagerClass = interface(DNBindingManagerBaseClass)
  ['{CF53FD72-8ACD-50EC-BF18-20BD9D13A90C}']
  end;

  [DNTypeName('System.Windows.Forms.CurrencyManager')]
  DNCurrencyManager = interface(DNBindingManagerBase)
  ['{DE4429AC-E8C7-3F60-A02F-3E4426768C3D}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Current: DDN.mscorlib.DNObject;
    function get_List: DDN.mscorlib.DNIList;
    function get_Position: Int32;
    procedure set_Position(value: Int32);
    function get_Bindings: DNBindingsCollection;
    function get_IsBindingSuspended: Boolean;

  { events } 

    procedure add_ItemChanged(value: DNItemChangedEventHandler);
    procedure remove_ItemChanged(value: DNItemChangedEventHandler);
    procedure add_ListChanged(value: DDN.System.DNListChangedEventHandler);
    procedure remove_ListChanged(value: DDN.System.DNListChangedEventHandler);
    procedure add_MetaDataChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_MetaDataChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure remove_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure add_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure remove_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure add_PositionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PositionChanged(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure AddNew;
    procedure CancelCurrentEdit;
    procedure RemoveAt(index: Int32);
    procedure EndCurrentEdit;
    function GetItemProperties: DDN.System.DNPropertyDescriptorCollection;
    procedure Refresh;
    procedure ResumeBinding;
    procedure SuspendBinding;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Current: DDN.mscorlib.DNObject read get_Current;
    property List: DDN.mscorlib.DNIList read get_List;
    property Position: Int32 read get_Position write set_Position;
    property Bindings: DNBindingsCollection read get_Bindings;
    property IsBindingSuspended: Boolean read get_IsBindingSuspended;
  end;

  TDNCurrencyManager = class(TDNGenericImport<DNCurrencyManagerClass, DNCurrencyManager>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPropertyManagerClass = interface(DNBindingManagerBaseClass)
  ['{57F322F9-3130-5661-AB13-39B78A08949E}']
  { constructors } 

    {class} function init: DNPropertyManager;

  end;

  [DNTypeName('System.Windows.Forms.PropertyManager')]
  DNPropertyManager = interface(DNBindingManagerBase)
  ['{44688C78-5D56-350C-9C94-BA761355F988}']
  { getters & setters } 

    function get_Current: DDN.mscorlib.DNObject;
    function get_Position: Int32;
    procedure set_Position(value: Int32);
    function get_Count: Int32;
    function get_Bindings: DNBindingsCollection;
    function get_IsBindingSuspended: Boolean;

  { events } 

    procedure add_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure remove_BindingComplete(value: DNBindingCompleteEventHandler);
    procedure add_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_CurrentItemChanged(value: DDN.mscorlib.DNEventHandler);
    procedure add_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure remove_DataError(value: DNBindingManagerDataErrorEventHandler);
    procedure add_PositionChanged(value: DDN.mscorlib.DNEventHandler);
    procedure remove_PositionChanged(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    procedure SuspendBinding;
    procedure ResumeBinding;
    procedure CancelCurrentEdit;
    procedure EndCurrentEdit;
    procedure AddNew;
    procedure RemoveAt(index: Int32);
    function GetItemProperties: DDN.System.DNPropertyDescriptorCollection;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Current: DDN.mscorlib.DNObject read get_Current;
    property Position: Int32 read get_Position write set_Position;
    property Count: Int32 read get_Count;
    property Bindings: DNBindingsCollection read get_Bindings;
    property IsBindingSuspended: Boolean read get_IsBindingSuspended;
  end;

  TDNPropertyManager = class(TDNGenericImport<DNPropertyManagerClass, DNPropertyManager>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNButtonRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{EF4CCBA0-A5E7-5071-8AE5-52A696628FE8}']
  { static getter & setter } 

    {class} function get_RenderMatchingApplicationState: Boolean;
    {class} procedure set_RenderMatchingApplicationState(value: Boolean);

  { static methods } 

    {class} function IsBackgroundPartiallyTransparent(state: DNPushButtonState): Boolean;
    {class} procedure DrawParentBackground(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; childControl: DNControl);
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNPushButtonState); overload;
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNPushButtonState); overload;
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; buttonText: string; font: DDN.System.Drawing.DNFont; focused: Boolean; state: DNPushButtonState); overload;
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; buttonText: string; font: DDN.System.Drawing.DNFont; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNPushButtonState); overload;
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; buttonText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; focused: Boolean; state: DNPushButtonState); overload;
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNPushButtonState); overload;
    {class} procedure DrawButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; buttonText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNPushButtonState); overload;

  { static propertys } 

    {class} property RenderMatchingApplicationState: Boolean read get_RenderMatchingApplicationState write set_RenderMatchingApplicationState;
  end;

  [DNTypeName('System.Windows.Forms.ButtonRenderer')]
  DNButtonRenderer = interface(DDN.mscorlib.DNObject)
  ['{C97EADB5-4B44-35BD-ADB5-3A82AB8AD77F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNButtonRenderer = class(TDNGenericImport<DNButtonRendererClass, DNButtonRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckBoxRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{5D302D3E-75B9-5D35-8D4B-B8DC3E042F86}']
  { static getter & setter } 

    {class} function get_RenderMatchingApplicationState: Boolean;
    {class} procedure set_RenderMatchingApplicationState(value: Boolean);

  { static methods } 

    {class} function IsBackgroundPartiallyTransparent(state: DNCheckBoxState): Boolean;
    {class} procedure DrawParentBackground(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; childControl: DNControl);
    {class} procedure DrawCheckBox(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; state: DNCheckBoxState); overload;
    {class} procedure DrawCheckBox(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; checkBoxText: string; font: DDN.System.Drawing.DNFont; focused: Boolean; state: DNCheckBoxState); overload;
    {class} procedure DrawCheckBox(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; checkBoxText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; focused: Boolean; state: DNCheckBoxState); overload;
    {class} procedure DrawCheckBox(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; checkBoxText: string; font: DDN.System.Drawing.DNFont; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNCheckBoxState); overload;
    {class} function GetGlyphSize(g: DDN.System.Drawing.DNGraphics; state: DNCheckBoxState): DDN.System.Drawing.DNSize;
    {class} procedure DrawCheckBox(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; checkBoxText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNCheckBoxState); overload;

  { static propertys } 

    {class} property RenderMatchingApplicationState: Boolean read get_RenderMatchingApplicationState write set_RenderMatchingApplicationState;
  end;

  [DNTypeName('System.Windows.Forms.CheckBoxRenderer')]
  DNCheckBoxRenderer = interface(DDN.mscorlib.DNObject)
  ['{6A080997-D9CD-3992-8FC9-F1D50A1CFD33}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNCheckBoxRenderer = class(TDNGenericImport<DNCheckBoxRendererClass, DNCheckBoxRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckedListBox_CheckedIndexCollectionClass = interface(DNObjectClass)
  ['{CE288D94-6F89-5E1D-A233-0D9CEAB0FD25}']
  end;

  [DNTypeName('System.Windows.Forms.CheckedListBox+CheckedIndexCollection')]
  DNCheckedListBox_CheckedIndexCollection = interface(DDN.mscorlib.DNIList)
  ['{C2C3F494-CE08-354A-9B79-03467DA93365}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): Int32;

  { methods } 

    function &Contains(index: Int32): Boolean;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function IndexOf(index: Int32): Int32;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: Int32 read get_Item; default;
  end;

  TDNCheckedListBox_CheckedIndexCollection = class(TDNGenericImport<DNCheckedListBox_CheckedIndexCollectionClass, DNCheckedListBox_CheckedIndexCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckedListBox_CheckedItemCollectionClass = interface(DNObjectClass)
  ['{D24E37FD-5198-50E7-A125-D7546283C7E7}']
  end;

  [DNTypeName('System.Windows.Forms.CheckedListBox+CheckedItemCollection')]
  DNCheckedListBox_CheckedItemCollection = interface(DDN.mscorlib.DNIList)
  ['{40AA9FDD-80E7-3722-AEDB-534B28609922}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function &Contains(item: DDN.mscorlib.DNObject): Boolean;
    function IndexOf(item: DDN.mscorlib.DNObject): Int32;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNCheckedListBox_CheckedItemCollection = class(TDNGenericImport<DNCheckedListBox_CheckedItemCollectionClass, DNCheckedListBox_CheckedItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNClipboardClass = interface(DDN.mscorlib.DNObjectClass)
  ['{82914B9F-4E92-5884-96E1-1255D34DFECE}']
  { static methods } 

    {class} procedure SetDataObject(data: DDN.mscorlib.DNObject); overload;
    {class} procedure SetDataObject(data: DDN.mscorlib.DNObject; copy: Boolean); overload;
    {class} function GetDataObject: DNIDataObject;
    {class} procedure Clear;
    {class} function ContainsAudio: Boolean;
    {class} function ContainsData(format: string): Boolean;
    {class} function ContainsFileDropList: Boolean;
    {class} function ContainsImage: Boolean;
    {class} function ContainsText: Boolean; overload;
    {class} function ContainsText(format: DNTextDataFormat): Boolean; overload;
    {class} function GetAudioStream: DDN.mscorlib.DNStream;
    {class} function GetData(format: string): DDN.mscorlib.DNObject;
    {class} function GetImage: DDN.System.Drawing.DNImage;
    {class} function GetText: string; overload;
    {class} function GetText(format: DNTextDataFormat): string; overload;
    {class} procedure SetAudio(audioBytes: TArray<Byte>); overload;
    {class} procedure SetAudio(audioStream: DDN.mscorlib.DNStream); overload;
    {class} procedure SetData(format: string; data: DDN.mscorlib.DNObject);
    {class} procedure SetImage(image: DDN.System.Drawing.DNImage);
    {class} procedure SetText(text: string); overload;
    {class} procedure SetText(text: string; format: DNTextDataFormat); overload;
    {class} procedure SetDataObject(data: DDN.mscorlib.DNObject; copy: Boolean; retryTimes: Int32; retryDelay: Int32); overload;
    {class} function GetFileDropList: DDN.System.DNStringCollection;
    {class} procedure SetFileDropList(filePaths: DDN.System.DNStringCollection);

  end;

  [DNTypeName('System.Windows.Forms.Clipboard')]
  DNClipboard = interface(DDN.mscorlib.DNObject)
  ['{3C68D5B6-8EC5-3878-9C23-4BC241BE3BB6}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNClipboard = class(TDNGenericImport<DNClipboardClass, DNClipboard>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNComboBox_ObjectCollectionClass = interface(DNObjectClass)
  ['{806DD057-22EA-5EBD-9B37-29A29FA0E9B9}']
  { constructors } 

    {class} function init(owner: DNComboBox): DNComboBox_ObjectCollection;

  end;

  [DNTypeName('System.Windows.Forms.ComboBox+ObjectCollection')]
  DNComboBox_ObjectCollection = interface(DDN.mscorlib.DNIList)
  ['{D3094BB0-4D17-3AB3-8415-85E00A769522}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DDN.mscorlib.DNObject;
    procedure set_Item(index: Int32; value: DDN.mscorlib.DNObject);

  { methods } 

    function Add(item: DDN.mscorlib.DNObject): Int32;
    procedure AddRange(items: TArray<DDN.mscorlib.DNObject>);
    function &Contains(value: DDN.mscorlib.DNObject): Boolean;
    procedure CopyTo(destination: TArray<DDN.mscorlib.DNObject>; arrayIndex: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(value: DDN.mscorlib.DNObject): Int32;
    procedure Insert(index: Int32; item: DDN.mscorlib.DNObject);
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
  end;

  TDNComboBox_ObjectCollection = class(TDNGenericImport<DNComboBox_ObjectCollectionClass, DNComboBox_ObjectCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNComboBoxRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B42FCAB0-68CF-58A4-B405-19B871791F24}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;

  { static methods } 

    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNComboBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; comboBoxText: string; font: DDN.System.Drawing.DNFont; state: DNComboBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; comboBoxText: string; font: DDN.System.Drawing.DNFont; textBounds: DDN.System.Drawing.DNRectangle; state: DNComboBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; comboBoxText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; state: DNComboBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; comboBoxText: string; font: DDN.System.Drawing.DNFont; textBounds: DDN.System.Drawing.DNRectangle; flags: DNTextFormatFlags; state: DNComboBoxState); overload;
    {class} procedure DrawDropDownButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNComboBoxState);

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
  end;

  [DNTypeName('System.Windows.Forms.ComboBoxRenderer')]
  DNComboBoxRenderer = interface(DDN.mscorlib.DNObject)
  ['{AF8F35C7-296C-3BE3-9D52-936226CA5D43}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNComboBoxRenderer = class(TDNGenericImport<DNComboBoxRendererClass, DNComboBoxRenderer>) end;

  //-------------namespace: System.Windows.Forms.ComponentModel.Com2Interop----------------
  DNCom2VariantClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1B240A03-8F71-5B17-82A7-ABE0ADE5C5CF}']
  { constructors } 

    {class} function init: DNCom2Variant;

  end;

  [DNTypeName('System.Windows.Forms.ComponentModel.Com2Interop.Com2Variant')]
  DNCom2Variant = interface(DDN.mscorlib.DNObject)
  ['{01BF9DFA-CDCE-3E56-B35A-3BF35B258295}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNCom2Variant = class(TDNGenericImport<DNCom2VariantClass, DNCom2Variant>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNControlPaintClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B102BA41-FFBB-5C4F-B319-3DCC465AB014}']
  { static getter & setter } 

    {class} function get_ContrastControlDark: DDN.System.Drawing.DNColor;

  { static methods } 

    {class} function CreateHBitmapTransparencyMask(bitmap: DDN.System.Drawing.DNBitmap): IntPtr;
    {class} procedure DrawCheckBox(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; state: DNButtonState); overload;
    {class} procedure DrawRadioButton(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; state: DNButtonState); overload;
    {class} function CreateHBitmapColorMask(bitmap: DDN.System.Drawing.DNBitmap; monochromeMask: IntPtr): IntPtr;
    {class} function Dark(baseColor: DDN.System.Drawing.DNColor; percOfDarkDark: Single): DDN.System.Drawing.DNColor; overload;
    {class} function Dark(baseColor: DDN.System.Drawing.DNColor): DDN.System.Drawing.DNColor; overload;
    {class} function DarkDark(baseColor: DDN.System.Drawing.DNColor): DDN.System.Drawing.DNColor;
    {class} procedure DrawBorder(graphics: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; color: DDN.System.Drawing.DNColor; style: DNButtonBorderStyle); overload;
    {class} procedure DrawBorder3D(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle); overload;
    {class} procedure DrawBorder3D(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; style: DNBorder3DStyle); overload;
    {class} procedure DrawBorder3D(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; style: DNBorder3DStyle; sides: DNBorder3DSide); overload;
    {class} procedure DrawBorder3D(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32); overload;
    {class} procedure DrawBorder3D(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; style: DNBorder3DStyle); overload;
    {class} procedure DrawBorder3D(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; style: DNBorder3DStyle; sides: DNBorder3DSide); overload;
    {class} procedure DrawButton(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; state: DNButtonState); overload;
    {class} procedure DrawCaptionButton(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; button: DNCaptionButton; state: DNButtonState); overload;
    {class} procedure DrawCheckBox(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; state: DNButtonState); overload;
    {class} procedure DrawComboButton(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; state: DNButtonState); overload;
    {class} procedure DrawContainerGrabHandle(graphics: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawFocusRectangle(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawImageDisabled(graphics: DDN.System.Drawing.DNGraphics; image: DDN.System.Drawing.DNImage; x: Int32; y: Int32; background: DDN.System.Drawing.DNColor);
    {class} procedure DrawLockedFrame(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; primary: Boolean);
    {class} procedure DrawMenuGlyph(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; glyph: DNMenuGlyph); overload;
    {class} procedure DrawMenuGlyph(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; glyph: DNMenuGlyph; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawMenuGlyph(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; glyph: DNMenuGlyph; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawMixedCheckBox(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; state: DNButtonState); overload;
    {class} procedure DrawRadioButton(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; state: DNButtonState); overload;
    {class} procedure DrawReversibleLine(start: DDN.System.Drawing.DNPoint; &end: DDN.System.Drawing.DNPoint; backColor: DDN.System.Drawing.DNColor);
    {class} procedure DrawScrollButton(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; button: DNScrollButton; state: DNButtonState); overload;
    {class} procedure DrawSelectionFrame(graphics: DDN.System.Drawing.DNGraphics; active: Boolean; outsideRect: DDN.System.Drawing.DNRectangle; insideRect: DDN.System.Drawing.DNRectangle; backColor: DDN.System.Drawing.DNColor);
    {class} procedure DrawSizeGrip(graphics: DDN.System.Drawing.DNGraphics; backColor: DDN.System.Drawing.DNColor; bounds: DDN.System.Drawing.DNRectangle); overload;
    {class} procedure DrawSizeGrip(graphics: DDN.System.Drawing.DNGraphics; backColor: DDN.System.Drawing.DNColor; x: Int32; y: Int32; width: Int32; height: Int32); overload;
    {class} procedure DrawVisualStyleBorder(graphics: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure FillReversibleRectangle(rectangle: DDN.System.Drawing.DNRectangle; backColor: DDN.System.Drawing.DNColor);
    {class} function Light(baseColor: DDN.System.Drawing.DNColor; percOfLightLight: Single): DDN.System.Drawing.DNColor; overload;
    {class} function Light(baseColor: DDN.System.Drawing.DNColor): DDN.System.Drawing.DNColor; overload;
    {class} function LightLight(baseColor: DDN.System.Drawing.DNColor): DDN.System.Drawing.DNColor;
    {class} function CreateHBitmap16Bit(bitmap: DDN.System.Drawing.DNBitmap; background: DDN.System.Drawing.DNColor): IntPtr;
    {class} procedure DrawBorder(graphics: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; leftColor: DDN.System.Drawing.DNColor; leftWidth: Int32; leftStyle: DNButtonBorderStyle; topColor: DDN.System.Drawing.DNColor; topWidth: Int32; topStyle: DNButtonBorderStyle; rightColor: DDN.System.Drawing.DNColor; rightWidth: Int32; rightStyle: DNButtonBorderStyle; bottomColor: DDN.System.Drawing.DNColor; bottomWidth: Int32; bottomStyle: DNButtonBorderStyle); overload;
    {class} procedure DrawButton(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; state: DNButtonState); overload;
    {class} procedure DrawCaptionButton(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; button: DNCaptionButton; state: DNButtonState); overload;
    {class} procedure DrawComboButton(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; state: DNButtonState); overload;
    {class} procedure DrawFocusRectangle(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle); overload;
    {class} procedure DrawGrabHandle(graphics: DDN.System.Drawing.DNGraphics; rectangle: DDN.System.Drawing.DNRectangle; primary: Boolean; enabled: Boolean);
    {class} procedure DrawGrid(graphics: DDN.System.Drawing.DNGraphics; area: DDN.System.Drawing.DNRectangle; pixelsBetweenDots: DDN.System.Drawing.DNSize; backColor: DDN.System.Drawing.DNColor);
    {class} procedure DrawMenuGlyph(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; glyph: DNMenuGlyph); overload;
    {class} procedure DrawMixedCheckBox(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; state: DNButtonState); overload;
    {class} procedure DrawReversibleFrame(rectangle: DDN.System.Drawing.DNRectangle; backColor: DDN.System.Drawing.DNColor; style: DNFrameStyle);
    {class} procedure DrawScrollButton(graphics: DDN.System.Drawing.DNGraphics; x: Int32; y: Int32; width: Int32; height: Int32; button: DNScrollButton; state: DNButtonState); overload;
    {class} procedure DrawStringDisabled(graphics: DDN.System.Drawing.DNGraphics; s: string; font: DDN.System.Drawing.DNFont; color: DDN.System.Drawing.DNColor; layoutRectangle: DDN.System.Drawing.DNRectangleF; format: DDN.System.Drawing.DNStringFormat); overload;
    {class} procedure DrawStringDisabled(dc: DDN.System.Drawing.DNIDeviceContext; s: string; font: DDN.System.Drawing.DNFont; color: DDN.System.Drawing.DNColor; layoutRectangle: DDN.System.Drawing.DNRectangle; format: DNTextFormatFlags); overload;

  { static propertys } 

    {class} property ContrastControlDark: DDN.System.Drawing.DNColor read get_ContrastControlDark;
  end;

  [DNTypeName('System.Windows.Forms.ControlPaint')]
  DNControlPaint = interface(DDN.mscorlib.DNObject)
  ['{75E8A7C0-BABF-31F5-B5E9-17E9C2C324E6}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNControlPaint = class(TDNGenericImport<DNControlPaintClass, DNControlPaint>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCreateParamsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C2704DED-36C4-5C80-B405-D3056522B577}']
  { constructors } 

    {class} function init: DNCreateParams;

  end;

  [DNTypeName('System.Windows.Forms.CreateParams')]
  DNCreateParams = interface(DDN.mscorlib.DNObject)
  ['{1715F3E5-D7B9-3F43-8739-B0DC8F3B63BB}']
  { getters & setters } 

    function get_ClassName: string;
    procedure set_ClassName(value: string);
    function get_Caption: string;
    procedure set_Caption(value: string);
    function get_Style: Int32;
    procedure set_Style(value: Int32);
    function get_ExStyle: Int32;
    procedure set_ExStyle(value: Int32);
    function get_ClassStyle: Int32;
    procedure set_ClassStyle(value: Int32);
    function get_X: Int32;
    procedure set_X(value: Int32);
    function get_Y: Int32;
    procedure set_Y(value: Int32);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_Parent: IntPtr;
    procedure set_Parent(value: IntPtr);
    function get_Param: DDN.mscorlib.DNObject;
    procedure set_Param(value: DDN.mscorlib.DNObject);

  { methods } 

    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ClassName: string read get_ClassName write set_ClassName;
    property Caption: string read get_Caption write set_Caption;
    property Style: Int32 read get_Style write set_Style;
    property ExStyle: Int32 read get_ExStyle write set_ExStyle;
    property ClassStyle: Int32 read get_ClassStyle write set_ClassStyle;
    property X: Int32 read get_X write set_X;
    property Y: Int32 read get_Y write set_Y;
    property Width: Int32 read get_Width write set_Width;
    property Height: Int32 read get_Height write set_Height;
    property Parent: IntPtr read get_Parent write set_Parent;
    property Param: DDN.mscorlib.DNObject read get_Param write set_Param;
  end;

  TDNCreateParams = class(TDNGenericImport<DNCreateParamsClass, DNCreateParams>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCursorClass = interface(DNObjectClass)
  ['{2A8A9C86-237A-5FAB-80AB-E0C071C19EDB}']
  { static getter & setter } 

    {class} function get_Clip: DDN.System.Drawing.DNRectangle;
    {class} procedure set_Clip(value: DDN.System.Drawing.DNRectangle);
    {class} function get_Current: DNCursor;
    {class} procedure set_Current(value: DNCursor);
    {class} function get_Position: DDN.System.Drawing.DNPoint;
    {class} procedure set_Position(value: DDN.System.Drawing.DNPoint);

  { constructors } 

    {class} function init(handle: IntPtr): DNCursor; overload;
    {class} function init(fileName: string): DNCursor; overload;
    {class} function init(&type: DDN.mscorlib.DNType; resource: string): DNCursor; overload;
    {class} function init(stream: DDN.mscorlib.DNStream): DNCursor; overload;

  { static methods } 

    {class} procedure Hide;
    {class} procedure Show;

  { static propertys } 

    {class} property Clip: DDN.System.Drawing.DNRectangle read get_Clip write set_Clip;
    {class} property Current: DNCursor read get_Current write set_Current;
    {class} property Position: DDN.System.Drawing.DNPoint read get_Position write set_Position;
  end;

  [DNTypeName('System.Windows.Forms.Cursor')]
  DNCursor = interface(DDN.mscorlib.DNIDisposable)
  ['{3F86022E-82A7-3089-A2F9-DFB23E451759}']
  { getters & setters } 

    function get_Handle: IntPtr;
    function get_HotSpot: DDN.System.Drawing.DNPoint;
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);

  { methods } 

    function CopyHandle: IntPtr;
    procedure Dispose;
    function GetHashCode: Int32;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    procedure Draw(g: DDN.System.Drawing.DNGraphics; targetRect: DDN.System.Drawing.DNRectangle);
    procedure DrawStretched(g: DDN.System.Drawing.DNGraphics; targetRect: DDN.System.Drawing.DNRectangle);
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Handle: IntPtr read get_Handle;
    property HotSpot: DDN.System.Drawing.DNPoint read get_HotSpot;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
  end;

  TDNCursor = class(TDNGenericImport<DNCursorClass, DNCursor>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCursorsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6691B149-EEDE-5D34-B40F-E38CFA15A25D}']
  { static getter & setter } 

    {class} function get_AppStarting: DNCursor;
    {class} function get_Arrow: DNCursor;
    {class} function get_Cross: DNCursor;
    {class} function get_Default: DNCursor;
    {class} function get_IBeam: DNCursor;
    {class} function get_No: DNCursor;
    {class} function get_SizeAll: DNCursor;
    {class} function get_SizeNESW: DNCursor;
    {class} function get_SizeNS: DNCursor;
    {class} function get_SizeNWSE: DNCursor;
    {class} function get_SizeWE: DNCursor;
    {class} function get_UpArrow: DNCursor;
    {class} function get_WaitCursor: DNCursor;
    {class} function get_Help: DNCursor;
    {class} function get_HSplit: DNCursor;
    {class} function get_VSplit: DNCursor;
    {class} function get_NoMove2D: DNCursor;
    {class} function get_NoMoveHoriz: DNCursor;
    {class} function get_NoMoveVert: DNCursor;
    {class} function get_PanEast: DNCursor;
    {class} function get_PanNE: DNCursor;
    {class} function get_PanNorth: DNCursor;
    {class} function get_PanNW: DNCursor;
    {class} function get_PanSE: DNCursor;
    {class} function get_PanSouth: DNCursor;
    {class} function get_PanSW: DNCursor;
    {class} function get_PanWest: DNCursor;
    {class} function get_Hand: DNCursor;

  { static propertys } 

    {class} property AppStarting: DNCursor read get_AppStarting;
    {class} property Arrow: DNCursor read get_Arrow;
    {class} property Cross: DNCursor read get_Cross;
    {class} property &Default: DNCursor read get_Default;
    {class} property IBeam: DNCursor read get_IBeam;
    {class} property No: DNCursor read get_No;
    {class} property SizeAll: DNCursor read get_SizeAll;
    {class} property SizeNESW: DNCursor read get_SizeNESW;
    {class} property SizeNS: DNCursor read get_SizeNS;
    {class} property SizeNWSE: DNCursor read get_SizeNWSE;
    {class} property SizeWE: DNCursor read get_SizeWE;
    {class} property UpArrow: DNCursor read get_UpArrow;
    {class} property WaitCursor: DNCursor read get_WaitCursor;
    {class} property Help: DNCursor read get_Help;
    {class} property HSplit: DNCursor read get_HSplit;
    {class} property VSplit: DNCursor read get_VSplit;
    {class} property NoMove2D: DNCursor read get_NoMove2D;
    {class} property NoMoveHoriz: DNCursor read get_NoMoveHoriz;
    {class} property NoMoveVert: DNCursor read get_NoMoveVert;
    {class} property PanEast: DNCursor read get_PanEast;
    {class} property PanNE: DNCursor read get_PanNE;
    {class} property PanNorth: DNCursor read get_PanNorth;
    {class} property PanNW: DNCursor read get_PanNW;
    {class} property PanSE: DNCursor read get_PanSE;
    {class} property PanSouth: DNCursor read get_PanSouth;
    {class} property PanSW: DNCursor read get_PanSW;
    {class} property PanWest: DNCursor read get_PanWest;
    {class} property Hand: DNCursor read get_Hand;
  end;

  [DNTypeName('System.Windows.Forms.Cursors')]
  DNCursors = interface(DDN.mscorlib.DNObject)
  ['{2B492B76-A7A8-383D-AF6B-7E5157C08313}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNCursors = class(TDNGenericImport<DNCursorsClass, DNCursors>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataFormatsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{20140854-4519-580D-92D4-1E4CB81F3C58}']
  { static fields getter & setter } 

   function __fakeFieldGet_Text: string;
   function __fakeFieldGet_UnicodeText: string;
   function __fakeFieldGet_Dib: string;
   function __fakeFieldGet_Bitmap: string;
   function __fakeFieldGet_EnhancedMetafile: string;
   function __fakeFieldGet_MetafilePict: string;
   function __fakeFieldGet_SymbolicLink: string;
   function __fakeFieldGet_Dif: string;
   function __fakeFieldGet_Tiff: string;
   function __fakeFieldGet_OemText: string;
   function __fakeFieldGet_Palette: string;
   function __fakeFieldGet_PenData: string;
   function __fakeFieldGet_Riff: string;
   function __fakeFieldGet_WaveAudio: string;
   function __fakeFieldGet_FileDrop: string;
   function __fakeFieldGet_Locale: string;
   function __fakeFieldGet_Html: string;
   function __fakeFieldGet_Rtf: string;
   function __fakeFieldGet_CommaSeparatedValue: string;
   function __fakeFieldGet_StringFormat: string;
   function __fakeFieldGet_Serializable: string;

  { static fields } 

    {class} property Text: string read __fakeFieldGet_Text;
    {class} property UnicodeText: string read __fakeFieldGet_UnicodeText;
    {class} property Dib: string read __fakeFieldGet_Dib;
    {class} property Bitmap: string read __fakeFieldGet_Bitmap;
    {class} property EnhancedMetafile: string read __fakeFieldGet_EnhancedMetafile;
    {class} property MetafilePict: string read __fakeFieldGet_MetafilePict;
    {class} property SymbolicLink: string read __fakeFieldGet_SymbolicLink;
    {class} property Dif: string read __fakeFieldGet_Dif;
    {class} property Tiff: string read __fakeFieldGet_Tiff;
    {class} property OemText: string read __fakeFieldGet_OemText;
    {class} property Palette: string read __fakeFieldGet_Palette;
    {class} property PenData: string read __fakeFieldGet_PenData;
    {class} property Riff: string read __fakeFieldGet_Riff;
    {class} property WaveAudio: string read __fakeFieldGet_WaveAudio;
    {class} property FileDrop: string read __fakeFieldGet_FileDrop;
    {class} property Locale: string read __fakeFieldGet_Locale;
    {class} property Html: string read __fakeFieldGet_Html;
    {class} property Rtf: string read __fakeFieldGet_Rtf;
    {class} property CommaSeparatedValue: string read __fakeFieldGet_CommaSeparatedValue;
    {class} property StringFormat: string read __fakeFieldGet_StringFormat;
    {class} property Serializable: string read __fakeFieldGet_Serializable;

  { static methods } 

    {class} function GetFormat(format: string): DNDataFormats_Format; overload;
    {class} function GetFormat(id: Int32): DNDataFormats_Format; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataFormats')]
  DNDataFormats = interface(DDN.mscorlib.DNObject)
  ['{31435883-723D-3680-A533-68F18C2DA141}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNDataFormats = class(TDNGenericImport<DNDataFormatsClass, DNDataFormats>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataFormats_FormatClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FF17B237-DE07-58F0-93D8-BA2D8716EE45}']
  { constructors } 

    {class} function init(name: string; id: Int32): DNDataFormats_Format;

  end;

  [DNTypeName('System.Windows.Forms.DataFormats+Format')]
  DNDataFormats_Format = interface(DDN.mscorlib.DNObject)
  ['{BB96A6CD-C8C2-33B0-AFEC-ABA52B7F2A08}']
  { getters & setters } 

    function get_Name: string;
    function get_Id: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Name: string read get_Name;
    property Id: Int32 read get_Id;
  end;

  TDNDataFormats_Format = class(TDNGenericImport<DNDataFormats_FormatClass, DNDataFormats_Format>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGrid_HitTestInfoClass = interface(DDN.mscorlib.DNObjectClass)
  ['{2801D585-A346-5D5A-91E5-1A28D7303840}']
  { static fields getter & setter } 

   function __fakeFieldGet_Nowhere: DNDataGrid_HitTestInfo;

  { static fields } 

    {class} property Nowhere: DNDataGrid_HitTestInfo read __fakeFieldGet_Nowhere;

  end;

  [DNTypeName('System.Windows.Forms.DataGrid+HitTestInfo')]
  DNDataGrid_HitTestInfo = interface(DDN.mscorlib.DNObject)
  ['{03AB8AAF-93FA-35F0-91DD-10F52F6ACB17}']
  { getters & setters } 

    function get_Column: Int32;
    function get_Row: Int32;
    function get_Type: DNDataGrid_HitTestType;

  { methods } 

    function Equals(value: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Column: Int32 read get_Column;
    property Row: Int32 read get_Row;
    property &Type: DNDataGrid_HitTestType read get_Type;
  end;

  TDNDataGrid_HitTestInfo = class(TDNGenericImport<DNDataGrid_HitTestInfoClass, DNDataGrid_HitTestInfo>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridView_HitTestInfoClass = interface(DDN.mscorlib.DNObjectClass)
  ['{46B21EA1-4DBB-58B7-84F4-27C08EE70294}']
  { static fields getter & setter } 

   function __fakeFieldGet_Nowhere: DNDataGridView_HitTestInfo;

  { static fields } 

    {class} property Nowhere: DNDataGridView_HitTestInfo read __fakeFieldGet_Nowhere;

  end;

  [DNTypeName('System.Windows.Forms.DataGridView+HitTestInfo')]
  DNDataGridView_HitTestInfo = interface(DDN.mscorlib.DNObject)
  ['{6D51E176-6640-3EFC-A36C-AB06364DEAE1}']
  { getters & setters } 

    function get_ColumnIndex: Int32;
    function get_RowIndex: Int32;
    function get_ColumnX: Int32;
    function get_RowY: Int32;
    function get_Type: DNDataGridViewHitTestType;

  { methods } 

    function Equals(value: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ColumnIndex: Int32 read get_ColumnIndex;
    property RowIndex: Int32 read get_RowIndex;
    property ColumnX: Int32 read get_ColumnX;
    property RowY: Int32 read get_RowY;
    property &Type: DNDataGridViewHitTestType read get_Type;
  end;

  TDNDataGridView_HitTestInfo = class(TDNGenericImport<DNDataGridView_HitTestInfoClass, DNDataGridView_HitTestInfo>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewAdvancedBorderStyleClass = interface(DNObjectClass)
  ['{F976DD1C-FE93-5E96-8B2B-5EF9787E7A2E}']
  { constructors } 

    {class} function init: DNDataGridViewAdvancedBorderStyle;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewAdvancedBorderStyle')]
  DNDataGridViewAdvancedBorderStyle = interface(DDN.mscorlib.DNICloneable)
  ['{59B8AB86-FAFD-3153-A030-592C7B1C062B}']
  { getters & setters } 

    function get_All: DNDataGridViewAdvancedCellBorderStyle;
    procedure set_All(value: DNDataGridViewAdvancedCellBorderStyle);
    function get_Bottom: DNDataGridViewAdvancedCellBorderStyle;
    procedure set_Bottom(value: DNDataGridViewAdvancedCellBorderStyle);
    function get_Left: DNDataGridViewAdvancedCellBorderStyle;
    procedure set_Left(value: DNDataGridViewAdvancedCellBorderStyle);
    function get_Right: DNDataGridViewAdvancedCellBorderStyle;
    procedure set_Right(value: DNDataGridViewAdvancedCellBorderStyle);
    function get_Top: DNDataGridViewAdvancedCellBorderStyle;
    procedure set_Top(value: DNDataGridViewAdvancedCellBorderStyle);

  { methods } 

    function Equals(other: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property All: DNDataGridViewAdvancedCellBorderStyle read get_All write set_All;
    property Bottom: DNDataGridViewAdvancedCellBorderStyle read get_Bottom write set_Bottom;
    property Left: DNDataGridViewAdvancedCellBorderStyle read get_Left write set_Left;
    property Right: DNDataGridViewAdvancedCellBorderStyle read get_Right write set_Right;
    property Top: DNDataGridViewAdvancedCellBorderStyle read get_Top write set_Top;
  end;

  TDNDataGridViewAdvancedBorderStyle = class(TDNGenericImport<DNDataGridViewAdvancedBorderStyleClass, DNDataGridViewAdvancedBorderStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellStyleClass = interface(DNObjectClass)
  ['{D25C4B76-7D3C-54C8-9889-64BD9861723C}']
  { constructors } 

    {class} function init: DNDataGridViewCellStyle; overload;
    {class} function init(dataGridViewCellStyle: DNDataGridViewCellStyle): DNDataGridViewCellStyle; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCellStyle')]
  DNDataGridViewCellStyle = interface(DDN.mscorlib.DNICloneable)
  ['{E5F5DA6F-44EF-32AA-A0CD-EBDFF4C48A4A}']
  { getters & setters } 

    function get_Alignment: DNDataGridViewContentAlignment;
    procedure set_Alignment(value: DNDataGridViewContentAlignment);
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_DataSourceNullValue: DDN.mscorlib.DNObject;
    procedure set_DataSourceNullValue(value: DDN.mscorlib.DNObject);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Format: string;
    procedure set_Format(value: string);
    function get_FormatProvider: DDN.mscorlib.DNIFormatProvider;
    procedure set_FormatProvider(value: DDN.mscorlib.DNIFormatProvider);
    function get_IsDataSourceNullValueDefault: Boolean;
    function get_IsFormatProviderDefault: Boolean;
    function get_IsNullValueDefault: Boolean;
    function get_NullValue: DDN.mscorlib.DNObject;
    procedure set_NullValue(value: DDN.mscorlib.DNObject);
    function get_Padding: DNPadding;
    procedure set_Padding(value: DNPadding);
    function get_SelectionBackColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionBackColor(value: DDN.System.Drawing.DNColor);
    function get_SelectionForeColor: DDN.System.Drawing.DNColor;
    procedure set_SelectionForeColor(value: DDN.System.Drawing.DNColor);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_WrapMode: DNDataGridViewTriState;
    procedure set_WrapMode(value: DNDataGridViewTriState);

  { methods } 

    procedure ApplyStyle(dataGridViewCellStyle: DNDataGridViewCellStyle);
    function Clone: DNDataGridViewCellStyle;
    function Equals(o: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Alignment: DNDataGridViewContentAlignment read get_Alignment write set_Alignment;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property DataSourceNullValue: DDN.mscorlib.DNObject read get_DataSourceNullValue write set_DataSourceNullValue;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Format: string read get_Format write set_Format;
    property FormatProvider: DDN.mscorlib.DNIFormatProvider read get_FormatProvider write set_FormatProvider;
    property IsDataSourceNullValueDefault: Boolean read get_IsDataSourceNullValueDefault;
    property IsFormatProviderDefault: Boolean read get_IsFormatProviderDefault;
    property IsNullValueDefault: Boolean read get_IsNullValueDefault;
    property NullValue: DDN.mscorlib.DNObject read get_NullValue write set_NullValue;
    property Padding: DNPadding read get_Padding write set_Padding;
    property SelectionBackColor: DDN.System.Drawing.DNColor read get_SelectionBackColor write set_SelectionBackColor;
    property SelectionForeColor: DDN.System.Drawing.DNColor read get_SelectionForeColor write set_SelectionForeColor;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property WrapMode: DNDataGridViewTriState read get_WrapMode write set_WrapMode;
  end;

  TDNDataGridViewCellStyle = class(TDNGenericImport<DNDataGridViewCellStyleClass, DNDataGridViewCellStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewComboBoxCell_ObjectCollectionClass = interface(DNObjectClass)
  ['{5F9BBCB2-37BE-582B-9974-44F7B30CE3DC}']
  { constructors } 

    {class} function init(owner: DNDataGridViewComboBoxCell): DNDataGridViewComboBoxCell_ObjectCollection;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewComboBoxCell+ObjectCollection')]
  DNDataGridViewComboBoxCell_ObjectCollection = interface(DDN.mscorlib.DNIList)
  ['{9E6A5A63-8172-30FB-A21E-F5ADCAA777F1}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DDN.mscorlib.DNObject;
    procedure set_Item(index: Int32; value: DDN.mscorlib.DNObject);

  { methods } 

    function Add(item: DDN.mscorlib.DNObject): Int32;
    procedure AddRange(items: TArray<DDN.mscorlib.DNObject>); overload;
    procedure AddRange(value: DNDataGridViewComboBoxCell_ObjectCollection); overload;
    function &Contains(value: DDN.mscorlib.DNObject): Boolean;
    procedure CopyTo(destination: TArray<DDN.mscorlib.DNObject>; arrayIndex: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(value: DDN.mscorlib.DNObject): Int32;
    procedure Insert(index: Int32; item: DDN.mscorlib.DNObject);
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
  end;

  TDNDataGridViewComboBoxCell_ObjectCollection = class(TDNGenericImport<DNDataGridViewComboBoxCell_ObjectCollectionClass, DNDataGridViewComboBoxCell_ObjectCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewElementClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8C35962C-02D2-5BF0-B9EB-86946D767015}']
  { constructors } 

    {class} function init: DNDataGridViewElement;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewElement')]
  DNDataGridViewElement = interface(DDN.mscorlib.DNObject)
  ['{6526362A-3B28-382F-865D-4F131ADEE5D5}']
  { getters & setters } 

    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewElement = class(TDNGenericImport<DNDataGridViewElementClass, DNDataGridViewElement>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewBandClass = interface(DNDataGridViewElementClass)
  ['{70E01D7B-63CB-5788-BADF-1A4C73E9CC0B}']
  end;

  [DNTypeName('System.Windows.Forms.DataGridViewBand')]
  DNDataGridViewBand = interface(DNDataGridViewElement)
  ['{CE3FB9D5-1B4D-30D9-9FC4-BD61A959F25D}']
  { getters & setters } 

    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    procedure Dispose;
    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Visible: Boolean read get_Visible write set_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewBand = class(TDNGenericImport<DNDataGridViewBandClass, DNDataGridViewBand>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnClass = interface(DNDataGridViewBandClass)
  ['{8CEB15C8-993B-58A0-B9C0-7BB6D34EADBA}']
  { constructors } 

    {class} function init: DNDataGridViewColumn; overload;
    {class} function init(cellTemplate: DNDataGridViewCell): DNDataGridViewColumn; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumn')]
  DNDataGridViewColumn = interface(DNDataGridViewBand)
  ['{AFE8B9C0-00CE-3929-94C2-CF85C90F6893}']
  { getters & setters } 

    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    function ToString: string;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewColumn = class(TDNGenericImport<DNDataGridViewColumnClass, DNDataGridViewColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewButtonColumnClass = interface(DNDataGridViewColumnClass)
  ['{9EBEFF17-5564-50E9-8C7E-01857B4FFD85}']
  { constructors } 

    {class} function init: DNDataGridViewButtonColumn;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewButtonColumn')]
  DNDataGridViewButtonColumn = interface(DNDataGridViewColumn)
  ['{0B4B4C00-1AA4-37AF-9128-8C07F8639E45}']
  { getters & setters } 

    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_UseColumnTextForButtonValue: Boolean;
    procedure set_UseColumnTextForButtonValue(value: Boolean);
    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property Text: string read get_Text write set_Text;
    property UseColumnTextForButtonValue: Boolean read get_UseColumnTextForButtonValue write set_UseColumnTextForButtonValue;
    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewButtonColumn = class(TDNGenericImport<DNDataGridViewButtonColumnClass, DNDataGridViewButtonColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCheckBoxColumnClass = interface(DNDataGridViewColumnClass)
  ['{A182CE4E-5EE5-5A98-8F99-2240C2749B61}']
  { constructors } 

    {class} function init: DNDataGridViewCheckBoxColumn; overload;
    {class} function init(threeState: Boolean): DNDataGridViewCheckBoxColumn; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCheckBoxColumn')]
  DNDataGridViewCheckBoxColumn = interface(DNDataGridViewColumn)
  ['{500E435E-E697-3241-AF65-30B2758ADDB4}']
  { getters & setters } 

    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_FalseValue: DDN.mscorlib.DNObject;
    procedure set_FalseValue(value: DDN.mscorlib.DNObject);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_IndeterminateValue: DDN.mscorlib.DNObject;
    procedure set_IndeterminateValue(value: DDN.mscorlib.DNObject);
    function get_ThreeState: Boolean;
    procedure set_ThreeState(value: Boolean);
    function get_TrueValue: DDN.mscorlib.DNObject;
    procedure set_TrueValue(value: DDN.mscorlib.DNObject);
    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function Clone: DDN.mscorlib.DNObject;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property FalseValue: DDN.mscorlib.DNObject read get_FalseValue write set_FalseValue;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property IndeterminateValue: DDN.mscorlib.DNObject read get_IndeterminateValue write set_IndeterminateValue;
    property ThreeState: Boolean read get_ThreeState write set_ThreeState;
    property TrueValue: DDN.mscorlib.DNObject read get_TrueValue write set_TrueValue;
    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewCheckBoxColumn = class(TDNGenericImport<DNDataGridViewCheckBoxColumnClass, DNDataGridViewCheckBoxColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewComboBoxColumnClass = interface(DNDataGridViewColumnClass)
  ['{4D2F19C2-A37A-5D49-99FC-17067D0CAC54}']
  { constructors } 

    {class} function init: DNDataGridViewComboBoxColumn;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewComboBoxColumn')]
  DNDataGridViewComboBoxColumn = interface(DNDataGridViewColumn)
  ['{E38BFC08-6BAF-3B16-A623-C6A5EC4E7522}']
  { getters & setters } 

    function get_AutoComplete: Boolean;
    procedure set_AutoComplete(value: Boolean);
    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_DisplayStyle: DNDataGridViewComboBoxDisplayStyle;
    procedure set_DisplayStyle(value: DNDataGridViewComboBoxDisplayStyle);
    function get_DisplayStyleForCurrentCellOnly: Boolean;
    procedure set_DisplayStyleForCurrentCellOnly(value: Boolean);
    function get_DropDownWidth: Int32;
    procedure set_DropDownWidth(value: Int32);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_Items: DNDataGridViewComboBoxCell_ObjectCollection;
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_MaxDropDownItems: Int32;
    procedure set_MaxDropDownItems(value: Int32);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoComplete: Boolean read get_AutoComplete write set_AutoComplete;
    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property DisplayStyle: DNDataGridViewComboBoxDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DisplayStyleForCurrentCellOnly: Boolean read get_DisplayStyleForCurrentCellOnly write set_DisplayStyleForCurrentCellOnly;
    property DropDownWidth: Int32 read get_DropDownWidth write set_DropDownWidth;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property Items: DNDataGridViewComboBoxCell_ObjectCollection read get_Items;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property MaxDropDownItems: Int32 read get_MaxDropDownItems write set_MaxDropDownItems;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewComboBoxColumn = class(TDNGenericImport<DNDataGridViewComboBoxColumnClass, DNDataGridViewComboBoxColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewImageColumnClass = interface(DNDataGridViewColumnClass)
  ['{8EF5FEF6-51D0-540A-B2EE-19DADAEB0B9B}']
  { constructors } 

    {class} function init: DNDataGridViewImageColumn; overload;
    {class} function init(valuesAreIcons: Boolean): DNDataGridViewImageColumn; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewImageColumn')]
  DNDataGridViewImageColumn = interface(DNDataGridViewColumn)
  ['{522913C7-04BF-3F10-9B77-E6D37D52F1C5}']
  { getters & setters } 

    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_Description: string;
    procedure set_Description(value: string);
    function get_Icon: DDN.System.Drawing.DNIcon;
    procedure set_Icon(value: DDN.System.Drawing.DNIcon);
    function get_Image: DDN.System.Drawing.DNImage;
    procedure set_Image(value: DDN.System.Drawing.DNImage);
    function get_ImageLayout: DNDataGridViewImageCellLayout;
    procedure set_ImageLayout(value: DNDataGridViewImageCellLayout);
    function get_ValuesAreIcons: Boolean;
    procedure set_ValuesAreIcons(value: Boolean);
    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property Description: string read get_Description write set_Description;
    property Icon: DDN.System.Drawing.DNIcon read get_Icon write set_Icon;
    property Image: DDN.System.Drawing.DNImage read get_Image write set_Image;
    property ImageLayout: DNDataGridViewImageCellLayout read get_ImageLayout write set_ImageLayout;
    property ValuesAreIcons: Boolean read get_ValuesAreIcons write set_ValuesAreIcons;
    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewImageColumn = class(TDNGenericImport<DNDataGridViewImageColumnClass, DNDataGridViewImageColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewLinkColumnClass = interface(DNDataGridViewColumnClass)
  ['{EB19B47E-19E3-5B90-9D28-E58A52ACBD36}']
  { constructors } 

    {class} function init: DNDataGridViewLinkColumn;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewLinkColumn')]
  DNDataGridViewLinkColumn = interface(DNDataGridViewColumn)
  ['{8E60D9C8-6846-3A9D-A350-DB27C3B79E58}']
  { getters & setters } 

    function get_ActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_ActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_LinkBehavior: DNLinkBehavior;
    procedure set_LinkBehavior(value: DNLinkBehavior);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_TrackVisitedState: Boolean;
    procedure set_TrackVisitedState(value: Boolean);
    function get_UseColumnTextForLinkValue: Boolean;
    procedure set_UseColumnTextForLinkValue(value: Boolean);
    function get_VisitedLinkColor: DDN.System.Drawing.DNColor;
    procedure set_VisitedLinkColor(value: DDN.System.Drawing.DNColor);
    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ActiveLinkColor: DDN.System.Drawing.DNColor read get_ActiveLinkColor write set_ActiveLinkColor;
    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property LinkBehavior: DNLinkBehavior read get_LinkBehavior write set_LinkBehavior;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property Text: string read get_Text write set_Text;
    property TrackVisitedState: Boolean read get_TrackVisitedState write set_TrackVisitedState;
    property UseColumnTextForLinkValue: Boolean read get_UseColumnTextForLinkValue write set_UseColumnTextForLinkValue;
    property VisitedLinkColor: DDN.System.Drawing.DNColor read get_VisitedLinkColor write set_VisitedLinkColor;
    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewLinkColumn = class(TDNGenericImport<DNDataGridViewLinkColumnClass, DNDataGridViewLinkColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewTextBoxColumnClass = interface(DNDataGridViewColumnClass)
  ['{944CC5FC-9266-5F36-92DF-0C4F12636398}']
  { constructors } 

    {class} function init: DNDataGridViewTextBoxColumn;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewTextBoxColumn')]
  DNDataGridViewTextBoxColumn = interface(DNDataGridViewColumn)
  ['{734E24B8-94BE-3F9C-9608-26D1DBB4C7A3}']
  { getters & setters } 

    function get_CellTemplate: DNDataGridViewCell;
    procedure set_CellTemplate(value: DNDataGridViewCell);
    function get_MaxInputLength: Int32;
    procedure set_MaxInputLength(value: Int32);
    function get_SortMode: DNDataGridViewColumnSortMode;
    procedure set_SortMode(value: DNDataGridViewColumnSortMode);
    function get_AutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    procedure set_AutoSizeMode(value: DNDataGridViewAutoSizeColumnMode);
    function get_CellType: DDN.mscorlib.DNType;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataPropertyName: string;
    procedure set_DataPropertyName(value: string);
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_DisplayIndex: Int32;
    procedure set_DisplayIndex(value: Int32);
    function get_DividerWidth: Int32;
    procedure set_DividerWidth(value: Int32);
    function get_FillWeight: Single;
    procedure set_FillWeight(value: Single);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewColumnHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewColumnHeaderCell);
    function get_HeaderText: string;
    procedure set_HeaderText(value: string);
    function get_InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsDataBound: Boolean;
    function get_MinimumWidth: Int32;
    procedure set_MinimumWidth(value: Int32);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Site: DDN.System.DNISite;
    procedure set_Site(value: DDN.System.DNISite);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_Width: Int32;
    procedure set_Width(value: Int32);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_Displayed: Boolean;
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { events } 

    procedure add_Disposed(value: DDN.mscorlib.DNEventHandler);
    procedure remove_Disposed(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function ToString: string;
    function Clone: DDN.mscorlib.DNObject;
    function GetPreferredWidth(autoSizeColumnMode: DNDataGridViewAutoSizeColumnMode; fixedHeight: Boolean): Int32;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property CellTemplate: DNDataGridViewCell read get_CellTemplate write set_CellTemplate;
    property MaxInputLength: Int32 read get_MaxInputLength write set_MaxInputLength;
    property SortMode: DNDataGridViewColumnSortMode read get_SortMode write set_SortMode;
    property AutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_AutoSizeMode write set_AutoSizeMode;
    property CellType: DDN.mscorlib.DNType read get_CellType;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataPropertyName: string read get_DataPropertyName write set_DataPropertyName;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property DisplayIndex: Int32 read get_DisplayIndex write set_DisplayIndex;
    property DividerWidth: Int32 read get_DividerWidth write set_DividerWidth;
    property FillWeight: Single read get_FillWeight write set_FillWeight;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewColumnHeaderCell read get_HeaderCell write set_HeaderCell;
    property HeaderText: string read get_HeaderText write set_HeaderText;
    property InheritedAutoSizeMode: DNDataGridViewAutoSizeColumnMode read get_InheritedAutoSizeMode;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsDataBound: Boolean read get_IsDataBound;
    property MinimumWidth: Int32 read get_MinimumWidth write set_MinimumWidth;
    property Name: string read get_Name write set_Name;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Site: DDN.System.DNISite read get_Site write set_Site;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible write set_Visible;
    property Width: Int32 read get_Width write set_Width;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property Displayed: Boolean read get_Displayed;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Selected: Boolean read get_Selected write set_Selected;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewTextBoxColumn = class(TDNGenericImport<DNDataGridViewTextBoxColumnClass, DNDataGridViewTextBoxColumn>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowClass = interface(DNDataGridViewBandClass)
  ['{D37F57AC-1DC3-536C-985D-7AAD5946CBAC}']
  { constructors } 

    {class} function init: DNDataGridViewRow;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRow')]
  DNDataGridViewRow = interface(DNDataGridViewBand)
  ['{4A4F7E02-331F-373B-AD4B-2AEBEEF28B52}']
  { getters & setters } 

    function get_AccessibilityObject: DNAccessibleObject;
    function get_Cells: DNDataGridViewCellCollection;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DataBoundItem: DDN.mscorlib.DNObject;
    function get_DefaultCellStyle: DNDataGridViewCellStyle;
    procedure set_DefaultCellStyle(value: DNDataGridViewCellStyle);
    function get_Displayed: Boolean;
    function get_DividerHeight: Int32;
    procedure set_DividerHeight(value: Int32);
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_Frozen: Boolean;
    procedure set_Frozen(value: Boolean);
    function get_HeaderCell: DNDataGridViewRowHeaderCell;
    procedure set_HeaderCell(value: DNDataGridViewRowHeaderCell);
    function get_Height: Int32;
    procedure set_Height(value: Int32);
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsNewRow: Boolean;
    function get_MinimumHeight: Int32;
    procedure set_MinimumHeight(value: Int32);
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: DNDataGridViewTriState;
    procedure set_Resizable(value: DNDataGridViewTriState);
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_State: DNDataGridViewElementStates;
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);
    function get_DefaultHeaderCellType: DDN.mscorlib.DNType;
    procedure set_DefaultHeaderCellType(value: DDN.mscorlib.DNType);
    function get_HasDefaultCellStyle: Boolean;
    function get_Index: Int32;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_DataGridView: DNDataGridView;

  { methods } 

    function AdjustRowHeaderBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedRow: Boolean; isLastVisibleRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    function Clone: DDN.mscorlib.DNObject;
    procedure CreateCells(dataGridView: DNDataGridView; values: TArray<DDN.mscorlib.DNObject>); overload;
    function GetContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    function GetErrorText(rowIndex: Int32): string;
    function SetValues(values: TArray<DDN.mscorlib.DNObject>): Boolean;
    procedure CreateCells(dataGridView: DNDataGridView); overload;
    function GetPreferredHeight(rowIndex: Int32; autoSizeRowMode: DNDataGridViewAutoSizeRowMode; fixedWidth: Boolean): Int32;
    function GetState(rowIndex: Int32): DNDataGridViewElementStates;
    function ToString: string;
    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property Cells: DNDataGridViewCellCollection read get_Cells;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DataBoundItem: DDN.mscorlib.DNObject read get_DataBoundItem;
    property DefaultCellStyle: DNDataGridViewCellStyle read get_DefaultCellStyle write set_DefaultCellStyle;
    property Displayed: Boolean read get_Displayed;
    property DividerHeight: Int32 read get_DividerHeight write set_DividerHeight;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property Frozen: Boolean read get_Frozen write set_Frozen;
    property HeaderCell: DNDataGridViewRowHeaderCell read get_HeaderCell write set_HeaderCell;
    property Height: Int32 read get_Height write set_Height;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsNewRow: Boolean read get_IsNewRow;
    property MinimumHeight: Int32 read get_MinimumHeight write set_MinimumHeight;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: DNDataGridViewTriState read get_Resizable write set_Resizable;
    property Selected: Boolean read get_Selected write set_Selected;
    property State: DNDataGridViewElementStates read get_State;
    property Visible: Boolean read get_Visible write set_Visible;
    property DefaultHeaderCellType: DDN.mscorlib.DNType read get_DefaultHeaderCellType write set_DefaultHeaderCellType;
    property HasDefaultCellStyle: Boolean read get_HasDefaultCellStyle;
    property Index: Int32 read get_Index;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewRow = class(TDNGenericImport<DNDataGridViewRowClass, DNDataGridViewRow>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCellClass = interface(DNDataGridViewElementClass)
  ['{17D78C5B-0AC3-5AB5-8246-CB8DDCB6AFA8}']
  { static methods } 

    {class} function MeasureTextHeight(graphics: DDN.System.Drawing.DNGraphics; text: string; font: DDN.System.Drawing.DNFont; maxWidth: Int32; flags: DNTextFormatFlags): Int32; overload;
    {class} function MeasureTextSize(graphics: DDN.System.Drawing.DNGraphics; text: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags): DDN.System.Drawing.DNSize;
    {class} function MeasureTextHeight(graphics: DDN.System.Drawing.DNGraphics; text: string; font: DDN.System.Drawing.DNFont; maxWidth: Int32; flags: DNTextFormatFlags; out widthTruncated: Boolean): Int32; overload;
    {class} function MeasureTextPreferredSize(graphics: DDN.System.Drawing.DNGraphics; text: string; font: DDN.System.Drawing.DNFont; maxRatio: Single; flags: DNTextFormatFlags): DDN.System.Drawing.DNSize;
    {class} function MeasureTextWidth(graphics: DDN.System.Drawing.DNGraphics; text: string; font: DDN.System.Drawing.DNFont; maxHeight: Int32; flags: DNTextFormatFlags): Int32;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCell')]
  DNDataGridViewCell = interface(DNDataGridViewElement)
  ['{D6E48289-CD92-3830-9DB0-45681DD1A4FC}']
  { getters & setters } 

    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_EditType: DDN.mscorlib.DNType;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    function Clone: DDN.mscorlib.DNObject;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewCell = class(TDNGenericImport<DNDataGridViewCellClass, DNDataGridViewCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewButtonCellClass = interface(DNDataGridViewCellClass)
  ['{A2964973-C16E-52CA-AEFC-AE01782D198F}']
  { constructors } 

    {class} function init: DNDataGridViewButtonCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewButtonCell')]
  DNDataGridViewButtonCell = interface(DNDataGridViewCell)
  ['{2F34C857-257A-3782-9CE8-9D78B8DFAECE}']
  { getters & setters } 

    function get_EditType: DDN.mscorlib.DNType;
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_UseColumnTextForButtonValue: Boolean;
    procedure set_UseColumnTextForButtonValue(value: Boolean);
    function get_ValueType: DDN.mscorlib.DNType;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property EditType: DDN.mscorlib.DNType read get_EditType;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property UseColumnTextForButtonValue: Boolean read get_UseColumnTextForButtonValue write set_UseColumnTextForButtonValue;
    property ValueType: DDN.mscorlib.DNType read get_ValueType;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewButtonCell = class(TDNGenericImport<DNDataGridViewButtonCellClass, DNDataGridViewButtonCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewCheckBoxCellClass = interface(DNDataGridViewCellClass)
  ['{87DE6D7B-15D8-574F-BD0F-837F145405F5}']
  { constructors } 

    {class} function init: DNDataGridViewCheckBoxCell; overload;
    {class} function init(threeState: Boolean): DNDataGridViewCheckBoxCell; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewCheckBoxCell')]
  DNDataGridViewCheckBoxCell = interface(DNDataGridViewCell)
  ['{305775E5-3A18-3198-933F-B1B81CBD0AE1}']
  { getters & setters } 

    function get_EditingCellFormattedValue: DDN.mscorlib.DNObject;
    procedure set_EditingCellFormattedValue(value: DDN.mscorlib.DNObject);
    function get_EditingCellValueChanged: Boolean;
    procedure set_EditingCellValueChanged(value: Boolean);
    function get_EditType: DDN.mscorlib.DNType;
    function get_FalseValue: DDN.mscorlib.DNObject;
    procedure set_FalseValue(value: DDN.mscorlib.DNObject);
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_IndeterminateValue: DDN.mscorlib.DNObject;
    procedure set_IndeterminateValue(value: DDN.mscorlib.DNObject);
    function get_ThreeState: Boolean;
    procedure set_ThreeState(value: Boolean);
    function get_TrueValue: DDN.mscorlib.DNObject;
    procedure set_TrueValue(value: DDN.mscorlib.DNObject);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    procedure PrepareEditingCellForEdit(selectAll: Boolean);
    function Clone: DDN.mscorlib.DNObject;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    function GetEditingCellFormattedValue(context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property EditingCellFormattedValue: DDN.mscorlib.DNObject read get_EditingCellFormattedValue write set_EditingCellFormattedValue;
    property EditingCellValueChanged: Boolean read get_EditingCellValueChanged write set_EditingCellValueChanged;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property FalseValue: DDN.mscorlib.DNObject read get_FalseValue write set_FalseValue;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property IndeterminateValue: DDN.mscorlib.DNObject read get_IndeterminateValue write set_IndeterminateValue;
    property ThreeState: Boolean read get_ThreeState write set_ThreeState;
    property TrueValue: DDN.mscorlib.DNObject read get_TrueValue write set_TrueValue;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewCheckBoxCell = class(TDNGenericImport<DNDataGridViewCheckBoxCellClass, DNDataGridViewCheckBoxCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewComboBoxCellClass = interface(DNDataGridViewCellClass)
  ['{25625844-9C05-5750-BCCE-5ABA4ECC1CFD}']
  { constructors } 

    {class} function init: DNDataGridViewComboBoxCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewComboBoxCell')]
  DNDataGridViewComboBoxCell = interface(DNDataGridViewCell)
  ['{07A5F31C-D229-304A-B8A7-A0E169086FBC}']
  { getters & setters } 

    function get_AutoComplete: Boolean;
    procedure set_AutoComplete(value: Boolean);
    function get_DataSource: DDN.mscorlib.DNObject;
    procedure set_DataSource(value: DDN.mscorlib.DNObject);
    function get_DisplayMember: string;
    procedure set_DisplayMember(value: string);
    function get_DisplayStyle: DNDataGridViewComboBoxDisplayStyle;
    procedure set_DisplayStyle(value: DNDataGridViewComboBoxDisplayStyle);
    function get_DisplayStyleForCurrentCellOnly: Boolean;
    procedure set_DisplayStyleForCurrentCellOnly(value: Boolean);
    function get_DropDownWidth: Int32;
    procedure set_DropDownWidth(value: Int32);
    function get_EditType: DDN.mscorlib.DNType;
    function get_FlatStyle: DNFlatStyle;
    procedure set_FlatStyle(value: DNFlatStyle);
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_Items: DNDataGridViewComboBoxCell_ObjectCollection;
    function get_MaxDropDownItems: Int32;
    procedure set_MaxDropDownItems(value: Int32);
    function get_Sorted: Boolean;
    procedure set_Sorted(value: Boolean);
    function get_ValueMember: string;
    procedure set_ValueMember(value: string);
    function get_ValueType: DDN.mscorlib.DNType;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    procedure DetachEditingControl;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property AutoComplete: Boolean read get_AutoComplete write set_AutoComplete;
    property DataSource: DDN.mscorlib.DNObject read get_DataSource write set_DataSource;
    property DisplayMember: string read get_DisplayMember write set_DisplayMember;
    property DisplayStyle: DNDataGridViewComboBoxDisplayStyle read get_DisplayStyle write set_DisplayStyle;
    property DisplayStyleForCurrentCellOnly: Boolean read get_DisplayStyleForCurrentCellOnly write set_DisplayStyleForCurrentCellOnly;
    property DropDownWidth: Int32 read get_DropDownWidth write set_DropDownWidth;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property FlatStyle: DNFlatStyle read get_FlatStyle write set_FlatStyle;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property Items: DNDataGridViewComboBoxCell_ObjectCollection read get_Items;
    property MaxDropDownItems: Int32 read get_MaxDropDownItems write set_MaxDropDownItems;
    property Sorted: Boolean read get_Sorted write set_Sorted;
    property ValueMember: string read get_ValueMember write set_ValueMember;
    property ValueType: DDN.mscorlib.DNType read get_ValueType;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewComboBoxCell = class(TDNGenericImport<DNDataGridViewComboBoxCellClass, DNDataGridViewComboBoxCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewHeaderCellClass = interface(DNDataGridViewCellClass)
  ['{88ECF391-42C5-53BD-90B9-B031A1C23EBC}']
  { constructors } 

    {class} function init: DNDataGridViewHeaderCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewHeaderCell')]
  DNDataGridViewHeaderCell = interface(DNDataGridViewCell)
  ['{6EE6A4D0-5DDF-36FA-912D-ECF9F616547D}']
  { getters & setters } 

    function get_Displayed: Boolean;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_Frozen: Boolean;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_EditType: DDN.mscorlib.DNType;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_RowIndex: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Displayed: Boolean read get_Displayed;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property Frozen: Boolean read get_Frozen;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property Selected: Boolean read get_Selected write set_Selected;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property RowIndex: Int32 read get_RowIndex;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewHeaderCell = class(TDNGenericImport<DNDataGridViewHeaderCellClass, DNDataGridViewHeaderCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewColumnHeaderCellClass = interface(DNDataGridViewHeaderCellClass)
  ['{69B5A49F-F763-5542-825B-659F94C3A02A}']
  { constructors } 

    {class} function init: DNDataGridViewColumnHeaderCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewColumnHeaderCell')]
  DNDataGridViewColumnHeaderCell = interface(DNDataGridViewHeaderCell)
  ['{C8BDCAE7-48EC-3EC2-82D7-3772A2DAEE05}']
  { getters & setters } 

    function get_SortGlyphDirection: DNSortOrder;
    procedure set_SortGlyphDirection(value: DNSortOrder);
    function get_Displayed: Boolean;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_Frozen: Boolean;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_EditType: DDN.mscorlib.DNType;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_RowIndex: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function ToString: string;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property SortGlyphDirection: DNSortOrder read get_SortGlyphDirection write set_SortGlyphDirection;
    property Displayed: Boolean read get_Displayed;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property Frozen: Boolean read get_Frozen;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property Selected: Boolean read get_Selected write set_Selected;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property RowIndex: Int32 read get_RowIndex;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewColumnHeaderCell = class(TDNGenericImport<DNDataGridViewColumnHeaderCellClass, DNDataGridViewColumnHeaderCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewTopLeftHeaderCellClass = interface(DNDataGridViewColumnHeaderCellClass)
  ['{0BA7B494-64DE-5822-97E4-172103CD9351}']
  { constructors } 

    {class} function init: DNDataGridViewTopLeftHeaderCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewTopLeftHeaderCell')]
  DNDataGridViewTopLeftHeaderCell = interface(DNDataGridViewColumnHeaderCell)
  ['{FA915FE6-8E29-337B-9716-EC5F138EF8C6}']
  { getters & setters } 

    function get_SortGlyphDirection: DNSortOrder;
    procedure set_SortGlyphDirection(value: DNSortOrder);
    function get_Displayed: Boolean;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_Frozen: Boolean;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_EditType: DDN.mscorlib.DNType;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_RowIndex: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function ToString: string;
    function Clone: DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property SortGlyphDirection: DNSortOrder read get_SortGlyphDirection write set_SortGlyphDirection;
    property Displayed: Boolean read get_Displayed;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property Frozen: Boolean read get_Frozen;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property Selected: Boolean read get_Selected write set_Selected;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property RowIndex: Int32 read get_RowIndex;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewTopLeftHeaderCell = class(TDNGenericImport<DNDataGridViewTopLeftHeaderCellClass, DNDataGridViewTopLeftHeaderCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowHeaderCellClass = interface(DNDataGridViewHeaderCellClass)
  ['{76FCD2F2-09C2-5D63-A8E2-071A2A1ADB99}']
  { constructors } 

    {class} function init: DNDataGridViewRowHeaderCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowHeaderCell')]
  DNDataGridViewRowHeaderCell = interface(DNDataGridViewHeaderCell)
  ['{B7DCF589-AC55-3174-87EF-62421A62B38F}']
  { getters & setters } 

    function get_Displayed: Boolean;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_Frozen: Boolean;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_Visible: Boolean;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_EditType: DDN.mscorlib.DNType;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_RowIndex: Int32;
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function ToString: string;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Displayed: Boolean read get_Displayed;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property Frozen: Boolean read get_Frozen;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property Selected: Boolean read get_Selected write set_Selected;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property Visible: Boolean read get_Visible;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property RowIndex: Int32 read get_RowIndex;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewRowHeaderCell = class(TDNGenericImport<DNDataGridViewRowHeaderCellClass, DNDataGridViewRowHeaderCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewImageCellClass = interface(DNDataGridViewCellClass)
  ['{3D13AB78-8E27-525C-BB04-F34948D738FD}']
  { constructors } 

    {class} function init: DNDataGridViewImageCell; overload;
    {class} function init(valueIsIcon: Boolean): DNDataGridViewImageCell; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewImageCell')]
  DNDataGridViewImageCell = interface(DNDataGridViewCell)
  ['{ABD0CEE3-1924-3A83-AB99-93CE0376983D}']
  { getters & setters } 

    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Description: string;
    procedure set_Description(value: string);
    function get_EditType: DDN.mscorlib.DNType;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_ImageLayout: DNDataGridViewImageCellLayout;
    procedure set_ImageLayout(value: DNDataGridViewImageCellLayout);
    function get_ValueIsIcon: Boolean;
    procedure set_ValueIsIcon(value: Boolean);
    function get_ValueType: DDN.mscorlib.DNType;
    procedure set_ValueType(value: DDN.mscorlib.DNType);
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Description: string read get_Description write set_Description;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property ImageLayout: DNDataGridViewImageCellLayout read get_ImageLayout write set_ImageLayout;
    property ValueIsIcon: Boolean read get_ValueIsIcon write set_ValueIsIcon;
    property ValueType: DDN.mscorlib.DNType read get_ValueType write set_ValueType;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewImageCell = class(TDNGenericImport<DNDataGridViewImageCellClass, DNDataGridViewImageCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewLinkCellClass = interface(DNDataGridViewCellClass)
  ['{8FD2D556-5097-5690-A0F3-5F8211D597D6}']
  { constructors } 

    {class} function init: DNDataGridViewLinkCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewLinkCell')]
  DNDataGridViewLinkCell = interface(DNDataGridViewCell)
  ['{CAD186C6-036B-337D-AE70-D41553591ED4}']
  { getters & setters } 

    function get_ActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_ActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_EditType: DDN.mscorlib.DNType;
    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_LinkBehavior: DNLinkBehavior;
    procedure set_LinkBehavior(value: DNLinkBehavior);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_LinkVisited: Boolean;
    procedure set_LinkVisited(value: Boolean);
    function get_TrackVisitedState: Boolean;
    procedure set_TrackVisitedState(value: Boolean);
    function get_UseColumnTextForLinkValue: Boolean;
    procedure set_UseColumnTextForLinkValue(value: Boolean);
    function get_VisitedLinkColor: DDN.System.Drawing.DNColor;
    procedure set_VisitedLinkColor(value: DDN.System.Drawing.DNColor);
    function get_ValueType: DDN.mscorlib.DNType;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    procedure DetachEditingControl;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property ActiveLinkColor: DDN.System.Drawing.DNColor read get_ActiveLinkColor write set_ActiveLinkColor;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property LinkBehavior: DNLinkBehavior read get_LinkBehavior write set_LinkBehavior;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property LinkVisited: Boolean read get_LinkVisited write set_LinkVisited;
    property TrackVisitedState: Boolean read get_TrackVisitedState write set_TrackVisitedState;
    property UseColumnTextForLinkValue: Boolean read get_UseColumnTextForLinkValue write set_UseColumnTextForLinkValue;
    property VisitedLinkColor: DDN.System.Drawing.DNColor read get_VisitedLinkColor write set_VisitedLinkColor;
    property ValueType: DDN.mscorlib.DNType read get_ValueType;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewLinkCell = class(TDNGenericImport<DNDataGridViewLinkCellClass, DNDataGridViewLinkCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewTextBoxCellClass = interface(DNDataGridViewCellClass)
  ['{B40615CE-9BC1-5E2A-83B0-4E25193FDA68}']
  { constructors } 

    {class} function init: DNDataGridViewTextBoxCell;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewTextBoxCell')]
  DNDataGridViewTextBoxCell = interface(DNDataGridViewCell)
  ['{5F1BE196-42DE-30A1-9054-FFD71D76D60F}']
  { getters & setters } 

    function get_FormattedValueType: DDN.mscorlib.DNType;
    function get_MaxInputLength: Int32;
    procedure set_MaxInputLength(value: Int32);
    function get_ValueType: DDN.mscorlib.DNType;
    function get_AccessibilityObject: DNAccessibleObject;
    function get_ColumnIndex: Int32;
    function get_ContentBounds: DDN.System.Drawing.DNRectangle;
    function get_ContextMenuStrip: DNContextMenuStrip;
    procedure set_ContextMenuStrip(value: DNContextMenuStrip);
    function get_DefaultNewRowValue: DDN.mscorlib.DNObject;
    function get_Displayed: Boolean;
    function get_EditedFormattedValue: DDN.mscorlib.DNObject;
    function get_EditType: DDN.mscorlib.DNType;
    function get_ErrorIconBounds: DDN.System.Drawing.DNRectangle;
    function get_ErrorText: string;
    procedure set_ErrorText(value: string);
    function get_FormattedValue: DDN.mscorlib.DNObject;
    function get_Frozen: Boolean;
    function get_HasStyle: Boolean;
    function get_InheritedState: DNDataGridViewElementStates;
    function get_InheritedStyle: DNDataGridViewCellStyle;
    function get_IsInEditMode: Boolean;
    function get_OwningColumn: DNDataGridViewColumn;
    function get_OwningRow: DNDataGridViewRow;
    function get_PreferredSize: DDN.System.Drawing.DNSize;
    function get_ReadOnly: Boolean;
    procedure set_ReadOnly(value: Boolean);
    function get_Resizable: Boolean;
    function get_RowIndex: Int32;
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_Size: DDN.System.Drawing.DNSize;
    function get_Style: DNDataGridViewCellStyle;
    procedure set_Style(value: DNDataGridViewCellStyle);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_Value: DDN.mscorlib.DNObject;
    procedure set_Value(value: DDN.mscorlib.DNObject);
    function get_Visible: Boolean;
    function get_State: DNDataGridViewElementStates;
    function get_DataGridView: DNDataGridView;

  { methods } 

    function Clone: DDN.mscorlib.DNObject;
    procedure DetachEditingControl;
    procedure InitializeEditingControl(rowIndex: Int32; initialFormattedValue: DDN.mscorlib.DNObject; dataGridViewCellStyle: DNDataGridViewCellStyle);
    function KeyEntersEditMode(e: DNKeyEventArgs): Boolean;
    procedure PositionEditingControl(setLocation: Boolean; setSize: Boolean; cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean);
    function ToString: string;
    function AdjustCellBorderStyle(dataGridViewAdvancedBorderStyleInput: DNDataGridViewAdvancedBorderStyle; dataGridViewAdvancedBorderStylePlaceholder: DNDataGridViewAdvancedBorderStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DNDataGridViewAdvancedBorderStyle;
    procedure Dispose;
    function GetEditedFormattedValue(rowIndex: Int32; context: DNDataGridViewDataErrorContexts): DDN.mscorlib.DNObject;
    function GetInheritedContextMenuStrip(rowIndex: Int32): DNContextMenuStrip;
    function ParseFormattedValue(formattedValue: DDN.mscorlib.DNObject; cellStyle: DNDataGridViewCellStyle; formattedValueTypeConverter: DDN.System.DNTypeConverter; valueTypeConverter: DDN.System.DNTypeConverter): DDN.mscorlib.DNObject;
    function PositionEditingPanel(cellBounds: DDN.System.Drawing.DNRectangle; cellClip: DDN.System.Drawing.DNRectangle; cellStyle: DNDataGridViewCellStyle; singleVerticalBorderAdded: Boolean; singleHorizontalBorderAdded: Boolean; isFirstDisplayedColumn: Boolean; isFirstDisplayedRow: Boolean): DDN.System.Drawing.DNRectangle;
    function GetContentBounds(rowIndex: Int32): DDN.System.Drawing.DNRectangle;
    function GetInheritedState(rowIndex: Int32): DNDataGridViewElementStates;
    function GetInheritedStyle(inheritedCellStyle: DNDataGridViewCellStyle; rowIndex: Int32; includeColors: Boolean): DNDataGridViewCellStyle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property FormattedValueType: DDN.mscorlib.DNType read get_FormattedValueType;
    property MaxInputLength: Int32 read get_MaxInputLength write set_MaxInputLength;
    property ValueType: DDN.mscorlib.DNType read get_ValueType;
    property AccessibilityObject: DNAccessibleObject read get_AccessibilityObject;
    property ColumnIndex: Int32 read get_ColumnIndex;
    property ContentBounds: DDN.System.Drawing.DNRectangle read get_ContentBounds;
    property ContextMenuStrip: DNContextMenuStrip read get_ContextMenuStrip write set_ContextMenuStrip;
    property DefaultNewRowValue: DDN.mscorlib.DNObject read get_DefaultNewRowValue;
    property Displayed: Boolean read get_Displayed;
    property EditedFormattedValue: DDN.mscorlib.DNObject read get_EditedFormattedValue;
    property EditType: DDN.mscorlib.DNType read get_EditType;
    property ErrorIconBounds: DDN.System.Drawing.DNRectangle read get_ErrorIconBounds;
    property ErrorText: string read get_ErrorText write set_ErrorText;
    property FormattedValue: DDN.mscorlib.DNObject read get_FormattedValue;
    property Frozen: Boolean read get_Frozen;
    property HasStyle: Boolean read get_HasStyle;
    property InheritedState: DNDataGridViewElementStates read get_InheritedState;
    property InheritedStyle: DNDataGridViewCellStyle read get_InheritedStyle;
    property IsInEditMode: Boolean read get_IsInEditMode;
    property OwningColumn: DNDataGridViewColumn read get_OwningColumn;
    property OwningRow: DNDataGridViewRow read get_OwningRow;
    property PreferredSize: DDN.System.Drawing.DNSize read get_PreferredSize;
    property ReadOnly: Boolean read get_ReadOnly write set_ReadOnly;
    property Resizable: Boolean read get_Resizable;
    property RowIndex: Int32 read get_RowIndex;
    property Selected: Boolean read get_Selected write set_Selected;
    property Size: DDN.System.Drawing.DNSize read get_Size;
    property Style: DNDataGridViewCellStyle read get_Style write set_Style;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property Value: DDN.mscorlib.DNObject read get_Value write set_Value;
    property Visible: Boolean read get_Visible;
    property State: DNDataGridViewElementStates read get_State;
    property DataGridView: DNDataGridView read get_DataGridView;
  end;

  TDNDataGridViewTextBoxCell = class(TDNGenericImport<DNDataGridViewTextBoxCellClass, DNDataGridViewTextBoxCell>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridViewRowCollectionClass = interface(DNObjectClass)
  ['{5C32BDB6-F4BC-53A9-85EF-674C2D103C06}']
  { constructors } 

    {class} function init(dataGridView: DNDataGridView): DNDataGridViewRowCollection;

  end;

  [DNTypeName('System.Windows.Forms.DataGridViewRowCollection')]
  DNDataGridViewRowCollection = interface(DDN.mscorlib.DNICollection)
  ['{352BBB04-AE8F-30A5-87D7-B16EEFDDFC6A}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNDataGridViewRow;

  { events } 

    procedure add_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);
    procedure remove_CollectionChanged(value: DDN.System.DNCollectionChangeEventHandler);

  { methods } 

    function SharedRow(rowIndex: Int32): DNDataGridViewRow;
    function Add: Int32; overload;
    function Add(values: TArray<DDN.mscorlib.DNObject>): Int32; overload;
    function Add(dataGridViewRow: DNDataGridViewRow): Int32; overload;
    function AddCopy(indexSource: Int32): Int32;
    function AddCopies(indexSource: Int32; count: Int32): Int32;
    procedure Clear;
    function &Contains(dataGridViewRow: DNDataGridViewRow): Boolean;
    procedure CopyTo(&array: TArray<DNDataGridViewRow>; index: Int32);
    function GetRowState(rowIndex: Int32): DNDataGridViewElementStates;
    function IndexOf(dataGridViewRow: DNDataGridViewRow): Int32;
    procedure Insert(rowIndex: Int32; values: TArray<DDN.mscorlib.DNObject>); overload;
    procedure Insert(rowIndex: Int32; dataGridViewRow: DNDataGridViewRow); overload;
    procedure InsertCopy(indexSource: Int32; indexDestination: Int32);
    procedure InsertCopies(indexSource: Int32; indexDestination: Int32; count: Int32);
    procedure Remove(dataGridViewRow: DNDataGridViewRow);
    procedure RemoveAt(index: Int32);
    function Add(count: Int32): Int32; overload;
    procedure AddRange(dataGridViewRows: TArray<DNDataGridViewRow>);
    function GetFirstRow(includeFilter: DNDataGridViewElementStates): Int32; overload;
    function GetFirstRow(includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): Int32; overload;
    function GetLastRow(includeFilter: DNDataGridViewElementStates): Int32;
    function GetNextRow(indexStart: Int32; includeFilter: DNDataGridViewElementStates): Int32; overload;
    function GetNextRow(indexStart: Int32; includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): Int32; overload;
    function GetPreviousRow(indexStart: Int32; includeFilter: DNDataGridViewElementStates): Int32; overload;
    function GetPreviousRow(indexStart: Int32; includeFilter: DNDataGridViewElementStates; excludeFilter: DNDataGridViewElementStates): Int32; overload;
    function GetRowCount(includeFilter: DNDataGridViewElementStates): Int32;
    function GetRowsHeight(includeFilter: DNDataGridViewElementStates): Int32;
    procedure Insert(rowIndex: Int32; count: Int32); overload;
    procedure InsertRange(rowIndex: Int32; dataGridViewRows: TArray<DNDataGridViewRow>);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNDataGridViewRow read get_Item; default;
  end;

  TDNDataGridViewRowCollection = class(TDNGenericImport<DNDataGridViewRowCollectionClass, DNDataGridViewRowCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataObjectClass = interface(DNObjectClass)
  ['{DB5876F2-5AFB-5357-8DF4-D7B56FC29ABA}']
  { constructors } 

    {class} function init: DNDataObject; overload;
    {class} function init(data: DDN.mscorlib.DNObject): DNDataObject; overload;
    {class} function init(format: string; data: DDN.mscorlib.DNObject): DNDataObject; overload;

  end;

  [DNTypeName('System.Windows.Forms.DataObject')]
  DNDataObject = interface(DNIDataObject)
  ['{27AFDD78-44CD-3CCA-9798-47DF57A634A2}']
  { methods } 

    function GetData(format: string; autoConvert: Boolean): DDN.mscorlib.DNObject; overload;
    function GetData(format: string): DDN.mscorlib.DNObject; overload;
    function GetData(format: DDN.mscorlib.DNType): DDN.mscorlib.DNObject; overload;
    function GetDataPresent(format: DDN.mscorlib.DNType): Boolean; overload;
    function GetDataPresent(format: string; autoConvert: Boolean): Boolean; overload;
    function GetDataPresent(format: string): Boolean; overload;
    function GetFormats(autoConvert: Boolean): TArray<string>; overload;
    function GetFormats: TArray<string>; overload;
    function ContainsAudio: Boolean;
    function ContainsFileDropList: Boolean;
    function ContainsImage: Boolean;
    function ContainsText: Boolean; overload;
    function ContainsText(format: DNTextDataFormat): Boolean; overload;
    function GetAudioStream: DDN.mscorlib.DNStream;
    function GetImage: DDN.System.Drawing.DNImage;
    function GetText: string; overload;
    function GetText(format: DNTextDataFormat): string; overload;
    procedure SetAudio(audioBytes: TArray<Byte>); overload;
    procedure SetAudio(audioStream: DDN.mscorlib.DNStream); overload;
    procedure SetImage(image: DDN.System.Drawing.DNImage);
    procedure SetText(textData: string); overload;
    procedure SetText(textData: string; format: DNTextDataFormat); overload;
    procedure SetData(format: string; autoConvert: Boolean; data: DDN.mscorlib.DNObject); overload;
    procedure SetData(format: string; data: DDN.mscorlib.DNObject); overload;
    procedure SetData(format: DDN.mscorlib.DNType; data: DDN.mscorlib.DNObject); overload;
    procedure SetData(data: DDN.mscorlib.DNObject); overload;
    function GetFileDropList: DDN.System.DNStringCollection;
    procedure SetFileDropList(filePaths: DDN.System.DNStringCollection);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNDataObject = class(TDNGenericImport<DNDataObjectClass, DNDataObject>) end;

  //-------------namespace: System.Windows.Forms.Design----------------
  DNPropertyTabClass = interface(DNObjectClass)
  ['{FE2ED73C-9D91-5980-96E9-C83063A9F4C5}']
  end;

  [DNTypeName('System.Windows.Forms.Design.PropertyTab')]
  DNPropertyTab = interface(DDN.System.DNIExtenderProvider)
  ['{A1458EF0-9389-3B37-AFB0-FF3377997641}']
  { getters & setters } 

    function get_Bitmap: DDN.System.Drawing.DNBitmap;
    function get_Components: TArray<DDN.mscorlib.DNObject>;
    procedure set_Components(value: TArray<DDN.mscorlib.DNObject>);
    function get_TabName: string;
    function get_HelpKeyword: string;

  { methods } 

    function CanExtend(extendee: DDN.mscorlib.DNObject): Boolean;
    procedure Dispose;
    function GetDefaultProperty(component: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptor;
    function GetProperties(component: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; component: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(component: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Bitmap: DDN.System.Drawing.DNBitmap read get_Bitmap;
    property Components: TArray<DDN.mscorlib.DNObject> read get_Components write set_Components;
    property TabName: string read get_TabName;
    property HelpKeyword: string read get_HelpKeyword;
  end;

  TDNPropertyTab = class(TDNGenericImport<DNPropertyTabClass, DNPropertyTab>) end;

  //-------------namespace: System.Windows.Forms.Design----------------
  DNEventsTabClass = interface(DNPropertyTabClass)
  ['{6C7AB699-BBB1-5DAC-8D77-DA441F2E49E8}']
  { constructors } 

    {class} function init(sp: DDN.mscorlib.DNIServiceProvider): DNEventsTab;

  end;

  [DNTypeName('System.Windows.Forms.Design.EventsTab')]
  DNEventsTab = interface(DNPropertyTab)
  ['{ED65B6F3-C4C3-303A-B39D-9A4FDBFAD349}']
  { getters & setters } 

    function get_TabName: string;
    function get_HelpKeyword: string;
    function get_Bitmap: DDN.System.Drawing.DNBitmap;
    function get_Components: TArray<DDN.mscorlib.DNObject>;
    procedure set_Components(value: TArray<DDN.mscorlib.DNObject>);

  { methods } 

    function CanExtend(extendee: DDN.mscorlib.DNObject): Boolean;
    function GetDefaultProperty(obj: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptor;
    function GetProperties(component: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; component: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    procedure Dispose;
    function GetProperties(component: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property TabName: string read get_TabName;
    property HelpKeyword: string read get_HelpKeyword;
    property Bitmap: DDN.System.Drawing.DNBitmap read get_Bitmap;
    property Components: TArray<DDN.mscorlib.DNObject> read get_Components write set_Components;
  end;

  TDNEventsTab = class(TDNGenericImport<DNEventsTabClass, DNEventsTab>) end;

  //-------------namespace: System.Windows.Forms.PropertyGridInternal----------------
  DNPropertiesTabClass = interface(DNPropertyTabClass)
  ['{6A64F84A-70BC-514D-A3A3-7DF0878A93D5}']
  { constructors } 

    {class} function init: DNPropertiesTab;

  end;

  [DNTypeName('System.Windows.Forms.PropertyGridInternal.PropertiesTab')]
  DNPropertiesTab = interface(DNPropertyTab)
  ['{1B9DE545-1C33-3F0A-8B37-C245DB77D356}']
  { getters & setters } 

    function get_TabName: string;
    function get_HelpKeyword: string;
    function get_Bitmap: DDN.System.Drawing.DNBitmap;
    function get_Components: TArray<DDN.mscorlib.DNObject>;
    procedure set_Components(value: TArray<DDN.mscorlib.DNObject>);

  { methods } 

    function GetProperties(component: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function GetDefaultProperty(obj: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptor;
    function GetProperties(context: DDN.System.DNITypeDescriptorContext; component: DDN.mscorlib.DNObject; attributes: TArray<DDN.mscorlib.DNAttribute>): DDN.System.DNPropertyDescriptorCollection; overload;
    function CanExtend(extendee: DDN.mscorlib.DNObject): Boolean;
    procedure Dispose;
    function GetProperties(component: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property TabName: string read get_TabName;
    property HelpKeyword: string read get_HelpKeyword;
    property Bitmap: DDN.System.Drawing.DNBitmap read get_Bitmap;
    property Components: TArray<DDN.mscorlib.DNObject> read get_Components write set_Components;
  end;

  TDNPropertiesTab = class(TDNGenericImport<DNPropertiesTabClass, DNPropertiesTab>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFeatureSupportClass = interface(DNObjectClass)
  ['{ECFCE75C-EDA5-534F-9AB7-C41CD5896B0B}']
  { static methods } 

    {class} function IsPresent(featureClassName: string; featureConstName: string): Boolean; overload;
    {class} function IsPresent(featureClassName: string; featureConstName: string; minimumVersion: DDN.mscorlib.DNVersion): Boolean; overload;
    {class} function GetVersionPresent(featureClassName: string; featureConstName: string): DDN.mscorlib.DNVersion; overload;

  end;

  [DNTypeName('System.Windows.Forms.FeatureSupport')]
  DNFeatureSupport = interface(DNIFeatureSupport)
  ['{915C3B32-675B-3188-9552-F6D5FB407CF1}']
  { methods } 

    function IsPresent(feature: DDN.mscorlib.DNObject): Boolean; overload;
    function IsPresent(feature: DDN.mscorlib.DNObject; minimumVersion: DDN.mscorlib.DNVersion): Boolean; overload;
    function GetVersionPresent(feature: DDN.mscorlib.DNObject): DDN.mscorlib.DNVersion; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNFeatureSupport = class(TDNGenericImport<DNFeatureSupportClass, DNFeatureSupport>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNOSFeatureClass = interface(DNFeatureSupportClass)
  ['{C9A01579-2883-576F-9D72-FAC29C9CBD39}']
  { static getter & setter } 

    {class} function get_Feature: DNOSFeature;

  { static fields getter & setter } 

   function __fakeFieldGet_LayeredWindows: DDN.mscorlib.DNObject;
   function __fakeFieldGet_Themes: DDN.mscorlib.DNObject;

  { static fields } 

    {class} property LayeredWindows: DDN.mscorlib.DNObject read __fakeFieldGet_LayeredWindows;
    {class} property Themes: DDN.mscorlib.DNObject read __fakeFieldGet_Themes;

  { static methods } 

    {class} function IsPresent(enumVal: DNSystemParameter): Boolean; overload;

  { static propertys } 

    {class} property Feature: DNOSFeature read get_Feature;
  end;

  [DNTypeName('System.Windows.Forms.OSFeature')]
  DNOSFeature = interface(DNFeatureSupport)
  ['{70C4D485-F172-367A-BCB9-535068A04234}']
  { methods } 

    function GetVersionPresent(feature: DDN.mscorlib.DNObject): DDN.mscorlib.DNVersion;
    function IsPresent(feature: DDN.mscorlib.DNObject): Boolean; overload;
    function IsPresent(feature: DDN.mscorlib.DNObject; minimumVersion: DDN.mscorlib.DNVersion): Boolean; overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNOSFeature = class(TDNGenericImport<DNOSFeatureClass, DNOSFeature>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFileDialogCustomPlaceClass = interface(DDN.mscorlib.DNObjectClass)
  ['{901CD284-7624-5831-8F72-424137BB071B}']
  { constructors } 

    {class} function init(path: string): DNFileDialogCustomPlace; overload;
    {class} function init(knownFolderGuid: DDN.mscorlib.DNGuid): DNFileDialogCustomPlace; overload;

  end;

  [DNTypeName('System.Windows.Forms.FileDialogCustomPlace')]
  DNFileDialogCustomPlace = interface(DDN.mscorlib.DNObject)
  ['{3100FDE2-5A01-37AF-BD87-C15024BC3BF5}']
  { getters & setters } 

    function get_Path: string;
    procedure set_Path(value: string);
    function get_KnownFolderGuid: DDN.mscorlib.DNGuid;
    procedure set_KnownFolderGuid(value: DDN.mscorlib.DNGuid);

  { methods } 

    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Path: string read get_Path write set_Path;
    property KnownFolderGuid: DDN.mscorlib.DNGuid read get_KnownFolderGuid write set_KnownFolderGuid;
  end;

  TDNFileDialogCustomPlace = class(TDNGenericImport<DNFileDialogCustomPlaceClass, DNFileDialogCustomPlace>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFlatButtonAppearanceClass = interface(DDN.mscorlib.DNObjectClass)
  ['{002F1FA1-D50E-53FC-B846-28F5EFEDC223}']
  end;

  [DNTypeName('System.Windows.Forms.FlatButtonAppearance')]
  DNFlatButtonAppearance = interface(DDN.mscorlib.DNObject)
  ['{347596FB-A80E-3C20-93E0-3058C30F9EB8}']
  { getters & setters } 

    function get_BorderSize: Int32;
    procedure set_BorderSize(value: Int32);
    function get_BorderColor: DDN.System.Drawing.DNColor;
    procedure set_BorderColor(value: DDN.System.Drawing.DNColor);
    function get_CheckedBackColor: DDN.System.Drawing.DNColor;
    procedure set_CheckedBackColor(value: DDN.System.Drawing.DNColor);
    function get_MouseDownBackColor: DDN.System.Drawing.DNColor;
    procedure set_MouseDownBackColor(value: DDN.System.Drawing.DNColor);
    function get_MouseOverBackColor: DDN.System.Drawing.DNColor;
    procedure set_MouseOverBackColor(value: DDN.System.Drawing.DNColor);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property BorderSize: Int32 read get_BorderSize write set_BorderSize;
    property BorderColor: DDN.System.Drawing.DNColor read get_BorderColor write set_BorderColor;
    property CheckedBackColor: DDN.System.Drawing.DNColor read get_CheckedBackColor write set_CheckedBackColor;
    property MouseDownBackColor: DDN.System.Drawing.DNColor read get_MouseDownBackColor write set_MouseDownBackColor;
    property MouseOverBackColor: DDN.System.Drawing.DNColor read get_MouseOverBackColor write set_MouseOverBackColor;
  end;

  TDNFlatButtonAppearance = class(TDNGenericImport<DNFlatButtonAppearanceClass, DNFlatButtonAppearance>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGridItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{05181034-BCB4-531D-913C-A7B40718800F}']
  end;

  [DNTypeName('System.Windows.Forms.GridItem')]
  DNGridItem = interface(DDN.mscorlib.DNObject)
  ['{F7AEEC35-264B-3F28-A8E1-AF26C06872CB}']
  { getters & setters } 

    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_GridItems: DNGridItemCollection;
    function get_GridItemType: DNGridItemType;
    function get_Label: string;
    function get_Parent: DNGridItem;
    function get_PropertyDescriptor: DDN.System.DNPropertyDescriptor;
    function get_Value: DDN.mscorlib.DNObject;
    function get_Expandable: Boolean;
    function get_Expanded: Boolean;
    procedure set_Expanded(value: Boolean);

  { methods } 

    function Select: Boolean;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property GridItems: DNGridItemCollection read get_GridItems;
    property GridItemType: DNGridItemType read get_GridItemType;
    property &Label: string read get_Label;
    property Parent: DNGridItem read get_Parent;
    property PropertyDescriptor: DDN.System.DNPropertyDescriptor read get_PropertyDescriptor;
    property Value: DDN.mscorlib.DNObject read get_Value;
    property Expandable: Boolean read get_Expandable;
    property Expanded: Boolean read get_Expanded write set_Expanded;
  end;

  TDNGridItem = class(TDNGenericImport<DNGridItemClass, DNGridItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGridItemCollectionClass = interface(DNObjectClass)
  ['{61DD7A5B-D48F-5BFD-AA6A-BB2FAB82A75B}']
  { static fields getter & setter } 

   function __fakeFieldGet_Empty: DNGridItemCollection;

  { static fields } 

    {class} property Empty: DNGridItemCollection read __fakeFieldGet_Empty;

  end;

  [DNTypeName('System.Windows.Forms.GridItemCollection')]
  DNGridItemCollection = interface(DDN.mscorlib.DNICollection)
  ['{9445ADE4-2CF8-301B-B9E9-920E1D836267}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNGridItem; overload;
    function get_Item(&label: string): DNGridItem; overload;

  { methods } 

    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNGridItem read get_Item; default;
    property Item[&label: string]: DNGridItem read get_Item; default;
  end;

  TDNGridItemCollection = class(TDNGenericImport<DNGridItemCollectionClass, DNGridItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGridTablesFactoryClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3CCE011A-FDA5-587A-BF87-9392B217B14C}']
  { static methods } 

    {class} function CreateGridTables(gridTable: DNDataGridTableStyle; dataSource: DDN.mscorlib.DNObject; dataMember: string; bindingManager: DNBindingContext): TArray<DNDataGridTableStyle>;

  end;

  [DNTypeName('System.Windows.Forms.GridTablesFactory')]
  DNGridTablesFactory = interface(DDN.mscorlib.DNObject)
  ['{6580CBE2-BFA7-3A60-8994-B8AF43DF5DE2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNGridTablesFactory = class(TDNGenericImport<DNGridTablesFactoryClass, DNGridTablesFactory>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNGroupBoxRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3D5942DC-52A2-572F-AB4E-29504A2C73CD}']
  { static getter & setter } 

    {class} function get_RenderMatchingApplicationState: Boolean;
    {class} procedure set_RenderMatchingApplicationState(value: Boolean);

  { static methods } 

    {class} function IsBackgroundPartiallyTransparent(state: DNGroupBoxState): Boolean;
    {class} procedure DrawParentBackground(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; childControl: DNControl);
    {class} procedure DrawGroupBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNGroupBoxState); overload;
    {class} procedure DrawGroupBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; groupBoxText: string; font: DDN.System.Drawing.DNFont; state: DNGroupBoxState); overload;
    {class} procedure DrawGroupBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; groupBoxText: string; font: DDN.System.Drawing.DNFont; textColor: DDN.System.Drawing.DNColor; state: DNGroupBoxState); overload;
    {class} procedure DrawGroupBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; groupBoxText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; state: DNGroupBoxState); overload;
    {class} procedure DrawGroupBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; groupBoxText: string; font: DDN.System.Drawing.DNFont; textColor: DDN.System.Drawing.DNColor; flags: DNTextFormatFlags; state: DNGroupBoxState); overload;

  { static propertys } 

    {class} property RenderMatchingApplicationState: Boolean read get_RenderMatchingApplicationState write set_RenderMatchingApplicationState;
  end;

  [DNTypeName('System.Windows.Forms.GroupBoxRenderer')]
  DNGroupBoxRenderer = interface(DDN.mscorlib.DNObject)
  ['{F07F5BA7-63A9-3341-BF1A-34C4AFB91710}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNGroupBoxRenderer = class(TDNGenericImport<DNGroupBoxRendererClass, DNGroupBoxRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHelpClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6D18D385-D822-58C1-B396-2876B33E82A7}']
  { static methods } 

    {class} procedure ShowHelp(parent: DNControl; url: string); overload;
    {class} procedure ShowHelp(parent: DNControl; url: string; navigator: DNHelpNavigator); overload;
    {class} procedure ShowHelp(parent: DNControl; url: string; keyword: string); overload;
    {class} procedure ShowHelp(parent: DNControl; url: string; command: DNHelpNavigator; parameter: DDN.mscorlib.DNObject); overload;
    {class} procedure ShowHelpIndex(parent: DNControl; url: string);
    {class} procedure ShowPopup(parent: DNControl; caption: string; location: DDN.System.Drawing.DNPoint);

  end;

  [DNTypeName('System.Windows.Forms.Help')]
  DNHelp = interface(DDN.mscorlib.DNObject)
  ['{8439A75A-32C4-33F5-A22B-0204B368545E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNHelp = class(TDNGenericImport<DNHelpClass, DNHelp>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlDocumentClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1A7C293C-7DD1-59EE-8190-F8D228DF4AF0}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlDocument')]
  DNHtmlDocument = interface(DDN.mscorlib.DNObject)
  ['{FD421C32-87B5-346C-8C07-4DBF39D2F043}']
  { getters & setters } 

    function get_ActiveElement: DNHtmlElement;
    function get_Body: DNHtmlElement;
    function get_Domain: string;
    procedure set_Domain(value: string);
    function get_Title: string;
    procedure set_Title(value: string);
    function get_Url: DDN.System.DNUri;
    function get_Window: DNHtmlWindow;
    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_LinkColor: DDN.System.Drawing.DNColor;
    procedure set_LinkColor(value: DDN.System.Drawing.DNColor);
    function get_ActiveLinkColor: DDN.System.Drawing.DNColor;
    procedure set_ActiveLinkColor(value: DDN.System.Drawing.DNColor);
    function get_VisitedLinkColor: DDN.System.Drawing.DNColor;
    procedure set_VisitedLinkColor(value: DDN.System.Drawing.DNColor);
    function get_Focused: Boolean;
    function get_DomDocument: DDN.mscorlib.DNObject;
    function get_Cookie: string;
    procedure set_Cookie(value: string);
    function get_RightToLeft: Boolean;
    procedure set_RightToLeft(value: Boolean);
    function get_Encoding: string;
    procedure set_Encoding(value: string);
    function get_DefaultEncoding: string;
    function get_All: DNHtmlElementCollection;
    function get_Links: DNHtmlElementCollection;
    function get_Images: DNHtmlElementCollection;
    function get_Forms: DNHtmlElementCollection;

  { events } 

    procedure add_Click(value: DNHtmlElementEventHandler);
    procedure remove_Click(value: DNHtmlElementEventHandler);
    procedure add_ContextMenuShowing(value: DNHtmlElementEventHandler);
    procedure remove_ContextMenuShowing(value: DNHtmlElementEventHandler);
    procedure add_Focusing(value: DNHtmlElementEventHandler);
    procedure remove_Focusing(value: DNHtmlElementEventHandler);
    procedure add_LosingFocus(value: DNHtmlElementEventHandler);
    procedure remove_LosingFocus(value: DNHtmlElementEventHandler);
    procedure add_MouseDown(value: DNHtmlElementEventHandler);
    procedure remove_MouseDown(value: DNHtmlElementEventHandler);
    procedure add_MouseLeave(value: DNHtmlElementEventHandler);
    procedure remove_MouseLeave(value: DNHtmlElementEventHandler);
    procedure add_MouseMove(value: DNHtmlElementEventHandler);
    procedure remove_MouseMove(value: DNHtmlElementEventHandler);
    procedure add_MouseOver(value: DNHtmlElementEventHandler);
    procedure remove_MouseOver(value: DNHtmlElementEventHandler);
    procedure add_MouseUp(value: DNHtmlElementEventHandler);
    procedure remove_MouseUp(value: DNHtmlElementEventHandler);
    procedure add_Stop(value: DNHtmlElementEventHandler);
    procedure remove_Stop(value: DNHtmlElementEventHandler);

  { methods } 

    procedure ExecCommand(command: string; showUI: Boolean; value: DDN.mscorlib.DNObject);
    procedure Focus;
    function GetElementById(id: string): DNHtmlElement;
    function GetElementFromPoint(point: DDN.System.Drawing.DNPoint): DNHtmlElement;
    function GetElementsByTagName(tagName: string): DNHtmlElementCollection;
    function CreateElement(elementTag: string): DNHtmlElement;
    function InvokeScript(scriptName: string): DDN.mscorlib.DNObject; overload;
    procedure AttachEventHandler(eventName: string; eventHandler: DDN.mscorlib.DNEventHandler);
    procedure DetachEventHandler(eventName: string; eventHandler: DDN.mscorlib.DNEventHandler);
    function GetHashCode: Int32;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    procedure Write(text: string);
    function OpenNew(replaceInHistory: Boolean): DNHtmlDocument;
    function InvokeScript(scriptName: string; args: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ActiveElement: DNHtmlElement read get_ActiveElement;
    property Body: DNHtmlElement read get_Body;
    property Domain: string read get_Domain write set_Domain;
    property Title: string read get_Title write set_Title;
    property Url: DDN.System.DNUri read get_Url;
    property Window: DNHtmlWindow read get_Window;
    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property LinkColor: DDN.System.Drawing.DNColor read get_LinkColor write set_LinkColor;
    property ActiveLinkColor: DDN.System.Drawing.DNColor read get_ActiveLinkColor write set_ActiveLinkColor;
    property VisitedLinkColor: DDN.System.Drawing.DNColor read get_VisitedLinkColor write set_VisitedLinkColor;
    property Focused: Boolean read get_Focused;
    property DomDocument: DDN.mscorlib.DNObject read get_DomDocument;
    property Cookie: string read get_Cookie write set_Cookie;
    property RightToLeft: Boolean read get_RightToLeft write set_RightToLeft;
    property Encoding: string read get_Encoding write set_Encoding;
    property DefaultEncoding: string read get_DefaultEncoding;
    property All: DNHtmlElementCollection read get_All;
    property Links: DNHtmlElementCollection read get_Links;
    property Images: DNHtmlElementCollection read get_Images;
    property Forms: DNHtmlElementCollection read get_Forms;
  end;

  TDNHtmlDocument = class(TDNGenericImport<DNHtmlDocumentClass, DNHtmlDocument>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlElementClass = interface(DDN.mscorlib.DNObjectClass)
  ['{97BCF581-ADBA-5051-B777-B5EC98383C57}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlElement')]
  DNHtmlElement = interface(DDN.mscorlib.DNObject)
  ['{3BA7893B-287B-3D24-BB37-77FB9749A8F9}']
  { getters & setters } 

    function get_All: DNHtmlElementCollection;
    function get_Children: DNHtmlElementCollection;
    function get_CanHaveChildren: Boolean;
    function get_ClientRectangle: DDN.System.Drawing.DNRectangle;
    function get_Document: DNHtmlDocument;
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_FirstChild: DNHtmlElement;
    function get_Id: string;
    procedure set_Id(value: string);
    function get_InnerHtml: string;
    procedure set_InnerHtml(value: string);
    function get_InnerText: string;
    procedure set_InnerText(value: string);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_NextSibling: DNHtmlElement;
    function get_OffsetRectangle: DDN.System.Drawing.DNRectangle;
    function get_OffsetParent: DNHtmlElement;
    function get_OuterHtml: string;
    procedure set_OuterHtml(value: string);
    function get_OuterText: string;
    procedure set_OuterText(value: string);
    function get_Parent: DNHtmlElement;
    function get_ScrollRectangle: DDN.System.Drawing.DNRectangle;
    function get_ScrollLeft: Int32;
    procedure set_ScrollLeft(value: Int32);
    function get_ScrollTop: Int32;
    procedure set_ScrollTop(value: Int32);
    function get_Style: string;
    procedure set_Style(value: string);
    function get_TagName: string;
    function get_TabIndex: Int16;
    procedure set_TabIndex(value: Int16);
    function get_DomElement: DDN.mscorlib.DNObject;

  { events } 

    procedure add_Click(value: DNHtmlElementEventHandler);
    procedure remove_Click(value: DNHtmlElementEventHandler);
    procedure add_DoubleClick(value: DNHtmlElementEventHandler);
    procedure remove_DoubleClick(value: DNHtmlElementEventHandler);
    procedure add_Drag(value: DNHtmlElementEventHandler);
    procedure remove_Drag(value: DNHtmlElementEventHandler);
    procedure add_DragEnd(value: DNHtmlElementEventHandler);
    procedure remove_DragEnd(value: DNHtmlElementEventHandler);
    procedure add_DragLeave(value: DNHtmlElementEventHandler);
    procedure remove_DragLeave(value: DNHtmlElementEventHandler);
    procedure add_DragOver(value: DNHtmlElementEventHandler);
    procedure remove_DragOver(value: DNHtmlElementEventHandler);
    procedure add_Focusing(value: DNHtmlElementEventHandler);
    procedure remove_Focusing(value: DNHtmlElementEventHandler);
    procedure add_GotFocus(value: DNHtmlElementEventHandler);
    procedure remove_GotFocus(value: DNHtmlElementEventHandler);
    procedure add_LosingFocus(value: DNHtmlElementEventHandler);
    procedure remove_LosingFocus(value: DNHtmlElementEventHandler);
    procedure add_LostFocus(value: DNHtmlElementEventHandler);
    procedure remove_LostFocus(value: DNHtmlElementEventHandler);
    procedure add_KeyDown(value: DNHtmlElementEventHandler);
    procedure remove_KeyDown(value: DNHtmlElementEventHandler);
    procedure add_KeyPress(value: DNHtmlElementEventHandler);
    procedure remove_KeyPress(value: DNHtmlElementEventHandler);
    procedure add_KeyUp(value: DNHtmlElementEventHandler);
    procedure remove_KeyUp(value: DNHtmlElementEventHandler);
    procedure add_MouseMove(value: DNHtmlElementEventHandler);
    procedure remove_MouseMove(value: DNHtmlElementEventHandler);
    procedure add_MouseDown(value: DNHtmlElementEventHandler);
    procedure remove_MouseDown(value: DNHtmlElementEventHandler);
    procedure add_MouseOver(value: DNHtmlElementEventHandler);
    procedure remove_MouseOver(value: DNHtmlElementEventHandler);
    procedure add_MouseUp(value: DNHtmlElementEventHandler);
    procedure remove_MouseUp(value: DNHtmlElementEventHandler);
    procedure add_MouseEnter(value: DNHtmlElementEventHandler);
    procedure remove_MouseEnter(value: DNHtmlElementEventHandler);
    procedure add_MouseLeave(value: DNHtmlElementEventHandler);
    procedure remove_MouseLeave(value: DNHtmlElementEventHandler);

  { methods } 

    function AppendChild(newElement: DNHtmlElement): DNHtmlElement;
    procedure AttachEventHandler(eventName: string; eventHandler: DDN.mscorlib.DNEventHandler);
    procedure DetachEventHandler(eventName: string; eventHandler: DDN.mscorlib.DNEventHandler);
    procedure Focus;
    function GetAttribute(attributeName: string): string;
    function GetElementsByTagName(tagName: string): DNHtmlElementCollection;
    function InsertAdjacentElement(orient: DNHtmlElementInsertionOrientation; newElement: DNHtmlElement): DNHtmlElement;
    function InvokeMember(methodName: string): DDN.mscorlib.DNObject; overload;
    procedure RemoveFocus;
    procedure RaiseEvent(eventName: string);
    procedure ScrollIntoView(alignWithTop: Boolean);
    procedure SetAttribute(attributeName: string; value: string);
    function GetHashCode: Int32;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function InvokeMember(methodName: string; parameter: TArray<DDN.mscorlib.DNObject>): DDN.mscorlib.DNObject; overload;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property All: DNHtmlElementCollection read get_All;
    property Children: DNHtmlElementCollection read get_Children;
    property CanHaveChildren: Boolean read get_CanHaveChildren;
    property ClientRectangle: DDN.System.Drawing.DNRectangle read get_ClientRectangle;
    property Document: DNHtmlDocument read get_Document;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property FirstChild: DNHtmlElement read get_FirstChild;
    property Id: string read get_Id write set_Id;
    property InnerHtml: string read get_InnerHtml write set_InnerHtml;
    property InnerText: string read get_InnerText write set_InnerText;
    property Name: string read get_Name write set_Name;
    property NextSibling: DNHtmlElement read get_NextSibling;
    property OffsetRectangle: DDN.System.Drawing.DNRectangle read get_OffsetRectangle;
    property OffsetParent: DNHtmlElement read get_OffsetParent;
    property OuterHtml: string read get_OuterHtml write set_OuterHtml;
    property OuterText: string read get_OuterText write set_OuterText;
    property Parent: DNHtmlElement read get_Parent;
    property ScrollRectangle: DDN.System.Drawing.DNRectangle read get_ScrollRectangle;
    property ScrollLeft: Int32 read get_ScrollLeft write set_ScrollLeft;
    property ScrollTop: Int32 read get_ScrollTop write set_ScrollTop;
    property Style: string read get_Style write set_Style;
    property TagName: string read get_TagName;
    property TabIndex: Int16 read get_TabIndex write set_TabIndex;
    property DomElement: DDN.mscorlib.DNObject read get_DomElement;
  end;

  TDNHtmlElement = class(TDNGenericImport<DNHtmlElementClass, DNHtmlElement>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlElementCollectionClass = interface(DNObjectClass)
  ['{F62EA2EE-2E5A-524F-BE3E-15752D72188A}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlElementCollection')]
  DNHtmlElementCollection = interface(DDN.mscorlib.DNICollection)
  ['{EB0C9FBE-C958-3C47-806E-0EBEF0F2F916}']
  { getters & setters } 

    function get_Item(index: Int32): DNHtmlElement; overload;
    function get_Item(elementId: string): DNHtmlElement; overload;
    function get_Count: Int32;

  { methods } 

    function GetElementsByName(name: string): DNHtmlElementCollection;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNHtmlElement read get_Item; default;
    property Item[elementId: string]: DNHtmlElement read get_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNHtmlElementCollection = class(TDNGenericImport<DNHtmlElementCollectionClass, DNHtmlElementCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlHistoryClass = interface(DNObjectClass)
  ['{0CE29142-1134-5098-8EB3-47EF89299CD3}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlHistory')]
  DNHtmlHistory = interface(DDN.mscorlib.DNIDisposable)
  ['{E276C207-6C0C-34CA-BAA8-86CB23055E2B}']
  { getters & setters } 

    function get_Length: Int32;
    function get_DomHistory: DDN.mscorlib.DNObject;

  { methods } 

    procedure Dispose;
    procedure Go(url: DDN.System.DNUri); overload;
    procedure Go(urlString: string); overload;
    procedure Go(relativePosition: Int32); overload;
    procedure Back(numberBack: Int32);
    procedure &Forward(numberForward: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Length: Int32 read get_Length;
    property DomHistory: DDN.mscorlib.DNObject read get_DomHistory;
  end;

  TDNHtmlHistory = class(TDNGenericImport<DNHtmlHistoryClass, DNHtmlHistory>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlWindowClass = interface(DDN.mscorlib.DNObjectClass)
  ['{075AE650-905C-5016-A663-5CEFD8918CFB}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlWindow')]
  DNHtmlWindow = interface(DDN.mscorlib.DNObject)
  ['{807FCCA3-4684-3DD0-A949-145BDFC3BD80}']
  { getters & setters } 

    function get_Document: DNHtmlDocument;
    function get_DomWindow: DDN.mscorlib.DNObject;
    function get_Frames: DNHtmlWindowCollection;
    function get_History: DNHtmlHistory;
    function get_IsClosed: Boolean;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Opener: DNHtmlWindow;
    function get_Parent: DNHtmlWindow;
    function get_Position: DDN.System.Drawing.DNPoint;
    function get_Size: DDN.System.Drawing.DNSize;
    procedure set_Size(value: DDN.System.Drawing.DNSize);
    function get_StatusBarText: string;
    procedure set_StatusBarText(value: string);
    function get_Url: DDN.System.DNUri;
    function get_WindowFrameElement: DNHtmlElement;

  { events } 

    procedure add_Error(value: DNHtmlElementErrorEventHandler);
    procedure remove_Error(value: DNHtmlElementErrorEventHandler);
    procedure add_GotFocus(value: DNHtmlElementEventHandler);
    procedure remove_GotFocus(value: DNHtmlElementEventHandler);
    procedure add_Load(value: DNHtmlElementEventHandler);
    procedure remove_Load(value: DNHtmlElementEventHandler);
    procedure add_LostFocus(value: DNHtmlElementEventHandler);
    procedure remove_LostFocus(value: DNHtmlElementEventHandler);
    procedure add_Resize(value: DNHtmlElementEventHandler);
    procedure remove_Resize(value: DNHtmlElementEventHandler);
    procedure add_Scroll(value: DNHtmlElementEventHandler);
    procedure remove_Scroll(value: DNHtmlElementEventHandler);
    procedure add_Unload(value: DNHtmlElementEventHandler);
    procedure remove_Unload(value: DNHtmlElementEventHandler);

  { methods } 

    procedure Alert(message: string);
    procedure AttachEventHandler(eventName: string; eventHandler: DDN.mscorlib.DNEventHandler);
    procedure Close;
    function Confirm(message: string): Boolean;
    procedure DetachEventHandler(eventName: string; eventHandler: DDN.mscorlib.DNEventHandler);
    procedure Focus;
    procedure MoveTo(x: Int32; y: Int32); overload;
    procedure MoveTo(point: DDN.System.Drawing.DNPoint); overload;
    procedure Navigate(url: DDN.System.DNUri); overload;
    procedure Navigate(urlString: string); overload;
    function Open(urlString: string; target: string; windowOptions: string; replaceEntry: Boolean): DNHtmlWindow; overload;
    function Open(url: DDN.System.DNUri; target: string; windowOptions: string; replaceEntry: Boolean): DNHtmlWindow; overload;
    function OpenNew(url: DDN.System.DNUri; windowOptions: string): DNHtmlWindow; overload;
    function Prompt(message: string; defaultInputValue: string): string;
    procedure RemoveFocus;
    procedure ResizeTo(width: Int32; height: Int32); overload;
    procedure ResizeTo(size: DDN.System.Drawing.DNSize); overload;
    procedure ScrollTo(x: Int32; y: Int32); overload;
    procedure ScrollTo(point: DDN.System.Drawing.DNPoint); overload;
    function GetHashCode: Int32;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function OpenNew(urlString: string; windowOptions: string): DNHtmlWindow; overload;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Document: DNHtmlDocument read get_Document;
    property DomWindow: DDN.mscorlib.DNObject read get_DomWindow;
    property Frames: DNHtmlWindowCollection read get_Frames;
    property History: DNHtmlHistory read get_History;
    property IsClosed: Boolean read get_IsClosed;
    property Name: string read get_Name write set_Name;
    property Opener: DNHtmlWindow read get_Opener;
    property Parent: DNHtmlWindow read get_Parent;
    property Position: DDN.System.Drawing.DNPoint read get_Position;
    property Size: DDN.System.Drawing.DNSize read get_Size write set_Size;
    property StatusBarText: string read get_StatusBarText write set_StatusBarText;
    property Url: DDN.System.DNUri read get_Url;
    property WindowFrameElement: DNHtmlElement read get_WindowFrameElement;
  end;

  TDNHtmlWindow = class(TDNGenericImport<DNHtmlWindowClass, DNHtmlWindow>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHtmlWindowCollectionClass = interface(DNObjectClass)
  ['{0AF78CA3-5DD2-5E9D-8ABB-B5AE42781F7B}']
  end;

  [DNTypeName('System.Windows.Forms.HtmlWindowCollection')]
  DNHtmlWindowCollection = interface(DDN.mscorlib.DNICollection)
  ['{081922F6-F637-3D6E-9751-145F7223790C}']
  { getters & setters } 

    function get_Item(index: Int32): DNHtmlWindow; overload;
    function get_Item(windowId: string): DNHtmlWindow; overload;
    function get_Count: Int32;

  { methods } 

    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNHtmlWindow read get_Item; default;
    property Item[windowId: string]: DNHtmlWindow read get_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNHtmlWindowCollection = class(TDNGenericImport<DNHtmlWindowCollectionClass, DNHtmlWindowCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImageList_ImageCollectionClass = interface(DNObjectClass)
  ['{C14FD393-27C7-532B-A963-DE5C5293FAA2}']
  end;

  [DNTypeName('System.Windows.Forms.ImageList+ImageCollection')]
  DNImageList_ImageCollection = interface(DDN.mscorlib.DNIList)
  ['{F8B7E591-462F-3CDF-8CC3-8BF53A40C4AB}']
  { getters & setters } 

    function get_Keys: DDN.System.DNStringCollection;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Empty: Boolean;
    function get_Item(index: Int32): DDN.System.Drawing.DNImage; overload;
    procedure set_Item(index: Int32; value: DDN.System.Drawing.DNImage);
    function get_Item(key: string): DDN.System.Drawing.DNImage; overload;

  { methods } 

    function Add(value: DDN.System.Drawing.DNImage; transparentColor: DDN.System.Drawing.DNColor): Int32; overload;
    procedure AddRange(images: TArray<DDN.System.Drawing.DNImage>);
    function &Contains(image: DDN.System.Drawing.DNImage): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(image: DDN.System.Drawing.DNImage): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Remove(image: DDN.System.Drawing.DNImage);
    procedure RemoveByKey(key: string);
    procedure SetKeyName(index: Int32; name: string);
    procedure Add(key: string; image: DDN.System.Drawing.DNImage); overload;
    procedure Add(key: string; icon: DDN.System.Drawing.DNIcon); overload;
    procedure Add(value: DDN.System.Drawing.DNIcon); overload;
    procedure Add(value: DDN.System.Drawing.DNImage); overload;
    function AddStrip(value: DDN.System.Drawing.DNImage): Int32;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Keys: DDN.System.DNStringCollection read get_Keys;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Empty: Boolean read get_Empty;
    property Item[index: Int32]: DDN.System.Drawing.DNImage read get_Item write set_Item; default;
    property Item[key: string]: DDN.System.Drawing.DNImage read get_Item; default;
  end;

  TDNImageList_ImageCollection = class(TDNGenericImport<DNImageList_ImageCollectionClass, DNImageList_ImageCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImageListStreamerClass = interface(DNObjectClass)
  ['{39921569-6F7F-5AB5-882F-F9FA262CDD78}']
  end;

  [DNTypeName('System.Windows.Forms.ImageListStreamer')]
  DNImageListStreamer = interface(DDN.mscorlib.DNISerializable)
  ['{47B4A554-8C3D-33FE-99C4-CB805F862EB3}']
  { methods } 

    procedure Dispose;
    procedure GetObjectData(si: DDN.mscorlib.DNSerializationInfo; context: DDN.mscorlib.DNStreamingContext);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNImageListStreamer = class(TDNGenericImport<DNImageListStreamerClass, DNImageListStreamer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNImeContextClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8FBE4E7D-2FBE-582A-9296-EB558CC2EF74}']
  { static methods } 

    {class} procedure Disable(handle: IntPtr);
    {class} procedure Enable(handle: IntPtr);
    {class} function GetImeMode(handle: IntPtr): DNImeMode;
    {class} function IsOpen(handle: IntPtr): Boolean;
    {class} procedure SetImeStatus(imeMode: DNImeMode; handle: IntPtr);
    {class} procedure SetOpenStatus(open: Boolean; handle: IntPtr);

  end;

  [DNTypeName('System.Windows.Forms.ImeContext')]
  DNImeContext = interface(DDN.mscorlib.DNObject)
  ['{2675F5ED-8481-31DB-8EB8-1F25AEAD9B46}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNImeContext = class(TDNGenericImport<DNImeContextClass, DNImeContext>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNInputLanguageClass = interface(DDN.mscorlib.DNObjectClass)
  ['{98EACF8A-A253-5127-A5A0-D7CAA48F50BA}']
  { static getter & setter } 

    {class} function get_CurrentInputLanguage: DNInputLanguage;
    {class} procedure set_CurrentInputLanguage(value: DNInputLanguage);
    {class} function get_DefaultInputLanguage: DNInputLanguage;
    {class} function get_InstalledInputLanguages: DNInputLanguageCollection;

  { static methods } 

    {class} function FromCulture(culture: DDN.mscorlib.DNCultureInfo): DNInputLanguage;

  { static propertys } 

    {class} property CurrentInputLanguage: DNInputLanguage read get_CurrentInputLanguage write set_CurrentInputLanguage;
    {class} property DefaultInputLanguage: DNInputLanguage read get_DefaultInputLanguage;
    {class} property InstalledInputLanguages: DNInputLanguageCollection read get_InstalledInputLanguages;
  end;

  [DNTypeName('System.Windows.Forms.InputLanguage')]
  DNInputLanguage = interface(DDN.mscorlib.DNObject)
  ['{7D56461E-D749-3737-A7E1-C6D356DA6A39}']
  { getters & setters } 

    function get_Culture: DDN.mscorlib.DNCultureInfo;
    function get_Handle: IntPtr;
    function get_LayoutName: string;

  { methods } 

    function Equals(value: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Culture: DDN.mscorlib.DNCultureInfo read get_Culture;
    property Handle: IntPtr read get_Handle;
    property LayoutName: string read get_LayoutName;
  end;

  TDNInputLanguage = class(TDNGenericImport<DNInputLanguageClass, DNInputLanguage>) end;

  //-------------namespace: System.Windows.Forms.Layout----------------
  DNArrangedElementCollectionClass = interface(DNObjectClass)
  ['{06BA4CF6-8960-55F5-84B6-0E16F26B416C}']
  end;

  [DNTypeName('System.Windows.Forms.Layout.ArrangedElementCollection')]
  DNArrangedElementCollection = interface(DDN.mscorlib.DNIList)
  ['{4D8A29F2-5F4D-34D8-813B-FD7ACA68CF0E}']
  { getters & setters } 

    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNArrangedElementCollection = class(TDNGenericImport<DNArrangedElementCollectionClass, DNArrangedElementCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNControl_ControlCollectionClass = interface(DNArrangedElementCollectionClass)
  ['{AE41C6A6-C91C-578F-A88E-74DCA757BA30}']
  { constructors } 

    {class} function init(owner: DNControl): DNControl_ControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.Control+ControlCollection')]
  DNControl_ControlCollection = interface(DNArrangedElementCollection)
  ['{EAF49BD1-86AE-336F-A4CB-7BDE668CF232}']
  { getters & setters } 

    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    function ContainsKey(key: string): Boolean;
    procedure Add(value: DNControl);
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Remove(value: DNControl);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure Clear;
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNControl_ControlCollection = class(TDNGenericImport<DNControl_ControlCollectionClass, DNControl_ControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNDataGridView_DataGridViewControlCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{73D8EB01-E0BC-5C53-8EBA-61B856A7EFB9}']
  { constructors } 

    {class} function init(owner: DNDataGridView): DNDataGridView_DataGridViewControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.DataGridView+DataGridViewControlCollection')]
  DNDataGridView_DataGridViewControlCollection = interface(DDN.mscorlib.DNObject)
  ['{79FB97C3-D53A-3FB4-AD03-392AEC54AF08}']
  { getters & setters } 

    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    procedure CopyTo(&array: TArray<DNControl>; index: Int32); overload;
    procedure Insert(index: Int32; value: DNControl);
    procedure Remove(value: DNControl);
    procedure Clear;
    function ContainsKey(key: string): Boolean;
    procedure Add(value: DNControl);
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNDataGridView_DataGridViewControlCollection = class(TDNGenericImport<DNDataGridView_DataGridViewControlCollectionClass, DNDataGridView_DataGridViewControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNForm_ControlCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{94273E3C-2837-569C-93F3-CDBB8EE371EB}']
  { constructors } 

    {class} function init(owner: DNForm): DNForm_ControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.Form+ControlCollection')]
  DNForm_ControlCollection = interface(DDN.mscorlib.DNObject)
  ['{D001C9E9-8349-3342-B761-499EE58B3D29}']
  { getters & setters } 

    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    procedure Add(value: DNControl);
    procedure Remove(value: DNControl);
    function ContainsKey(key: string): Boolean;
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure Clear;
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNForm_ControlCollection = class(TDNGenericImport<DNForm_ControlCollectionClass, DNForm_ControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMdiClient_ControlCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0910A760-BF34-5938-BFBE-49CC79CD7CBB}']
  { constructors } 

    {class} function init(owner: DNMdiClient): DNMdiClient_ControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.MdiClient+ControlCollection')]
  DNMdiClient_ControlCollection = interface(DDN.mscorlib.DNObject)
  ['{80FDD8D7-FFAC-39B8-8A21-C8192D2E69A1}']
  { getters & setters } 

    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    procedure Add(value: DNControl);
    procedure Remove(value: DNControl);
    function ContainsKey(key: string): Boolean;
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure Clear;
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNMdiClient_ControlCollection = class(TDNGenericImport<DNMdiClient_ControlCollectionClass, DNMdiClient_ControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabControl_ControlCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{790E6211-28EB-52F7-AF4E-FF92D0EA86C1}']
  { constructors } 

    {class} function init(owner: DNTabControl): DNTabControl_ControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.TabControl+ControlCollection')]
  DNTabControl_ControlCollection = interface(DDN.mscorlib.DNObject)
  ['{C7FBE0B9-EFB0-3D6E-BD2E-7674A37A6914}']
  { getters & setters } 

    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    procedure Remove(value: DNControl);
    procedure Add(value: DNControl);
    function ContainsKey(key: string): Boolean;
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure Clear;
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNTabControl_ControlCollection = class(TDNGenericImport<DNTabControl_ControlCollectionClass, DNTabControl_ControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutControlCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3797D2A3-1F7B-5006-8FFB-EA7C9B547768}']
  { constructors } 

    {class} function init(container: DNTableLayoutPanel): DNTableLayoutControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.TableLayoutControlCollection')]
  DNTableLayoutControlCollection = interface(DDN.mscorlib.DNObject)
  ['{40D95844-5DF0-36BF-BF0E-8655BFD9465D}']
  { getters & setters } 

    function get_Container: DNTableLayoutPanel;
    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    procedure Add(control: DNControl; column: Int32; row: Int32); overload;
    function ContainsKey(key: string): Boolean;
    procedure Add(value: DNControl); overload;
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Remove(value: DNControl);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure Clear;
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Container: DNTableLayoutPanel read get_Container;
    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNTableLayoutControlCollection = class(TDNGenericImport<DNTableLayoutControlCollectionClass, DNTableLayoutControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabPage_TabPageControlCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E27A32E5-4157-50EC-90DF-CDE05FB27A8C}']
  { constructors } 

    {class} function init(owner: DNTabPage): DNTabPage_TabPageControlCollection;

  end;

  [DNTypeName('System.Windows.Forms.TabPage+TabPageControlCollection')]
  DNTabPage_TabPageControlCollection = interface(DDN.mscorlib.DNObject)
  ['{06D8ED22-ABA0-3A78-A822-6A463C9C84B7}']
  { getters & setters } 

    function get_Owner: DNControl;
    function get_Item(index: Int32): DNControl; overload;
    function get_Item(key: string): DNControl; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    procedure Add(value: DNControl);
    function ContainsKey(key: string): Boolean;
    procedure AddRange(controls: TArray<DNControl>);
    function &Contains(control: DNControl): Boolean;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(control: DNControl): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Remove(value: DNControl);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure Clear;
    function GetChildIndex(child: DNControl): Int32; overload;
    function GetChildIndex(child: DNControl; throwException: Boolean): Int32; overload;
    procedure SetChildIndex(child: DNControl; newIndex: Int32);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNControl>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Owner: DNControl read get_Owner;
    property Item[index: Int32]: DNControl read get_Item; default;
    property Item[key: string]: DNControl read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNTabPage_TabPageControlCollection = class(TDNGenericImport<DNTabPage_TabPageControlCollectionClass, DNTabPage_TabPageControlCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripItemCollectionClass = interface(DNArrangedElementCollectionClass)
  ['{62814760-B81F-5F30-84CC-E320E1C2B63F}']
  { constructors } 

    {class} function init(owner: DNToolStrip; value: TArray<DNToolStripItem>): DNToolStripItemCollection;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripItemCollection')]
  DNToolStripItemCollection = interface(DNArrangedElementCollection)
  ['{98C9853F-B65D-34CC-B3BB-8CADE39E7B47}']
  { getters & setters } 

    function get_Item(index: Int32): DNToolStripItem; overload;
    function get_Item(key: string): DNToolStripItem; overload;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    function Add(text: string): DNToolStripItem; overload;
    function Add(image: DDN.System.Drawing.DNImage): DNToolStripItem; overload;
    function Add(text: string; image: DDN.System.Drawing.DNImage): DNToolStripItem; overload;
    function Add(text: string; image: DDN.System.Drawing.DNImage; onClick: DDN.mscorlib.DNEventHandler): DNToolStripItem; overload;
    function Add(value: DNToolStripItem): Int32; overload;
    procedure AddRange(toolStripItems: TArray<DNToolStripItem>); overload;
    procedure AddRange(toolStripItems: DNToolStripItemCollection); overload;
    function &Contains(value: DNToolStripItem): Boolean;
    procedure Clear;
    function ContainsKey(key: string): Boolean;
    procedure Insert(index: Int32; value: DNToolStripItem);
    function IndexOf(value: DNToolStripItem): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Remove(value: DNToolStripItem);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    procedure CopyTo(&array: TArray<DNToolStripItem>; index: Int32); overload;
    function Find(key: string; searchAllChildren: Boolean): TArray<DNToolStripItem>;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNToolStripItem read get_Item; default;
    property Item[key: string]: DNToolStripItem read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNToolStripItemCollection = class(TDNGenericImport<DNToolStripItemCollectionClass, DNToolStripItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripPanel_ToolStripPanelRowCollectionClass = interface(DNArrangedElementCollectionClass)
  ['{FA12B0D8-62BF-50C1-88F9-9CC835AEA7A0}']
  { constructors } 

    {class} function init(owner: DNToolStripPanel): DNToolStripPanel_ToolStripPanelRowCollection; overload;
    {class} function init(owner: DNToolStripPanel; value: TArray<DNToolStripPanelRow>): DNToolStripPanel_ToolStripPanelRowCollection; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripPanel+ToolStripPanelRowCollection')]
  DNToolStripPanel_ToolStripPanelRowCollection = interface(DNArrangedElementCollection)
  ['{9E8239A9-063B-3268-823F-FB601569A27A}']
  { getters & setters } 

    function get_Item(index: Int32): DNToolStripPanelRow;
    function get_IsReadOnly: Boolean;
    function get_Count: Int32;

  { methods } 

    function Add(value: DNToolStripPanelRow): Int32;
    procedure AddRange(value: TArray<DNToolStripPanelRow>); overload;
    procedure AddRange(value: DNToolStripPanel_ToolStripPanelRowCollection); overload;
    function &Contains(value: DNToolStripPanelRow): Boolean;
    procedure Clear;
    function IndexOf(value: DNToolStripPanelRow): Int32;
    procedure Insert(index: Int32; value: DNToolStripPanelRow);
    procedure Remove(value: DNToolStripPanelRow);
    procedure RemoveAt(index: Int32);
    procedure CopyTo(&array: TArray<DNToolStripPanelRow>; index: Int32); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32); overload;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNToolStripPanelRow read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Count: Int32 read get_Count;
  end;

  TDNToolStripPanel_ToolStripPanelRowCollection = class(TDNGenericImport<DNToolStripPanel_ToolStripPanelRowCollectionClass, DNToolStripPanel_ToolStripPanelRowCollection>) end;

  //-------------namespace: System.Windows.Forms.Layout----------------
  DNLayoutEngineClass = interface(DDN.mscorlib.DNObjectClass)
  ['{42C94449-53F1-50C3-8153-30AB76B088E3}']
  end;

  [DNTypeName('System.Windows.Forms.Layout.LayoutEngine')]
  DNLayoutEngine = interface(DDN.mscorlib.DNObject)
  ['{71965DAB-DCD3-39E7-B21B-7BF25C62E7B2}']
  { methods } 

    procedure InitLayout(child: DDN.mscorlib.DNObject; specified: DNBoundsSpecified);
    function Layout(container: DDN.mscorlib.DNObject; layoutEventArgs: DNLayoutEventArgs): Boolean;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNLayoutEngine = class(TDNGenericImport<DNLayoutEngineClass, DNLayoutEngine>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLayoutSettingsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{81B53E49-7ABC-553F-BC0C-CD1D8F511A49}']
  end;

  [DNTypeName('System.Windows.Forms.LayoutSettings')]
  DNLayoutSettings = interface(DDN.mscorlib.DNObject)
  ['{056E4D19-4395-3A6A-B2BD-CA3C42A3F891}']
  { getters & setters } 

    function get_LayoutEngine: DNLayoutEngine;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
  end;

  TDNLayoutSettings = class(TDNGenericImport<DNLayoutSettingsClass, DNLayoutSettings>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNFlowLayoutSettingsClass = interface(DNLayoutSettingsClass)
  ['{7FF77F9E-EA76-5A26-A8E1-8125D92D834F}']
  end;

  [DNTypeName('System.Windows.Forms.FlowLayoutSettings')]
  DNFlowLayoutSettings = interface(DNLayoutSettings)
  ['{971ECABA-A1B4-3CF7-8F38-B81F982FCCE1}']
  { getters & setters } 

    function get_LayoutEngine: DNLayoutEngine;
    function get_FlowDirection: DNFlowDirection;
    procedure set_FlowDirection(value: DNFlowDirection);
    function get_WrapContents: Boolean;
    procedure set_WrapContents(value: Boolean);

  { methods } 

    procedure SetFlowBreak(child: DDN.mscorlib.DNObject; value: Boolean);
    function GetFlowBreak(child: DDN.mscorlib.DNObject): Boolean;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property FlowDirection: DNFlowDirection read get_FlowDirection write set_FlowDirection;
    property WrapContents: Boolean read get_WrapContents write set_WrapContents;
  end;

  TDNFlowLayoutSettings = class(TDNGenericImport<DNFlowLayoutSettingsClass, DNFlowLayoutSettings>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutSettingsClass = interface(DNLayoutSettingsClass)
  ['{F751691A-4C40-5F00-B8F3-DDE337BCEFB3}']
  end;

  [DNTypeName('System.Windows.Forms.TableLayoutSettings')]
  DNTableLayoutSettings = interface(DNLayoutSettings)
  ['{C89F08EE-996A-30FD-8DC3-A01E534D359A}']
  { getters & setters } 

    function get_LayoutEngine: DNLayoutEngine;
    function get_ColumnCount: Int32;
    procedure set_ColumnCount(value: Int32);
    function get_RowCount: Int32;
    procedure set_RowCount(value: Int32);
    function get_RowStyles: DNTableLayoutRowStyleCollection;
    function get_ColumnStyles: DNTableLayoutColumnStyleCollection;
    function get_GrowStyle: DNTableLayoutPanelGrowStyle;
    procedure set_GrowStyle(value: DNTableLayoutPanelGrowStyle);

  { methods } 

    procedure SetRow(control: DDN.mscorlib.DNObject; row: Int32);
    procedure SetColumn(control: DDN.mscorlib.DNObject; column: Int32);
    function GetColumnSpan(control: DDN.mscorlib.DNObject): Int32;
    function GetRowSpan(control: DDN.mscorlib.DNObject): Int32;
    function GetRow(control: DDN.mscorlib.DNObject): Int32;
    function GetCellPosition(control: DDN.mscorlib.DNObject): DNTableLayoutPanelCellPosition;
    procedure SetCellPosition(control: DDN.mscorlib.DNObject; cellPosition: DNTableLayoutPanelCellPosition);
    function GetColumn(control: DDN.mscorlib.DNObject): Int32;
    procedure SetColumnSpan(control: DDN.mscorlib.DNObject; value: Int32);
    procedure SetRowSpan(control: DDN.mscorlib.DNObject; value: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property LayoutEngine: DNLayoutEngine read get_LayoutEngine;
    property ColumnCount: Int32 read get_ColumnCount write set_ColumnCount;
    property RowCount: Int32 read get_RowCount write set_RowCount;
    property RowStyles: DNTableLayoutRowStyleCollection read get_RowStyles;
    property ColumnStyles: DNTableLayoutColumnStyleCollection read get_ColumnStyles;
    property GrowStyle: DNTableLayoutPanelGrowStyle read get_GrowStyle write set_GrowStyle;
  end;

  TDNTableLayoutSettings = class(TDNGenericImport<DNTableLayoutSettingsClass, DNTableLayoutSettings>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkLabel_LinkClass = interface(DDN.mscorlib.DNObjectClass)
  ['{5200D71F-A65F-5B81-9FF8-9E561EC5CC34}']
  { constructors } 

    {class} function init: DNLinkLabel_Link; overload;
    {class} function init(start: Int32; length: Int32): DNLinkLabel_Link; overload;
    {class} function init(start: Int32; length: Int32; linkData: DDN.mscorlib.DNObject): DNLinkLabel_Link; overload;

  end;

  [DNTypeName('System.Windows.Forms.LinkLabel+Link')]
  DNLinkLabel_Link = interface(DDN.mscorlib.DNObject)
  ['{FAF88917-ED16-3EFE-B62E-4EFA5577953E}']
  { getters & setters } 

    function get_Description: string;
    procedure set_Description(value: string);
    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_Length: Int32;
    procedure set_Length(value: Int32);
    function get_LinkData: DDN.mscorlib.DNObject;
    procedure set_LinkData(value: DDN.mscorlib.DNObject);
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Start: Int32;
    procedure set_Start(value: Int32);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Visited: Boolean;
    procedure set_Visited(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Description: string read get_Description write set_Description;
    property Enabled: Boolean read get_Enabled write set_Enabled;
    property Length: Int32 read get_Length write set_Length;
    property LinkData: DDN.mscorlib.DNObject read get_LinkData write set_LinkData;
    property Name: string read get_Name write set_Name;
    property Start: Int32 read get_Start write set_Start;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Visited: Boolean read get_Visited write set_Visited;
  end;

  TDNLinkLabel_Link = class(TDNGenericImport<DNLinkLabel_LinkClass, DNLinkLabel_Link>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNLinkLabel_LinkCollectionClass = interface(DNObjectClass)
  ['{D21524CC-0A02-5538-851B-108C1CDAAA2C}']
  { constructors } 

    {class} function init(owner: DNLinkLabel): DNLinkLabel_LinkCollection;

  end;

  [DNTypeName('System.Windows.Forms.LinkLabel+LinkCollection')]
  DNLinkLabel_LinkCollection = interface(DDN.mscorlib.DNIList)
  ['{7ACAD7BA-A3D0-3DC5-87F7-8F9285033F44}']
  { getters & setters } 

    function get_Item(index: Int32): DNLinkLabel_Link; overload;
    procedure set_Item(index: Int32; value: DNLinkLabel_Link);
    function get_Item(key: string): DNLinkLabel_Link; overload;
    function get_Count: Int32;
    function get_LinksAdded: Boolean;
    function get_IsReadOnly: Boolean;

  { methods } 

    function Add(start: Int32; length: Int32): DNLinkLabel_Link; overload;
    function Add(start: Int32; length: Int32; linkData: DDN.mscorlib.DNObject): DNLinkLabel_Link; overload;
    function Add(value: DNLinkLabel_Link): Int32; overload;
    function &Contains(link: DNLinkLabel_Link): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(link: DNLinkLabel_Link): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Clear;
    procedure Remove(value: DNLinkLabel_Link);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNLinkLabel_Link read get_Item write set_Item; default;
    property Item[key: string]: DNLinkLabel_Link read get_Item; default;
    property Count: Int32 read get_Count;
    property LinksAdded: Boolean read get_LinksAdded;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNLinkLabel_LinkCollection = class(TDNGenericImport<DNLinkLabel_LinkCollectionClass, DNLinkLabel_LinkCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBindingHelperClass = interface(DDN.mscorlib.DNObjectClass)
  ['{03B366A6-C33A-561A-BCBC-785C80EAB957}']
  { static methods } 

    {class} function GetList(list: DDN.mscorlib.DNObject): DDN.mscorlib.DNObject; overload;
    {class} function GetListName(list: DDN.mscorlib.DNObject; listAccessors: TArray<DDN.System.DNPropertyDescriptor>): string;
    {class} function GetListItemProperties(list: DDN.mscorlib.DNObject; listAccessors: TArray<DDN.System.DNPropertyDescriptor>): DDN.System.DNPropertyDescriptorCollection; overload;
    {class} function GetListItemType(list: DDN.mscorlib.DNObject): DDN.mscorlib.DNType; overload;
    {class} function GetListItemType(dataSource: DDN.mscorlib.DNObject; dataMember: string): DDN.mscorlib.DNType; overload;
    {class} function GetList(dataSource: DDN.mscorlib.DNObject; dataMember: string): DDN.mscorlib.DNObject; overload;
    {class} function GetListItemProperties(list: DDN.mscorlib.DNObject): DDN.System.DNPropertyDescriptorCollection; overload;
    {class} function GetListItemProperties(dataSource: DDN.mscorlib.DNObject; dataMember: string; listAccessors: TArray<DDN.System.DNPropertyDescriptor>): DDN.System.DNPropertyDescriptorCollection; overload;

  end;

  [DNTypeName('System.Windows.Forms.ListBindingHelper')]
  DNListBindingHelper = interface(DDN.mscorlib.DNObject)
  ['{FD2374F6-49DE-38F8-84FA-BE21E975D889}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNListBindingHelper = class(TDNGenericImport<DNListBindingHelperClass, DNListBindingHelper>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBox_IntegerCollectionClass = interface(DNObjectClass)
  ['{A3D7CA30-0810-5568-9E32-16E8EC0D5468}']
  { constructors } 

    {class} function init(owner: DNListBox): DNListBox_IntegerCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListBox+IntegerCollection')]
  DNListBox_IntegerCollection = interface(DDN.mscorlib.DNIList)
  ['{CBDCCF57-E074-3D42-A9F6-54007964A414}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): Int32;
    procedure set_Item(index: Int32; value: Int32);

  { methods } 

    function &Contains(item: Int32): Boolean;
    procedure Clear;
    function IndexOf(item: Int32): Int32;
    function Add(item: Int32): Int32;
    procedure AddRange(items: TArray<Int32>); overload;
    procedure AddRange(value: DNListBox_IntegerCollection); overload;
    procedure Remove(item: Int32);
    procedure CopyTo(destination: DDN.mscorlib.DNArray; index: Int32);
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: Int32 read get_Item write set_Item; default;
  end;

  TDNListBox_IntegerCollection = class(TDNGenericImport<DNListBox_IntegerCollectionClass, DNListBox_IntegerCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBox_ObjectCollectionClass = interface(DNObjectClass)
  ['{F4C7D6FA-F7E3-5163-9DA0-FD78B6D6AC42}']
  { constructors } 

    {class} function init(owner: DNListBox): DNListBox_ObjectCollection; overload;
    {class} function init(owner: DNListBox; value: DNListBox_ObjectCollection): DNListBox_ObjectCollection; overload;
    {class} function init(owner: DNListBox; value: TArray<DDN.mscorlib.DNObject>): DNListBox_ObjectCollection; overload;

  end;

  [DNTypeName('System.Windows.Forms.ListBox+ObjectCollection')]
  DNListBox_ObjectCollection = interface(DDN.mscorlib.DNIList)
  ['{59A495A3-DBA4-37CD-920B-DAC1704B5623}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DDN.mscorlib.DNObject;
    procedure set_Item(index: Int32; value: DDN.mscorlib.DNObject);

  { methods } 

    function Add(item: DDN.mscorlib.DNObject): Int32;
    procedure AddRange(value: DNListBox_ObjectCollection); overload;
    procedure AddRange(items: TArray<DDN.mscorlib.DNObject>); overload;
    procedure Clear;
    function &Contains(value: DDN.mscorlib.DNObject): Boolean;
    procedure CopyTo(destination: TArray<DDN.mscorlib.DNObject>; arrayIndex: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(value: DDN.mscorlib.DNObject): Int32;
    procedure Insert(index: Int32; item: DDN.mscorlib.DNObject);
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
  end;

  TDNListBox_ObjectCollection = class(TDNGenericImport<DNListBox_ObjectCollectionClass, DNListBox_ObjectCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNCheckedListBox_ObjectCollectionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{916AFEFC-E2E3-58C3-89EC-ABF51F988C3B}']
  { constructors } 

    {class} function init(owner: DNCheckedListBox): DNCheckedListBox_ObjectCollection;

  end;

  [DNTypeName('System.Windows.Forms.CheckedListBox+ObjectCollection')]
  DNCheckedListBox_ObjectCollection = interface(DDN.mscorlib.DNObject)
  ['{CCA5C058-C6AC-3949-9FA3-267312B06C59}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DDN.mscorlib.DNObject;
    procedure set_Item(index: Int32; value: DDN.mscorlib.DNObject);

  { methods } 

    function Add(item: DDN.mscorlib.DNObject; isChecked: Boolean): Int32; overload;
    function Add(item: DDN.mscorlib.DNObject; check: DNCheckState): Int32; overload;
    function Add(item: DDN.mscorlib.DNObject): Int32; overload;
    procedure AddRange(value: DNListBox_ObjectCollection); overload;
    procedure AddRange(items: TArray<DDN.mscorlib.DNObject>); overload;
    procedure Clear;
    function &Contains(value: DDN.mscorlib.DNObject): Boolean;
    procedure CopyTo(destination: TArray<DDN.mscorlib.DNObject>; arrayIndex: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(value: DDN.mscorlib.DNObject): Int32;
    procedure Insert(index: Int32; item: DDN.mscorlib.DNObject);
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DDN.mscorlib.DNObject read get_Item write set_Item; default;
  end;

  TDNCheckedListBox_ObjectCollection = class(TDNGenericImport<DNCheckedListBox_ObjectCollectionClass, DNCheckedListBox_ObjectCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBox_SelectedIndexCollectionClass = interface(DNObjectClass)
  ['{509E7A1A-54FF-5FC7-B5AE-75AD0563E285}']
  { constructors } 

    {class} function init(owner: DNListBox): DNListBox_SelectedIndexCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListBox+SelectedIndexCollection')]
  DNListBox_SelectedIndexCollection = interface(DDN.mscorlib.DNIList)
  ['{D955F992-3665-3673-AC94-8ADA323E85DB}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): Int32;

  { methods } 

    function &Contains(selectedIndex: Int32): Boolean;
    function IndexOf(selectedIndex: Int32): Int32;
    procedure CopyTo(destination: DDN.mscorlib.DNArray; index: Int32);
    procedure Clear;
    procedure Add(index: Int32);
    procedure Remove(index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: Int32 read get_Item; default;
  end;

  TDNListBox_SelectedIndexCollection = class(TDNGenericImport<DNListBox_SelectedIndexCollectionClass, DNListBox_SelectedIndexCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListBox_SelectedObjectCollectionClass = interface(DNObjectClass)
  ['{69B1DC8B-1DFA-5821-8D59-F2B0A0E9DBEF}']
  { constructors } 

    {class} function init(owner: DNListBox): DNListBox_SelectedObjectCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListBox+SelectedObjectCollection')]
  DNListBox_SelectedObjectCollection = interface(DDN.mscorlib.DNIList)
  ['{90A2DA79-CCC4-34BB-BD07-22337F6BF386}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function &Contains(selectedObject: DDN.mscorlib.DNObject): Boolean;
    function IndexOf(selectedObject: DDN.mscorlib.DNObject): Int32;
    procedure CopyTo(destination: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    procedure Clear;
    procedure Add(value: DDN.mscorlib.DNObject);
    procedure Remove(value: DDN.mscorlib.DNObject);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNListBox_SelectedObjectCollection = class(TDNGenericImport<DNListBox_SelectedObjectCollectionClass, DNListBox_SelectedObjectCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListView_CheckedIndexCollectionClass = interface(DNObjectClass)
  ['{9EC8FCDF-F089-5B82-875A-291AAB9C572F}']
  { constructors } 

    {class} function init(owner: DNListView): DNListView_CheckedIndexCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListView+CheckedIndexCollection')]
  DNListView_CheckedIndexCollection = interface(DDN.mscorlib.DNIList)
  ['{4F4E78EF-968C-3BC7-A2A3-4A01B8B0EE58}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function &Contains(checkedIndex: Int32): Boolean;
    function IndexOf(checkedIndex: Int32): Int32;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: Int32 read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNListView_CheckedIndexCollection = class(TDNGenericImport<DNListView_CheckedIndexCollectionClass, DNListView_CheckedIndexCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListView_CheckedListViewItemCollectionClass = interface(DNObjectClass)
  ['{74E67500-F3C7-55BF-B38A-8AFE06A03985}']
  { constructors } 

    {class} function init(owner: DNListView): DNListView_CheckedListViewItemCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListView+CheckedListViewItemCollection')]
  DNListView_CheckedListViewItemCollection = interface(DDN.mscorlib.DNIList)
  ['{63878571-8B11-3ADB-A663-CB4C14A23DA7}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNListViewItem; overload;
    function get_Item(key: string): DNListViewItem; overload;
    function get_IsReadOnly: Boolean;

  { methods } 

    function &Contains(item: DNListViewItem): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(item: DNListViewItem): Int32;
    function IndexOfKey(key: string): Int32;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNListViewItem read get_Item; default;
    property Item[key: string]: DNListViewItem read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNListView_CheckedListViewItemCollection = class(TDNGenericImport<DNListView_CheckedListViewItemCollectionClass, DNListView_CheckedListViewItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListView_ColumnHeaderCollectionClass = interface(DNObjectClass)
  ['{E6D9964B-A655-5D60-B9D1-65D92F86EBEC}']
  { constructors } 

    {class} function init(owner: DNListView): DNListView_ColumnHeaderCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListView+ColumnHeaderCollection')]
  DNListView_ColumnHeaderCollection = interface(DDN.mscorlib.DNIList)
  ['{EEE7377A-FBBC-3800-900B-4A386A34D087}']
  { getters & setters } 

    function get_Item(index: Int32): DNColumnHeader; overload;
    function get_Item(key: string): DNColumnHeader; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    procedure RemoveByKey(key: string);
    function IndexOfKey(key: string): Int32;
    function Add(text: string; width: Int32; textAlign: DNHorizontalAlignment): DNColumnHeader; overload;
    function Add(value: DNColumnHeader): Int32; overload;
    function Add(text: string): DNColumnHeader; overload;
    function Add(text: string; width: Int32): DNColumnHeader; overload;
    function Add(key: string; text: string): DNColumnHeader; overload;
    function Add(key: string; text: string; width: Int32): DNColumnHeader; overload;
    function Add(key: string; text: string; width: Int32; textAlign: DNHorizontalAlignment; imageKey: string): DNColumnHeader; overload;
    function Add(key: string; text: string; width: Int32; textAlign: DNHorizontalAlignment; imageIndex: Int32): DNColumnHeader; overload;
    procedure Clear;
    function &Contains(value: DNColumnHeader): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(value: DNColumnHeader): Int32;
    procedure Insert(index: Int32; text: string; width: Int32; textAlign: DNHorizontalAlignment); overload;
    procedure Insert(index: Int32; text: string); overload;
    procedure Insert(index: Int32; text: string; width: Int32); overload;
    procedure Insert(index: Int32; key: string; text: string); overload;
    procedure Insert(index: Int32; key: string; text: string; width: Int32); overload;
    procedure Insert(index: Int32; key: string; text: string; width: Int32; textAlign: DNHorizontalAlignment; imageKey: string); overload;
    procedure Insert(index: Int32; key: string; text: string; width: Int32; textAlign: DNHorizontalAlignment; imageIndex: Int32); overload;
    procedure Remove(column: DNColumnHeader);
    procedure AddRange(values: TArray<DNColumnHeader>);
    procedure Insert(index: Int32; value: DNColumnHeader); overload;
    procedure RemoveAt(index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNColumnHeader read get_Item; default;
    property Item[key: string]: DNColumnHeader read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNListView_ColumnHeaderCollection = class(TDNGenericImport<DNListView_ColumnHeaderCollectionClass, DNListView_ColumnHeaderCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListView_ListViewItemCollectionClass = interface(DNObjectClass)
  ['{7E405542-4B64-5B6F-91CD-FE632D69E2FA}']
  { constructors } 

    {class} function init(owner: DNListView): DNListView_ListViewItemCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListView+ListViewItemCollection')]
  DNListView_ListViewItemCollection = interface(DDN.mscorlib.DNIList)
  ['{0D4D559D-005C-3762-8445-8EE65FFC8A8D}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DNListViewItem; overload;
    procedure set_Item(index: Int32; value: DNListViewItem);
    function get_Item(key: string): DNListViewItem; overload;

  { methods } 

    function Add(text: string): DNListViewItem; overload;
    function Add(text: string; imageIndex: Int32): DNListViewItem; overload;
    function Add(value: DNListViewItem): DNListViewItem; overload;
    function Add(text: string; imageKey: string): DNListViewItem; overload;
    function Add(key: string; text: string; imageKey: string): DNListViewItem; overload;
    function Add(key: string; text: string; imageIndex: Int32): DNListViewItem; overload;
    procedure AddRange(items: TArray<DNListViewItem>); overload;
    procedure Clear;
    function &Contains(item: DNListViewItem): Boolean;
    function ContainsKey(key: string): Boolean;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(item: DNListViewItem): Int32;
    function IndexOfKey(key: string): Int32;
    function Insert(index: Int32; text: string): DNListViewItem; overload;
    function Insert(index: Int32; text: string; imageIndex: Int32): DNListViewItem; overload;
    function Insert(index: Int32; text: string; imageKey: string): DNListViewItem; overload;
    function Insert(index: Int32; key: string; text: string; imageKey: string): DNListViewItem; overload;
    function Insert(index: Int32; key: string; text: string; imageIndex: Int32): DNListViewItem; overload;
    procedure Remove(item: DNListViewItem);
    procedure RemoveByKey(key: string);
    procedure AddRange(items: DNListView_ListViewItemCollection); overload;
    function Find(key: string; searchAllSubItems: Boolean): TArray<DNListViewItem>;
    function Insert(index: Int32; item: DNListViewItem): DNListViewItem; overload;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DNListViewItem read get_Item write set_Item; default;
    property Item[key: string]: DNListViewItem read get_Item; default;
  end;

  TDNListView_ListViewItemCollection = class(TDNGenericImport<DNListView_ListViewItemCollectionClass, DNListView_ListViewItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListView_SelectedIndexCollectionClass = interface(DNObjectClass)
  ['{59CFAAE0-D1C9-5DAB-89ED-361307ABD4E7}']
  { constructors } 

    {class} function init(owner: DNListView): DNListView_SelectedIndexCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListView+SelectedIndexCollection')]
  DNListView_SelectedIndexCollection = interface(DDN.mscorlib.DNIList)
  ['{CAB31858-9146-33FE-876A-145C132E19AD}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function &Contains(selectedIndex: Int32): Boolean;
    function IndexOf(selectedIndex: Int32): Int32;
    procedure Clear;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function Add(itemIndex: Int32): Int32;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    procedure Remove(itemIndex: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: Int32 read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNListView_SelectedIndexCollection = class(TDNGenericImport<DNListView_SelectedIndexCollectionClass, DNListView_SelectedIndexCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListView_SelectedListViewItemCollectionClass = interface(DNObjectClass)
  ['{806A3843-0DAA-5C84-87BE-2E276AC8EEDA}']
  { constructors } 

    {class} function init(owner: DNListView): DNListView_SelectedListViewItemCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListView+SelectedListViewItemCollection')]
  DNListView_SelectedListViewItemCollection = interface(DDN.mscorlib.DNIList)
  ['{B81DCC5D-9FB5-3CC6-9E6A-1BE6A418B040}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNListViewItem; overload;
    function get_Item(key: string): DNListViewItem; overload;
    function get_IsReadOnly: Boolean;

  { methods } 

    function ContainsKey(key: string): Boolean;
    function &Contains(item: DNListViewItem): Boolean;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function IndexOf(item: DNListViewItem): Int32;
    function IndexOfKey(key: string): Int32;
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNListViewItem read get_Item; default;
    property Item[key: string]: DNListViewItem read get_Item; default;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNListView_SelectedListViewItemCollection = class(TDNGenericImport<DNListView_SelectedListViewItemCollectionClass, DNListView_SelectedListViewItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewGroupClass = interface(DNObjectClass)
  ['{C714D6E9-72A7-553A-87E7-A5FBFD84D9F3}']
  { constructors } 

    {class} function init: DNListViewGroup; overload;
    {class} function init(key: string; headerText: string): DNListViewGroup; overload;
    {class} function init(header: string): DNListViewGroup; overload;
    {class} function init(header: string; headerAlignment: DNHorizontalAlignment): DNListViewGroup; overload;

  end;

  [DNTypeName('System.Windows.Forms.ListViewGroup')]
  DNListViewGroup = interface(DDN.mscorlib.DNISerializable)
  ['{F6D2641D-431F-3E29-BC15-B27CC94EA68E}']
  { getters & setters } 

    function get_Header: string;
    procedure set_Header(value: string);
    function get_HeaderAlignment: DNHorizontalAlignment;
    procedure set_HeaderAlignment(value: DNHorizontalAlignment);
    function get_Items: DNListView_ListViewItemCollection;
    function get_ListView: DNListView;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);

  { methods } 

    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Header: string read get_Header write set_Header;
    property HeaderAlignment: DNHorizontalAlignment read get_HeaderAlignment write set_HeaderAlignment;
    property Items: DNListView_ListViewItemCollection read get_Items;
    property ListView: DNListView read get_ListView;
    property Name: string read get_Name write set_Name;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
  end;

  TDNListViewGroup = class(TDNGenericImport<DNListViewGroupClass, DNListViewGroup>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewGroupCollectionClass = interface(DNObjectClass)
  ['{06AF69D2-149F-59B2-A7E6-3C3921295322}']
  end;

  [DNTypeName('System.Windows.Forms.ListViewGroupCollection')]
  DNListViewGroupCollection = interface(DDN.mscorlib.DNIList)
  ['{1575F878-E511-3808-950F-5D596272AE00}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNListViewGroup; overload;
    procedure set_Item(index: Int32; value: DNListViewGroup); overload;
    function get_Item(key: string): DNListViewGroup; overload;
    procedure set_Item(key: string; value: DNListViewGroup); overload;

  { methods } 

    function Add(group: DNListViewGroup): Int32; overload;
    function Add(key: string; headerText: string): DNListViewGroup; overload;
    procedure AddRange(groups: TArray<DNListViewGroup>); overload;
    procedure AddRange(groups: DNListViewGroupCollection); overload;
    function &Contains(value: DNListViewGroup): Boolean;
    procedure CopyTo(&array: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function IndexOf(value: DNListViewGroup): Int32;
    procedure Insert(index: Int32; group: DNListViewGroup);
    procedure Remove(group: DNListViewGroup);
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNListViewGroup read get_Item write set_Item; default;
    property Item[key: string]: DNListViewGroup read get_Item write set_Item; default;
  end;

  TDNListViewGroupCollection = class(TDNGenericImport<DNListViewGroupCollectionClass, DNListViewGroupCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewHitTestInfoClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6476E04C-76D0-5B12-AC38-8DC96F9DEC4E}']
  { constructors } 

    {class} function init(hitItem: DNListViewItem; hitSubItem: DNListViewItem_ListViewSubItem; hitLocation: DNListViewHitTestLocations): DNListViewHitTestInfo;

  end;

  [DNTypeName('System.Windows.Forms.ListViewHitTestInfo')]
  DNListViewHitTestInfo = interface(DDN.mscorlib.DNObject)
  ['{05536773-39B1-3FB6-9743-C8C8439D1194}']
  { getters & setters } 

    function get_Location: DNListViewHitTestLocations;
    function get_Item: DNListViewItem;
    function get_SubItem: DNListViewItem_ListViewSubItem;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Location: DNListViewHitTestLocations read get_Location;
    property Item: DNListViewItem read get_Item;
    property SubItem: DNListViewItem_ListViewSubItem read get_SubItem;
  end;

  TDNListViewHitTestInfo = class(TDNGenericImport<DNListViewHitTestInfoClass, DNListViewHitTestInfo>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewInsertionMarkClass = interface(DDN.mscorlib.DNObjectClass)
  ['{059FFC42-6D27-52A1-9BDC-F89163091B1A}']
  end;

  [DNTypeName('System.Windows.Forms.ListViewInsertionMark')]
  DNListViewInsertionMark = interface(DDN.mscorlib.DNObject)
  ['{2D6495D2-1DB8-3101-B52E-8B7A720EF147}']
  { getters & setters } 

    function get_AppearsAfterItem: Boolean;
    procedure set_AppearsAfterItem(value: Boolean);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Color: DDN.System.Drawing.DNColor;
    procedure set_Color(value: DDN.System.Drawing.DNColor);
    function get_Index: Int32;
    procedure set_Index(value: Int32);

  { methods } 

    function NearestIndex(pt: DDN.System.Drawing.DNPoint): Int32;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property AppearsAfterItem: Boolean read get_AppearsAfterItem write set_AppearsAfterItem;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Color: DDN.System.Drawing.DNColor read get_Color write set_Color;
    property Index: Int32 read get_Index write set_Index;
  end;

  TDNListViewInsertionMark = class(TDNGenericImport<DNListViewInsertionMarkClass, DNListViewInsertionMark>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewItemClass = interface(DNObjectClass)
  ['{64DB1E2B-1A0C-577E-A6D1-8F2F46D2BB75}']
  { constructors } 

    {class} function init: DNListViewItem; overload;
    {class} function init(text: string): DNListViewItem; overload;
    {class} function init(text: string; imageIndex: Int32): DNListViewItem; overload;
    {class} function init(items: TArray<string>): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageIndex: Int32): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageIndex: Int32; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont): DNListViewItem; overload;
    {class} function init(subItems: TArray<DNListViewItem_ListViewSubItem>; imageIndex: Int32): DNListViewItem; overload;
    {class} function init(group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(text: string; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(text: string; imageIndex: Int32; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(items: TArray<string>; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageIndex: Int32; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageIndex: Int32; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(subItems: TArray<DNListViewItem_ListViewSubItem>; imageIndex: Int32; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(text: string; imageKey: string): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageKey: string): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageKey: string; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont): DNListViewItem; overload;
    {class} function init(subItems: TArray<DNListViewItem_ListViewSubItem>; imageKey: string): DNListViewItem; overload;
    {class} function init(text: string; imageKey: string; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageKey: string; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(items: TArray<string>; imageKey: string; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont; group: DNListViewGroup): DNListViewItem; overload;
    {class} function init(subItems: TArray<DNListViewItem_ListViewSubItem>; imageKey: string; group: DNListViewGroup): DNListViewItem; overload;

  end;

  [DNTypeName('System.Windows.Forms.ListViewItem')]
  DNListViewItem = interface(DDN.mscorlib.DNICloneable)
  ['{ADEA0554-7D88-31D8-A2F9-D2D571F81A59}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Checked: Boolean;
    procedure set_Checked(value: Boolean);
    function get_Focused: Boolean;
    procedure set_Focused(value: Boolean);
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Group: DNListViewGroup;
    procedure set_Group(value: DNListViewGroup);
    function get_ImageIndex: Int32;
    procedure set_ImageIndex(value: Int32);
    function get_ImageKey: string;
    procedure set_ImageKey(value: string);
    function get_ImageList: DNImageList;
    function get_IndentCount: Int32;
    procedure set_IndentCount(value: Int32);
    function get_Index: Int32;
    function get_ListView: DNListView;
    function get_Name: string;
    procedure set_Name(value: string);
    function get_Position: DDN.System.Drawing.DNPoint;
    procedure set_Position(value: DDN.System.Drawing.DNPoint);
    function get_Selected: Boolean;
    procedure set_Selected(value: Boolean);
    function get_StateImageIndex: Int32;
    procedure set_StateImageIndex(value: Int32);
    function get_SubItems: DNListViewItem_ListViewSubItemCollection;
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_ToolTipText: string;
    procedure set_ToolTipText(value: string);
    function get_UseItemStyleForSubItems: Boolean;
    procedure set_UseItemStyleForSubItems(value: Boolean);

  { methods } 

    procedure BeginEdit;
    procedure EnsureVisible;
    function FindNearestItem(searchDirection: DNSearchDirectionHint): DNListViewItem;
    function GetBounds(portion: DNItemBoundsPortion): DDN.System.Drawing.DNRectangle;
    function GetSubItemAt(x: Int32; y: Int32): DNListViewItem_ListViewSubItem;
    procedure Remove;
    function Clone: DDN.mscorlib.DNObject;
    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Checked: Boolean read get_Checked write set_Checked;
    property Focused: Boolean read get_Focused write set_Focused;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Group: DNListViewGroup read get_Group write set_Group;
    property ImageIndex: Int32 read get_ImageIndex write set_ImageIndex;
    property ImageKey: string read get_ImageKey write set_ImageKey;
    property ImageList: DNImageList read get_ImageList;
    property IndentCount: Int32 read get_IndentCount write set_IndentCount;
    property Index: Int32 read get_Index;
    property ListView: DNListView read get_ListView;
    property Name: string read get_Name write set_Name;
    property Position: DDN.System.Drawing.DNPoint read get_Position write set_Position;
    property Selected: Boolean read get_Selected write set_Selected;
    property StateImageIndex: Int32 read get_StateImageIndex write set_StateImageIndex;
    property SubItems: DNListViewItem_ListViewSubItemCollection read get_SubItems;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property ToolTipText: string read get_ToolTipText write set_ToolTipText;
    property UseItemStyleForSubItems: Boolean read get_UseItemStyleForSubItems write set_UseItemStyleForSubItems;
  end;

  TDNListViewItem = class(TDNGenericImport<DNListViewItemClass, DNListViewItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewItem_ListViewSubItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3D7E0B1E-5D33-502D-8DAD-302D77FEF296}']
  { constructors } 

    {class} function init: DNListViewItem_ListViewSubItem; overload;
    {class} function init(owner: DNListViewItem; text: string): DNListViewItem_ListViewSubItem; overload;
    {class} function init(owner: DNListViewItem; text: string; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont): DNListViewItem_ListViewSubItem; overload;

  end;

  [DNTypeName('System.Windows.Forms.ListViewItem+ListViewSubItem')]
  DNListViewItem_ListViewSubItem = interface(DDN.mscorlib.DNObject)
  ['{5DE3A25F-FCFB-3334-B671-AAFCE726F15D}']
  { getters & setters } 

    function get_BackColor: DDN.System.Drawing.DNColor;
    procedure set_BackColor(value: DDN.System.Drawing.DNColor);
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_Font: DDN.System.Drawing.DNFont;
    procedure set_Font(value: DDN.System.Drawing.DNFont);
    function get_ForeColor: DDN.System.Drawing.DNColor;
    procedure set_ForeColor(value: DDN.System.Drawing.DNColor);
    function get_Tag: DDN.mscorlib.DNObject;
    procedure set_Tag(value: DDN.mscorlib.DNObject);
    function get_Text: string;
    procedure set_Text(value: string);
    function get_Name: string;
    procedure set_Name(value: string);

  { methods } 

    procedure ResetStyle;
    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BackColor: DDN.System.Drawing.DNColor read get_BackColor write set_BackColor;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property Font: DDN.System.Drawing.DNFont read get_Font write set_Font;
    property ForeColor: DDN.System.Drawing.DNColor read get_ForeColor write set_ForeColor;
    property Tag: DDN.mscorlib.DNObject read get_Tag write set_Tag;
    property Text: string read get_Text write set_Text;
    property Name: string read get_Name write set_Name;
  end;

  TDNListViewItem_ListViewSubItem = class(TDNGenericImport<DNListViewItem_ListViewSubItemClass, DNListViewItem_ListViewSubItem>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNListViewItem_ListViewSubItemCollectionClass = interface(DNObjectClass)
  ['{F3D8945A-91CD-5EBF-B4AF-AAC384D3E037}']
  { constructors } 

    {class} function init(owner: DNListViewItem): DNListViewItem_ListViewSubItemCollection;

  end;

  [DNTypeName('System.Windows.Forms.ListViewItem+ListViewSubItemCollection')]
  DNListViewItem_ListViewSubItemCollection = interface(DDN.mscorlib.DNIList)
  ['{399C2F60-24CC-3CA6-85FC-D6AB087522ED}']
  { getters & setters } 

    function get_Count: Int32;
    function get_IsReadOnly: Boolean;
    function get_Item(index: Int32): DNListViewItem_ListViewSubItem; overload;
    procedure set_Item(index: Int32; value: DNListViewItem_ListViewSubItem);
    function get_Item(key: string): DNListViewItem_ListViewSubItem; overload;

  { methods } 

    function Add(item: DNListViewItem_ListViewSubItem): DNListViewItem_ListViewSubItem; overload;
    function Add(text: string): DNListViewItem_ListViewSubItem; overload;
    function Add(text: string; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont): DNListViewItem_ListViewSubItem; overload;
    procedure AddRange(items: TArray<DNListViewItem_ListViewSubItem>); overload;
    procedure AddRange(items: TArray<string>); overload;
    procedure AddRange(items: TArray<string>; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; font: DDN.System.Drawing.DNFont); overload;
    function &Contains(subItem: DNListViewItem_ListViewSubItem): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(subItem: DNListViewItem_ListViewSubItem): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Insert(index: Int32; item: DNListViewItem_ListViewSubItem);
    procedure Remove(item: DNListViewItem_ListViewSubItem);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
    property Item[index: Int32]: DNListViewItem_ListViewSubItem read get_Item write set_Item; default;
    property Item[key: string]: DNListViewItem_ListViewSubItem read get_Item; default;
  end;

  TDNListViewItem_ListViewSubItemCollection = class(TDNGenericImport<DNListViewItem_ListViewSubItemCollectionClass, DNListViewItem_ListViewSubItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMenu_MenuItemCollectionClass = interface(DNObjectClass)
  ['{12C42A30-D980-558D-9F39-311287A3DE5A}']
  { constructors } 

    {class} function init(owner: DNMenu): DNMenu_MenuItemCollection;

  end;

  [DNTypeName('System.Windows.Forms.Menu+MenuItemCollection')]
  DNMenu_MenuItemCollection = interface(DDN.mscorlib.DNIList)
  ['{DB5D078D-108B-345E-A7AA-97FCC7CEBAFB}']
  { getters & setters } 

    function get_Item(index: Int32): DNMenuItem; overload;
    function get_Item(key: string): DNMenuItem; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function Add(index: Int32; item: DNMenuItem): Int32; overload;
    function Add(caption: string): DNMenuItem; overload;
    function Add(caption: string; onClick: DDN.mscorlib.DNEventHandler): DNMenuItem; overload;
    function Add(caption: string; items: TArray<DNMenuItem>): DNMenuItem; overload;
    function Add(item: DNMenuItem): Int32; overload;
    procedure AddRange(items: TArray<DNMenuItem>);
    function &Contains(value: DNMenuItem): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(value: DNMenuItem): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Clear;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    procedure RemoveByKey(key: string);
    procedure Remove(item: DNMenuItem);
    function Find(key: string; searchAllChildren: Boolean): TArray<DNMenuItem>;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNMenuItem read get_Item; default;
    property Item[key: string]: DNMenuItem read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNMenu_MenuItemCollection = class(TDNGenericImport<DNMenu_MenuItemCollectionClass, DNMenu_MenuItemCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMessageBoxClass = interface(DDN.mscorlib.DNObjectClass)
  ['{50741D00-B5B4-5067-8EF4-FA085CE0E367}']
  { static methods } 

    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; displayHelpButton: Boolean): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string; keyword: string): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string; keyword: string): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string; navigator: DNHelpNavigator): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string; navigator: DNHelpNavigator): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string; navigator: DNHelpNavigator; param: DDN.mscorlib.DNObject): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions; helpFilePath: string; navigator: DNHelpNavigator; param: DDN.mscorlib.DNObject): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon): DNDialogResult; overload;
    {class} function Show(text: string; caption: string; buttons: DNMessageBoxButtons): DNDialogResult; overload;
    {class} function Show(text: string; caption: string): DNDialogResult; overload;
    {class} function Show(text: string): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton; options: DNMessageBoxOptions): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon; defaultButton: DNMessageBoxDefaultButton): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons; icon: DNMessageBoxIcon): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string; buttons: DNMessageBoxButtons): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string; caption: string): DNDialogResult; overload;
    {class} function Show(owner: DNIWin32Window; text: string): DNDialogResult; overload;

  end;

  [DNTypeName('System.Windows.Forms.MessageBox')]
  DNMessageBox = interface(DDN.mscorlib.DNObject)
  ['{D80E7324-AA8D-3C99-BDAC-1C070198EDDC}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNMessageBox = class(TDNGenericImport<DNMessageBoxClass, DNMessageBox>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNMonthCalendar_HitTestInfoClass = interface(DDN.mscorlib.DNObjectClass)
  ['{74D5D66E-8A0E-5F03-8083-8A0022BF9BBE}']
  end;

  [DNTypeName('System.Windows.Forms.MonthCalendar+HitTestInfo')]
  DNMonthCalendar_HitTestInfo = interface(DDN.mscorlib.DNObject)
  ['{075F105A-D332-3DB6-BC01-EE98806A4B32}']
  { getters & setters } 

    function get_Point: DDN.System.Drawing.DNPoint;
    function get_HitArea: DNMonthCalendar_HitArea;
    function get_Time: DDN.mscorlib.DNDateTime;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Point: DDN.System.Drawing.DNPoint read get_Point;
    property HitArea: DNMonthCalendar_HitArea read get_HitArea;
    property Time: DDN.mscorlib.DNDateTime read get_Time;
  end;

  TDNMonthCalendar_HitTestInfo = class(TDNGenericImport<DNMonthCalendar_HitTestInfoClass, DNMonthCalendar_HitTestInfo>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNNumericUpDownAccelerationClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4E46D56F-B5D0-521C-9B1C-FCB02E1BDE38}']
  { constructors } 

    {class} function init(seconds: Int32; increment: DDN.mscorlib.DNDecimal): DNNumericUpDownAcceleration;

  end;

  [DNTypeName('System.Windows.Forms.NumericUpDownAcceleration')]
  DNNumericUpDownAcceleration = interface(DDN.mscorlib.DNObject)
  ['{3431A20F-5625-3F7E-9B19-7BAA537DE2FB}']
  { getters & setters } 

    function get_Seconds: Int32;
    procedure set_Seconds(value: Int32);
    function get_Increment: DDN.mscorlib.DNDecimal;
    procedure set_Increment(value: DDN.mscorlib.DNDecimal);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Seconds: Int32 read get_Seconds write set_Seconds;
    property Increment: DDN.mscorlib.DNDecimal read get_Increment write set_Increment;
  end;

  TDNNumericUpDownAcceleration = class(TDNGenericImport<DNNumericUpDownAccelerationClass, DNNumericUpDownAcceleration>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPowerStatusClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C70E14E4-28B3-5B9C-BA54-BA1D556104C3}']
  end;

  [DNTypeName('System.Windows.Forms.PowerStatus')]
  DNPowerStatus = interface(DDN.mscorlib.DNObject)
  ['{E685EF46-2C58-304D-BEC9-D36FBF7B991B}']
  { getters & setters } 

    function get_PowerLineStatus: DNPowerLineStatus;
    function get_BatteryChargeStatus: DNBatteryChargeStatus;
    function get_BatteryFullLifetime: Int32;
    function get_BatteryLifePercent: Single;
    function get_BatteryLifeRemaining: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property PowerLineStatus: DNPowerLineStatus read get_PowerLineStatus;
    property BatteryChargeStatus: DNBatteryChargeStatus read get_BatteryChargeStatus;
    property BatteryFullLifetime: Int32 read get_BatteryFullLifetime;
    property BatteryLifePercent: Single read get_BatteryLifePercent;
    property BatteryLifeRemaining: Int32 read get_BatteryLifeRemaining;
  end;

  TDNPowerStatus = class(TDNGenericImport<DNPowerStatusClass, DNPowerStatus>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNProfessionalColorsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3C87F266-F3B9-56EE-B477-8ECD018EEEE0}']
  { static getter & setter } 

    {class} function get_ButtonSelectedHighlight: DDN.System.Drawing.DNColor;
    {class} function get_ButtonSelectedHighlightBorder: DDN.System.Drawing.DNColor;
    {class} function get_ButtonPressedHighlight: DDN.System.Drawing.DNColor;
    {class} function get_ButtonPressedHighlightBorder: DDN.System.Drawing.DNColor;
    {class} function get_ButtonCheckedHighlight: DDN.System.Drawing.DNColor;
    {class} function get_ButtonCheckedHighlightBorder: DDN.System.Drawing.DNColor;
    {class} function get_ButtonPressedBorder: DDN.System.Drawing.DNColor;
    {class} function get_ButtonSelectedBorder: DDN.System.Drawing.DNColor;
    {class} function get_ButtonCheckedGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ButtonCheckedGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_ButtonCheckedGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_ButtonSelectedGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ButtonSelectedGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_ButtonSelectedGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_ButtonPressedGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ButtonPressedGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_ButtonPressedGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_CheckBackground: DDN.System.Drawing.DNColor;
    {class} function get_CheckSelectedBackground: DDN.System.Drawing.DNColor;
    {class} function get_CheckPressedBackground: DDN.System.Drawing.DNColor;
    {class} function get_GripDark: DDN.System.Drawing.DNColor;
    {class} function get_GripLight: DDN.System.Drawing.DNColor;
    {class} function get_ImageMarginGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ImageMarginGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_ImageMarginGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_ImageMarginRevealedGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ImageMarginRevealedGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_ImageMarginRevealedGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_MenuStripGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_MenuStripGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_MenuBorder: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemSelected: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemBorder: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemSelectedGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemSelectedGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemPressedGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemPressedGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_MenuItemPressedGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_RaftingContainerGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_RaftingContainerGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_SeparatorDark: DDN.System.Drawing.DNColor;
    {class} function get_SeparatorLight: DDN.System.Drawing.DNColor;
    {class} function get_StatusStripGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_StatusStripGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripBorder: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripDropDownBackground: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripContentPanelGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripContentPanelGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripPanelGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_ToolStripPanelGradientEnd: DDN.System.Drawing.DNColor;
    {class} function get_OverflowButtonGradientBegin: DDN.System.Drawing.DNColor;
    {class} function get_OverflowButtonGradientMiddle: DDN.System.Drawing.DNColor;
    {class} function get_OverflowButtonGradientEnd: DDN.System.Drawing.DNColor;

  { static propertys } 

    {class} property ButtonSelectedHighlight: DDN.System.Drawing.DNColor read get_ButtonSelectedHighlight;
    {class} property ButtonSelectedHighlightBorder: DDN.System.Drawing.DNColor read get_ButtonSelectedHighlightBorder;
    {class} property ButtonPressedHighlight: DDN.System.Drawing.DNColor read get_ButtonPressedHighlight;
    {class} property ButtonPressedHighlightBorder: DDN.System.Drawing.DNColor read get_ButtonPressedHighlightBorder;
    {class} property ButtonCheckedHighlight: DDN.System.Drawing.DNColor read get_ButtonCheckedHighlight;
    {class} property ButtonCheckedHighlightBorder: DDN.System.Drawing.DNColor read get_ButtonCheckedHighlightBorder;
    {class} property ButtonPressedBorder: DDN.System.Drawing.DNColor read get_ButtonPressedBorder;
    {class} property ButtonSelectedBorder: DDN.System.Drawing.DNColor read get_ButtonSelectedBorder;
    {class} property ButtonCheckedGradientBegin: DDN.System.Drawing.DNColor read get_ButtonCheckedGradientBegin;
    {class} property ButtonCheckedGradientMiddle: DDN.System.Drawing.DNColor read get_ButtonCheckedGradientMiddle;
    {class} property ButtonCheckedGradientEnd: DDN.System.Drawing.DNColor read get_ButtonCheckedGradientEnd;
    {class} property ButtonSelectedGradientBegin: DDN.System.Drawing.DNColor read get_ButtonSelectedGradientBegin;
    {class} property ButtonSelectedGradientMiddle: DDN.System.Drawing.DNColor read get_ButtonSelectedGradientMiddle;
    {class} property ButtonSelectedGradientEnd: DDN.System.Drawing.DNColor read get_ButtonSelectedGradientEnd;
    {class} property ButtonPressedGradientBegin: DDN.System.Drawing.DNColor read get_ButtonPressedGradientBegin;
    {class} property ButtonPressedGradientMiddle: DDN.System.Drawing.DNColor read get_ButtonPressedGradientMiddle;
    {class} property ButtonPressedGradientEnd: DDN.System.Drawing.DNColor read get_ButtonPressedGradientEnd;
    {class} property CheckBackground: DDN.System.Drawing.DNColor read get_CheckBackground;
    {class} property CheckSelectedBackground: DDN.System.Drawing.DNColor read get_CheckSelectedBackground;
    {class} property CheckPressedBackground: DDN.System.Drawing.DNColor read get_CheckPressedBackground;
    {class} property GripDark: DDN.System.Drawing.DNColor read get_GripDark;
    {class} property GripLight: DDN.System.Drawing.DNColor read get_GripLight;
    {class} property ImageMarginGradientBegin: DDN.System.Drawing.DNColor read get_ImageMarginGradientBegin;
    {class} property ImageMarginGradientMiddle: DDN.System.Drawing.DNColor read get_ImageMarginGradientMiddle;
    {class} property ImageMarginGradientEnd: DDN.System.Drawing.DNColor read get_ImageMarginGradientEnd;
    {class} property ImageMarginRevealedGradientBegin: DDN.System.Drawing.DNColor read get_ImageMarginRevealedGradientBegin;
    {class} property ImageMarginRevealedGradientMiddle: DDN.System.Drawing.DNColor read get_ImageMarginRevealedGradientMiddle;
    {class} property ImageMarginRevealedGradientEnd: DDN.System.Drawing.DNColor read get_ImageMarginRevealedGradientEnd;
    {class} property MenuStripGradientBegin: DDN.System.Drawing.DNColor read get_MenuStripGradientBegin;
    {class} property MenuStripGradientEnd: DDN.System.Drawing.DNColor read get_MenuStripGradientEnd;
    {class} property MenuBorder: DDN.System.Drawing.DNColor read get_MenuBorder;
    {class} property MenuItemSelected: DDN.System.Drawing.DNColor read get_MenuItemSelected;
    {class} property MenuItemBorder: DDN.System.Drawing.DNColor read get_MenuItemBorder;
    {class} property MenuItemSelectedGradientBegin: DDN.System.Drawing.DNColor read get_MenuItemSelectedGradientBegin;
    {class} property MenuItemSelectedGradientEnd: DDN.System.Drawing.DNColor read get_MenuItemSelectedGradientEnd;
    {class} property MenuItemPressedGradientBegin: DDN.System.Drawing.DNColor read get_MenuItemPressedGradientBegin;
    {class} property MenuItemPressedGradientMiddle: DDN.System.Drawing.DNColor read get_MenuItemPressedGradientMiddle;
    {class} property MenuItemPressedGradientEnd: DDN.System.Drawing.DNColor read get_MenuItemPressedGradientEnd;
    {class} property RaftingContainerGradientBegin: DDN.System.Drawing.DNColor read get_RaftingContainerGradientBegin;
    {class} property RaftingContainerGradientEnd: DDN.System.Drawing.DNColor read get_RaftingContainerGradientEnd;
    {class} property SeparatorDark: DDN.System.Drawing.DNColor read get_SeparatorDark;
    {class} property SeparatorLight: DDN.System.Drawing.DNColor read get_SeparatorLight;
    {class} property StatusStripGradientBegin: DDN.System.Drawing.DNColor read get_StatusStripGradientBegin;
    {class} property StatusStripGradientEnd: DDN.System.Drawing.DNColor read get_StatusStripGradientEnd;
    {class} property ToolStripBorder: DDN.System.Drawing.DNColor read get_ToolStripBorder;
    {class} property ToolStripDropDownBackground: DDN.System.Drawing.DNColor read get_ToolStripDropDownBackground;
    {class} property ToolStripGradientBegin: DDN.System.Drawing.DNColor read get_ToolStripGradientBegin;
    {class} property ToolStripGradientMiddle: DDN.System.Drawing.DNColor read get_ToolStripGradientMiddle;
    {class} property ToolStripGradientEnd: DDN.System.Drawing.DNColor read get_ToolStripGradientEnd;
    {class} property ToolStripContentPanelGradientBegin: DDN.System.Drawing.DNColor read get_ToolStripContentPanelGradientBegin;
    {class} property ToolStripContentPanelGradientEnd: DDN.System.Drawing.DNColor read get_ToolStripContentPanelGradientEnd;
    {class} property ToolStripPanelGradientBegin: DDN.System.Drawing.DNColor read get_ToolStripPanelGradientBegin;
    {class} property ToolStripPanelGradientEnd: DDN.System.Drawing.DNColor read get_ToolStripPanelGradientEnd;
    {class} property OverflowButtonGradientBegin: DDN.System.Drawing.DNColor read get_OverflowButtonGradientBegin;
    {class} property OverflowButtonGradientMiddle: DDN.System.Drawing.DNColor read get_OverflowButtonGradientMiddle;
    {class} property OverflowButtonGradientEnd: DDN.System.Drawing.DNColor read get_OverflowButtonGradientEnd;
  end;

  [DNTypeName('System.Windows.Forms.ProfessionalColors')]
  DNProfessionalColors = interface(DDN.mscorlib.DNObject)
  ['{EB8FA061-3DF5-3279-BE4B-E809CB2BD1CC}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNProfessionalColors = class(TDNGenericImport<DNProfessionalColorsClass, DNProfessionalColors>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNProfessionalColorTableClass = interface(DDN.mscorlib.DNObjectClass)
  ['{886AFC3E-C2BF-5F90-B01F-A5112395925B}']
  { constructors } 

    {class} function init: DNProfessionalColorTable;

  end;

  [DNTypeName('System.Windows.Forms.ProfessionalColorTable')]
  DNProfessionalColorTable = interface(DDN.mscorlib.DNObject)
  ['{0704B82C-7780-3D48-808A-7C432940C1C1}']
  { getters & setters } 

    function get_UseSystemColors: Boolean;
    procedure set_UseSystemColors(value: Boolean);
    function get_ButtonSelectedHighlight: DDN.System.Drawing.DNColor;
    function get_ButtonSelectedHighlightBorder: DDN.System.Drawing.DNColor;
    function get_ButtonPressedHighlight: DDN.System.Drawing.DNColor;
    function get_ButtonPressedHighlightBorder: DDN.System.Drawing.DNColor;
    function get_ButtonCheckedHighlight: DDN.System.Drawing.DNColor;
    function get_ButtonCheckedHighlightBorder: DDN.System.Drawing.DNColor;
    function get_ButtonPressedBorder: DDN.System.Drawing.DNColor;
    function get_ButtonSelectedBorder: DDN.System.Drawing.DNColor;
    function get_ButtonCheckedGradientBegin: DDN.System.Drawing.DNColor;
    function get_ButtonCheckedGradientMiddle: DDN.System.Drawing.DNColor;
    function get_ButtonCheckedGradientEnd: DDN.System.Drawing.DNColor;
    function get_ButtonSelectedGradientBegin: DDN.System.Drawing.DNColor;
    function get_ButtonSelectedGradientMiddle: DDN.System.Drawing.DNColor;
    function get_ButtonSelectedGradientEnd: DDN.System.Drawing.DNColor;
    function get_ButtonPressedGradientBegin: DDN.System.Drawing.DNColor;
    function get_ButtonPressedGradientMiddle: DDN.System.Drawing.DNColor;
    function get_ButtonPressedGradientEnd: DDN.System.Drawing.DNColor;
    function get_CheckBackground: DDN.System.Drawing.DNColor;
    function get_CheckSelectedBackground: DDN.System.Drawing.DNColor;
    function get_CheckPressedBackground: DDN.System.Drawing.DNColor;
    function get_GripDark: DDN.System.Drawing.DNColor;
    function get_GripLight: DDN.System.Drawing.DNColor;
    function get_ImageMarginGradientBegin: DDN.System.Drawing.DNColor;
    function get_ImageMarginGradientMiddle: DDN.System.Drawing.DNColor;
    function get_ImageMarginGradientEnd: DDN.System.Drawing.DNColor;
    function get_ImageMarginRevealedGradientBegin: DDN.System.Drawing.DNColor;
    function get_ImageMarginRevealedGradientMiddle: DDN.System.Drawing.DNColor;
    function get_ImageMarginRevealedGradientEnd: DDN.System.Drawing.DNColor;
    function get_MenuStripGradientBegin: DDN.System.Drawing.DNColor;
    function get_MenuStripGradientEnd: DDN.System.Drawing.DNColor;
    function get_MenuItemSelected: DDN.System.Drawing.DNColor;
    function get_MenuItemBorder: DDN.System.Drawing.DNColor;
    function get_MenuBorder: DDN.System.Drawing.DNColor;
    function get_MenuItemSelectedGradientBegin: DDN.System.Drawing.DNColor;
    function get_MenuItemSelectedGradientEnd: DDN.System.Drawing.DNColor;
    function get_MenuItemPressedGradientBegin: DDN.System.Drawing.DNColor;
    function get_MenuItemPressedGradientMiddle: DDN.System.Drawing.DNColor;
    function get_MenuItemPressedGradientEnd: DDN.System.Drawing.DNColor;
    function get_RaftingContainerGradientBegin: DDN.System.Drawing.DNColor;
    function get_RaftingContainerGradientEnd: DDN.System.Drawing.DNColor;
    function get_SeparatorDark: DDN.System.Drawing.DNColor;
    function get_SeparatorLight: DDN.System.Drawing.DNColor;
    function get_StatusStripGradientBegin: DDN.System.Drawing.DNColor;
    function get_StatusStripGradientEnd: DDN.System.Drawing.DNColor;
    function get_ToolStripBorder: DDN.System.Drawing.DNColor;
    function get_ToolStripDropDownBackground: DDN.System.Drawing.DNColor;
    function get_ToolStripGradientBegin: DDN.System.Drawing.DNColor;
    function get_ToolStripGradientMiddle: DDN.System.Drawing.DNColor;
    function get_ToolStripGradientEnd: DDN.System.Drawing.DNColor;
    function get_ToolStripContentPanelGradientBegin: DDN.System.Drawing.DNColor;
    function get_ToolStripContentPanelGradientEnd: DDN.System.Drawing.DNColor;
    function get_ToolStripPanelGradientBegin: DDN.System.Drawing.DNColor;
    function get_ToolStripPanelGradientEnd: DDN.System.Drawing.DNColor;
    function get_OverflowButtonGradientBegin: DDN.System.Drawing.DNColor;
    function get_OverflowButtonGradientMiddle: DDN.System.Drawing.DNColor;
    function get_OverflowButtonGradientEnd: DDN.System.Drawing.DNColor;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property UseSystemColors: Boolean read get_UseSystemColors write set_UseSystemColors;
    property ButtonSelectedHighlight: DDN.System.Drawing.DNColor read get_ButtonSelectedHighlight;
    property ButtonSelectedHighlightBorder: DDN.System.Drawing.DNColor read get_ButtonSelectedHighlightBorder;
    property ButtonPressedHighlight: DDN.System.Drawing.DNColor read get_ButtonPressedHighlight;
    property ButtonPressedHighlightBorder: DDN.System.Drawing.DNColor read get_ButtonPressedHighlightBorder;
    property ButtonCheckedHighlight: DDN.System.Drawing.DNColor read get_ButtonCheckedHighlight;
    property ButtonCheckedHighlightBorder: DDN.System.Drawing.DNColor read get_ButtonCheckedHighlightBorder;
    property ButtonPressedBorder: DDN.System.Drawing.DNColor read get_ButtonPressedBorder;
    property ButtonSelectedBorder: DDN.System.Drawing.DNColor read get_ButtonSelectedBorder;
    property ButtonCheckedGradientBegin: DDN.System.Drawing.DNColor read get_ButtonCheckedGradientBegin;
    property ButtonCheckedGradientMiddle: DDN.System.Drawing.DNColor read get_ButtonCheckedGradientMiddle;
    property ButtonCheckedGradientEnd: DDN.System.Drawing.DNColor read get_ButtonCheckedGradientEnd;
    property ButtonSelectedGradientBegin: DDN.System.Drawing.DNColor read get_ButtonSelectedGradientBegin;
    property ButtonSelectedGradientMiddle: DDN.System.Drawing.DNColor read get_ButtonSelectedGradientMiddle;
    property ButtonSelectedGradientEnd: DDN.System.Drawing.DNColor read get_ButtonSelectedGradientEnd;
    property ButtonPressedGradientBegin: DDN.System.Drawing.DNColor read get_ButtonPressedGradientBegin;
    property ButtonPressedGradientMiddle: DDN.System.Drawing.DNColor read get_ButtonPressedGradientMiddle;
    property ButtonPressedGradientEnd: DDN.System.Drawing.DNColor read get_ButtonPressedGradientEnd;
    property CheckBackground: DDN.System.Drawing.DNColor read get_CheckBackground;
    property CheckSelectedBackground: DDN.System.Drawing.DNColor read get_CheckSelectedBackground;
    property CheckPressedBackground: DDN.System.Drawing.DNColor read get_CheckPressedBackground;
    property GripDark: DDN.System.Drawing.DNColor read get_GripDark;
    property GripLight: DDN.System.Drawing.DNColor read get_GripLight;
    property ImageMarginGradientBegin: DDN.System.Drawing.DNColor read get_ImageMarginGradientBegin;
    property ImageMarginGradientMiddle: DDN.System.Drawing.DNColor read get_ImageMarginGradientMiddle;
    property ImageMarginGradientEnd: DDN.System.Drawing.DNColor read get_ImageMarginGradientEnd;
    property ImageMarginRevealedGradientBegin: DDN.System.Drawing.DNColor read get_ImageMarginRevealedGradientBegin;
    property ImageMarginRevealedGradientMiddle: DDN.System.Drawing.DNColor read get_ImageMarginRevealedGradientMiddle;
    property ImageMarginRevealedGradientEnd: DDN.System.Drawing.DNColor read get_ImageMarginRevealedGradientEnd;
    property MenuStripGradientBegin: DDN.System.Drawing.DNColor read get_MenuStripGradientBegin;
    property MenuStripGradientEnd: DDN.System.Drawing.DNColor read get_MenuStripGradientEnd;
    property MenuItemSelected: DDN.System.Drawing.DNColor read get_MenuItemSelected;
    property MenuItemBorder: DDN.System.Drawing.DNColor read get_MenuItemBorder;
    property MenuBorder: DDN.System.Drawing.DNColor read get_MenuBorder;
    property MenuItemSelectedGradientBegin: DDN.System.Drawing.DNColor read get_MenuItemSelectedGradientBegin;
    property MenuItemSelectedGradientEnd: DDN.System.Drawing.DNColor read get_MenuItemSelectedGradientEnd;
    property MenuItemPressedGradientBegin: DDN.System.Drawing.DNColor read get_MenuItemPressedGradientBegin;
    property MenuItemPressedGradientMiddle: DDN.System.Drawing.DNColor read get_MenuItemPressedGradientMiddle;
    property MenuItemPressedGradientEnd: DDN.System.Drawing.DNColor read get_MenuItemPressedGradientEnd;
    property RaftingContainerGradientBegin: DDN.System.Drawing.DNColor read get_RaftingContainerGradientBegin;
    property RaftingContainerGradientEnd: DDN.System.Drawing.DNColor read get_RaftingContainerGradientEnd;
    property SeparatorDark: DDN.System.Drawing.DNColor read get_SeparatorDark;
    property SeparatorLight: DDN.System.Drawing.DNColor read get_SeparatorLight;
    property StatusStripGradientBegin: DDN.System.Drawing.DNColor read get_StatusStripGradientBegin;
    property StatusStripGradientEnd: DDN.System.Drawing.DNColor read get_StatusStripGradientEnd;
    property ToolStripBorder: DDN.System.Drawing.DNColor read get_ToolStripBorder;
    property ToolStripDropDownBackground: DDN.System.Drawing.DNColor read get_ToolStripDropDownBackground;
    property ToolStripGradientBegin: DDN.System.Drawing.DNColor read get_ToolStripGradientBegin;
    property ToolStripGradientMiddle: DDN.System.Drawing.DNColor read get_ToolStripGradientMiddle;
    property ToolStripGradientEnd: DDN.System.Drawing.DNColor read get_ToolStripGradientEnd;
    property ToolStripContentPanelGradientBegin: DDN.System.Drawing.DNColor read get_ToolStripContentPanelGradientBegin;
    property ToolStripContentPanelGradientEnd: DDN.System.Drawing.DNColor read get_ToolStripContentPanelGradientEnd;
    property ToolStripPanelGradientBegin: DDN.System.Drawing.DNColor read get_ToolStripPanelGradientBegin;
    property ToolStripPanelGradientEnd: DDN.System.Drawing.DNColor read get_ToolStripPanelGradientEnd;
    property OverflowButtonGradientBegin: DDN.System.Drawing.DNColor read get_OverflowButtonGradientBegin;
    property OverflowButtonGradientMiddle: DDN.System.Drawing.DNColor read get_OverflowButtonGradientMiddle;
    property OverflowButtonGradientEnd: DDN.System.Drawing.DNColor read get_OverflowButtonGradientEnd;
  end;

  TDNProfessionalColorTable = class(TDNGenericImport<DNProfessionalColorTableClass, DNProfessionalColorTable>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNProgressBarRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D1253F7D-71C7-5A51-8EDD-6DC27330F4A7}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;
    {class} function get_ChunkThickness: Int32;
    {class} function get_ChunkSpaceThickness: Int32;

  { static methods } 

    {class} procedure DrawHorizontalBar(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawVerticalBar(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawHorizontalChunks(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawVerticalChunks(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
    {class} property ChunkThickness: Int32 read get_ChunkThickness;
    {class} property ChunkSpaceThickness: Int32 read get_ChunkSpaceThickness;
  end;

  [DNTypeName('System.Windows.Forms.ProgressBarRenderer')]
  DNProgressBarRenderer = interface(DDN.mscorlib.DNObject)
  ['{518417BD-B609-32C7-95FB-E5092800F316}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNProgressBarRenderer = class(TDNGenericImport<DNProgressBarRendererClass, DNProgressBarRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNPropertyGrid_PropertyTabCollectionClass = interface(DNObjectClass)
  ['{73859E6D-31D9-5A20-A829-29FDC8ABFA66}']
  end;

  [DNTypeName('System.Windows.Forms.PropertyGrid+PropertyTabCollection')]
  DNPropertyGrid_PropertyTabCollection = interface(DDN.mscorlib.DNICollection)
  ['{37B8D93B-97A5-337D-A29E-040CDFC3230D}']
  { getters & setters } 

    function get_Count: Int32;
    function get_Item(index: Int32): DNPropertyTab;

  { methods } 

    procedure AddTabType(propertyTabType: DDN.mscorlib.DNType); overload;
    procedure AddTabType(propertyTabType: DDN.mscorlib.DNType; tabScope: DDN.System.DNPropertyTabScope); overload;
    procedure Clear(tabScope: DDN.System.DNPropertyTabScope);
    procedure RemoveTabType(propertyTabType: DDN.mscorlib.DNType);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Count: Int32 read get_Count;
    property Item[index: Int32]: DNPropertyTab read get_Item; default;
  end;

  TDNPropertyGrid_PropertyTabCollection = class(TDNGenericImport<DNPropertyGrid_PropertyTabCollectionClass, DNPropertyGrid_PropertyTabCollection>) end;

  //-------------namespace: System.Windows.Forms.PropertyGridInternal----------------
  DNPropertyGridCommandsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6714150E-E368-590B-92CC-12FFCDA7DDB7}']
  { constructors } 

    {class} function init: DNPropertyGridCommands;

  { static fields getter & setter } 

   function __fakeFieldGet_Reset: DDN.System.DNCommandID;
   function __fakeFieldGet_Description: DDN.System.DNCommandID;
   function __fakeFieldGet_Hide: DDN.System.DNCommandID;
   function __fakeFieldGet_Commands: DDN.System.DNCommandID;

  { static fields } 

    {class} property Reset: DDN.System.DNCommandID read __fakeFieldGet_Reset;
    {class} property Description: DDN.System.DNCommandID read __fakeFieldGet_Description;
    {class} property Hide: DDN.System.DNCommandID read __fakeFieldGet_Hide;
    {class} property Commands: DDN.System.DNCommandID read __fakeFieldGet_Commands;

  end;

  [DNTypeName('System.Windows.Forms.PropertyGridInternal.PropertyGridCommands')]
  DNPropertyGridCommands = interface(DDN.mscorlib.DNObject)
  ['{F810ABDA-1FF0-3B25-9889-6EF85A58EB91}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNPropertyGridCommands = class(TDNGenericImport<DNPropertyGridCommandsClass, DNPropertyGridCommands>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRadioButtonRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{17C3DB35-EDC4-5F09-80D2-C9960181E24C}']
  { static getter & setter } 

    {class} function get_RenderMatchingApplicationState: Boolean;
    {class} procedure set_RenderMatchingApplicationState(value: Boolean);

  { static methods } 

    {class} function IsBackgroundPartiallyTransparent(state: DNRadioButtonState): Boolean;
    {class} procedure DrawParentBackground(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; childControl: DNControl);
    {class} procedure DrawRadioButton(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; state: DNRadioButtonState); overload;
    {class} procedure DrawRadioButton(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; radioButtonText: string; font: DDN.System.Drawing.DNFont; focused: Boolean; state: DNRadioButtonState); overload;
    {class} procedure DrawRadioButton(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; radioButtonText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; focused: Boolean; state: DNRadioButtonState); overload;
    {class} procedure DrawRadioButton(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; radioButtonText: string; font: DDN.System.Drawing.DNFont; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNRadioButtonState); overload;
    {class} procedure DrawRadioButton(g: DDN.System.Drawing.DNGraphics; glyphLocation: DDN.System.Drawing.DNPoint; textBounds: DDN.System.Drawing.DNRectangle; radioButtonText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; image: DDN.System.Drawing.DNImage; imageBounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNRadioButtonState); overload;
    {class} function GetGlyphSize(g: DDN.System.Drawing.DNGraphics; state: DNRadioButtonState): DDN.System.Drawing.DNSize;

  { static propertys } 

    {class} property RenderMatchingApplicationState: Boolean read get_RenderMatchingApplicationState write set_RenderMatchingApplicationState;
  end;

  [DNTypeName('System.Windows.Forms.RadioButtonRenderer')]
  DNRadioButtonRenderer = interface(DDN.mscorlib.DNObject)
  ['{D6BE8474-FEE9-3F67-ACE5-63B3F9B207D6}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNRadioButtonRenderer = class(TDNGenericImport<DNRadioButtonRendererClass, DNRadioButtonRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScreenClass = interface(DDN.mscorlib.DNObjectClass)
  ['{47C686F9-1891-59A8-98FE-49A5E333B6D8}']
  { static getter & setter } 

    {class} function get_AllScreens: TArray<DNScreen>;
    {class} function get_PrimaryScreen: DNScreen;

  { static methods } 

    {class} function FromPoint(point: DDN.System.Drawing.DNPoint): DNScreen;
    {class} function FromRectangle(rect: DDN.System.Drawing.DNRectangle): DNScreen;
    {class} function FromControl(control: DNControl): DNScreen;
    {class} function FromHandle(hwnd: IntPtr): DNScreen;
    {class} function GetWorkingArea(pt: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNRectangle; overload;
    {class} function GetWorkingArea(rect: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle; overload;
    {class} function GetWorkingArea(ctl: DNControl): DDN.System.Drawing.DNRectangle; overload;
    {class} function GetBounds(pt: DDN.System.Drawing.DNPoint): DDN.System.Drawing.DNRectangle; overload;
    {class} function GetBounds(rect: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle; overload;
    {class} function GetBounds(ctl: DNControl): DDN.System.Drawing.DNRectangle; overload;

  { static propertys } 

    {class} property AllScreens: TArray<DNScreen> read get_AllScreens;
    {class} property PrimaryScreen: DNScreen read get_PrimaryScreen;
  end;

  [DNTypeName('System.Windows.Forms.Screen')]
  DNScreen = interface(DDN.mscorlib.DNObject)
  ['{F6E4B4A2-34A6-34DE-8EEC-1B7EE618C4DA}']
  { getters & setters } 

    function get_BitsPerPixel: Int32;
    function get_Bounds: DDN.System.Drawing.DNRectangle;
    function get_DeviceName: string;
    function get_Primary: Boolean;
    function get_WorkingArea: DDN.System.Drawing.DNRectangle;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property BitsPerPixel: Int32 read get_BitsPerPixel;
    property Bounds: DDN.System.Drawing.DNRectangle read get_Bounds;
    property DeviceName: string read get_DeviceName;
    property Primary: Boolean read get_Primary;
    property WorkingArea: DDN.System.Drawing.DNRectangle read get_WorkingArea;
  end;

  TDNScreen = class(TDNGenericImport<DNScreenClass, DNScreen>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollableControl_DockPaddingEdgesClass = interface(DNObjectClass)
  ['{31F59A98-F9CA-5115-BD54-563C8A62ECA6}']
  end;

  [DNTypeName('System.Windows.Forms.ScrollableControl+DockPaddingEdges')]
  DNScrollableControl_DockPaddingEdges = interface(DDN.mscorlib.DNICloneable)
  ['{4E2E12AE-D943-38EB-B927-756224B2D438}']
  { getters & setters } 

    function get_All: Int32;
    procedure set_All(value: Int32);
    function get_Bottom: Int32;
    procedure set_Bottom(value: Int32);
    function get_Left: Int32;
    procedure set_Left(value: Int32);
    function get_Right: Int32;
    procedure set_Right(value: Int32);
    function get_Top: Int32;
    procedure set_Top(value: Int32);

  { methods } 

    function Equals(other: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function ToString: string;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property All: Int32 read get_All write set_All;
    property Bottom: Int32 read get_Bottom write set_Bottom;
    property Left: Int32 read get_Left write set_Left;
    property Right: Int32 read get_Right write set_Right;
    property Top: Int32 read get_Top write set_Top;
  end;

  TDNScrollableControl_DockPaddingEdges = class(TDNGenericImport<DNScrollableControl_DockPaddingEdgesClass, DNScrollableControl_DockPaddingEdges>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollBarRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{DEBEC536-29CC-5BC7-BA44-3515088546F5}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;

  { static methods } 

    {class} procedure DrawArrowButton(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarArrowButtonState);
    {class} procedure DrawHorizontalThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawVerticalThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawHorizontalThumbGrip(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawVerticalThumbGrip(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawRightHorizontalTrack(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawLeftHorizontalTrack(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawUpperVerticalTrack(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawLowerVerticalTrack(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarState);
    {class} procedure DrawSizeBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNScrollBarSizeBoxState);
    {class} function GetThumbGripSize(g: DDN.System.Drawing.DNGraphics; state: DNScrollBarState): DDN.System.Drawing.DNSize;
    {class} function GetSizeBoxSize(g: DDN.System.Drawing.DNGraphics; state: DNScrollBarState): DDN.System.Drawing.DNSize;

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
  end;

  [DNTypeName('System.Windows.Forms.ScrollBarRenderer')]
  DNScrollBarRenderer = interface(DDN.mscorlib.DNObject)
  ['{E8845A0E-40EA-358B-A62A-613474F263A7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNScrollBarRenderer = class(TDNGenericImport<DNScrollBarRendererClass, DNScrollBarRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNScrollPropertiesClass = interface(DDN.mscorlib.DNObjectClass)
  ['{42A8A8B3-E8E4-56EE-BCA6-51D2DE548C59}']
  end;

  [DNTypeName('System.Windows.Forms.ScrollProperties')]
  DNScrollProperties = interface(DDN.mscorlib.DNObject)
  ['{742BCF71-F2AA-382E-856F-BBB60EA8A3E3}']
  { getters & setters } 

    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Enabled: Boolean read get_Enabled write set_Enabled;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property Value: Int32 read get_Value write set_Value;
    property Visible: Boolean read get_Visible write set_Visible;
  end;

  TDNScrollProperties = class(TDNGenericImport<DNScrollPropertiesClass, DNScrollProperties>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNHScrollPropertiesClass = interface(DNScrollPropertiesClass)
  ['{796A7CEE-C016-55B2-B2AF-2CABAFCE2198}']
  { constructors } 

    {class} function init(container: DNScrollableControl): DNHScrollProperties;

  end;

  [DNTypeName('System.Windows.Forms.HScrollProperties')]
  DNHScrollProperties = interface(DNScrollProperties)
  ['{DC170141-B1A1-3872-8D46-A692B3BDC76E}']
  { getters & setters } 

    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Enabled: Boolean read get_Enabled write set_Enabled;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property Value: Int32 read get_Value write set_Value;
    property Visible: Boolean read get_Visible write set_Visible;
  end;

  TDNHScrollProperties = class(TDNGenericImport<DNHScrollPropertiesClass, DNHScrollProperties>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNVScrollPropertiesClass = interface(DNScrollPropertiesClass)
  ['{E2512613-5CF5-522B-B951-7BA5CC3A6045}']
  { constructors } 

    {class} function init(container: DNScrollableControl): DNVScrollProperties;

  end;

  [DNTypeName('System.Windows.Forms.VScrollProperties')]
  DNVScrollProperties = interface(DNScrollProperties)
  ['{36F352ED-007B-3444-893D-25766794FF59}']
  { getters & setters } 

    function get_Enabled: Boolean;
    procedure set_Enabled(value: Boolean);
    function get_LargeChange: Int32;
    procedure set_LargeChange(value: Int32);
    function get_Maximum: Int32;
    procedure set_Maximum(value: Int32);
    function get_Minimum: Int32;
    procedure set_Minimum(value: Int32);
    function get_SmallChange: Int32;
    procedure set_SmallChange(value: Int32);
    function get_Value: Int32;
    procedure set_Value(value: Int32);
    function get_Visible: Boolean;
    procedure set_Visible(value: Boolean);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Enabled: Boolean read get_Enabled write set_Enabled;
    property LargeChange: Int32 read get_LargeChange write set_LargeChange;
    property Maximum: Int32 read get_Maximum write set_Maximum;
    property Minimum: Int32 read get_Minimum write set_Minimum;
    property SmallChange: Int32 read get_SmallChange write set_SmallChange;
    property Value: Int32 read get_Value write set_Value;
    property Visible: Boolean read get_Visible write set_Visible;
  end;

  TDNVScrollProperties = class(TDNGenericImport<DNVScrollPropertiesClass, DNVScrollProperties>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSelectionRangeClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E95CD363-C8D3-544F-BE56-8ECD3142E33D}']
  { constructors } 

    {class} function init: DNSelectionRange; overload;
    {class} function init(lower: DDN.mscorlib.DNDateTime; upper: DDN.mscorlib.DNDateTime): DNSelectionRange; overload;
    {class} function init(range: DNSelectionRange): DNSelectionRange; overload;

  end;

  [DNTypeName('System.Windows.Forms.SelectionRange')]
  DNSelectionRange = interface(DDN.mscorlib.DNObject)
  ['{2FEF4089-681E-3037-B2D8-1359D60C35E2}']
  { getters & setters } 

    function get_End: DDN.mscorlib.DNDateTime;
    procedure set_End(value: DDN.mscorlib.DNDateTime);
    function get_Start: DDN.mscorlib.DNDateTime;
    procedure set_Start(value: DDN.mscorlib.DNDateTime);

  { methods } 

    function ToString: string;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property &End: DDN.mscorlib.DNDateTime read get_End write set_End;
    property Start: DDN.mscorlib.DNDateTime read get_Start write set_Start;
  end;

  TDNSelectionRange = class(TDNGenericImport<DNSelectionRangeClass, DNSelectionRange>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSendKeysClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3EE93355-F192-5647-8825-DF99A306ADAA}']
  { static methods } 

    {class} procedure Send(keys: string);
    {class} procedure SendWait(keys: string);
    {class} procedure Flush;

  end;

  [DNTypeName('System.Windows.Forms.SendKeys')]
  DNSendKeys = interface(DDN.mscorlib.DNObject)
  ['{D95C0B9C-67CD-3368-A6EC-DE14CBCAA528}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNSendKeys = class(TDNGenericImport<DNSendKeysClass, DNSendKeys>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNStatusBar_StatusBarPanelCollectionClass = interface(DNObjectClass)
  ['{6E3DD000-B945-5683-8DB9-62D911499A20}']
  { constructors } 

    {class} function init(owner: DNStatusBar): DNStatusBar_StatusBarPanelCollection;

  end;

  [DNTypeName('System.Windows.Forms.StatusBar+StatusBarPanelCollection')]
  DNStatusBar_StatusBarPanelCollection = interface(DDN.mscorlib.DNIList)
  ['{948048F1-0CFD-3F0F-8955-E173ED6C7CD5}']
  { getters & setters } 

    function get_Item(index: Int32): DNStatusBarPanel; overload;
    procedure set_Item(index: Int32; value: DNStatusBarPanel);
    function get_Item(key: string): DNStatusBarPanel; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function Add(text: string): DNStatusBarPanel; overload;
    function Add(value: DNStatusBarPanel): Int32; overload;
    procedure AddRange(panels: TArray<DNStatusBarPanel>);
    function &Contains(panel: DNStatusBarPanel): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(panel: DNStatusBarPanel): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Clear;
    procedure Remove(value: DNStatusBarPanel);
    procedure RemoveByKey(key: string);
    procedure Insert(index: Int32; value: DNStatusBarPanel);
    procedure RemoveAt(index: Int32);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNStatusBarPanel read get_Item write set_Item; default;
    property Item[key: string]: DNStatusBarPanel read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNStatusBar_StatusBarPanelCollection = class(TDNGenericImport<DNStatusBar_StatusBarPanelCollectionClass, DNStatusBar_StatusBarPanelCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNSystemInformationClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6E62408A-5A35-5F3F-987C-4D0997EDD37E}']
  { static getter & setter } 

    {class} function get_DragFullWindows: Boolean;
    {class} function get_HighContrast: Boolean;
    {class} function get_MouseWheelScrollLines: Int32;
    {class} function get_PrimaryMonitorSize: DDN.System.Drawing.DNSize;
    {class} function get_VerticalScrollBarWidth: Int32;
    {class} function get_HorizontalScrollBarHeight: Int32;
    {class} function get_CaptionHeight: Int32;
    {class} function get_BorderSize: DDN.System.Drawing.DNSize;
    {class} function get_FixedFrameBorderSize: DDN.System.Drawing.DNSize;
    {class} function get_VerticalScrollBarThumbHeight: Int32;
    {class} function get_HorizontalScrollBarThumbWidth: Int32;
    {class} function get_IconSize: DDN.System.Drawing.DNSize;
    {class} function get_CursorSize: DDN.System.Drawing.DNSize;
    {class} function get_MenuFont: DDN.System.Drawing.DNFont;
    {class} function get_MenuHeight: Int32;
    {class} function get_PowerStatus: DNPowerStatus;
    {class} function get_WorkingArea: DDN.System.Drawing.DNRectangle;
    {class} function get_KanjiWindowHeight: Int32;
    {class} function get_MousePresent: Boolean;
    {class} function get_VerticalScrollBarArrowHeight: Int32;
    {class} function get_HorizontalScrollBarArrowWidth: Int32;
    {class} function get_DebugOS: Boolean;
    {class} function get_MouseButtonsSwapped: Boolean;
    {class} function get_MinimumWindowSize: DDN.System.Drawing.DNSize;
    {class} function get_CaptionButtonSize: DDN.System.Drawing.DNSize;
    {class} function get_FrameBorderSize: DDN.System.Drawing.DNSize;
    {class} function get_MinWindowTrackSize: DDN.System.Drawing.DNSize;
    {class} function get_DoubleClickSize: DDN.System.Drawing.DNSize;
    {class} function get_DoubleClickTime: Int32;
    {class} function get_IconSpacingSize: DDN.System.Drawing.DNSize;
    {class} function get_RightAlignedMenus: Boolean;
    {class} function get_PenWindows: Boolean;
    {class} function get_DbcsEnabled: Boolean;
    {class} function get_MouseButtons: Int32;
    {class} function get_Secure: Boolean;
    {class} function get_Border3DSize: DDN.System.Drawing.DNSize;
    {class} function get_MinimizedWindowSpacingSize: DDN.System.Drawing.DNSize;
    {class} function get_SmallIconSize: DDN.System.Drawing.DNSize;
    {class} function get_ToolWindowCaptionHeight: Int32;
    {class} function get_ToolWindowCaptionButtonSize: DDN.System.Drawing.DNSize;
    {class} function get_MenuButtonSize: DDN.System.Drawing.DNSize;
    {class} function get_ArrangeStartingPosition: DNArrangeStartingPosition;
    {class} function get_ArrangeDirection: DNArrangeDirection;
    {class} function get_MinimizedWindowSize: DDN.System.Drawing.DNSize;
    {class} function get_MaxWindowTrackSize: DDN.System.Drawing.DNSize;
    {class} function get_PrimaryMonitorMaximizedWindowSize: DDN.System.Drawing.DNSize;
    {class} function get_Network: Boolean;
    {class} function get_TerminalServerSession: Boolean;
    {class} function get_BootMode: DNBootMode;
    {class} function get_DragSize: DDN.System.Drawing.DNSize;
    {class} function get_ShowSounds: Boolean;
    {class} function get_MenuCheckSize: DDN.System.Drawing.DNSize;
    {class} function get_MidEastEnabled: Boolean;
    {class} function get_NativeMouseWheelSupport: Boolean;
    {class} function get_MouseWheelPresent: Boolean;
    {class} function get_VirtualScreen: DDN.System.Drawing.DNRectangle;
    {class} function get_MonitorCount: Int32;
    {class} function get_MonitorsSameDisplayFormat: Boolean;
    {class} function get_ComputerName: string;
    {class} function get_UserDomainName: string;
    {class} function get_UserInteractive: Boolean;
    {class} function get_UserName: string;
    {class} function get_IsDropShadowEnabled: Boolean;
    {class} function get_IsFlatMenuEnabled: Boolean;
    {class} function get_IsFontSmoothingEnabled: Boolean;
    {class} function get_FontSmoothingContrast: Int32;
    {class} function get_FontSmoothingType: Int32;
    {class} function get_IconHorizontalSpacing: Int32;
    {class} function get_IconVerticalSpacing: Int32;
    {class} function get_IsIconTitleWrappingEnabled: Boolean;
    {class} function get_MenuAccessKeysUnderlined: Boolean;
    {class} function get_KeyboardDelay: Int32;
    {class} function get_IsKeyboardPreferred: Boolean;
    {class} function get_KeyboardSpeed: Int32;
    {class} function get_MouseHoverSize: DDN.System.Drawing.DNSize;
    {class} function get_MouseHoverTime: Int32;
    {class} function get_MouseSpeed: Int32;
    {class} function get_IsSnapToDefaultEnabled: Boolean;
    {class} function get_PopupMenuAlignment: DNLeftRightAlignment;
    {class} function get_IsMenuFadeEnabled: Boolean;
    {class} function get_MenuShowDelay: Int32;
    {class} function get_IsComboBoxAnimationEnabled: Boolean;
    {class} function get_IsTitleBarGradientEnabled: Boolean;
    {class} function get_IsHotTrackingEnabled: Boolean;
    {class} function get_IsListBoxSmoothScrollingEnabled: Boolean;
    {class} function get_IsMenuAnimationEnabled: Boolean;
    {class} function get_IsSelectionFadeEnabled: Boolean;
    {class} function get_IsToolTipAnimationEnabled: Boolean;
    {class} function get_UIEffectsEnabled: Boolean;
    {class} function get_IsActiveWindowTrackingEnabled: Boolean;
    {class} function get_ActiveWindowTrackingDelay: Int32;
    {class} function get_IsMinimizeRestoreAnimationEnabled: Boolean;
    {class} function get_BorderMultiplierFactor: Int32;
    {class} function get_CaretBlinkTime: Int32;
    {class} function get_CaretWidth: Int32;
    {class} function get_MouseWheelScrollDelta: Int32;
    {class} function get_VerticalFocusThickness: Int32;
    {class} function get_HorizontalFocusThickness: Int32;
    {class} function get_VerticalResizeBorderThickness: Int32;
    {class} function get_HorizontalResizeBorderThickness: Int32;
    {class} function get_ScreenOrientation: DNScreenOrientation;
    {class} function get_SizingBorderWidth: Int32;
    {class} function get_SmallCaptionButtonSize: DDN.System.Drawing.DNSize;
    {class} function get_MenuBarButtonSize: DDN.System.Drawing.DNSize;

  { static methods } 

    {class} function GetVerticalScrollBarWidthForDpi(dpi: Int32): Int32;
    {class} function GetHorizontalScrollBarHeightForDpi(dpi: Int32): Int32;
    {class} function GetBorderSizeForDpi(dpi: Int32): DDN.System.Drawing.DNSize;
    {class} function GetMenuFontForDpi(dpi: Int32): DDN.System.Drawing.DNFont;
    {class} function VerticalScrollBarArrowHeightForDpi(dpi: Int32): Int32;
    {class} function GetHorizontalScrollBarArrowWidthForDpi(dpi: Int32): Int32;

  { static propertys } 

    {class} property DragFullWindows: Boolean read get_DragFullWindows;
    {class} property HighContrast: Boolean read get_HighContrast;
    {class} property MouseWheelScrollLines: Int32 read get_MouseWheelScrollLines;
    {class} property PrimaryMonitorSize: DDN.System.Drawing.DNSize read get_PrimaryMonitorSize;
    {class} property VerticalScrollBarWidth: Int32 read get_VerticalScrollBarWidth;
    {class} property HorizontalScrollBarHeight: Int32 read get_HorizontalScrollBarHeight;
    {class} property CaptionHeight: Int32 read get_CaptionHeight;
    {class} property BorderSize: DDN.System.Drawing.DNSize read get_BorderSize;
    {class} property FixedFrameBorderSize: DDN.System.Drawing.DNSize read get_FixedFrameBorderSize;
    {class} property VerticalScrollBarThumbHeight: Int32 read get_VerticalScrollBarThumbHeight;
    {class} property HorizontalScrollBarThumbWidth: Int32 read get_HorizontalScrollBarThumbWidth;
    {class} property IconSize: DDN.System.Drawing.DNSize read get_IconSize;
    {class} property CursorSize: DDN.System.Drawing.DNSize read get_CursorSize;
    {class} property MenuFont: DDN.System.Drawing.DNFont read get_MenuFont;
    {class} property MenuHeight: Int32 read get_MenuHeight;
    {class} property PowerStatus: DNPowerStatus read get_PowerStatus;
    {class} property WorkingArea: DDN.System.Drawing.DNRectangle read get_WorkingArea;
    {class} property KanjiWindowHeight: Int32 read get_KanjiWindowHeight;
    {class} property MousePresent: Boolean read get_MousePresent;
    {class} property VerticalScrollBarArrowHeight: Int32 read get_VerticalScrollBarArrowHeight;
    {class} property HorizontalScrollBarArrowWidth: Int32 read get_HorizontalScrollBarArrowWidth;
    {class} property DebugOS: Boolean read get_DebugOS;
    {class} property MouseButtonsSwapped: Boolean read get_MouseButtonsSwapped;
    {class} property MinimumWindowSize: DDN.System.Drawing.DNSize read get_MinimumWindowSize;
    {class} property CaptionButtonSize: DDN.System.Drawing.DNSize read get_CaptionButtonSize;
    {class} property FrameBorderSize: DDN.System.Drawing.DNSize read get_FrameBorderSize;
    {class} property MinWindowTrackSize: DDN.System.Drawing.DNSize read get_MinWindowTrackSize;
    {class} property DoubleClickSize: DDN.System.Drawing.DNSize read get_DoubleClickSize;
    {class} property DoubleClickTime: Int32 read get_DoubleClickTime;
    {class} property IconSpacingSize: DDN.System.Drawing.DNSize read get_IconSpacingSize;
    {class} property RightAlignedMenus: Boolean read get_RightAlignedMenus;
    {class} property PenWindows: Boolean read get_PenWindows;
    {class} property DbcsEnabled: Boolean read get_DbcsEnabled;
    {class} property MouseButtons: Int32 read get_MouseButtons;
    {class} property Secure: Boolean read get_Secure;
    {class} property Border3DSize: DDN.System.Drawing.DNSize read get_Border3DSize;
    {class} property MinimizedWindowSpacingSize: DDN.System.Drawing.DNSize read get_MinimizedWindowSpacingSize;
    {class} property SmallIconSize: DDN.System.Drawing.DNSize read get_SmallIconSize;
    {class} property ToolWindowCaptionHeight: Int32 read get_ToolWindowCaptionHeight;
    {class} property ToolWindowCaptionButtonSize: DDN.System.Drawing.DNSize read get_ToolWindowCaptionButtonSize;
    {class} property MenuButtonSize: DDN.System.Drawing.DNSize read get_MenuButtonSize;
    {class} property ArrangeStartingPosition: DNArrangeStartingPosition read get_ArrangeStartingPosition;
    {class} property ArrangeDirection: DNArrangeDirection read get_ArrangeDirection;
    {class} property MinimizedWindowSize: DDN.System.Drawing.DNSize read get_MinimizedWindowSize;
    {class} property MaxWindowTrackSize: DDN.System.Drawing.DNSize read get_MaxWindowTrackSize;
    {class} property PrimaryMonitorMaximizedWindowSize: DDN.System.Drawing.DNSize read get_PrimaryMonitorMaximizedWindowSize;
    {class} property Network: Boolean read get_Network;
    {class} property TerminalServerSession: Boolean read get_TerminalServerSession;
    {class} property BootMode: DNBootMode read get_BootMode;
    {class} property DragSize: DDN.System.Drawing.DNSize read get_DragSize;
    {class} property ShowSounds: Boolean read get_ShowSounds;
    {class} property MenuCheckSize: DDN.System.Drawing.DNSize read get_MenuCheckSize;
    {class} property MidEastEnabled: Boolean read get_MidEastEnabled;
    {class} property NativeMouseWheelSupport: Boolean read get_NativeMouseWheelSupport;
    {class} property MouseWheelPresent: Boolean read get_MouseWheelPresent;
    {class} property VirtualScreen: DDN.System.Drawing.DNRectangle read get_VirtualScreen;
    {class} property MonitorCount: Int32 read get_MonitorCount;
    {class} property MonitorsSameDisplayFormat: Boolean read get_MonitorsSameDisplayFormat;
    {class} property ComputerName: string read get_ComputerName;
    {class} property UserDomainName: string read get_UserDomainName;
    {class} property UserInteractive: Boolean read get_UserInteractive;
    {class} property UserName: string read get_UserName;
    {class} property IsDropShadowEnabled: Boolean read get_IsDropShadowEnabled;
    {class} property IsFlatMenuEnabled: Boolean read get_IsFlatMenuEnabled;
    {class} property IsFontSmoothingEnabled: Boolean read get_IsFontSmoothingEnabled;
    {class} property FontSmoothingContrast: Int32 read get_FontSmoothingContrast;
    {class} property FontSmoothingType: Int32 read get_FontSmoothingType;
    {class} property IconHorizontalSpacing: Int32 read get_IconHorizontalSpacing;
    {class} property IconVerticalSpacing: Int32 read get_IconVerticalSpacing;
    {class} property IsIconTitleWrappingEnabled: Boolean read get_IsIconTitleWrappingEnabled;
    {class} property MenuAccessKeysUnderlined: Boolean read get_MenuAccessKeysUnderlined;
    {class} property KeyboardDelay: Int32 read get_KeyboardDelay;
    {class} property IsKeyboardPreferred: Boolean read get_IsKeyboardPreferred;
    {class} property KeyboardSpeed: Int32 read get_KeyboardSpeed;
    {class} property MouseHoverSize: DDN.System.Drawing.DNSize read get_MouseHoverSize;
    {class} property MouseHoverTime: Int32 read get_MouseHoverTime;
    {class} property MouseSpeed: Int32 read get_MouseSpeed;
    {class} property IsSnapToDefaultEnabled: Boolean read get_IsSnapToDefaultEnabled;
    {class} property PopupMenuAlignment: DNLeftRightAlignment read get_PopupMenuAlignment;
    {class} property IsMenuFadeEnabled: Boolean read get_IsMenuFadeEnabled;
    {class} property MenuShowDelay: Int32 read get_MenuShowDelay;
    {class} property IsComboBoxAnimationEnabled: Boolean read get_IsComboBoxAnimationEnabled;
    {class} property IsTitleBarGradientEnabled: Boolean read get_IsTitleBarGradientEnabled;
    {class} property IsHotTrackingEnabled: Boolean read get_IsHotTrackingEnabled;
    {class} property IsListBoxSmoothScrollingEnabled: Boolean read get_IsListBoxSmoothScrollingEnabled;
    {class} property IsMenuAnimationEnabled: Boolean read get_IsMenuAnimationEnabled;
    {class} property IsSelectionFadeEnabled: Boolean read get_IsSelectionFadeEnabled;
    {class} property IsToolTipAnimationEnabled: Boolean read get_IsToolTipAnimationEnabled;
    {class} property UIEffectsEnabled: Boolean read get_UIEffectsEnabled;
    {class} property IsActiveWindowTrackingEnabled: Boolean read get_IsActiveWindowTrackingEnabled;
    {class} property ActiveWindowTrackingDelay: Int32 read get_ActiveWindowTrackingDelay;
    {class} property IsMinimizeRestoreAnimationEnabled: Boolean read get_IsMinimizeRestoreAnimationEnabled;
    {class} property BorderMultiplierFactor: Int32 read get_BorderMultiplierFactor;
    {class} property CaretBlinkTime: Int32 read get_CaretBlinkTime;
    {class} property CaretWidth: Int32 read get_CaretWidth;
    {class} property MouseWheelScrollDelta: Int32 read get_MouseWheelScrollDelta;
    {class} property VerticalFocusThickness: Int32 read get_VerticalFocusThickness;
    {class} property HorizontalFocusThickness: Int32 read get_HorizontalFocusThickness;
    {class} property VerticalResizeBorderThickness: Int32 read get_VerticalResizeBorderThickness;
    {class} property HorizontalResizeBorderThickness: Int32 read get_HorizontalResizeBorderThickness;
    {class} property ScreenOrientation: DNScreenOrientation read get_ScreenOrientation;
    {class} property SizingBorderWidth: Int32 read get_SizingBorderWidth;
    {class} property SmallCaptionButtonSize: DDN.System.Drawing.DNSize read get_SmallCaptionButtonSize;
    {class} property MenuBarButtonSize: DDN.System.Drawing.DNSize read get_MenuBarButtonSize;
  end;

  [DNTypeName('System.Windows.Forms.SystemInformation')]
  DNSystemInformation = interface(DDN.mscorlib.DNObject)
  ['{90D07746-ED91-3FC6-B772-E04C67E1C710}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNSystemInformation = class(TDNGenericImport<DNSystemInformationClass, DNSystemInformation>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabControl_TabPageCollectionClass = interface(DNObjectClass)
  ['{68ED195E-6842-599E-8774-466731F65301}']
  { constructors } 

    {class} function init(owner: DNTabControl): DNTabControl_TabPageCollection;

  end;

  [DNTypeName('System.Windows.Forms.TabControl+TabPageCollection')]
  DNTabControl_TabPageCollection = interface(DDN.mscorlib.DNIList)
  ['{4A9E65EA-F93F-3001-B777-EFF07E8CE2F9}']
  { getters & setters } 

    function get_Item(index: Int32): DNTabPage; overload;
    procedure set_Item(index: Int32; value: DNTabPage);
    function get_Item(key: string): DNTabPage; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    procedure Add(value: DNTabPage); overload;
    procedure Add(text: string); overload;
    procedure Add(key: string; text: string); overload;
    procedure Add(key: string; text: string; imageIndex: Int32); overload;
    procedure Add(key: string; text: string; imageKey: string); overload;
    procedure AddRange(pages: TArray<DNTabPage>);
    function &Contains(page: DNTabPage): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(page: DNTabPage): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Insert(index: Int32; tabPage: DNTabPage); overload;
    procedure Insert(index: Int32; text: string); overload;
    procedure Insert(index: Int32; key: string; text: string); overload;
    procedure Insert(index: Int32; key: string; text: string; imageIndex: Int32); overload;
    procedure Insert(index: Int32; key: string; text: string; imageKey: string); overload;
    procedure Clear;
    procedure Remove(value: DNTabPage);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNTabPage read get_Item write set_Item; default;
    property Item[key: string]: DNTabPage read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNTabControl_TabPageCollection = class(TDNGenericImport<DNTabControl_TabPageCollectionClass, DNTabControl_TabPageCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutStyleClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FCD5F2CB-AD27-5523-9812-59CEF8FF36A3}']
  end;

  [DNTypeName('System.Windows.Forms.TableLayoutStyle')]
  DNTableLayoutStyle = interface(DDN.mscorlib.DNObject)
  ['{A1C1DEEC-0E77-3966-8462-5AD779ABDA9B}']
  { getters & setters } 

    function get_SizeType: DNSizeType;
    procedure set_SizeType(value: DNSizeType);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property SizeType: DNSizeType read get_SizeType write set_SizeType;
  end;

  TDNTableLayoutStyle = class(TDNGenericImport<DNTableLayoutStyleClass, DNTableLayoutStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNColumnStyleClass = interface(DNTableLayoutStyleClass)
  ['{5132F931-5A5C-575F-9B96-B9172BE4627E}']
  { constructors } 

    {class} function init: DNColumnStyle; overload;
    {class} function init(sizeType: DNSizeType): DNColumnStyle; overload;
    {class} function init(sizeType: DNSizeType; width: Single): DNColumnStyle; overload;

  end;

  [DNTypeName('System.Windows.Forms.ColumnStyle')]
  DNColumnStyle = interface(DNTableLayoutStyle)
  ['{FFA09298-C109-324C-95DF-0CD446FF2527}']
  { getters & setters } 

    function get_Width: Single;
    procedure set_Width(value: Single);
    function get_SizeType: DNSizeType;
    procedure set_SizeType(value: DNSizeType);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Width: Single read get_Width write set_Width;
    property SizeType: DNSizeType read get_SizeType write set_SizeType;
  end;

  TDNColumnStyle = class(TDNGenericImport<DNColumnStyleClass, DNColumnStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNRowStyleClass = interface(DNTableLayoutStyleClass)
  ['{F9155BB1-03F8-5E91-9C83-54938DE9EE67}']
  { constructors } 

    {class} function init: DNRowStyle; overload;
    {class} function init(sizeType: DNSizeType): DNRowStyle; overload;
    {class} function init(sizeType: DNSizeType; height: Single): DNRowStyle; overload;

  end;

  [DNTypeName('System.Windows.Forms.RowStyle')]
  DNRowStyle = interface(DNTableLayoutStyle)
  ['{60F3AADF-74FD-303C-93AC-06504593F9D3}']
  { getters & setters } 

    function get_Height: Single;
    procedure set_Height(value: Single);
    function get_SizeType: DNSizeType;
    procedure set_SizeType(value: DNSizeType);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Height: Single read get_Height write set_Height;
    property SizeType: DNSizeType read get_SizeType write set_SizeType;
  end;

  TDNRowStyle = class(TDNGenericImport<DNRowStyleClass, DNRowStyle>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutStyleCollectionClass = interface(DNObjectClass)
  ['{408236AE-6BE5-5463-B818-83443F47A3DA}']
  end;

  [DNTypeName('System.Windows.Forms.TableLayoutStyleCollection')]
  DNTableLayoutStyleCollection = interface(DDN.mscorlib.DNIList)
  ['{A6FF72DB-C925-311C-91E0-3541BC3A04D5}']
  { getters & setters } 

    function get_Item(index: Int32): DNTableLayoutStyle;
    procedure set_Item(index: Int32; value: DNTableLayoutStyle);
    function get_Count: Int32;

  { methods } 

    function Add(style: DNTableLayoutStyle): Int32;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNTableLayoutStyle read get_Item write set_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNTableLayoutStyleCollection = class(TDNGenericImport<DNTableLayoutStyleCollectionClass, DNTableLayoutStyleCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutColumnStyleCollectionClass = interface(DNTableLayoutStyleCollectionClass)
  ['{44FC292C-6EE8-537A-AFFB-D161B7FA7980}']
  end;

  [DNTypeName('System.Windows.Forms.TableLayoutColumnStyleCollection')]
  DNTableLayoutColumnStyleCollection = interface(DNTableLayoutStyleCollection)
  ['{CBE280F8-4E87-3535-A89C-E2A96E643469}']
  { getters & setters } 

    function get_Item(index: Int32): DNColumnStyle;
    procedure set_Item(index: Int32; value: DNColumnStyle);
    function get_Count: Int32;

  { methods } 

    function Add(columnStyle: DNColumnStyle): Int32; overload;
    procedure Insert(index: Int32; columnStyle: DNColumnStyle);
    procedure Remove(columnStyle: DNColumnStyle);
    function &Contains(columnStyle: DNColumnStyle): Boolean;
    function IndexOf(columnStyle: DNColumnStyle): Int32;
    function Add(style: DNTableLayoutStyle): Int32; overload;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNColumnStyle read get_Item write set_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNTableLayoutColumnStyleCollection = class(TDNGenericImport<DNTableLayoutColumnStyleCollectionClass, DNTableLayoutColumnStyleCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTableLayoutRowStyleCollectionClass = interface(DNTableLayoutStyleCollectionClass)
  ['{0EDC394C-1D76-5F60-A129-59A8AB480604}']
  end;

  [DNTypeName('System.Windows.Forms.TableLayoutRowStyleCollection')]
  DNTableLayoutRowStyleCollection = interface(DNTableLayoutStyleCollection)
  ['{6F2B1F2D-58CA-347C-ADDD-9D81220192D0}']
  { getters & setters } 

    function get_Item(index: Int32): DNRowStyle;
    procedure set_Item(index: Int32; value: DNRowStyle);
    function get_Count: Int32;

  { methods } 

    function Add(rowStyle: DNRowStyle): Int32; overload;
    procedure Insert(index: Int32; rowStyle: DNRowStyle);
    procedure Remove(rowStyle: DNRowStyle);
    function &Contains(rowStyle: DNRowStyle): Boolean;
    function IndexOf(rowStyle: DNRowStyle): Int32;
    function Add(style: DNTableLayoutStyle): Int32; overload;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNRowStyle read get_Item write set_Item; default;
    property Count: Int32 read get_Count;
  end;

  TDNTableLayoutRowStyleCollection = class(TDNGenericImport<DNTableLayoutRowStyleCollectionClass, DNTableLayoutRowStyleCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTabRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{80C5A7DA-5A30-5C11-9A65-3960C4ACF93C}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;

  { static methods } 

    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTabItemState); overload;
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; tabItemText: string; font: DDN.System.Drawing.DNFont; state: DNTabItemState); overload;
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; tabItemText: string; font: DDN.System.Drawing.DNFont; focused: Boolean; state: DNTabItemState); overload;
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; tabItemText: string; font: DDN.System.Drawing.DNFont; image: DDN.System.Drawing.DNImage; imageRectangle: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNTabItemState); overload;
    {class} procedure DrawTabPage(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNTabItemState); overload;
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; tabItemText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; focused: Boolean; state: DNTabItemState); overload;
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; image: DDN.System.Drawing.DNImage; imageRectangle: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNTabItemState); overload;
    {class} procedure DrawTabItem(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; tabItemText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; image: DDN.System.Drawing.DNImage; imageRectangle: DDN.System.Drawing.DNRectangle; focused: Boolean; state: DNTabItemState); overload;

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
  end;

  [DNTypeName('System.Windows.Forms.TabRenderer')]
  DNTabRenderer = interface(DDN.mscorlib.DNObject)
  ['{E2FA407E-4342-3736-83BB-1F3D9C5A04BB}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTabRenderer = class(TDNGenericImport<DNTabRendererClass, DNTabRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTextBoxRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6B4F41BF-EC7D-5767-8AFF-95CA52F4A2AF}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;

  { static methods } 

    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTextBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; textBoxText: string; font: DDN.System.Drawing.DNFont; state: DNTextBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; textBoxText: string; font: DDN.System.Drawing.DNFont; textBounds: DDN.System.Drawing.DNRectangle; state: DNTextBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; textBoxText: string; font: DDN.System.Drawing.DNFont; flags: DNTextFormatFlags; state: DNTextBoxState); overload;
    {class} procedure DrawTextBox(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; textBoxText: string; font: DDN.System.Drawing.DNFont; textBounds: DDN.System.Drawing.DNRectangle; flags: DNTextFormatFlags; state: DNTextBoxState); overload;

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
  end;

  [DNTypeName('System.Windows.Forms.TextBoxRenderer')]
  DNTextBoxRenderer = interface(DDN.mscorlib.DNObject)
  ['{610771E3-EC98-3A4D-9547-21A0804BD797}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTextBoxRenderer = class(TDNGenericImport<DNTextBoxRendererClass, DNTextBoxRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTextRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{9FA1E194-7979-5C0B-8F6A-56A66BCC2526}']
  { static methods } 

    {class} function MeasureText(text: string; font: DDN.System.Drawing.DNFont): DDN.System.Drawing.DNSize; overload;
    {class} function MeasureText(text: string; font: DDN.System.Drawing.DNFont; proposedSize: DDN.System.Drawing.DNSize; flags: DNTextFormatFlags): DDN.System.Drawing.DNSize; overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; pt: DDN.System.Drawing.DNPoint; foreColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; pt: DDN.System.Drawing.DNPoint; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; pt: DDN.System.Drawing.DNPoint; foreColor: DDN.System.Drawing.DNColor; flags: DNTextFormatFlags); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; pt: DDN.System.Drawing.DNPoint; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; flags: DNTextFormatFlags); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; bounds: DDN.System.Drawing.DNRectangle; foreColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; bounds: DDN.System.Drawing.DNRectangle; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; bounds: DDN.System.Drawing.DNRectangle; foreColor: DDN.System.Drawing.DNColor; flags: DNTextFormatFlags); overload;
    {class} procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; bounds: DDN.System.Drawing.DNRectangle; foreColor: DDN.System.Drawing.DNColor; backColor: DDN.System.Drawing.DNColor; flags: DNTextFormatFlags); overload;
    {class} function MeasureText(text: string; font: DDN.System.Drawing.DNFont; proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    {class} function MeasureText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont): DDN.System.Drawing.DNSize; overload;
    {class} function MeasureText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; proposedSize: DDN.System.Drawing.DNSize): DDN.System.Drawing.DNSize; overload;
    {class} function MeasureText(dc: DDN.System.Drawing.DNIDeviceContext; text: string; font: DDN.System.Drawing.DNFont; proposedSize: DDN.System.Drawing.DNSize; flags: DNTextFormatFlags): DDN.System.Drawing.DNSize; overload;

  end;

  [DNTypeName('System.Windows.Forms.TextRenderer')]
  DNTextRenderer = interface(DDN.mscorlib.DNObject)
  ['{1869B117-1EB8-3D1C-B4B7-11111A66F848}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTextRenderer = class(TDNGenericImport<DNTextRendererClass, DNTextRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolBar_ToolBarButtonCollectionClass = interface(DNObjectClass)
  ['{43D42584-EE60-567C-8178-12F0D9271B3E}']
  { constructors } 

    {class} function init(owner: DNToolBar): DNToolBar_ToolBarButtonCollection;

  end;

  [DNTypeName('System.Windows.Forms.ToolBar+ToolBarButtonCollection')]
  DNToolBar_ToolBarButtonCollection = interface(DDN.mscorlib.DNIList)
  ['{7D94F509-99CE-3959-8426-B500972F061F}']
  { getters & setters } 

    function get_Item(index: Int32): DNToolBarButton; overload;
    procedure set_Item(index: Int32; value: DNToolBarButton);
    function get_Item(key: string): DNToolBarButton; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function Add(button: DNToolBarButton): Int32; overload;
    function Add(text: string): Int32; overload;
    procedure AddRange(buttons: TArray<DNToolBarButton>);
    function &Contains(button: DNToolBarButton): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(button: DNToolBarButton): Int32;
    function IndexOfKey(key: string): Int32;
    procedure Insert(index: Int32; button: DNToolBarButton);
    procedure RemoveByKey(key: string);
    procedure Remove(button: DNToolBarButton);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    procedure RemoveAt(index: Int32);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNToolBarButton read get_Item write set_Item; default;
    property Item[key: string]: DNToolBarButton read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNToolBar_ToolBarButtonCollection = class(TDNGenericImport<DNToolBar_ToolBarButtonCollectionClass, DNToolBar_ToolBarButtonCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripManagerClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1C3B1E76-D960-5B12-B629-7389C7BEAAA7}']
  { static getter & setter } 

    {class} function get_Renderer: DNToolStripRenderer;
    {class} procedure set_Renderer(value: DNToolStripRenderer);
    {class} function get_RenderMode: DNToolStripManagerRenderMode;
    {class} procedure set_RenderMode(value: DNToolStripManagerRenderMode);
    {class} function get_VisualStylesEnabled: Boolean;
    {class} procedure set_VisualStylesEnabled(value: Boolean);

  { static methods } 

    {class} function FindToolStrip(toolStripName: string): DNToolStrip;
    {class} procedure LoadSettings(targetForm: DNForm); overload;
    {class} procedure LoadSettings(targetForm: DNForm; key: string); overload;
    {class} procedure SaveSettings(sourceForm: DNForm); overload;
    {class} procedure SaveSettings(sourceForm: DNForm; key: string); overload;
    {class} function IsValidShortcut(shortcut: DNKeys): Boolean;
    {class} function IsShortcutDefined(shortcut: DNKeys): Boolean;
    {class} function Merge(sourceToolStrip: DNToolStrip; targetToolStrip: DNToolStrip): Boolean; overload;
    {class} function Merge(sourceToolStrip: DNToolStrip; targetName: string): Boolean; overload;
    {class} function RevertMerge(targetToolStrip: DNToolStrip): Boolean; overload;
    {class} function RevertMerge(targetToolStrip: DNToolStrip; sourceToolStrip: DNToolStrip): Boolean; overload;
    {class} function RevertMerge(targetName: string): Boolean; overload;

  { static propertys } 

    {class} property Renderer: DNToolStripRenderer read get_Renderer write set_Renderer;
    {class} property RenderMode: DNToolStripManagerRenderMode read get_RenderMode write set_RenderMode;
    {class} property VisualStylesEnabled: Boolean read get_VisualStylesEnabled write set_VisualStylesEnabled;
  end;

  [DNTypeName('System.Windows.Forms.ToolStripManager')]
  DNToolStripManager = interface(DDN.mscorlib.DNObject)
  ['{89479F89-448A-3903-982E-2B07536F950E}']
  { events } 

    {class} procedure add_RendererChanged(value: DDN.mscorlib.DNEventHandler);
    {class} procedure remove_RendererChanged(value: DDN.mscorlib.DNEventHandler);

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNToolStripManager = class(TDNGenericImport<DNToolStripManagerClass, DNToolStripManager>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{203AE6BF-B3B2-5143-A3F9-37DDA46A84EC}']
  { static methods } 

    {class} function CreateDisabledImage(normalImage: DDN.System.Drawing.DNImage): DDN.System.Drawing.DNImage;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripRenderer')]
  DNToolStripRenderer = interface(DDN.mscorlib.DNObject)
  ['{D998DF28-8DAE-37F6-ADF6-3B50E11A26E3}']
  { events } 

    procedure add_RenderArrow(value: DNToolStripArrowRenderEventHandler);
    procedure remove_RenderArrow(value: DNToolStripArrowRenderEventHandler);
    procedure add_RenderToolStripBackground(value: DNToolStripRenderEventHandler);
    procedure remove_RenderToolStripBackground(value: DNToolStripRenderEventHandler);
    procedure add_RenderToolStripPanelBackground(value: DNToolStripPanelRenderEventHandler);
    procedure remove_RenderToolStripPanelBackground(value: DNToolStripPanelRenderEventHandler);
    procedure add_RenderToolStripContentPanelBackground(value: DNToolStripContentPanelRenderEventHandler);
    procedure remove_RenderToolStripContentPanelBackground(value: DNToolStripContentPanelRenderEventHandler);
    procedure add_RenderToolStripBorder(value: DNToolStripRenderEventHandler);
    procedure remove_RenderToolStripBorder(value: DNToolStripRenderEventHandler);
    procedure add_RenderButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderDropDownButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderDropDownButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderOverflowButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderOverflowButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderGrip(value: DNToolStripGripRenderEventHandler);
    procedure remove_RenderGrip(value: DNToolStripGripRenderEventHandler);
    procedure add_RenderItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderItemImage(value: DNToolStripItemImageRenderEventHandler);
    procedure remove_RenderItemImage(value: DNToolStripItemImageRenderEventHandler);
    procedure add_RenderItemCheck(value: DNToolStripItemImageRenderEventHandler);
    procedure remove_RenderItemCheck(value: DNToolStripItemImageRenderEventHandler);
    procedure add_RenderItemText(value: DNToolStripItemTextRenderEventHandler);
    procedure remove_RenderItemText(value: DNToolStripItemTextRenderEventHandler);
    procedure add_RenderImageMargin(value: DNToolStripRenderEventHandler);
    procedure remove_RenderImageMargin(value: DNToolStripRenderEventHandler);
    procedure add_RenderLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderMenuItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderMenuItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderToolStripStatusLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderToolStripStatusLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderStatusStripSizingGrip(value: DNToolStripRenderEventHandler);
    procedure remove_RenderStatusStripSizingGrip(value: DNToolStripRenderEventHandler);
    procedure add_RenderSplitButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderSplitButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderSeparator(value: DNToolStripSeparatorRenderEventHandler);
    procedure remove_RenderSeparator(value: DNToolStripSeparatorRenderEventHandler);

  { methods } 

    procedure DrawArrow(e: DNToolStripArrowRenderEventArgs);
    procedure DrawToolStripBackground(e: DNToolStripRenderEventArgs);
    procedure DrawGrip(e: DNToolStripGripRenderEventArgs);
    procedure DrawItemBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawImageMargin(e: DNToolStripRenderEventArgs);
    procedure DrawLabelBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawToolStripBorder(e: DNToolStripRenderEventArgs);
    procedure DrawDropDownButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawOverflowButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawItemImage(e: DNToolStripItemImageRenderEventArgs);
    procedure DrawItemCheck(e: DNToolStripItemImageRenderEventArgs);
    procedure DrawItemText(e: DNToolStripItemTextRenderEventArgs);
    procedure DrawMenuItemBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawSplitButton(e: DNToolStripItemRenderEventArgs);
    procedure DrawToolStripStatusLabelBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawStatusStripSizingGrip(e: DNToolStripRenderEventArgs);
    procedure DrawSeparator(e: DNToolStripSeparatorRenderEventArgs);
    procedure DrawToolStripPanelBackground(e: DNToolStripPanelRenderEventArgs);
    procedure DrawToolStripContentPanelBackground(e: DNToolStripContentPanelRenderEventArgs);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNToolStripRenderer = class(TDNGenericImport<DNToolStripRendererClass, DNToolStripRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripProfessionalRendererClass = interface(DNToolStripRendererClass)
  ['{5820D60E-BAD9-565E-81FB-F0B4531FE420}']
  { constructors } 

    {class} function init: DNToolStripProfessionalRenderer; overload;
    {class} function init(professionalColorTable: DNProfessionalColorTable): DNToolStripProfessionalRenderer; overload;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripProfessionalRenderer')]
  DNToolStripProfessionalRenderer = interface(DNToolStripRenderer)
  ['{81AA8590-9BFE-3941-A301-154587AA7278}']
  { getters & setters } 

    function get_ColorTable: DNProfessionalColorTable;
    function get_RoundedEdges: Boolean;
    procedure set_RoundedEdges(value: Boolean);

  { events } 

    procedure add_RenderArrow(value: DNToolStripArrowRenderEventHandler);
    procedure remove_RenderArrow(value: DNToolStripArrowRenderEventHandler);
    procedure add_RenderToolStripBackground(value: DNToolStripRenderEventHandler);
    procedure remove_RenderToolStripBackground(value: DNToolStripRenderEventHandler);
    procedure add_RenderToolStripPanelBackground(value: DNToolStripPanelRenderEventHandler);
    procedure remove_RenderToolStripPanelBackground(value: DNToolStripPanelRenderEventHandler);
    procedure add_RenderToolStripContentPanelBackground(value: DNToolStripContentPanelRenderEventHandler);
    procedure remove_RenderToolStripContentPanelBackground(value: DNToolStripContentPanelRenderEventHandler);
    procedure add_RenderToolStripBorder(value: DNToolStripRenderEventHandler);
    procedure remove_RenderToolStripBorder(value: DNToolStripRenderEventHandler);
    procedure add_RenderButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderDropDownButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderDropDownButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderOverflowButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderOverflowButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderGrip(value: DNToolStripGripRenderEventHandler);
    procedure remove_RenderGrip(value: DNToolStripGripRenderEventHandler);
    procedure add_RenderItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderItemImage(value: DNToolStripItemImageRenderEventHandler);
    procedure remove_RenderItemImage(value: DNToolStripItemImageRenderEventHandler);
    procedure add_RenderItemCheck(value: DNToolStripItemImageRenderEventHandler);
    procedure remove_RenderItemCheck(value: DNToolStripItemImageRenderEventHandler);
    procedure add_RenderItemText(value: DNToolStripItemTextRenderEventHandler);
    procedure remove_RenderItemText(value: DNToolStripItemTextRenderEventHandler);
    procedure add_RenderImageMargin(value: DNToolStripRenderEventHandler);
    procedure remove_RenderImageMargin(value: DNToolStripRenderEventHandler);
    procedure add_RenderLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderMenuItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderMenuItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderToolStripStatusLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderToolStripStatusLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderStatusStripSizingGrip(value: DNToolStripRenderEventHandler);
    procedure remove_RenderStatusStripSizingGrip(value: DNToolStripRenderEventHandler);
    procedure add_RenderSplitButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderSplitButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderSeparator(value: DNToolStripSeparatorRenderEventHandler);
    procedure remove_RenderSeparator(value: DNToolStripSeparatorRenderEventHandler);

  { methods } 

    procedure DrawArrow(e: DNToolStripArrowRenderEventArgs);
    procedure DrawToolStripBackground(e: DNToolStripRenderEventArgs);
    procedure DrawGrip(e: DNToolStripGripRenderEventArgs);
    procedure DrawItemBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawImageMargin(e: DNToolStripRenderEventArgs);
    procedure DrawLabelBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawToolStripBorder(e: DNToolStripRenderEventArgs);
    procedure DrawDropDownButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawOverflowButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawItemImage(e: DNToolStripItemImageRenderEventArgs);
    procedure DrawItemCheck(e: DNToolStripItemImageRenderEventArgs);
    procedure DrawItemText(e: DNToolStripItemTextRenderEventArgs);
    procedure DrawMenuItemBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawSplitButton(e: DNToolStripItemRenderEventArgs);
    procedure DrawToolStripStatusLabelBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawStatusStripSizingGrip(e: DNToolStripRenderEventArgs);
    procedure DrawSeparator(e: DNToolStripSeparatorRenderEventArgs);
    procedure DrawToolStripPanelBackground(e: DNToolStripPanelRenderEventArgs);
    procedure DrawToolStripContentPanelBackground(e: DNToolStripContentPanelRenderEventArgs);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ColorTable: DNProfessionalColorTable read get_ColorTable;
    property RoundedEdges: Boolean read get_RoundedEdges write set_RoundedEdges;
  end;

  TDNToolStripProfessionalRenderer = class(TDNGenericImport<DNToolStripProfessionalRendererClass, DNToolStripProfessionalRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNToolStripSystemRendererClass = interface(DNToolStripRendererClass)
  ['{71CACDA1-61E8-59A2-A32C-4767D3E240BB}']
  { constructors } 

    {class} function init: DNToolStripSystemRenderer;

  end;

  [DNTypeName('System.Windows.Forms.ToolStripSystemRenderer')]
  DNToolStripSystemRenderer = interface(DNToolStripRenderer)
  ['{19B6582C-6DC6-3094-A287-A59E43632D61}']
  { events } 

    procedure add_RenderArrow(value: DNToolStripArrowRenderEventHandler);
    procedure remove_RenderArrow(value: DNToolStripArrowRenderEventHandler);
    procedure add_RenderToolStripBackground(value: DNToolStripRenderEventHandler);
    procedure remove_RenderToolStripBackground(value: DNToolStripRenderEventHandler);
    procedure add_RenderToolStripPanelBackground(value: DNToolStripPanelRenderEventHandler);
    procedure remove_RenderToolStripPanelBackground(value: DNToolStripPanelRenderEventHandler);
    procedure add_RenderToolStripContentPanelBackground(value: DNToolStripContentPanelRenderEventHandler);
    procedure remove_RenderToolStripContentPanelBackground(value: DNToolStripContentPanelRenderEventHandler);
    procedure add_RenderToolStripBorder(value: DNToolStripRenderEventHandler);
    procedure remove_RenderToolStripBorder(value: DNToolStripRenderEventHandler);
    procedure add_RenderButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderDropDownButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderDropDownButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderOverflowButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderOverflowButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderGrip(value: DNToolStripGripRenderEventHandler);
    procedure remove_RenderGrip(value: DNToolStripGripRenderEventHandler);
    procedure add_RenderItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderItemImage(value: DNToolStripItemImageRenderEventHandler);
    procedure remove_RenderItemImage(value: DNToolStripItemImageRenderEventHandler);
    procedure add_RenderItemCheck(value: DNToolStripItemImageRenderEventHandler);
    procedure remove_RenderItemCheck(value: DNToolStripItemImageRenderEventHandler);
    procedure add_RenderItemText(value: DNToolStripItemTextRenderEventHandler);
    procedure remove_RenderItemText(value: DNToolStripItemTextRenderEventHandler);
    procedure add_RenderImageMargin(value: DNToolStripRenderEventHandler);
    procedure remove_RenderImageMargin(value: DNToolStripRenderEventHandler);
    procedure add_RenderLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderMenuItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderMenuItemBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderToolStripStatusLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderToolStripStatusLabelBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderStatusStripSizingGrip(value: DNToolStripRenderEventHandler);
    procedure remove_RenderStatusStripSizingGrip(value: DNToolStripRenderEventHandler);
    procedure add_RenderSplitButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure remove_RenderSplitButtonBackground(value: DNToolStripItemRenderEventHandler);
    procedure add_RenderSeparator(value: DNToolStripSeparatorRenderEventHandler);
    procedure remove_RenderSeparator(value: DNToolStripSeparatorRenderEventHandler);

  { methods } 

    procedure DrawArrow(e: DNToolStripArrowRenderEventArgs);
    procedure DrawToolStripBackground(e: DNToolStripRenderEventArgs);
    procedure DrawGrip(e: DNToolStripGripRenderEventArgs);
    procedure DrawItemBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawImageMargin(e: DNToolStripRenderEventArgs);
    procedure DrawLabelBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawToolStripBorder(e: DNToolStripRenderEventArgs);
    procedure DrawDropDownButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawOverflowButtonBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawItemImage(e: DNToolStripItemImageRenderEventArgs);
    procedure DrawItemCheck(e: DNToolStripItemImageRenderEventArgs);
    procedure DrawItemText(e: DNToolStripItemTextRenderEventArgs);
    procedure DrawMenuItemBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawSplitButton(e: DNToolStripItemRenderEventArgs);
    procedure DrawToolStripStatusLabelBackground(e: DNToolStripItemRenderEventArgs);
    procedure DrawStatusStripSizingGrip(e: DNToolStripRenderEventArgs);
    procedure DrawSeparator(e: DNToolStripSeparatorRenderEventArgs);
    procedure DrawToolStripPanelBackground(e: DNToolStripPanelRenderEventArgs);
    procedure DrawToolStripContentPanelBackground(e: DNToolStripContentPanelRenderEventArgs);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNToolStripSystemRenderer = class(TDNGenericImport<DNToolStripSystemRendererClass, DNToolStripSystemRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTrackBarRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BC68A9EB-1B3D-5376-8590-CEB04ED0C9BA}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;

  { static methods } 

    {class} procedure DrawHorizontalTrack(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawVerticalTrack(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle);
    {class} procedure DrawHorizontalThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTrackBarThumbState);
    {class} procedure DrawVerticalThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTrackBarThumbState);
    {class} procedure DrawLeftPointingThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTrackBarThumbState);
    {class} procedure DrawRightPointingThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTrackBarThumbState);
    {class} procedure DrawTopPointingThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTrackBarThumbState);
    {class} procedure DrawBottomPointingThumb(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; state: DNTrackBarThumbState);
    {class} procedure DrawHorizontalTicks(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; numTicks: Int32; edgeStyle: DNEdgeStyle);
    {class} procedure DrawVerticalTicks(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; numTicks: Int32; edgeStyle: DNEdgeStyle);
    {class} function GetLeftPointingThumbSize(g: DDN.System.Drawing.DNGraphics; state: DNTrackBarThumbState): DDN.System.Drawing.DNSize;
    {class} function GetRightPointingThumbSize(g: DDN.System.Drawing.DNGraphics; state: DNTrackBarThumbState): DDN.System.Drawing.DNSize;
    {class} function GetTopPointingThumbSize(g: DDN.System.Drawing.DNGraphics; state: DNTrackBarThumbState): DDN.System.Drawing.DNSize;
    {class} function GetBottomPointingThumbSize(g: DDN.System.Drawing.DNGraphics; state: DNTrackBarThumbState): DDN.System.Drawing.DNSize;

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
  end;

  [DNTypeName('System.Windows.Forms.TrackBarRenderer')]
  DNTrackBarRenderer = interface(DDN.mscorlib.DNObject)
  ['{98DBF61C-0E04-3B65-924C-AF006711C471}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNTrackBarRenderer = class(TDNGenericImport<DNTrackBarRendererClass, DNTrackBarRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeNodeCollectionClass = interface(DNObjectClass)
  ['{A8E5C5B6-BE29-5D92-9332-13AAB5C2F9CA}']
  end;

  [DNTypeName('System.Windows.Forms.TreeNodeCollection')]
  DNTreeNodeCollection = interface(DDN.mscorlib.DNIList)
  ['{8F253BD9-1C65-3948-BA16-33D902BE5187}']
  { getters & setters } 

    function get_Item(index: Int32): DNTreeNode; overload;
    procedure set_Item(index: Int32; value: DNTreeNode);
    function get_Item(key: string): DNTreeNode; overload;
    function get_Count: Int32;
    function get_IsReadOnly: Boolean;

  { methods } 

    function Add(text: string): DNTreeNode; overload;
    function Add(key: string; text: string): DNTreeNode; overload;
    function Add(key: string; text: string; imageIndex: Int32): DNTreeNode; overload;
    function Add(key: string; text: string; imageKey: string): DNTreeNode; overload;
    function Add(key: string; text: string; imageIndex: Int32; selectedImageIndex: Int32): DNTreeNode; overload;
    function Add(key: string; text: string; imageKey: string; selectedImageKey: string): DNTreeNode; overload;
    procedure AddRange(nodes: TArray<DNTreeNode>);
    function Add(node: DNTreeNode): Int32; overload;
    function &Contains(node: DNTreeNode): Boolean;
    function ContainsKey(key: string): Boolean;
    function IndexOf(node: DNTreeNode): Int32;
    function IndexOfKey(key: string): Int32;
    function Insert(index: Int32; text: string): DNTreeNode; overload;
    function Insert(index: Int32; key: string; text: string): DNTreeNode; overload;
    function Insert(index: Int32; key: string; text: string; imageIndex: Int32): DNTreeNode; overload;
    function Insert(index: Int32; key: string; text: string; imageKey: string): DNTreeNode; overload;
    function Insert(index: Int32; key: string; text: string; imageIndex: Int32; selectedImageIndex: Int32): DNTreeNode; overload;
    function Insert(index: Int32; key: string; text: string; imageKey: string; selectedImageKey: string): DNTreeNode; overload;
    procedure Clear;
    procedure CopyTo(dest: DDN.mscorlib.DNArray; index: Int32);
    procedure Remove(node: DNTreeNode);
    procedure RemoveAt(index: Int32);
    procedure RemoveByKey(key: string);
    function GetEnumerator: DDN.mscorlib.DNIEnumerator;
    function Find(key: string; searchAllChildren: Boolean): TArray<DNTreeNode>;
    procedure Insert(index: Int32; node: DNTreeNode); overload;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Item[index: Int32]: DNTreeNode read get_Item write set_Item; default;
    property Item[key: string]: DNTreeNode read get_Item; default;
    property Count: Int32 read get_Count;
    property IsReadOnly: Boolean read get_IsReadOnly;
  end;

  TDNTreeNodeCollection = class(TDNGenericImport<DNTreeNodeCollectionClass, DNTreeNodeCollection>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNTreeViewHitTestInfoClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E881946F-487E-5C0C-AA95-FFA883B6FDD1}']
  { constructors } 

    {class} function init(hitNode: DNTreeNode; hitLocation: DNTreeViewHitTestLocations): DNTreeViewHitTestInfo;

  end;

  [DNTypeName('System.Windows.Forms.TreeViewHitTestInfo')]
  DNTreeViewHitTestInfo = interface(DDN.mscorlib.DNObject)
  ['{285A3E73-335E-3C90-8285-EB6EA978589F}']
  { getters & setters } 

    function get_Location: DNTreeViewHitTestLocations;
    function get_Node: DNTreeNode;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property Location: DNTreeViewHitTestLocations read get_Location;
    property Node: DNTreeNode read get_Node;
  end;

  TDNTreeViewHitTestInfo = class(TDNGenericImport<DNTreeViewHitTestInfoClass, DNTreeViewHitTestInfo>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElementClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BFEA67AA-7221-5B58-9811-0339DC8CA93B}']
  { static methods } 

    {class} function CreateElement(className: string; part: Int32; state: Int32): DNVisualStyleElement;

  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement')]
  DNVisualStyleElement = interface(DDN.mscorlib.DNObject)
  ['{2857DF9B-6C32-3733-871D-2CB1563474FB}']
  { getters & setters } 

    function get_ClassName: string;
    function get_Part: Int32;
    function get_State: Int32;

  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property ClassName: string read get_ClassName;
    property Part: Int32 read get_Part;
    property State: Int32 read get_State;
  end;

  TDNVisualStyleElement = class(TDNGenericImport<DNVisualStyleElementClass, DNVisualStyleElement>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{521FDCC4-6358-546A-B566-6136726BF60F}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Button')]
  DNVisualStyleElement_Button = interface(DDN.mscorlib.DNObject)
  ['{47B2C164-96CE-3502-B743-4134D4FDEA2E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Button = class(TDNGenericImport<DNVisualStyleElement_ButtonClass, DNVisualStyleElement_Button>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Button_CheckBoxClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0D8E4EAE-8ECD-555B-8B6F-A3EF55803F15}']
  { static getter & setter } 

    {class} function get_UncheckedNormal: DNVisualStyleElement;
    {class} function get_UncheckedHot: DNVisualStyleElement;
    {class} function get_UncheckedPressed: DNVisualStyleElement;
    {class} function get_UncheckedDisabled: DNVisualStyleElement;
    {class} function get_CheckedNormal: DNVisualStyleElement;
    {class} function get_CheckedHot: DNVisualStyleElement;
    {class} function get_CheckedPressed: DNVisualStyleElement;
    {class} function get_CheckedDisabled: DNVisualStyleElement;
    {class} function get_MixedNormal: DNVisualStyleElement;
    {class} function get_MixedHot: DNVisualStyleElement;
    {class} function get_MixedPressed: DNVisualStyleElement;
    {class} function get_MixedDisabled: DNVisualStyleElement;

  { static propertys } 

    {class} property UncheckedNormal: DNVisualStyleElement read get_UncheckedNormal;
    {class} property UncheckedHot: DNVisualStyleElement read get_UncheckedHot;
    {class} property UncheckedPressed: DNVisualStyleElement read get_UncheckedPressed;
    {class} property UncheckedDisabled: DNVisualStyleElement read get_UncheckedDisabled;
    {class} property CheckedNormal: DNVisualStyleElement read get_CheckedNormal;
    {class} property CheckedHot: DNVisualStyleElement read get_CheckedHot;
    {class} property CheckedPressed: DNVisualStyleElement read get_CheckedPressed;
    {class} property CheckedDisabled: DNVisualStyleElement read get_CheckedDisabled;
    {class} property MixedNormal: DNVisualStyleElement read get_MixedNormal;
    {class} property MixedHot: DNVisualStyleElement read get_MixedHot;
    {class} property MixedPressed: DNVisualStyleElement read get_MixedPressed;
    {class} property MixedDisabled: DNVisualStyleElement read get_MixedDisabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Button+CheckBox')]
  DNVisualStyleElement_Button_CheckBox = interface(DDN.mscorlib.DNObject)
  ['{73347DBB-43FA-3937-ACC1-6C0AF1244FB6}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Button_CheckBox = class(TDNGenericImport<DNVisualStyleElement_Button_CheckBoxClass, DNVisualStyleElement_Button_CheckBox>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Button_GroupBoxClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E98113EE-E70C-523C-8FDB-FFFB9A105848}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Button+GroupBox')]
  DNVisualStyleElement_Button_GroupBox = interface(DDN.mscorlib.DNObject)
  ['{C5589F2B-7C5E-35F3-B9A0-6F72A620660F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Button_GroupBox = class(TDNGenericImport<DNVisualStyleElement_Button_GroupBoxClass, DNVisualStyleElement_Button_GroupBox>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Button_PushButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3644A25A-D0E8-504E-ADB3-7A06008A6E37}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Default: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property &Default: DNVisualStyleElement read get_Default;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Button+PushButton')]
  DNVisualStyleElement_Button_PushButton = interface(DDN.mscorlib.DNObject)
  ['{2EE86E63-5CAF-3755-8FC5-F30A8D42C876}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Button_PushButton = class(TDNGenericImport<DNVisualStyleElement_Button_PushButtonClass, DNVisualStyleElement_Button_PushButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Button_RadioButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B66D5E9C-5284-53FE-9062-7D0E9234C21F}']
  { static getter & setter } 

    {class} function get_UncheckedNormal: DNVisualStyleElement;
    {class} function get_UncheckedHot: DNVisualStyleElement;
    {class} function get_UncheckedPressed: DNVisualStyleElement;
    {class} function get_UncheckedDisabled: DNVisualStyleElement;
    {class} function get_CheckedNormal: DNVisualStyleElement;
    {class} function get_CheckedHot: DNVisualStyleElement;
    {class} function get_CheckedPressed: DNVisualStyleElement;
    {class} function get_CheckedDisabled: DNVisualStyleElement;

  { static propertys } 

    {class} property UncheckedNormal: DNVisualStyleElement read get_UncheckedNormal;
    {class} property UncheckedHot: DNVisualStyleElement read get_UncheckedHot;
    {class} property UncheckedPressed: DNVisualStyleElement read get_UncheckedPressed;
    {class} property UncheckedDisabled: DNVisualStyleElement read get_UncheckedDisabled;
    {class} property CheckedNormal: DNVisualStyleElement read get_CheckedNormal;
    {class} property CheckedHot: DNVisualStyleElement read get_CheckedHot;
    {class} property CheckedPressed: DNVisualStyleElement read get_CheckedPressed;
    {class} property CheckedDisabled: DNVisualStyleElement read get_CheckedDisabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Button+RadioButton')]
  DNVisualStyleElement_Button_RadioButton = interface(DDN.mscorlib.DNObject)
  ['{8980B751-DD97-345F-A273-49B1087828A2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Button_RadioButton = class(TDNGenericImport<DNVisualStyleElement_Button_RadioButtonClass, DNVisualStyleElement_Button_RadioButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Button_UserButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{68071CD4-2551-54EA-A791-2FB68AAA6ECD}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Button+UserButton')]
  DNVisualStyleElement_Button_UserButton = interface(DDN.mscorlib.DNObject)
  ['{F0A54BE8-C9FE-325F-B4D6-5185BBBD634F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Button_UserButton = class(TDNGenericImport<DNVisualStyleElement_Button_UserButtonClass, DNVisualStyleElement_Button_UserButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ComboBoxClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FA0ED57A-7B23-5647-A6BB-424B5BA417C7}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ComboBox')]
  DNVisualStyleElement_ComboBox = interface(DDN.mscorlib.DNObject)
  ['{555B6667-40C8-3233-AF82-FF9D3468AFAD}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ComboBox = class(TDNGenericImport<DNVisualStyleElement_ComboBoxClass, DNVisualStyleElement_ComboBox>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ComboBox_DropDownButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{AE653AD1-3150-5090-8D48-7875D07498D6}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ComboBox+DropDownButton')]
  DNVisualStyleElement_ComboBox_DropDownButton = interface(DDN.mscorlib.DNObject)
  ['{4586BBD2-241D-389E-95E2-60FC6ED660E0}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ComboBox_DropDownButton = class(TDNGenericImport<DNVisualStyleElement_ComboBox_DropDownButtonClass, DNVisualStyleElement_ComboBox_DropDownButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C346F766-B38A-5604-BA9C-A249BF2ABC83}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar')]
  DNVisualStyleElement_ExplorerBar = interface(DDN.mscorlib.DNObject)
  ['{E7A8B13F-8604-3E11-9F1F-626A4A589597}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar = class(TDNGenericImport<DNVisualStyleElement_ExplorerBarClass, DNVisualStyleElement_ExplorerBar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_HeaderBackgroundClass = interface(DDN.mscorlib.DNObjectClass)
  ['{15224803-5D57-5630-B077-0EEAE0EB8486}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+HeaderBackground')]
  DNVisualStyleElement_ExplorerBar_HeaderBackground = interface(DDN.mscorlib.DNObject)
  ['{B73523B3-B99D-351D-812E-972BEF2B12F0}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_HeaderBackground = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_HeaderBackgroundClass, DNVisualStyleElement_ExplorerBar_HeaderBackground>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_HeaderCloseClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E36CDE3A-E23D-5F98-8ABA-AEA53BCFEBB3}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+HeaderClose')]
  DNVisualStyleElement_ExplorerBar_HeaderClose = interface(DDN.mscorlib.DNObject)
  ['{434FC5CB-B54A-3632-AE8D-50018C538C22}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_HeaderClose = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_HeaderCloseClass, DNVisualStyleElement_ExplorerBar_HeaderClose>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_HeaderPinClass = interface(DDN.mscorlib.DNObjectClass)
  ['{9120EA57-F007-564E-81C3-0FDA495521DB}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_SelectedNormal: DNVisualStyleElement;
    {class} function get_SelectedHot: DNVisualStyleElement;
    {class} function get_SelectedPressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property SelectedNormal: DNVisualStyleElement read get_SelectedNormal;
    {class} property SelectedHot: DNVisualStyleElement read get_SelectedHot;
    {class} property SelectedPressed: DNVisualStyleElement read get_SelectedPressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+HeaderPin')]
  DNVisualStyleElement_ExplorerBar_HeaderPin = interface(DDN.mscorlib.DNObject)
  ['{304D93A4-40E2-34B0-9CB7-718A371BB29D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_HeaderPin = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_HeaderPinClass, DNVisualStyleElement_ExplorerBar_HeaderPin>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_IEBarMenuClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BBEDAB28-DC23-5384-87A1-1FF412FB321F}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+IEBarMenu')]
  DNVisualStyleElement_ExplorerBar_IEBarMenu = interface(DDN.mscorlib.DNObject)
  ['{146339BA-2A47-32FA-9903-1CCD5242D017}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_IEBarMenu = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_IEBarMenuClass, DNVisualStyleElement_ExplorerBar_IEBarMenu>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_NormalGroupBackgroundClass = interface(DDN.mscorlib.DNObjectClass)
  ['{077A22E4-BF3A-5ED9-A8A4-6006D45ADFA2}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupBackground')]
  DNVisualStyleElement_ExplorerBar_NormalGroupBackground = interface(DDN.mscorlib.DNObject)
  ['{30A69954-C86E-33A1-9EBC-AA9E0ABE3B01}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_NormalGroupBackground = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_NormalGroupBackgroundClass, DNVisualStyleElement_ExplorerBar_NormalGroupBackground>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_NormalGroupCollapseClass = interface(DDN.mscorlib.DNObjectClass)
  ['{75D61D04-2187-51E6-BE12-7CD845EF5790}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupCollapse')]
  DNVisualStyleElement_ExplorerBar_NormalGroupCollapse = interface(DDN.mscorlib.DNObject)
  ['{068130C1-866A-3A28-AC3F-25236F032F75}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_NormalGroupCollapse = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_NormalGroupCollapseClass, DNVisualStyleElement_ExplorerBar_NormalGroupCollapse>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_NormalGroupExpandClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1E4F93D7-0571-5A1D-85FB-C8EF014A7798}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupExpand')]
  DNVisualStyleElement_ExplorerBar_NormalGroupExpand = interface(DDN.mscorlib.DNObject)
  ['{078325FF-FA97-3CC4-B103-7823C1FED88E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_NormalGroupExpand = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_NormalGroupExpandClass, DNVisualStyleElement_ExplorerBar_NormalGroupExpand>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_NormalGroupHeadClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FE2E3595-A150-567D-8DD4-3E1D2E16A593}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+NormalGroupHead')]
  DNVisualStyleElement_ExplorerBar_NormalGroupHead = interface(DDN.mscorlib.DNObject)
  ['{AD7540B0-F1EC-3EBB-98A9-79BE8C43A495}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_NormalGroupHead = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_NormalGroupHeadClass, DNVisualStyleElement_ExplorerBar_NormalGroupHead>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_SpecialGroupBackgroundClass = interface(DDN.mscorlib.DNObjectClass)
  ['{7C300823-B585-5A1A-A27A-98BEADDB96D9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupBackground')]
  DNVisualStyleElement_ExplorerBar_SpecialGroupBackground = interface(DDN.mscorlib.DNObject)
  ['{C3B92C0A-D5B7-3325-8139-8E7D5D1961D6}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_SpecialGroupBackground = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_SpecialGroupBackgroundClass, DNVisualStyleElement_ExplorerBar_SpecialGroupBackground>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_SpecialGroupCollapseClass = interface(DDN.mscorlib.DNObjectClass)
  ['{527B4CB6-E085-5EE6-8118-EF9ED01EFA65}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupCollapse')]
  DNVisualStyleElement_ExplorerBar_SpecialGroupCollapse = interface(DDN.mscorlib.DNObject)
  ['{E781B99D-62B5-3A3A-A0F5-11517836ED0A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_SpecialGroupCollapse = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_SpecialGroupCollapseClass, DNVisualStyleElement_ExplorerBar_SpecialGroupCollapse>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_SpecialGroupExpandClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C6DBD923-8B33-5E75-B00F-16C86CFED94F}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupExpand')]
  DNVisualStyleElement_ExplorerBar_SpecialGroupExpand = interface(DDN.mscorlib.DNObject)
  ['{7EA10880-AE77-3162-BA31-1B42BA102EC2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_SpecialGroupExpand = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_SpecialGroupExpandClass, DNVisualStyleElement_ExplorerBar_SpecialGroupExpand>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ExplorerBar_SpecialGroupHeadClass = interface(DDN.mscorlib.DNObjectClass)
  ['{EBA0959F-296A-5A97-95CA-4C172CE1AB93}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ExplorerBar+SpecialGroupHead')]
  DNVisualStyleElement_ExplorerBar_SpecialGroupHead = interface(DDN.mscorlib.DNObject)
  ['{6BF215E6-15B1-39BC-B0EE-A5BB91E90EF8}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ExplorerBar_SpecialGroupHead = class(TDNGenericImport<DNVisualStyleElement_ExplorerBar_SpecialGroupHeadClass, DNVisualStyleElement_ExplorerBar_SpecialGroupHead>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_HeaderClass = interface(DDN.mscorlib.DNObjectClass)
  ['{CE16E0D8-4FF8-59B2-9497-3A9CE35EA7AB}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Header')]
  DNVisualStyleElement_Header = interface(DDN.mscorlib.DNObject)
  ['{3DC71769-FA8A-3885-BBBC-1A4068B75820}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Header = class(TDNGenericImport<DNVisualStyleElement_HeaderClass, DNVisualStyleElement_Header>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Header_ItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4E9D2D58-818E-5FFC-9B8A-F24A8EA2DB13}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Header+Item')]
  DNVisualStyleElement_Header_Item = interface(DDN.mscorlib.DNObject)
  ['{6E082447-D07D-3D18-A306-DD901DF612EE}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Header_Item = class(TDNGenericImport<DNVisualStyleElement_Header_ItemClass, DNVisualStyleElement_Header_Item>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Header_ItemLeftClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1FA2A3FA-FD6B-57ED-85BB-F01EC5517DA9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Header+ItemLeft')]
  DNVisualStyleElement_Header_ItemLeft = interface(DDN.mscorlib.DNObject)
  ['{45F35DC7-1F44-3637-BD01-C82E2994F10E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Header_ItemLeft = class(TDNGenericImport<DNVisualStyleElement_Header_ItemLeftClass, DNVisualStyleElement_Header_ItemLeft>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Header_ItemRightClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BA73A2C8-56CE-5727-9CCA-0A791DCB3160}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Header+ItemRight')]
  DNVisualStyleElement_Header_ItemRight = interface(DDN.mscorlib.DNObject)
  ['{59FABF15-4D92-3328-BF67-216C54D98955}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Header_ItemRight = class(TDNGenericImport<DNVisualStyleElement_Header_ItemRightClass, DNVisualStyleElement_Header_ItemRight>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Header_SortArrowClass = interface(DDN.mscorlib.DNObjectClass)
  ['{66B5A9BA-9542-5344-BC7C-79D8C59AE638}']
  { static getter & setter } 

    {class} function get_SortedUp: DNVisualStyleElement;
    {class} function get_SortedDown: DNVisualStyleElement;

  { static propertys } 

    {class} property SortedUp: DNVisualStyleElement read get_SortedUp;
    {class} property SortedDown: DNVisualStyleElement read get_SortedDown;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Header+SortArrow')]
  DNVisualStyleElement_Header_SortArrow = interface(DDN.mscorlib.DNObject)
  ['{5C614C5E-9E7F-3D5B-8B0F-82FD335AC587}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Header_SortArrow = class(TDNGenericImport<DNVisualStyleElement_Header_SortArrowClass, DNVisualStyleElement_Header_SortArrow>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ListViewClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B35A0502-7877-553B-9097-94C4581C82CF}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ListView')]
  DNVisualStyleElement_ListView = interface(DDN.mscorlib.DNObject)
  ['{6D64048C-0612-3216-9416-E761913C2959}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ListView = class(TDNGenericImport<DNVisualStyleElement_ListViewClass, DNVisualStyleElement_ListView>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ListView_DetailClass = interface(DDN.mscorlib.DNObjectClass)
  ['{98C7A380-A382-5796-9B14-9D1273E05F81}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+Detail')]
  DNVisualStyleElement_ListView_Detail = interface(DDN.mscorlib.DNObject)
  ['{56868B00-3D7B-3195-B03F-E4DA6C6CF8E3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ListView_Detail = class(TDNGenericImport<DNVisualStyleElement_ListView_DetailClass, DNVisualStyleElement_ListView_Detail>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ListView_EmptyTextClass = interface(DDN.mscorlib.DNObjectClass)
  ['{70C15649-E45D-52DB-B158-AD345959691D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+EmptyText')]
  DNVisualStyleElement_ListView_EmptyText = interface(DDN.mscorlib.DNObject)
  ['{32416F5C-C519-3977-B3A3-915ACFF996C6}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ListView_EmptyText = class(TDNGenericImport<DNVisualStyleElement_ListView_EmptyTextClass, DNVisualStyleElement_ListView_EmptyText>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ListView_GroupClass = interface(DDN.mscorlib.DNObjectClass)
  ['{ABF8F2FB-9DEA-51ED-A3B0-A04DF550E801}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+Group')]
  DNVisualStyleElement_ListView_Group = interface(DDN.mscorlib.DNObject)
  ['{9F760628-C33A-36FF-90FD-5A8AD7E0F328}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ListView_Group = class(TDNGenericImport<DNVisualStyleElement_ListView_GroupClass, DNVisualStyleElement_ListView_Group>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ListView_ItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C4235862-4E14-51A5-9AB1-66867F5F7448}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Selected: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_SelectedNotFocus: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Selected: DNVisualStyleElement read get_Selected;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property SelectedNotFocus: DNVisualStyleElement read get_SelectedNotFocus;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+Item')]
  DNVisualStyleElement_ListView_Item = interface(DDN.mscorlib.DNObject)
  ['{2B93B402-BB30-307B-8F0D-76C24A51DD3E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ListView_Item = class(TDNGenericImport<DNVisualStyleElement_ListView_ItemClass, DNVisualStyleElement_ListView_Item>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ListView_SortedDetailClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C60F4E2C-3E4C-5077-A73D-7371E7F55FED}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ListView+SortedDetail')]
  DNVisualStyleElement_ListView_SortedDetail = interface(DDN.mscorlib.DNObject)
  ['{5D9390E0-2D06-36DA-B229-965291A4407D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ListView_SortedDetail = class(TDNGenericImport<DNVisualStyleElement_ListView_SortedDetailClass, DNVisualStyleElement_ListView_SortedDetail>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_MenuClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D56A527D-1DCF-5382-8C9F-B1688ECEDB70}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu')]
  DNVisualStyleElement_Menu = interface(DDN.mscorlib.DNObject)
  ['{A156D9E2-E8EC-3C44-94B0-CF2765DCD340}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu = class(TDNGenericImport<DNVisualStyleElement_MenuClass, DNVisualStyleElement_Menu>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Menu_BarDropDownClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E7342484-F948-5CC5-8110-84912DBC8303}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+BarDropDown')]
  DNVisualStyleElement_Menu_BarDropDown = interface(DDN.mscorlib.DNObject)
  ['{AAEEF479-E0FB-3404-94E2-C364619E3623}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu_BarDropDown = class(TDNGenericImport<DNVisualStyleElement_Menu_BarDropDownClass, DNVisualStyleElement_Menu_BarDropDown>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Menu_BarItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{38D0DF50-4F8E-5F32-930F-7047DD079EF6}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+BarItem')]
  DNVisualStyleElement_Menu_BarItem = interface(DDN.mscorlib.DNObject)
  ['{C0D634FB-D190-3F81-AB0D-F64A4D840926}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu_BarItem = class(TDNGenericImport<DNVisualStyleElement_Menu_BarItemClass, DNVisualStyleElement_Menu_BarItem>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Menu_ChevronClass = interface(DDN.mscorlib.DNObjectClass)
  ['{19703B4F-3AAE-5089-870D-4E8F0F8DF827}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+Chevron')]
  DNVisualStyleElement_Menu_Chevron = interface(DDN.mscorlib.DNObject)
  ['{0C00EEC7-E9E8-3EBC-B360-CDF358D02C77}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu_Chevron = class(TDNGenericImport<DNVisualStyleElement_Menu_ChevronClass, DNVisualStyleElement_Menu_Chevron>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Menu_DropDownClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3B647E6D-645E-5282-9A2E-1C38D09717E9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+DropDown')]
  DNVisualStyleElement_Menu_DropDown = interface(DDN.mscorlib.DNObject)
  ['{19C569AE-875F-35FF-97EE-1E5F60C907A0}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu_DropDown = class(TDNGenericImport<DNVisualStyleElement_Menu_DropDownClass, DNVisualStyleElement_Menu_DropDown>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Menu_ItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{ABA0671F-726D-5C43-B3CA-40CF60BBC748}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Selected: DNVisualStyleElement;
    {class} function get_Demoted: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Selected: DNVisualStyleElement read get_Selected;
    {class} property Demoted: DNVisualStyleElement read get_Demoted;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+Item')]
  DNVisualStyleElement_Menu_Item = interface(DDN.mscorlib.DNObject)
  ['{588179BC-6CDB-3E83-B535-45E3B37D3743}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu_Item = class(TDNGenericImport<DNVisualStyleElement_Menu_ItemClass, DNVisualStyleElement_Menu_Item>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Menu_SeparatorClass = interface(DDN.mscorlib.DNObjectClass)
  ['{532636CD-290C-598A-B6D8-D5CCA4D5D7D3}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Menu+Separator')]
  DNVisualStyleElement_Menu_Separator = interface(DDN.mscorlib.DNObject)
  ['{55D3E4F5-B946-30D1-9ECA-F9391E3955B3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Menu_Separator = class(TDNGenericImport<DNVisualStyleElement_Menu_SeparatorClass, DNVisualStyleElement_Menu_Separator>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_MenuBandClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B4190D29-45AD-5F2F-AA80-CA0A37469C0A}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+MenuBand')]
  DNVisualStyleElement_MenuBand = interface(DDN.mscorlib.DNObject)
  ['{32A935E0-56E6-3693-9D9A-69B532826C4F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_MenuBand = class(TDNGenericImport<DNVisualStyleElement_MenuBandClass, DNVisualStyleElement_MenuBand>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_MenuBand_NewApplicationButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{009ABC3F-287B-5C1A-BA30-C6AFE5CE3141}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Checked: DNVisualStyleElement;
    {class} function get_HotChecked: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property Checked: DNVisualStyleElement read get_Checked;
    {class} property HotChecked: DNVisualStyleElement read get_HotChecked;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+MenuBand+NewApplicationButton')]
  DNVisualStyleElement_MenuBand_NewApplicationButton = interface(DDN.mscorlib.DNObject)
  ['{1DAD51DE-340E-338B-AE58-732870DD6783}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_MenuBand_NewApplicationButton = class(TDNGenericImport<DNVisualStyleElement_MenuBand_NewApplicationButtonClass, DNVisualStyleElement_MenuBand_NewApplicationButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_MenuBand_SeparatorClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E1ECECD1-9AF2-5341-97CF-01F34506EE68}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+MenuBand+Separator')]
  DNVisualStyleElement_MenuBand_Separator = interface(DDN.mscorlib.DNObject)
  ['{DE4637FC-AE8B-30B8-A941-B7B7A5DCF1F0}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_MenuBand_Separator = class(TDNGenericImport<DNVisualStyleElement_MenuBand_SeparatorClass, DNVisualStyleElement_MenuBand_Separator>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_PageClass = interface(DDN.mscorlib.DNObjectClass)
  ['{05C9BD54-78B7-544B-9685-F3EC81FFB203}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Page')]
  DNVisualStyleElement_Page = interface(DDN.mscorlib.DNObject)
  ['{37F5704B-6559-3074-A6B5-7CFB626EDC9D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Page = class(TDNGenericImport<DNVisualStyleElement_PageClass, DNVisualStyleElement_Page>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Page_DownClass = interface(DDN.mscorlib.DNObjectClass)
  ['{5058ED14-2FBC-5E97-81A7-B5E540ECC1B5}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Page+Down')]
  DNVisualStyleElement_Page_Down = interface(DDN.mscorlib.DNObject)
  ['{E702B594-F75E-3973-8109-10CA4EE96743}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Page_Down = class(TDNGenericImport<DNVisualStyleElement_Page_DownClass, DNVisualStyleElement_Page_Down>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Page_DownHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{A089E7DD-4D8D-56A6-89F7-EC4B22728CE7}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Page+DownHorizontal')]
  DNVisualStyleElement_Page_DownHorizontal = interface(DDN.mscorlib.DNObject)
  ['{C99D1B0A-6FF2-37C5-8B4C-CDD74FA1DED9}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Page_DownHorizontal = class(TDNGenericImport<DNVisualStyleElement_Page_DownHorizontalClass, DNVisualStyleElement_Page_DownHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Page_UpClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D9E5F87C-D355-5659-9506-3665FAFF9C5A}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Page+Up')]
  DNVisualStyleElement_Page_Up = interface(DDN.mscorlib.DNObject)
  ['{5BF5CE97-FB90-3922-8999-49CD582E4151}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Page_Up = class(TDNGenericImport<DNVisualStyleElement_Page_UpClass, DNVisualStyleElement_Page_Up>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Page_UpHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D587B88B-1E15-595E-AE9D-52488DC0A55F}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Page+UpHorizontal')]
  DNVisualStyleElement_Page_UpHorizontal = interface(DDN.mscorlib.DNObject)
  ['{BE9F3C06-4188-33E0-812D-581DFFA57161}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Page_UpHorizontal = class(TDNGenericImport<DNVisualStyleElement_Page_UpHorizontalClass, DNVisualStyleElement_Page_UpHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ProgressBarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{2A6418E2-ECCD-5449-82C2-FF463D716C4C}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar')]
  DNVisualStyleElement_ProgressBar = interface(DDN.mscorlib.DNObject)
  ['{C54EB653-982A-3F04-853B-472DA1CF3F60}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ProgressBar = class(TDNGenericImport<DNVisualStyleElement_ProgressBarClass, DNVisualStyleElement_ProgressBar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ProgressBar_BarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{51F1EB35-2059-57FB-9F4D-A9FFB48189A3}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+Bar')]
  DNVisualStyleElement_ProgressBar_Bar = interface(DDN.mscorlib.DNObject)
  ['{46887114-2B9F-3836-9718-0E4C364B67E3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ProgressBar_Bar = class(TDNGenericImport<DNVisualStyleElement_ProgressBar_BarClass, DNVisualStyleElement_ProgressBar_Bar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ProgressBar_BarVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{7979E93D-522E-578B-B837-7D096E1C1E1D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+BarVertical')]
  DNVisualStyleElement_ProgressBar_BarVertical = interface(DDN.mscorlib.DNObject)
  ['{CD24BF78-E9AD-32D8-BFA5-6E689567DD01}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ProgressBar_BarVertical = class(TDNGenericImport<DNVisualStyleElement_ProgressBar_BarVerticalClass, DNVisualStyleElement_ProgressBar_BarVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ProgressBar_ChunkClass = interface(DDN.mscorlib.DNObjectClass)
  ['{77DBA252-3B92-5218-B124-B2FCC923F1E1}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+Chunk')]
  DNVisualStyleElement_ProgressBar_Chunk = interface(DDN.mscorlib.DNObject)
  ['{50514548-1B0A-33EE-B45F-E39B9031EA92}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ProgressBar_Chunk = class(TDNGenericImport<DNVisualStyleElement_ProgressBar_ChunkClass, DNVisualStyleElement_ProgressBar_Chunk>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ProgressBar_ChunkVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{23CD84F1-3171-55A6-9EF4-D6166AEF465E}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ProgressBar+ChunkVertical')]
  DNVisualStyleElement_ProgressBar_ChunkVertical = interface(DDN.mscorlib.DNObject)
  ['{50CCCAAD-A5B5-3A0A-ADF6-85C7B84FD73C}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ProgressBar_ChunkVertical = class(TDNGenericImport<DNVisualStyleElement_ProgressBar_ChunkVerticalClass, DNVisualStyleElement_ProgressBar_ChunkVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_RebarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0F771182-FDE2-5DA2-AFC3-122EA05A6727}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar')]
  DNVisualStyleElement_Rebar = interface(DDN.mscorlib.DNObject)
  ['{63DA149A-44EA-3A5A-8418-2EE1536A5BB1}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Rebar = class(TDNGenericImport<DNVisualStyleElement_RebarClass, DNVisualStyleElement_Rebar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Rebar_BandClass = interface(DDN.mscorlib.DNObjectClass)
  ['{AF28632B-288D-5100-90F2-72C1B96B42E1}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+Band')]
  DNVisualStyleElement_Rebar_Band = interface(DDN.mscorlib.DNObject)
  ['{BC42FE61-0F1B-3351-8DE7-DEFE0A87C98D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Rebar_Band = class(TDNGenericImport<DNVisualStyleElement_Rebar_BandClass, DNVisualStyleElement_Rebar_Band>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Rebar_ChevronClass = interface(DDN.mscorlib.DNObjectClass)
  ['{CD4D3150-7C1E-5251-98E6-3E6918BB6258}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+Chevron')]
  DNVisualStyleElement_Rebar_Chevron = interface(DDN.mscorlib.DNObject)
  ['{884E1F14-877D-362C-B745-9D333C312EDD}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Rebar_Chevron = class(TDNGenericImport<DNVisualStyleElement_Rebar_ChevronClass, DNVisualStyleElement_Rebar_Chevron>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Rebar_ChevronVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{7C2D5FE5-FB40-5E96-8693-2E68904F57C9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+ChevronVertical')]
  DNVisualStyleElement_Rebar_ChevronVertical = interface(DDN.mscorlib.DNObject)
  ['{C0C33324-BA2E-3518-8198-76128BFE0E93}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Rebar_ChevronVertical = class(TDNGenericImport<DNVisualStyleElement_Rebar_ChevronVerticalClass, DNVisualStyleElement_Rebar_ChevronVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Rebar_GripperClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FD638E04-7E3C-5EC0-BB0A-42676A8A0A05}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+Gripper')]
  DNVisualStyleElement_Rebar_Gripper = interface(DDN.mscorlib.DNObject)
  ['{66DBD87E-1668-3211-AB79-7368E03F79B1}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Rebar_Gripper = class(TDNGenericImport<DNVisualStyleElement_Rebar_GripperClass, DNVisualStyleElement_Rebar_Gripper>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Rebar_GripperVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{25052CA9-69E2-58F6-B91F-AA4A95E14BB9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Rebar+GripperVertical')]
  DNVisualStyleElement_Rebar_GripperVertical = interface(DDN.mscorlib.DNObject)
  ['{6723425B-05A2-3DDC-BBE8-1C64C1E654F0}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Rebar_GripperVertical = class(TDNGenericImport<DNVisualStyleElement_Rebar_GripperVerticalClass, DNVisualStyleElement_Rebar_GripperVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BE122288-8229-5E45-99B3-3569C7F63B31}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar')]
  DNVisualStyleElement_ScrollBar = interface(DDN.mscorlib.DNObject)
  ['{694AC897-3AB8-3CAD-A880-80A03A4859A8}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar = class(TDNGenericImport<DNVisualStyleElement_ScrollBarClass, DNVisualStyleElement_ScrollBar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_ArrowButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{ACEC0A1F-CB5D-50DF-A41B-165A0A351550}']
  { static getter & setter } 

    {class} function get_UpNormal: DNVisualStyleElement;
    {class} function get_UpHot: DNVisualStyleElement;
    {class} function get_UpPressed: DNVisualStyleElement;
    {class} function get_UpDisabled: DNVisualStyleElement;
    {class} function get_DownNormal: DNVisualStyleElement;
    {class} function get_DownHot: DNVisualStyleElement;
    {class} function get_DownPressed: DNVisualStyleElement;
    {class} function get_DownDisabled: DNVisualStyleElement;
    {class} function get_LeftNormal: DNVisualStyleElement;
    {class} function get_LeftHot: DNVisualStyleElement;
    {class} function get_LeftPressed: DNVisualStyleElement;
    {class} function get_LeftDisabled: DNVisualStyleElement;
    {class} function get_RightNormal: DNVisualStyleElement;
    {class} function get_RightHot: DNVisualStyleElement;
    {class} function get_RightPressed: DNVisualStyleElement;
    {class} function get_RightDisabled: DNVisualStyleElement;

  { static propertys } 

    {class} property UpNormal: DNVisualStyleElement read get_UpNormal;
    {class} property UpHot: DNVisualStyleElement read get_UpHot;
    {class} property UpPressed: DNVisualStyleElement read get_UpPressed;
    {class} property UpDisabled: DNVisualStyleElement read get_UpDisabled;
    {class} property DownNormal: DNVisualStyleElement read get_DownNormal;
    {class} property DownHot: DNVisualStyleElement read get_DownHot;
    {class} property DownPressed: DNVisualStyleElement read get_DownPressed;
    {class} property DownDisabled: DNVisualStyleElement read get_DownDisabled;
    {class} property LeftNormal: DNVisualStyleElement read get_LeftNormal;
    {class} property LeftHot: DNVisualStyleElement read get_LeftHot;
    {class} property LeftPressed: DNVisualStyleElement read get_LeftPressed;
    {class} property LeftDisabled: DNVisualStyleElement read get_LeftDisabled;
    {class} property RightNormal: DNVisualStyleElement read get_RightNormal;
    {class} property RightHot: DNVisualStyleElement read get_RightHot;
    {class} property RightPressed: DNVisualStyleElement read get_RightPressed;
    {class} property RightDisabled: DNVisualStyleElement read get_RightDisabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+ArrowButton')]
  DNVisualStyleElement_ScrollBar_ArrowButton = interface(DDN.mscorlib.DNObject)
  ['{0D19F8FC-2E3A-372C-87BB-6870984DB948}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_ArrowButton = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_ArrowButtonClass, DNVisualStyleElement_ScrollBar_ArrowButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_GripperHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{367E1559-5727-5428-BDCF-1BC68519EFE3}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+GripperHorizontal')]
  DNVisualStyleElement_ScrollBar_GripperHorizontal = interface(DDN.mscorlib.DNObject)
  ['{9530DAC0-2E3D-3179-AE29-6816B8CAF02B}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_GripperHorizontal = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_GripperHorizontalClass, DNVisualStyleElement_ScrollBar_GripperHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_GripperVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{7EDE685D-3C4C-5453-A643-0CFE4A5BDA39}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+GripperVertical')]
  DNVisualStyleElement_ScrollBar_GripperVertical = interface(DDN.mscorlib.DNObject)
  ['{04C741FD-BBCF-381C-9CE6-F9F44510B5FB}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_GripperVertical = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_GripperVerticalClass, DNVisualStyleElement_ScrollBar_GripperVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_LeftTrackHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{9FA8C21A-99E0-5A31-AD64-3608A369F286}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+LeftTrackHorizontal')]
  DNVisualStyleElement_ScrollBar_LeftTrackHorizontal = interface(DDN.mscorlib.DNObject)
  ['{AC64B674-8F61-3EFA-B817-3109E23EBA9A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_LeftTrackHorizontal = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_LeftTrackHorizontalClass, DNVisualStyleElement_ScrollBar_LeftTrackHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_LowerTrackVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{875DF2D0-444E-5511-B957-D4C67ED18465}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+LowerTrackVertical')]
  DNVisualStyleElement_ScrollBar_LowerTrackVertical = interface(DDN.mscorlib.DNObject)
  ['{A2464E71-08EE-361F-904E-87D15471A31B}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_LowerTrackVertical = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_LowerTrackVerticalClass, DNVisualStyleElement_ScrollBar_LowerTrackVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_RightTrackHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{65399CE7-356C-569A-BE79-1E5E8FC03053}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+RightTrackHorizontal')]
  DNVisualStyleElement_ScrollBar_RightTrackHorizontal = interface(DDN.mscorlib.DNObject)
  ['{6815B605-8EC2-3320-936F-3BBBC584356A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_RightTrackHorizontal = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_RightTrackHorizontalClass, DNVisualStyleElement_ScrollBar_RightTrackHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_SizeBoxClass = interface(DDN.mscorlib.DNObjectClass)
  ['{99587847-FEF3-5CCD-8F44-2805C1EBDEA1}']
  { static getter & setter } 

    {class} function get_RightAlign: DNVisualStyleElement;
    {class} function get_LeftAlign: DNVisualStyleElement;

  { static propertys } 

    {class} property RightAlign: DNVisualStyleElement read get_RightAlign;
    {class} property LeftAlign: DNVisualStyleElement read get_LeftAlign;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+SizeBox')]
  DNVisualStyleElement_ScrollBar_SizeBox = interface(DDN.mscorlib.DNObject)
  ['{34B2905F-90D5-3297-9661-21EAB1DC5A53}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_SizeBox = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_SizeBoxClass, DNVisualStyleElement_ScrollBar_SizeBox>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_ThumbButtonHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{2CC0D20F-B4A2-5210-8049-8C0278557305}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+ThumbButtonHorizontal')]
  DNVisualStyleElement_ScrollBar_ThumbButtonHorizontal = interface(DDN.mscorlib.DNObject)
  ['{D9ABD4C1-05A4-342B-97F4-5F55D7FC2A38}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_ThumbButtonHorizontal = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_ThumbButtonHorizontalClass, DNVisualStyleElement_ScrollBar_ThumbButtonHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_ThumbButtonVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{BAB15ECB-D473-58E5-89AD-42DD3C82D92C}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+ThumbButtonVertical')]
  DNVisualStyleElement_ScrollBar_ThumbButtonVertical = interface(DDN.mscorlib.DNObject)
  ['{3222414B-1AA0-3C1F-841E-58ED956C69FD}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_ThumbButtonVertical = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_ThumbButtonVerticalClass, DNVisualStyleElement_ScrollBar_ThumbButtonVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ScrollBar_UpperTrackVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E1A58766-B964-514F-91DF-DE88D4C924A8}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ScrollBar+UpperTrackVertical')]
  DNVisualStyleElement_ScrollBar_UpperTrackVertical = interface(DDN.mscorlib.DNObject)
  ['{37085AA4-FB20-35AD-A335-C07A5D78F273}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ScrollBar_UpperTrackVertical = class(TDNGenericImport<DNVisualStyleElement_ScrollBar_UpperTrackVerticalClass, DNVisualStyleElement_ScrollBar_UpperTrackVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_SpinClass = interface(DDN.mscorlib.DNObjectClass)
  ['{80FF1E5B-38D1-5678-AEB6-E1484A990595}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Spin')]
  DNVisualStyleElement_Spin = interface(DDN.mscorlib.DNObject)
  ['{76E533BC-97F8-3455-B4EF-30D36D8D3E47}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Spin = class(TDNGenericImport<DNVisualStyleElement_SpinClass, DNVisualStyleElement_Spin>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Spin_DownClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6E8E1D06-1520-5C51-ABB0-7D73F5ED4805}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+Down')]
  DNVisualStyleElement_Spin_Down = interface(DDN.mscorlib.DNObject)
  ['{384E213F-FC23-355D-9BC7-A4FB219CAD7F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Spin_Down = class(TDNGenericImport<DNVisualStyleElement_Spin_DownClass, DNVisualStyleElement_Spin_Down>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Spin_DownHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{010BCD96-F3A5-54B4-A95F-37A04F49D21E}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+DownHorizontal')]
  DNVisualStyleElement_Spin_DownHorizontal = interface(DDN.mscorlib.DNObject)
  ['{0CEFEEEB-D52D-39DF-BBD7-A047EEE16D00}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Spin_DownHorizontal = class(TDNGenericImport<DNVisualStyleElement_Spin_DownHorizontalClass, DNVisualStyleElement_Spin_DownHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Spin_UpClass = interface(DDN.mscorlib.DNObjectClass)
  ['{505FD687-60DB-59E1-A8C8-016562FD2A95}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+Up')]
  DNVisualStyleElement_Spin_Up = interface(DDN.mscorlib.DNObject)
  ['{CAEE6AC5-B400-3492-8E90-06EE4B4CF58A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Spin_Up = class(TDNGenericImport<DNVisualStyleElement_Spin_UpClass, DNVisualStyleElement_Spin_Up>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Spin_UpHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E89B061B-F2E8-5BE8-9860-75E7B5E5A0B9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Spin+UpHorizontal')]
  DNVisualStyleElement_Spin_UpHorizontal = interface(DDN.mscorlib.DNObject)
  ['{9EC8A928-FB7B-3CAE-939B-CDC921AC17EF}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Spin_UpHorizontal = class(TDNGenericImport<DNVisualStyleElement_Spin_UpHorizontalClass, DNVisualStyleElement_Spin_UpHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanelClass = interface(DDN.mscorlib.DNObjectClass)
  ['{36FC51DD-DDD1-5306-8339-4C54D237BC7C}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel')]
  DNVisualStyleElement_StartPanel = interface(DDN.mscorlib.DNObject)
  ['{DCFA8230-7BEA-3228-AB9C-0F6CC744277E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel = class(TDNGenericImport<DNVisualStyleElement_StartPanelClass, DNVisualStyleElement_StartPanel>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_LogOffClass = interface(DDN.mscorlib.DNObjectClass)
  ['{53CED989-F3CA-54E4-B836-FB2E490AD470}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+LogOff')]
  DNVisualStyleElement_StartPanel_LogOff = interface(DDN.mscorlib.DNObject)
  ['{032CE300-86D1-3A1D-8E28-7293D8174599}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_LogOff = class(TDNGenericImport<DNVisualStyleElement_StartPanel_LogOffClass, DNVisualStyleElement_StartPanel_LogOff>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_LogOffButtonsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C6BCC575-0461-5485-B90F-1E3ED19F1902}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+LogOffButtons')]
  DNVisualStyleElement_StartPanel_LogOffButtons = interface(DDN.mscorlib.DNObject)
  ['{50E1E7A3-33B9-389F-B131-D36EFB5D6238}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_LogOffButtons = class(TDNGenericImport<DNVisualStyleElement_StartPanel_LogOffButtonsClass, DNVisualStyleElement_StartPanel_LogOffButtons>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_MoreProgramsClass = interface(DDN.mscorlib.DNObjectClass)
  ['{35F1DEDC-336C-52DE-8DE4-8038FD2F679F}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+MorePrograms')]
  DNVisualStyleElement_StartPanel_MorePrograms = interface(DDN.mscorlib.DNObject)
  ['{A8158AE9-161B-3995-AE22-921F9ED0FDF3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_MorePrograms = class(TDNGenericImport<DNVisualStyleElement_StartPanel_MoreProgramsClass, DNVisualStyleElement_StartPanel_MorePrograms>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_MoreProgramsArrowClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D0E8E7BA-ACF1-5C5A-B60A-3AC876BFAE91}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+MoreProgramsArrow')]
  DNVisualStyleElement_StartPanel_MoreProgramsArrow = interface(DDN.mscorlib.DNObject)
  ['{02E51A62-8A8C-36DC-AC64-E496F2DDDF73}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_MoreProgramsArrow = class(TDNGenericImport<DNVisualStyleElement_StartPanel_MoreProgramsArrowClass, DNVisualStyleElement_StartPanel_MoreProgramsArrow>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_PlaceListClass = interface(DDN.mscorlib.DNObjectClass)
  ['{37672390-DE38-569C-800A-73353D2E612B}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+PlaceList')]
  DNVisualStyleElement_StartPanel_PlaceList = interface(DDN.mscorlib.DNObject)
  ['{8F720447-7977-3E71-AAA8-724EF6DBBDD2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_PlaceList = class(TDNGenericImport<DNVisualStyleElement_StartPanel_PlaceListClass, DNVisualStyleElement_StartPanel_PlaceList>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_PlaceListSeparatorClass = interface(DDN.mscorlib.DNObjectClass)
  ['{77593858-414D-5F08-B177-3FEEC812D4C7}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+PlaceListSeparator')]
  DNVisualStyleElement_StartPanel_PlaceListSeparator = interface(DDN.mscorlib.DNObject)
  ['{4AFE7C48-60E3-3692-9FDE-A2191828D5B3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_PlaceListSeparator = class(TDNGenericImport<DNVisualStyleElement_StartPanel_PlaceListSeparatorClass, DNVisualStyleElement_StartPanel_PlaceListSeparator>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_PreviewClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E33AC92E-A6CA-5DB2-906A-2F866E203DF2}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+Preview')]
  DNVisualStyleElement_StartPanel_Preview = interface(DDN.mscorlib.DNObject)
  ['{69016E8C-AFAA-3202-9A65-30CD697049CA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_Preview = class(TDNGenericImport<DNVisualStyleElement_StartPanel_PreviewClass, DNVisualStyleElement_StartPanel_Preview>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_ProgListClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E1942D0D-5E57-5C56-9BC8-0AB4DC414C2A}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+ProgList')]
  DNVisualStyleElement_StartPanel_ProgList = interface(DDN.mscorlib.DNObject)
  ['{9CAB1302-1B36-3267-BDA6-8C047F6BBAE4}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_ProgList = class(TDNGenericImport<DNVisualStyleElement_StartPanel_ProgListClass, DNVisualStyleElement_StartPanel_ProgList>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_ProgListSeparatorClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0997F32C-7668-5DCF-A984-FD1E8F9B5BB3}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+ProgListSeparator')]
  DNVisualStyleElement_StartPanel_ProgListSeparator = interface(DDN.mscorlib.DNObject)
  ['{50BF207D-F571-3B92-BE83-41427DB4AEC4}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_ProgListSeparator = class(TDNGenericImport<DNVisualStyleElement_StartPanel_ProgListSeparatorClass, DNVisualStyleElement_StartPanel_ProgListSeparator>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_UserPaneClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6A44A857-2E9B-559F-989A-D94EE951A4B5}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+UserPane')]
  DNVisualStyleElement_StartPanel_UserPane = interface(DDN.mscorlib.DNObject)
  ['{B61B25BF-856A-3CBC-BD2F-2DB482FE9310}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_UserPane = class(TDNGenericImport<DNVisualStyleElement_StartPanel_UserPaneClass, DNVisualStyleElement_StartPanel_UserPane>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StartPanel_UserPictureClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4845D987-7143-5956-9E59-34DC4B294D65}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+StartPanel+UserPicture')]
  DNVisualStyleElement_StartPanel_UserPicture = interface(DDN.mscorlib.DNObject)
  ['{8BBB6835-1B66-3A5C-976A-3CB7541BBB93}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_StartPanel_UserPicture = class(TDNGenericImport<DNVisualStyleElement_StartPanel_UserPictureClass, DNVisualStyleElement_StartPanel_UserPicture>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_StatusClass = interface(DDN.mscorlib.DNObjectClass)
  ['{80EB1C25-953F-53B7-975F-ECF07A66DCD4}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Status')]
  DNVisualStyleElement_Status = interface(DDN.mscorlib.DNObject)
  ['{62E9AB49-7715-33AF-A63F-FC26090C641E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Status = class(TDNGenericImport<DNVisualStyleElement_StatusClass, DNVisualStyleElement_Status>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Status_BarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{850DB98D-825B-54E6-A7CB-6FE66736DB8E}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Status+Bar')]
  DNVisualStyleElement_Status_Bar = interface(DDN.mscorlib.DNObject)
  ['{AE6D131D-A742-3B97-8AFD-D723B4002CFE}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Status_Bar = class(TDNGenericImport<DNVisualStyleElement_Status_BarClass, DNVisualStyleElement_Status_Bar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Status_GripperClass = interface(DDN.mscorlib.DNObjectClass)
  ['{9F6C4659-1FE0-533C-BF2C-41E4C14F7EB6}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Status+Gripper')]
  DNVisualStyleElement_Status_Gripper = interface(DDN.mscorlib.DNObject)
  ['{0697DF84-BB61-3CA6-9261-A6378EF7EBB9}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Status_Gripper = class(TDNGenericImport<DNVisualStyleElement_Status_GripperClass, DNVisualStyleElement_Status_Gripper>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Status_GripperPaneClass = interface(DDN.mscorlib.DNObjectClass)
  ['{591AE977-73BF-5A00-8A3F-1426A37B8DAE}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Status+GripperPane')]
  DNVisualStyleElement_Status_GripperPane = interface(DDN.mscorlib.DNObject)
  ['{2A9573D1-88C7-31C0-9EC7-6629030E344C}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Status_GripperPane = class(TDNGenericImport<DNVisualStyleElement_Status_GripperPaneClass, DNVisualStyleElement_Status_GripperPane>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Status_PaneClass = interface(DDN.mscorlib.DNObjectClass)
  ['{40FD4EE9-71B5-5C25-99F3-BBFC5EC59E29}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Status+Pane')]
  DNVisualStyleElement_Status_Pane = interface(DDN.mscorlib.DNObject)
  ['{85FF9714-353B-3E96-978F-D438EDAE1292}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Status_Pane = class(TDNGenericImport<DNVisualStyleElement_Status_PaneClass, DNVisualStyleElement_Status_Pane>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TabClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8F3CF67D-DA01-5219-B896-FC4B881CC471}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab')]
  DNVisualStyleElement_Tab = interface(DDN.mscorlib.DNObject)
  ['{70CC85A1-BCDD-335B-8EBB-48E61C549DC1}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab = class(TDNGenericImport<DNVisualStyleElement_TabClass, DNVisualStyleElement_Tab>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_BodyClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3E4A1B00-11BB-5B30-8625-6B63FF0DAC42}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+Body')]
  DNVisualStyleElement_Tab_Body = interface(DDN.mscorlib.DNObject)
  ['{8EE24352-68D1-32D1-BC2E-C39156321B0E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_Body = class(TDNGenericImport<DNVisualStyleElement_Tab_BodyClass, DNVisualStyleElement_Tab_Body>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_PaneClass = interface(DDN.mscorlib.DNObjectClass)
  ['{514C6C3B-23C9-5CEE-A4B1-606FA0DD1002}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+Pane')]
  DNVisualStyleElement_Tab_Pane = interface(DDN.mscorlib.DNObject)
  ['{E7DB7897-8E3D-345D-982B-18F8576CB768}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_Pane = class(TDNGenericImport<DNVisualStyleElement_Tab_PaneClass, DNVisualStyleElement_Tab_Pane>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TabItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{36A202B5-95CD-522B-A673-CC02063D6D7E}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItem')]
  DNVisualStyleElement_Tab_TabItem = interface(DDN.mscorlib.DNObject)
  ['{D33D9A1A-CFB4-345D-806C-C44450545B1C}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TabItem = class(TDNGenericImport<DNVisualStyleElement_Tab_TabItemClass, DNVisualStyleElement_Tab_TabItem>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TabItemBothEdgesClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E5B780FE-1FF1-51F6-911D-00E45864AA10}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItemBothEdges')]
  DNVisualStyleElement_Tab_TabItemBothEdges = interface(DDN.mscorlib.DNObject)
  ['{E5DA5399-AECB-303F-91DF-63C9A25F2AAD}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TabItemBothEdges = class(TDNGenericImport<DNVisualStyleElement_Tab_TabItemBothEdgesClass, DNVisualStyleElement_Tab_TabItemBothEdges>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TabItemLeftEdgeClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FC177DB6-1F28-583E-9D39-18CEB0C4AC76}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItemLeftEdge')]
  DNVisualStyleElement_Tab_TabItemLeftEdge = interface(DDN.mscorlib.DNObject)
  ['{16C129E3-7768-3527-8CB6-FEFF99290395}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TabItemLeftEdge = class(TDNGenericImport<DNVisualStyleElement_Tab_TabItemLeftEdgeClass, DNVisualStyleElement_Tab_TabItemLeftEdge>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TabItemRightEdgeClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D23810BF-329C-5514-8E31-DC32F559E5F7}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TabItemRightEdge')]
  DNVisualStyleElement_Tab_TabItemRightEdge = interface(DDN.mscorlib.DNObject)
  ['{85C5F0F0-F16E-3CEB-92BE-74DC7CE94464}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TabItemRightEdge = class(TDNGenericImport<DNVisualStyleElement_Tab_TabItemRightEdgeClass, DNVisualStyleElement_Tab_TabItemRightEdge>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TopTabItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{B53278C5-7865-56D3-9880-6253BACC8AB9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItem')]
  DNVisualStyleElement_Tab_TopTabItem = interface(DDN.mscorlib.DNObject)
  ['{326B0706-7D0C-3C52-B4C7-99F8F86664B2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TopTabItem = class(TDNGenericImport<DNVisualStyleElement_Tab_TopTabItemClass, DNVisualStyleElement_Tab_TopTabItem>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TopTabItemBothEdgesClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D2F49821-CD7C-5B89-8CE6-44B421373EF4}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItemBothEdges')]
  DNVisualStyleElement_Tab_TopTabItemBothEdges = interface(DDN.mscorlib.DNObject)
  ['{B6AD7C00-6923-3531-9B97-AA14352C4C5E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TopTabItemBothEdges = class(TDNGenericImport<DNVisualStyleElement_Tab_TopTabItemBothEdgesClass, DNVisualStyleElement_Tab_TopTabItemBothEdges>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TopTabItemLeftEdgeClass = interface(DDN.mscorlib.DNObjectClass)
  ['{26AE405E-D033-5560-B19A-5A7A818E69E2}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItemLeftEdge')]
  DNVisualStyleElement_Tab_TopTabItemLeftEdge = interface(DDN.mscorlib.DNObject)
  ['{0E8AF5E2-FC71-3C3F-8541-F142641A7B56}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TopTabItemLeftEdge = class(TDNGenericImport<DNVisualStyleElement_Tab_TopTabItemLeftEdgeClass, DNVisualStyleElement_Tab_TopTabItemLeftEdge>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Tab_TopTabItemRightEdgeClass = interface(DDN.mscorlib.DNObjectClass)
  ['{71BDE21C-CB92-530C-8A4A-5D3329B9B2AD}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Tab+TopTabItemRightEdge')]
  DNVisualStyleElement_Tab_TopTabItemRightEdge = interface(DDN.mscorlib.DNObject)
  ['{6A943FC9-27C8-3FA7-9031-1800B87A06AC}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Tab_TopTabItemRightEdge = class(TDNGenericImport<DNVisualStyleElement_Tab_TopTabItemRightEdgeClass, DNVisualStyleElement_Tab_TopTabItemRightEdge>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskBandClass = interface(DDN.mscorlib.DNObjectClass)
  ['{279A5D6F-0061-54D7-ADFF-9F72A0C118CA}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand')]
  DNVisualStyleElement_TaskBand = interface(DDN.mscorlib.DNObject)
  ['{026EB3B7-4F6A-38ED-B73C-D10E165834E3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TaskBand = class(TDNGenericImport<DNVisualStyleElement_TaskBandClass, DNVisualStyleElement_TaskBand>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskBand_FlashButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FBB90ECF-D303-5E72-ADED-7D54239BC5BF}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand+FlashButton')]
  DNVisualStyleElement_TaskBand_FlashButton = interface(DDN.mscorlib.DNObject)
  ['{246BEB41-B1EC-38FA-A011-8119EAD52EC7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TaskBand_FlashButton = class(TDNGenericImport<DNVisualStyleElement_TaskBand_FlashButtonClass, DNVisualStyleElement_TaskBand_FlashButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskBand_FlashButtonGroupMenuClass = interface(DDN.mscorlib.DNObjectClass)
  ['{DCA2AA46-5CA5-55C8-A3AD-03A7093ADA60}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand+FlashButtonGroupMenu')]
  DNVisualStyleElement_TaskBand_FlashButtonGroupMenu = interface(DDN.mscorlib.DNObject)
  ['{4CAFFA49-03BA-36E9-A5F5-2092FA8701AF}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TaskBand_FlashButtonGroupMenu = class(TDNGenericImport<DNVisualStyleElement_TaskBand_FlashButtonGroupMenuClass, DNVisualStyleElement_TaskBand_FlashButtonGroupMenu>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskBand_GroupCountClass = interface(DDN.mscorlib.DNObjectClass)
  ['{AA4D7A5F-B1DF-5196-AAC1-38A42F81BEF2}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TaskBand+GroupCount')]
  DNVisualStyleElement_TaskBand_GroupCount = interface(DDN.mscorlib.DNObject)
  ['{2E218CCD-E936-3827-8F0C-61349296F7C3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TaskBand_GroupCount = class(TDNGenericImport<DNVisualStyleElement_TaskBand_GroupCountClass, DNVisualStyleElement_TaskBand_GroupCount>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskbarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{A1E942D5-D0A9-5589-9DAA-39D0F46438FA}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar')]
  DNVisualStyleElement_Taskbar = interface(DDN.mscorlib.DNObject)
  ['{4185095B-998D-3CDC-B32D-B138B55BF261}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar = class(TDNGenericImport<DNVisualStyleElement_TaskbarClass, DNVisualStyleElement_Taskbar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_BackgroundBottomClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1C60266D-6114-53A5-940E-792859CD4860}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundBottom')]
  DNVisualStyleElement_Taskbar_BackgroundBottom = interface(DDN.mscorlib.DNObject)
  ['{5E777520-5361-344A-B3A4-68A004976F1D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_BackgroundBottom = class(TDNGenericImport<DNVisualStyleElement_Taskbar_BackgroundBottomClass, DNVisualStyleElement_Taskbar_BackgroundBottom>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_BackgroundLeftClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8DCC076F-7D2C-5BF9-B8C6-E6FCCA0F56AC}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundLeft')]
  DNVisualStyleElement_Taskbar_BackgroundLeft = interface(DDN.mscorlib.DNObject)
  ['{3CBF68BF-C9D4-3888-A849-BA2FC264B0D3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_BackgroundLeft = class(TDNGenericImport<DNVisualStyleElement_Taskbar_BackgroundLeftClass, DNVisualStyleElement_Taskbar_BackgroundLeft>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_BackgroundRightClass = interface(DDN.mscorlib.DNObjectClass)
  ['{89614365-12BC-586E-B1C4-8AB205A16A91}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundRight')]
  DNVisualStyleElement_Taskbar_BackgroundRight = interface(DDN.mscorlib.DNObject)
  ['{D5DC1A2B-F912-3373-96D8-83B0846B4ABB}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_BackgroundRight = class(TDNGenericImport<DNVisualStyleElement_Taskbar_BackgroundRightClass, DNVisualStyleElement_Taskbar_BackgroundRight>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_BackgroundTopClass = interface(DDN.mscorlib.DNObjectClass)
  ['{99042B75-62F3-5942-8E70-A70ECD63F031}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+BackgroundTop')]
  DNVisualStyleElement_Taskbar_BackgroundTop = interface(DDN.mscorlib.DNObject)
  ['{B1BCFB97-3E20-3EB2-B280-4A448FF44705}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_BackgroundTop = class(TDNGenericImport<DNVisualStyleElement_Taskbar_BackgroundTopClass, DNVisualStyleElement_Taskbar_BackgroundTop>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_SizingBarBottomClass = interface(DDN.mscorlib.DNObjectClass)
  ['{602CCD57-43A0-53FD-AC13-D0FAD2FC7A3F}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarBottom')]
  DNVisualStyleElement_Taskbar_SizingBarBottom = interface(DDN.mscorlib.DNObject)
  ['{0EEB871C-5931-3D1C-A597-67AF4799BAB2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_SizingBarBottom = class(TDNGenericImport<DNVisualStyleElement_Taskbar_SizingBarBottomClass, DNVisualStyleElement_Taskbar_SizingBarBottom>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_SizingBarLeftClass = interface(DDN.mscorlib.DNObjectClass)
  ['{20F049F8-331A-5230-BFE7-8FA36D62CF32}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarLeft')]
  DNVisualStyleElement_Taskbar_SizingBarLeft = interface(DDN.mscorlib.DNObject)
  ['{A4C9242F-EC44-3CE3-95B0-E9F3928AC18F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_SizingBarLeft = class(TDNGenericImport<DNVisualStyleElement_Taskbar_SizingBarLeftClass, DNVisualStyleElement_Taskbar_SizingBarLeft>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_SizingBarRightClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1749A1F7-F5D1-5471-A01F-1DD8ACA1861B}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarRight')]
  DNVisualStyleElement_Taskbar_SizingBarRight = interface(DDN.mscorlib.DNObject)
  ['{008A5D42-5EA5-3B87-BB34-8F4BF072CCF3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_SizingBarRight = class(TDNGenericImport<DNVisualStyleElement_Taskbar_SizingBarRightClass, DNVisualStyleElement_Taskbar_SizingBarRight>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Taskbar_SizingBarTopClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D9D3A010-1ACD-5FC1-9AE2-3F91A6D48B15}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Taskbar+SizingBarTop')]
  DNVisualStyleElement_Taskbar_SizingBarTop = interface(DDN.mscorlib.DNObject)
  ['{DE55B9D4-FB4C-31E8-99F2-C12AEB743F5F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Taskbar_SizingBarTop = class(TDNGenericImport<DNVisualStyleElement_Taskbar_SizingBarTopClass, DNVisualStyleElement_Taskbar_SizingBarTop>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskbarClockClass = interface(DDN.mscorlib.DNObjectClass)
  ['{94D39076-EE13-5382-9E66-DBB40ECE11CE}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TaskbarClock')]
  DNVisualStyleElement_TaskbarClock = interface(DDN.mscorlib.DNObject)
  ['{9C23699C-D124-3132-A61B-BCE8E1887E76}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TaskbarClock = class(TDNGenericImport<DNVisualStyleElement_TaskbarClockClass, DNVisualStyleElement_TaskbarClock>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TaskbarClock_TimeClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6C4D2B11-EDE1-5353-ADF6-CAD67B7E4A5D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TaskbarClock+Time')]
  DNVisualStyleElement_TaskbarClock_Time = interface(DDN.mscorlib.DNObject)
  ['{9E02DBE6-E501-30B7-87B8-9A3750960BEA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TaskbarClock_Time = class(TDNGenericImport<DNVisualStyleElement_TaskbarClock_TimeClass, DNVisualStyleElement_TaskbarClock_Time>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TextBoxClass = interface(DDN.mscorlib.DNObjectClass)
  ['{97907969-D5C1-5F7D-9490-0D75C6657686}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox')]
  DNVisualStyleElement_TextBox = interface(DDN.mscorlib.DNObject)
  ['{04E27552-15F8-320C-AAEB-8730C1823C56}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TextBox = class(TDNGenericImport<DNVisualStyleElement_TextBoxClass, DNVisualStyleElement_TextBox>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TextBox_CaretClass = interface(DDN.mscorlib.DNObjectClass)
  ['{09071F8F-D255-5F67-9888-4AA4E415DBB5}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox+Caret')]
  DNVisualStyleElement_TextBox_Caret = interface(DDN.mscorlib.DNObject)
  ['{696B89D7-1C97-3B31-ABA7-1C124A39F613}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TextBox_Caret = class(TDNGenericImport<DNVisualStyleElement_TextBox_CaretClass, DNVisualStyleElement_TextBox_Caret>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TextBox_TextEditClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8573C5B1-E70A-504C-9786-B2055AC3ED9D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Selected: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_ReadOnly: DNVisualStyleElement;
    {class} function get_Assist: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Selected: DNVisualStyleElement read get_Selected;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property ReadOnly: DNVisualStyleElement read get_ReadOnly;
    {class} property Assist: DNVisualStyleElement read get_Assist;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox+TextEdit')]
  DNVisualStyleElement_TextBox_TextEdit = interface(DDN.mscorlib.DNObject)
  ['{FD395273-F2E6-3E37-98A3-A8FC07A865B3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TextBox_TextEdit = class(TDNGenericImport<DNVisualStyleElement_TextBox_TextEditClass, DNVisualStyleElement_TextBox_TextEdit>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{203918FD-F25E-5EEB-9334-5A140F07F76A}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar')]
  DNVisualStyleElement_ToolBar = interface(DDN.mscorlib.DNObject)
  ['{0C5D63C4-A24F-3C58-81F9-4AB8CC06FAF9}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar = class(TDNGenericImport<DNVisualStyleElement_ToolBarClass, DNVisualStyleElement_ToolBar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBar_ButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{16B3D574-0400-55E2-8606-E567570ED4CF}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Checked: DNVisualStyleElement;
    {class} function get_HotChecked: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property Checked: DNVisualStyleElement read get_Checked;
    {class} property HotChecked: DNVisualStyleElement read get_HotChecked;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button')]
  DNVisualStyleElement_ToolBar_Button = interface(DDN.mscorlib.DNObject)
  ['{73064C06-55E7-327A-A44B-8988B9B44B4B}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar_Button = class(TDNGenericImport<DNVisualStyleElement_ToolBar_ButtonClass, DNVisualStyleElement_ToolBar_Button>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBar_DropDownButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{AC20A217-4CA4-599E-A383-4C3A65FC82E4}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Checked: DNVisualStyleElement;
    {class} function get_HotChecked: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property Checked: DNVisualStyleElement read get_Checked;
    {class} property HotChecked: DNVisualStyleElement read get_HotChecked;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+DropDownButton')]
  DNVisualStyleElement_ToolBar_DropDownButton = interface(DDN.mscorlib.DNObject)
  ['{42AB9D14-5A82-385E-90C1-5F6F37F6C6DE}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar_DropDownButton = class(TDNGenericImport<DNVisualStyleElement_ToolBar_DropDownButtonClass, DNVisualStyleElement_ToolBar_DropDownButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBar_SeparatorHorizontalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{434B5A68-D20A-586B-AF40-F4C327ACBF17}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SeparatorHorizontal')]
  DNVisualStyleElement_ToolBar_SeparatorHorizontal = interface(DDN.mscorlib.DNObject)
  ['{D0192101-931E-36D4-9FA5-48DB206A6CCA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar_SeparatorHorizontal = class(TDNGenericImport<DNVisualStyleElement_ToolBar_SeparatorHorizontalClass, DNVisualStyleElement_ToolBar_SeparatorHorizontal>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBar_SeparatorVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{25E44E0D-65A2-595B-9DD1-370C7FE2A9DF}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SeparatorVertical')]
  DNVisualStyleElement_ToolBar_SeparatorVertical = interface(DDN.mscorlib.DNObject)
  ['{84D030D7-30D3-3C16-A005-2344A2BE35C4}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar_SeparatorVertical = class(TDNGenericImport<DNVisualStyleElement_ToolBar_SeparatorVerticalClass, DNVisualStyleElement_ToolBar_SeparatorVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBar_SplitButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{420238B5-5376-544C-B1A3-033E6177B48D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Checked: DNVisualStyleElement;
    {class} function get_HotChecked: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property Checked: DNVisualStyleElement read get_Checked;
    {class} property HotChecked: DNVisualStyleElement read get_HotChecked;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SplitButton')]
  DNVisualStyleElement_ToolBar_SplitButton = interface(DDN.mscorlib.DNObject)
  ['{7100D9BD-8E4E-3AC8-830D-5DB20610B3DA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar_SplitButton = class(TDNGenericImport<DNVisualStyleElement_ToolBar_SplitButtonClass, DNVisualStyleElement_ToolBar_SplitButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolBar_SplitButtonDropDownClass = interface(DDN.mscorlib.DNObjectClass)
  ['{2E38DCAF-0A3B-5465-B0AA-D2866FE783F0}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_Checked: DNVisualStyleElement;
    {class} function get_HotChecked: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property Checked: DNVisualStyleElement read get_Checked;
    {class} property HotChecked: DNVisualStyleElement read get_HotChecked;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+SplitButtonDropDown')]
  DNVisualStyleElement_ToolBar_SplitButtonDropDown = interface(DDN.mscorlib.DNObject)
  ['{B8339FBE-1E22-397A-8412-4314035F6B7A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolBar_SplitButtonDropDown = class(TDNGenericImport<DNVisualStyleElement_ToolBar_SplitButtonDropDownClass, DNVisualStyleElement_ToolBar_SplitButtonDropDown>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolTipClass = interface(DDN.mscorlib.DNObjectClass)
  ['{256FA13B-A2E9-5AF1-8849-3967D0F36D23}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip')]
  DNVisualStyleElement_ToolTip = interface(DDN.mscorlib.DNObject)
  ['{44B059C3-A42D-32CE-8770-7B8ACE604E55}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolTip = class(TDNGenericImport<DNVisualStyleElement_ToolTipClass, DNVisualStyleElement_ToolTip>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolTip_BalloonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0A2EBE1A-F601-5104-B48E-84C4669FED82}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Link: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Link: DNVisualStyleElement read get_Link;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+Balloon')]
  DNVisualStyleElement_ToolTip_Balloon = interface(DDN.mscorlib.DNObject)
  ['{F6B63CD4-C5CB-3D8C-8537-9121B588A7C3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolTip_Balloon = class(TDNGenericImport<DNVisualStyleElement_ToolTip_BalloonClass, DNVisualStyleElement_ToolTip_Balloon>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolTip_BalloonTitleClass = interface(DDN.mscorlib.DNObjectClass)
  ['{99A616E1-DE06-5171-B68C-27876C04DD34}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+BalloonTitle')]
  DNVisualStyleElement_ToolTip_BalloonTitle = interface(DDN.mscorlib.DNObject)
  ['{B090104D-1953-3921-BA34-61F204BEFEA7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolTip_BalloonTitle = class(TDNGenericImport<DNVisualStyleElement_ToolTip_BalloonTitleClass, DNVisualStyleElement_ToolTip_BalloonTitle>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolTip_CloseClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1E97E88E-896A-5CD3-8D61-7B7E04414313}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+Close')]
  DNVisualStyleElement_ToolTip_Close = interface(DDN.mscorlib.DNObject)
  ['{DAD4853C-0C87-31D2-9EEC-CBB3D65AF8A2}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolTip_Close = class(TDNGenericImport<DNVisualStyleElement_ToolTip_CloseClass, DNVisualStyleElement_ToolTip_Close>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolTip_StandardClass = interface(DDN.mscorlib.DNObjectClass)
  ['{5D265EFA-2C62-5F40-9713-665393C3AFDA}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Link: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Link: DNVisualStyleElement read get_Link;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+Standard')]
  DNVisualStyleElement_ToolTip_Standard = interface(DDN.mscorlib.DNObject)
  ['{BF2D2665-F4C1-3E43-9D23-7C500E951272}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolTip_Standard = class(TDNGenericImport<DNVisualStyleElement_ToolTip_StandardClass, DNVisualStyleElement_ToolTip_Standard>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_ToolTip_StandardTitleClass = interface(DDN.mscorlib.DNObjectClass)
  ['{7392BA81-F6A0-5911-A5CC-6CDAE01D91EB}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+ToolTip+StandardTitle')]
  DNVisualStyleElement_ToolTip_StandardTitle = interface(DDN.mscorlib.DNObject)
  ['{59813E90-34F4-3BCC-A045-039D8D624A59}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_ToolTip_StandardTitle = class(TDNGenericImport<DNVisualStyleElement_ToolTip_StandardTitleClass, DNVisualStyleElement_ToolTip_StandardTitle>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBarClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FABFD94D-E3E5-5FC6-B594-142046621D77}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar')]
  DNVisualStyleElement_TrackBar = interface(DDN.mscorlib.DNObject)
  ['{8D5275EB-DE23-3B2D-985F-5FEBFCF27835}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar = class(TDNGenericImport<DNVisualStyleElement_TrackBarClass, DNVisualStyleElement_TrackBar>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_ThumbClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E47FC8B2-FE17-5FF3-B311-1B500B187B33}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+Thumb')]
  DNVisualStyleElement_TrackBar_Thumb = interface(DDN.mscorlib.DNObject)
  ['{97D99810-10FA-3629-9C35-2FCEA791F2DC}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_Thumb = class(TDNGenericImport<DNVisualStyleElement_TrackBar_ThumbClass, DNVisualStyleElement_TrackBar_Thumb>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_ThumbBottomClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4EDE7767-F66E-55B3-9A6E-EAD8028347E6}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbBottom')]
  DNVisualStyleElement_TrackBar_ThumbBottom = interface(DDN.mscorlib.DNObject)
  ['{DF2B3046-79D7-338A-A1A6-7DFBFC7799A3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_ThumbBottom = class(TDNGenericImport<DNVisualStyleElement_TrackBar_ThumbBottomClass, DNVisualStyleElement_TrackBar_ThumbBottom>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_ThumbLeftClass = interface(DDN.mscorlib.DNObjectClass)
  ['{88154F93-F7E4-53FD-84BA-C9A9C81772B1}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbLeft')]
  DNVisualStyleElement_TrackBar_ThumbLeft = interface(DDN.mscorlib.DNObject)
  ['{4AA30FB0-7A56-3B7E-8BE7-FEFEE17F685A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_ThumbLeft = class(TDNGenericImport<DNVisualStyleElement_TrackBar_ThumbLeftClass, DNVisualStyleElement_TrackBar_ThumbLeft>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_ThumbRightClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D96937DB-0316-5B72-9063-1712A16FE4A9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbRight')]
  DNVisualStyleElement_TrackBar_ThumbRight = interface(DDN.mscorlib.DNObject)
  ['{15268FF7-EB2F-355C-81E4-38932FFEDB2A}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_ThumbRight = class(TDNGenericImport<DNVisualStyleElement_TrackBar_ThumbRightClass, DNVisualStyleElement_TrackBar_ThumbRight>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_ThumbTopClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E6D5C46C-9D19-5CFB-90EC-BE7A97A8FD96}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbTop')]
  DNVisualStyleElement_TrackBar_ThumbTop = interface(DDN.mscorlib.DNObject)
  ['{15B81740-2965-3BDB-85F0-F8C2DCE3A5D1}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_ThumbTop = class(TDNGenericImport<DNVisualStyleElement_TrackBar_ThumbTopClass, DNVisualStyleElement_TrackBar_ThumbTop>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_ThumbVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0AC2015C-C8E0-5BD7-9505-12EBECE9ADBF}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Focused: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Focused: DNVisualStyleElement read get_Focused;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+ThumbVertical')]
  DNVisualStyleElement_TrackBar_ThumbVertical = interface(DDN.mscorlib.DNObject)
  ['{0934BD3F-0B18-3A0F-8639-4A7775C80D54}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_ThumbVertical = class(TDNGenericImport<DNVisualStyleElement_TrackBar_ThumbVerticalClass, DNVisualStyleElement_TrackBar_ThumbVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_TicksClass = interface(DDN.mscorlib.DNObjectClass)
  ['{9F297D95-48AD-58B5-953C-E9435E569DD7}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+Ticks')]
  DNVisualStyleElement_TrackBar_Ticks = interface(DDN.mscorlib.DNObject)
  ['{DE74799C-4E1D-30AD-BC94-F82125B86999}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_Ticks = class(TDNGenericImport<DNVisualStyleElement_TrackBar_TicksClass, DNVisualStyleElement_TrackBar_Ticks>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_TicksVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{AEC53620-18FC-55DC-95B5-A71CABEA0222}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+TicksVertical')]
  DNVisualStyleElement_TrackBar_TicksVertical = interface(DDN.mscorlib.DNObject)
  ['{66113717-7863-366F-9E9B-629552AB6500}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_TicksVertical = class(TDNGenericImport<DNVisualStyleElement_TrackBar_TicksVerticalClass, DNVisualStyleElement_TrackBar_TicksVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_TrackClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4DDE0B71-6EF9-5E29-9AE6-4B5792757B51}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+Track')]
  DNVisualStyleElement_TrackBar_Track = interface(DDN.mscorlib.DNObject)
  ['{C4632473-26EF-37DC-ACBC-BE610CFC4FCF}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_Track = class(TDNGenericImport<DNVisualStyleElement_TrackBar_TrackClass, DNVisualStyleElement_TrackBar_Track>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrackBar_TrackVerticalClass = interface(DDN.mscorlib.DNObjectClass)
  ['{186BB5CB-8B26-5C0E-ACC1-7616C5DE87F4}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrackBar+TrackVertical')]
  DNVisualStyleElement_TrackBar_TrackVertical = interface(DDN.mscorlib.DNObject)
  ['{3E748E7E-4529-3904-9C3F-7B5CA7879FFF}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrackBar_TrackVertical = class(TDNGenericImport<DNVisualStyleElement_TrackBar_TrackVerticalClass, DNVisualStyleElement_TrackBar_TrackVertical>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrayNotifyClass = interface(DDN.mscorlib.DNObjectClass)
  ['{182209BA-9D56-5F63-ADB5-FD801218C974}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrayNotify')]
  DNVisualStyleElement_TrayNotify = interface(DDN.mscorlib.DNObject)
  ['{8BCFE4EB-D272-35BF-B638-9F67114E84FD}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrayNotify = class(TDNGenericImport<DNVisualStyleElement_TrayNotifyClass, DNVisualStyleElement_TrayNotify>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrayNotify_AnimateBackgroundClass = interface(DDN.mscorlib.DNObjectClass)
  ['{380136CA-9E81-51AB-87E2-95E4CE50F78B}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrayNotify+AnimateBackground')]
  DNVisualStyleElement_TrayNotify_AnimateBackground = interface(DDN.mscorlib.DNObject)
  ['{49848E34-75D5-3F88-9E0B-F80AD2B59183}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrayNotify_AnimateBackground = class(TDNGenericImport<DNVisualStyleElement_TrayNotify_AnimateBackgroundClass, DNVisualStyleElement_TrayNotify_AnimateBackground>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TrayNotify_BackgroundClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6D2F613F-0C9C-551F-AC7E-4DB6F42CB59C}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TrayNotify+Background')]
  DNVisualStyleElement_TrayNotify_Background = interface(DDN.mscorlib.DNObject)
  ['{6F645CBA-822B-3FC0-AB45-6339DE5F0613}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TrayNotify_Background = class(TDNGenericImport<DNVisualStyleElement_TrayNotify_BackgroundClass, DNVisualStyleElement_TrayNotify_Background>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TreeViewClass = interface(DDN.mscorlib.DNObjectClass)
  ['{7738BAC4-C4E0-5681-8559-C24868D23F21}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView')]
  DNVisualStyleElement_TreeView = interface(DDN.mscorlib.DNObject)
  ['{1B7AD1D2-E999-3273-8E2D-BF7AC333E55D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TreeView = class(TDNGenericImport<DNVisualStyleElement_TreeViewClass, DNVisualStyleElement_TreeView>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TreeView_BranchClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D43085AA-4315-5F79-8FBB-3334EE56E354}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView+Branch')]
  DNVisualStyleElement_TreeView_Branch = interface(DDN.mscorlib.DNObject)
  ['{7CC4E006-C987-3F09-98B2-1D6150EF0212}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TreeView_Branch = class(TDNGenericImport<DNVisualStyleElement_TreeView_BranchClass, DNVisualStyleElement_TreeView_Branch>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TreeView_GlyphClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E2497FF6-1A88-525D-AE7A-3D2EEDC27094}']
  { static getter & setter } 

    {class} function get_Closed: DNVisualStyleElement;
    {class} function get_Opened: DNVisualStyleElement;

  { static propertys } 

    {class} property Closed: DNVisualStyleElement read get_Closed;
    {class} property Opened: DNVisualStyleElement read get_Opened;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView+Glyph')]
  DNVisualStyleElement_TreeView_Glyph = interface(DDN.mscorlib.DNObject)
  ['{1109D115-25FA-37AE-99F5-A221B62697FA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TreeView_Glyph = class(TDNGenericImport<DNVisualStyleElement_TreeView_GlyphClass, DNVisualStyleElement_TreeView_Glyph>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_TreeView_ItemClass = interface(DDN.mscorlib.DNObjectClass)
  ['{839AA79B-2B8B-5FDB-ABB4-E973480BDDFF}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Selected: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;
    {class} function get_SelectedNotFocus: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Selected: DNVisualStyleElement read get_Selected;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
    {class} property SelectedNotFocus: DNVisualStyleElement read get_SelectedNotFocus;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+TreeView+Item')]
  DNVisualStyleElement_TreeView_Item = interface(DDN.mscorlib.DNObject)
  ['{4CE90110-F679-38CB-82F6-94BBC14AF197}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_TreeView_Item = class(TDNGenericImport<DNVisualStyleElement_TreeView_ItemClass, DNVisualStyleElement_TreeView_Item>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_WindowClass = interface(DDN.mscorlib.DNObjectClass)
  ['{84693FB7-F571-52DE-B142-2E8BE7D4CE41}']
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window')]
  DNVisualStyleElement_Window = interface(DDN.mscorlib.DNObject)
  ['{E46AC335-4704-368C-B792-C8149EC29F93}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window = class(TDNGenericImport<DNVisualStyleElement_WindowClass, DNVisualStyleElement_Window>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_CaptionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{09FBBDB8-6F60-5C41-AAC8-86005BABECD9}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+Caption')]
  DNVisualStyleElement_Window_Caption = interface(DDN.mscorlib.DNObject)
  ['{6633B21C-413D-3289-A27E-431D876E788E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_Caption = class(TDNGenericImport<DNVisualStyleElement_Window_CaptionClass, DNVisualStyleElement_Window_Caption>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_CaptionSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{E0C427A5-9125-595D-88A7-1F181FC9870D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+CaptionSizingTemplate')]
  DNVisualStyleElement_Window_CaptionSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{02CF4401-D90B-3FFA-94E5-C8ADC1515D1B}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_CaptionSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_CaptionSizingTemplateClass, DNVisualStyleElement_Window_CaptionSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_CloseButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{EF53E144-D882-5A37-B124-722AC71EF883}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+CloseButton')]
  DNVisualStyleElement_Window_CloseButton = interface(DDN.mscorlib.DNObject)
  ['{78306778-4B88-3184-9CB4-EF639DE68C33}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_CloseButton = class(TDNGenericImport<DNVisualStyleElement_Window_CloseButtonClass, DNVisualStyleElement_Window_CloseButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_DialogClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3FE858D9-A809-5BF5-A5E3-11F298BF0D2E}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+Dialog')]
  DNVisualStyleElement_Window_Dialog = interface(DDN.mscorlib.DNObject)
  ['{43524D02-DF73-37D0-ACE3-50976E1C97C3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_Dialog = class(TDNGenericImport<DNVisualStyleElement_Window_DialogClass, DNVisualStyleElement_Window_Dialog>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_FrameBottomClass = interface(DDN.mscorlib.DNObjectClass)
  ['{40480688-0E04-5D4C-BFD5-06F3BDF8ACCA}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameBottom')]
  DNVisualStyleElement_Window_FrameBottom = interface(DDN.mscorlib.DNObject)
  ['{81A79599-9A03-323F-BB29-830ED2DE3EC1}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_FrameBottom = class(TDNGenericImport<DNVisualStyleElement_Window_FrameBottomClass, DNVisualStyleElement_Window_FrameBottom>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_FrameBottomSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FB27D317-D824-53A6-8D3C-CB6E68761A36}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameBottomSizingTemplate')]
  DNVisualStyleElement_Window_FrameBottomSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{4EBD210A-FB1D-3E01-A30D-93FE155FCE58}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_FrameBottomSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_FrameBottomSizingTemplateClass, DNVisualStyleElement_Window_FrameBottomSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_FrameLeftClass = interface(DDN.mscorlib.DNObjectClass)
  ['{77067988-114D-5063-9130-BE3577460020}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameLeft')]
  DNVisualStyleElement_Window_FrameLeft = interface(DDN.mscorlib.DNObject)
  ['{1C56F9C1-1327-3904-B268-F1D9C037C7E7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_FrameLeft = class(TDNGenericImport<DNVisualStyleElement_Window_FrameLeftClass, DNVisualStyleElement_Window_FrameLeft>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_FrameLeftSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{F3979996-E7D4-51C4-9532-F1AEFD595509}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameLeftSizingTemplate')]
  DNVisualStyleElement_Window_FrameLeftSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{BC2F10CB-F3AF-3373-B159-69F9D56AAB8F}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_FrameLeftSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_FrameLeftSizingTemplateClass, DNVisualStyleElement_Window_FrameLeftSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_FrameRightClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FE54E471-D845-5032-955C-1AB7D4235B1E}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameRight')]
  DNVisualStyleElement_Window_FrameRight = interface(DDN.mscorlib.DNObject)
  ['{635AA8A7-612E-3EBF-B4E7-3A92C6495BF9}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_FrameRight = class(TDNGenericImport<DNVisualStyleElement_Window_FrameRightClass, DNVisualStyleElement_Window_FrameRight>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_FrameRightSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FF615071-3023-56E7-8A1F-3DC0CAE4AD36}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+FrameRightSizingTemplate')]
  DNVisualStyleElement_Window_FrameRightSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{B328F709-247E-33AE-BABE-B843D84D5E43}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_FrameRightSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_FrameRightSizingTemplateClass, DNVisualStyleElement_Window_FrameRightSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_HelpButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C7F9DAA5-086D-5181-8BA3-91FBF968373A}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+HelpButton')]
  DNVisualStyleElement_Window_HelpButton = interface(DDN.mscorlib.DNObject)
  ['{C7DE517B-9CB5-3CF0-87A3-62AE14FADF33}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_HelpButton = class(TDNGenericImport<DNVisualStyleElement_Window_HelpButtonClass, DNVisualStyleElement_Window_HelpButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_HorizontalScrollClass = interface(DDN.mscorlib.DNObjectClass)
  ['{DD0CEFF2-27C6-55AB-B5B8-31DC9DA145CD}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+HorizontalScroll')]
  DNVisualStyleElement_Window_HorizontalScroll = interface(DDN.mscorlib.DNObject)
  ['{59011D6D-8C89-3105-B43E-C2A719E02A5B}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_HorizontalScroll = class(TDNGenericImport<DNVisualStyleElement_Window_HorizontalScrollClass, DNVisualStyleElement_Window_HorizontalScroll>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_HorizontalThumbClass = interface(DDN.mscorlib.DNObjectClass)
  ['{8B91E94C-29B9-5843-9402-5B139DF5A4F8}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+HorizontalThumb')]
  DNVisualStyleElement_Window_HorizontalThumb = interface(DDN.mscorlib.DNObject)
  ['{79DD7E52-8311-34F6-BB42-E426BD257C69}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_HorizontalThumb = class(TDNGenericImport<DNVisualStyleElement_Window_HorizontalThumbClass, DNVisualStyleElement_Window_HorizontalThumb>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MaxButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C39AA0EA-AE1C-5B20-83B5-C2185F8B20AF}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MaxButton')]
  DNVisualStyleElement_Window_MaxButton = interface(DDN.mscorlib.DNObject)
  ['{8F7E80FF-5E68-35E3-B23B-88C8B5F99F1D}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MaxButton = class(TDNGenericImport<DNVisualStyleElement_Window_MaxButtonClass, DNVisualStyleElement_Window_MaxButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MaxCaptionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{43D4A15D-C6E9-5F60-BB7A-DFC730ABBE33}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MaxCaption')]
  DNVisualStyleElement_Window_MaxCaption = interface(DDN.mscorlib.DNObject)
  ['{C973D1D8-E92A-3106-A821-56684D3C45D3}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MaxCaption = class(TDNGenericImport<DNVisualStyleElement_Window_MaxCaptionClass, DNVisualStyleElement_Window_MaxCaption>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MdiCloseButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{4503F907-7859-5B22-9F1B-8D974876906D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiCloseButton')]
  DNVisualStyleElement_Window_MdiCloseButton = interface(DDN.mscorlib.DNObject)
  ['{47BF14C9-B144-33C9-8B8C-09D212210D14}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MdiCloseButton = class(TDNGenericImport<DNVisualStyleElement_Window_MdiCloseButtonClass, DNVisualStyleElement_Window_MdiCloseButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MdiHelpButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{A1A78ECD-A51A-5C96-996F-8F2DAEA91B4D}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiHelpButton')]
  DNVisualStyleElement_Window_MdiHelpButton = interface(DDN.mscorlib.DNObject)
  ['{0992E242-2F4C-348B-804A-930AC5C942A7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MdiHelpButton = class(TDNGenericImport<DNVisualStyleElement_Window_MdiHelpButtonClass, DNVisualStyleElement_Window_MdiHelpButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MdiMinButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{60110B5A-67DA-5A54-835B-6AB31C81088C}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiMinButton')]
  DNVisualStyleElement_Window_MdiMinButton = interface(DDN.mscorlib.DNObject)
  ['{F6B69921-1FE6-355B-9899-C621E051F625}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MdiMinButton = class(TDNGenericImport<DNVisualStyleElement_Window_MdiMinButtonClass, DNVisualStyleElement_Window_MdiMinButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MdiRestoreButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FD119CFA-CBC1-560D-99A6-6BB270F8C91A}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiRestoreButton')]
  DNVisualStyleElement_Window_MdiRestoreButton = interface(DDN.mscorlib.DNObject)
  ['{5A06B302-6349-3F49-94D6-A6E14ABD30AA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MdiRestoreButton = class(TDNGenericImport<DNVisualStyleElement_Window_MdiRestoreButtonClass, DNVisualStyleElement_Window_MdiRestoreButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MdiSysButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{1401823E-70EA-57A1-A6E5-6A56913591C9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MdiSysButton')]
  DNVisualStyleElement_Window_MdiSysButton = interface(DDN.mscorlib.DNObject)
  ['{E8DA3520-3CD1-314D-A19E-4046264F563C}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MdiSysButton = class(TDNGenericImport<DNVisualStyleElement_Window_MdiSysButtonClass, DNVisualStyleElement_Window_MdiSysButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MinButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{327B6BD8-898F-5D78-8FA9-F27EC5DEFA19}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MinButton')]
  DNVisualStyleElement_Window_MinButton = interface(DDN.mscorlib.DNObject)
  ['{FB6BDA41-D319-3558-9D6D-D5BFE84D834E}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MinButton = class(TDNGenericImport<DNVisualStyleElement_Window_MinButtonClass, DNVisualStyleElement_Window_MinButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_MinCaptionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{5EDD14BB-8028-52B6-85E8-AFE4B1073039}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+MinCaption')]
  DNVisualStyleElement_Window_MinCaption = interface(DDN.mscorlib.DNObject)
  ['{B0569BD4-01F8-3B20-90D0-1376206D7D24}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_MinCaption = class(TDNGenericImport<DNVisualStyleElement_Window_MinCaptionClass, DNVisualStyleElement_Window_MinCaption>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_RestoreButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{333628AD-4699-5B46-9DE9-D005E42991DC}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+RestoreButton')]
  DNVisualStyleElement_Window_RestoreButton = interface(DDN.mscorlib.DNObject)
  ['{D445E29B-D9E1-3ADD-AAF2-C825A03D9968}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_RestoreButton = class(TDNGenericImport<DNVisualStyleElement_Window_RestoreButtonClass, DNVisualStyleElement_Window_RestoreButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallCaptionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C37D5F0A-CB32-5376-856C-854FE9A50A28}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallCaption')]
  DNVisualStyleElement_Window_SmallCaption = interface(DDN.mscorlib.DNObject)
  ['{1759A23E-93F1-315D-9F37-70A67414FBD7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallCaption = class(TDNGenericImport<DNVisualStyleElement_Window_SmallCaptionClass, DNVisualStyleElement_Window_SmallCaption>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallCaptionSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{3AE31143-8BDB-53D5-BBA1-4A3251E4949E}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallCaptionSizingTemplate')]
  DNVisualStyleElement_Window_SmallCaptionSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{A4FDF7B7-CDF3-3742-A2B3-1897F3E0FFEA}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallCaptionSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_SmallCaptionSizingTemplateClass, DNVisualStyleElement_Window_SmallCaptionSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallCloseButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{434BFD06-8224-56A0-A3E5-3FC80F6F0F6C}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallCloseButton')]
  DNVisualStyleElement_Window_SmallCloseButton = interface(DDN.mscorlib.DNObject)
  ['{7CABD0E5-A1A1-37EB-9ADC-45B558DFCFA4}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallCloseButton = class(TDNGenericImport<DNVisualStyleElement_Window_SmallCloseButtonClass, DNVisualStyleElement_Window_SmallCloseButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallFrameBottomClass = interface(DDN.mscorlib.DNObjectClass)
  ['{053D18DC-DBC9-5D1C-AA78-6D38618FBAFC}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameBottom')]
  DNVisualStyleElement_Window_SmallFrameBottom = interface(DDN.mscorlib.DNObject)
  ['{8BA9E1CF-9781-3C78-86D2-2E1B40C29423}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallFrameBottom = class(TDNGenericImport<DNVisualStyleElement_Window_SmallFrameBottomClass, DNVisualStyleElement_Window_SmallFrameBottom>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallFrameBottomSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{38C3D134-ED97-5D99-B57B-1C1B54387447}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameBottomSizingTemplate')]
  DNVisualStyleElement_Window_SmallFrameBottomSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{A04F665F-6833-386A-A8CA-BC8CBD7DC1F9}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallFrameBottomSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_SmallFrameBottomSizingTemplateClass, DNVisualStyleElement_Window_SmallFrameBottomSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallFrameLeftClass = interface(DDN.mscorlib.DNObjectClass)
  ['{55E09A4F-A74C-54AB-B80F-EFD352DC5D93}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameLeft')]
  DNVisualStyleElement_Window_SmallFrameLeft = interface(DDN.mscorlib.DNObject)
  ['{01FBAD72-E382-374B-AD95-C7424840FE96}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallFrameLeft = class(TDNGenericImport<DNVisualStyleElement_Window_SmallFrameLeftClass, DNVisualStyleElement_Window_SmallFrameLeft>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallFrameLeftSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{C688519B-288A-5435-8879-68950F03B421}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameLeftSizingTemplate')]
  DNVisualStyleElement_Window_SmallFrameLeftSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{02579642-2537-3AE6-8A92-2F503001B501}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallFrameLeftSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_SmallFrameLeftSizingTemplateClass, DNVisualStyleElement_Window_SmallFrameLeftSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallFrameRightClass = interface(DDN.mscorlib.DNObjectClass)
  ['{767EB95C-5D2D-5ADF-ACEE-2E1335283760}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameRight')]
  DNVisualStyleElement_Window_SmallFrameRight = interface(DDN.mscorlib.DNObject)
  ['{BC5A4F34-C91D-3E1E-B448-12FE196A0072}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallFrameRight = class(TDNGenericImport<DNVisualStyleElement_Window_SmallFrameRightClass, DNVisualStyleElement_Window_SmallFrameRight>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallFrameRightSizingTemplateClass = interface(DDN.mscorlib.DNObjectClass)
  ['{990E26F9-5D00-5E45-A39D-0201CE6338A2}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallFrameRightSizingTemplate')]
  DNVisualStyleElement_Window_SmallFrameRightSizingTemplate = interface(DDN.mscorlib.DNObject)
  ['{E94064C0-BC05-3BE4-A08A-92E740D11D26}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallFrameRightSizingTemplate = class(TDNGenericImport<DNVisualStyleElement_Window_SmallFrameRightSizingTemplateClass, DNVisualStyleElement_Window_SmallFrameRightSizingTemplate>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallMaxCaptionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{01CCB086-479A-5D7A-B4AD-6C877E8D429F}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallMaxCaption')]
  DNVisualStyleElement_Window_SmallMaxCaption = interface(DDN.mscorlib.DNObject)
  ['{A9651EF1-FB83-3A08-8F1A-0FFE52DE1A71}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallMaxCaption = class(TDNGenericImport<DNVisualStyleElement_Window_SmallMaxCaptionClass, DNVisualStyleElement_Window_SmallMaxCaption>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SmallMinCaptionClass = interface(DDN.mscorlib.DNObjectClass)
  ['{0A960804-1C6E-5B62-BF33-44FB9C59884E}']
  { static getter & setter } 

    {class} function get_Active: DNVisualStyleElement;
    {class} function get_Inactive: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Active: DNVisualStyleElement read get_Active;
    {class} property Inactive: DNVisualStyleElement read get_Inactive;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SmallMinCaption')]
  DNVisualStyleElement_Window_SmallMinCaption = interface(DDN.mscorlib.DNObject)
  ['{E9D4C04B-8F73-377F-A936-6477B2510116}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SmallMinCaption = class(TDNGenericImport<DNVisualStyleElement_Window_SmallMinCaptionClass, DNVisualStyleElement_Window_SmallMinCaption>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_SysButtonClass = interface(DDN.mscorlib.DNObjectClass)
  ['{FAC2F2DF-F8FE-555E-AC0D-54ABDC40181B}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+SysButton')]
  DNVisualStyleElement_Window_SysButton = interface(DDN.mscorlib.DNObject)
  ['{B4E1F0F7-9506-36EC-94B2-AEA6597C7D70}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_SysButton = class(TDNGenericImport<DNVisualStyleElement_Window_SysButtonClass, DNVisualStyleElement_Window_SysButton>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_VerticalScrollClass = interface(DDN.mscorlib.DNObjectClass)
  ['{932A900F-662B-52E7-A953-FEF94B8A9AC9}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+VerticalScroll')]
  DNVisualStyleElement_Window_VerticalScroll = interface(DDN.mscorlib.DNObject)
  ['{91DC4D67-C196-3093-B583-06BCDD0E63E7}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_VerticalScroll = class(TDNGenericImport<DNVisualStyleElement_Window_VerticalScrollClass, DNVisualStyleElement_Window_VerticalScroll>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleElement_Window_VerticalThumbClass = interface(DDN.mscorlib.DNObjectClass)
  ['{6A347361-1E97-53D5-9C55-71D4432AD844}']
  { static getter & setter } 

    {class} function get_Normal: DNVisualStyleElement;
    {class} function get_Hot: DNVisualStyleElement;
    {class} function get_Pressed: DNVisualStyleElement;
    {class} function get_Disabled: DNVisualStyleElement;

  { static propertys } 

    {class} property Normal: DNVisualStyleElement read get_Normal;
    {class} property Hot: DNVisualStyleElement read get_Hot;
    {class} property Pressed: DNVisualStyleElement read get_Pressed;
    {class} property Disabled: DNVisualStyleElement read get_Disabled;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleElement+Window+VerticalThumb')]
  DNVisualStyleElement_Window_VerticalThumb = interface(DDN.mscorlib.DNObject)
  ['{1E71E308-846D-3DAA-B49A-7E7A84D67073}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleElement_Window_VerticalThumb = class(TDNGenericImport<DNVisualStyleElement_Window_VerticalThumbClass, DNVisualStyleElement_Window_VerticalThumb>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleInformationClass = interface(DDN.mscorlib.DNObjectClass)
  ['{F34E857F-4440-52D4-9922-9300127223BC}']
  { static getter & setter } 

    {class} function get_IsSupportedByOS: Boolean;
    {class} function get_IsEnabledByUser: Boolean;
    {class} function get_ColorScheme: string;
    {class} function get_Size: string;
    {class} function get_DisplayName: string;
    {class} function get_Company: string;
    {class} function get_Author: string;
    {class} function get_Copyright: string;
    {class} function get_Url: string;
    {class} function get_Version: string;
    {class} function get_Description: string;
    {class} function get_SupportsFlatMenus: Boolean;
    {class} function get_MinimumColorDepth: Int32;
    {class} function get_TextControlBorder: DDN.System.Drawing.DNColor;
    {class} function get_ControlHighlightHot: DDN.System.Drawing.DNColor;

  { static propertys } 

    {class} property IsSupportedByOS: Boolean read get_IsSupportedByOS;
    {class} property IsEnabledByUser: Boolean read get_IsEnabledByUser;
    {class} property ColorScheme: string read get_ColorScheme;
    {class} property Size: string read get_Size;
    {class} property DisplayName: string read get_DisplayName;
    {class} property Company: string read get_Company;
    {class} property Author: string read get_Author;
    {class} property Copyright: string read get_Copyright;
    {class} property Url: string read get_Url;
    {class} property Version: string read get_Version;
    {class} property Description: string read get_Description;
    {class} property SupportsFlatMenus: Boolean read get_SupportsFlatMenus;
    {class} property MinimumColorDepth: Int32 read get_MinimumColorDepth;
    {class} property TextControlBorder: DDN.System.Drawing.DNColor read get_TextControlBorder;
    {class} property ControlHighlightHot: DDN.System.Drawing.DNColor read get_ControlHighlightHot;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleInformation')]
  DNVisualStyleInformation = interface(DDN.mscorlib.DNObject)
  ['{AF1873D1-65F2-34DA-8F84-8EAD7A8AD4A9}']
  { methods } 

    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualStyleInformation = class(TDNGenericImport<DNVisualStyleInformationClass, DNVisualStyleInformation>) end;

  //-------------namespace: System.Windows.Forms.VisualStyles----------------
  DNVisualStyleRendererClass = interface(DDN.mscorlib.DNObjectClass)
  ['{48C86132-E78F-56DE-9C47-935CCFC5E24C}']
  { static getter & setter } 

    {class} function get_IsSupported: Boolean;

  { constructors } 

    {class} function init(element: DNVisualStyleElement): DNVisualStyleRenderer; overload;
    {class} function init(className: string; part: Int32; state: Int32): DNVisualStyleRenderer; overload;

  { static methods } 

    {class} function IsElementDefined(element: DNVisualStyleElement): Boolean;

  { static propertys } 

    {class} property IsSupported: Boolean read get_IsSupported;
  end;

  [DNTypeName('System.Windows.Forms.VisualStyles.VisualStyleRenderer')]
  DNVisualStyleRenderer = interface(DDN.mscorlib.DNObject)
  ['{6480FB46-6837-3A2A-AFC1-25E0CE098748}']
  { getters & setters } 

    function get_Class: string;
    function get_Part: Int32;
    function get_State: Int32;
    function get_Handle: IntPtr;
    function get_LastHResult: Int32;

  { methods } 

    function GetBackgroundContentRectangle(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    procedure SetParameters(element: DNVisualStyleElement); overload;
    procedure SetParameters(className: string; part: Int32; state: Int32); overload;
    procedure DrawBackground(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle); overload;
    procedure DrawBackground(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; clipRectangle: DDN.System.Drawing.DNRectangle); overload;
    procedure DrawImage(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; image: DDN.System.Drawing.DNImage); overload;
    procedure DrawParentBackground(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; childControl: DNControl);
    procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; textToDraw: string); overload;
    procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; textToDraw: string; drawDisabled: Boolean); overload;
    procedure DrawText(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; textToDraw: string; drawDisabled: Boolean; flags: DNTextFormatFlags); overload;
    function GetBackgroundRegion(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRegion;
    function GetBoolean(prop: DNBooleanProperty): Boolean;
    function GetColor(prop: DNColorProperty): DDN.System.Drawing.DNColor;
    function GetEnumValue(prop: DNEnumProperty): Int32;
    function GetFilename(prop: DNFilenameProperty): string;
    function GetFont(dc: DDN.System.Drawing.DNIDeviceContext; prop: DNFontProperty): DDN.System.Drawing.DNFont;
    function GetInteger(prop: DNIntegerProperty): Int32;
    function GetPartSize(dc: DDN.System.Drawing.DNIDeviceContext; &type: DNThemeSizeType): DDN.System.Drawing.DNSize; overload;
    function GetPartSize(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; &type: DNThemeSizeType): DDN.System.Drawing.DNSize; overload;
    function GetPoint(prop: DNPointProperty): DDN.System.Drawing.DNPoint;
    function GetMargins(dc: DDN.System.Drawing.DNIDeviceContext; prop: DNMarginProperty): DNPadding;
    function GetString(prop: DNStringProperty): string;
    function GetTextExtent(dc: DDN.System.Drawing.DNIDeviceContext; textToDraw: string; flags: DNTextFormatFlags): DDN.System.Drawing.DNRectangle; overload;
    function GetTextExtent(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; textToDraw: string; flags: DNTextFormatFlags): DDN.System.Drawing.DNRectangle; overload;
    function GetTextMetrics(dc: DDN.System.Drawing.DNIDeviceContext): DNTextMetrics;
    function HitTestBackground(dc: DDN.System.Drawing.DNIDeviceContext; backgroundRectangle: DDN.System.Drawing.DNRectangle; pt: DDN.System.Drawing.DNPoint; options: DNHitTestOptions): DNHitTestCode; overload;
    function HitTestBackground(g: DDN.System.Drawing.DNGraphics; backgroundRectangle: DDN.System.Drawing.DNRectangle; region: DDN.System.Drawing.DNRegion; pt: DDN.System.Drawing.DNPoint; options: DNHitTestOptions): DNHitTestCode; overload;
    function HitTestBackground(dc: DDN.System.Drawing.DNIDeviceContext; backgroundRectangle: DDN.System.Drawing.DNRectangle; hRgn: IntPtr; pt: DDN.System.Drawing.DNPoint; options: DNHitTestOptions): DNHitTestCode; overload;
    function IsBackgroundPartiallyTransparent: Boolean;
    function DrawEdge(dc: DDN.System.Drawing.DNIDeviceContext; bounds: DDN.System.Drawing.DNRectangle; edges: DNEdges; style: DNEdgeStyle; effects: DNEdgeEffects): DDN.System.Drawing.DNRectangle;
    procedure DrawImage(g: DDN.System.Drawing.DNGraphics; bounds: DDN.System.Drawing.DNRectangle; imageList: DNImageList; imageIndex: Int32); overload;
    function GetBackgroundExtent(dc: DDN.System.Drawing.DNIDeviceContext; contentBounds: DDN.System.Drawing.DNRectangle): DDN.System.Drawing.DNRectangle;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  { propertys } 

    property &Class: string read get_Class;
    property Part: Int32 read get_Part;
    property State: Int32 read get_State;
    property Handle: IntPtr read get_Handle;
    property LastHResult: Int32 read get_LastHResult;
  end;

  TDNVisualStyleRenderer = class(TDNGenericImport<DNVisualStyleRendererClass, DNVisualStyleRenderer>) end;

  //-------------namespace: System.Windows.Forms----------------
  DNWebBrowserSiteBaseClass = interface(DDN.mscorlib.DNObjectClass)
  ['{D5C58C76-18A4-5B23-8BEA-7F6AE6B10004}']
  end;

  [DNTypeName('System.Windows.Forms.WebBrowserSiteBase')]
  DNWebBrowserSiteBase = interface(DDN.mscorlib.DNObject)
  ['{8DD9661E-9018-3159-B1AD-A5A4FCC89F6A}']
  { methods } 

    procedure Dispose;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNWebBrowserSiteBase = class(TDNGenericImport<DNWebBrowserSiteBaseClass, DNWebBrowserSiteBase>) end;


implementation


initialization
  LoadAssemblyModule('System.Windows.Forms.dll', True);

finalization

end.
