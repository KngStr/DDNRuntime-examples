//----------------------------------------------------------------------------
//  System.Printing.dll: System.Printing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Framework 4.0
//----------------------------------------------------------------------------
//  UnitName: DDN.System.Windows.Xps
//  Author: ying32
//----------------------------------------------------------------------------

unit DDN.System.Windows.Xps;

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDN.mscorlib,
  DDN.PresentationFramework,
  DDN.ReachFramework,
  DDN.PresentationCore;

type

{ enums }

  //-------------namespace: System.Windows.Xps----------------
  [DNTypeName('System.Windows.Xps.XpsDocumentNotificationLevel')]
  DNXpsDocumentNotificationLevel = type Integer;
  DNXpsDocumentNotificationLevelHelper = record helper for DNXpsDocumentNotificationLevel
  public const
    None = 0;
    ReceiveNotificationEnabled = 1;
    ReceiveNotificationDisabled = 2;
  end;




type


{ declares }

  DNXpsWriterException = interface; // type: System.Windows.Xps.XpsWriterException, namespace: System.Windows.Xps
  DNXpsDocumentWriter = interface; // type: System.Windows.Xps.XpsDocumentWriter, namespace: System.Windows.Xps
  DNVisualsToXpsDocument = interface; // type: System.Windows.Xps.VisualsToXpsDocument, namespace: System.Windows.Xps


{ objects }

  //-------------namespace: System.Windows.Xps----------------
  DNXpsWriterExceptionClass = interface(DDN.mscorlib.DNExceptionClass)
  ['{9E00F93A-6967-59FD-AC51-4932C1B32B9D}']
  { constructors } 

    {class} function init(message: string; innerException: DDN.mscorlib.DNException): DNXpsWriterException; overload;
    {class} function init(message: string): DNXpsWriterException; overload;
    {class} function init: DNXpsWriterException; overload;

  end;

  [DNTypeName('System.Windows.Xps.XpsWriterException')]
  DNXpsWriterException = interface(DDN.mscorlib.DNException)
  ['{71331F4C-A5DA-392B-A607-37027A22CF73}']
  { getters & setters } 

    function get_Message: string;
    function get_Data: DDN.mscorlib.DNIDictionary;
    function get_InnerException: DDN.mscorlib.DNException;
    function get_TargetSite: DDN.mscorlib.DNMethodBase;
    function get_StackTrace: string;
    function get_HelpLink: string;
    procedure set_HelpLink(value: string);
    function get_Source: string;
    procedure set_Source(value: string);
    function get_HResult: Int32;

  { methods } 

    function GetBaseException: DDN.mscorlib.DNException;
    function ToString: string;
    procedure GetObjectData(info: DDN.mscorlib.DNSerializationInfo; context: DDN.mscorlib.DNStreamingContext);
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;

  { propertys } 

    property Message: string read get_Message;
    property Data: DDN.mscorlib.DNIDictionary read get_Data;
    property InnerException: DDN.mscorlib.DNException read get_InnerException;
    property TargetSite: DDN.mscorlib.DNMethodBase read get_TargetSite;
    property StackTrace: string read get_StackTrace;
    property HelpLink: string read get_HelpLink write set_HelpLink;
    property Source: string read get_Source write set_Source;
    property HResult: Int32 read get_HResult;
  end;

  TDNXpsWriterException = class(TDNGenericImport<DNXpsWriterExceptionClass, DNXpsWriterException>) end;

  //-------------namespace: System.Windows.Xps----------------
  DNXpsDocumentWriterClass = interface(DNObjectClass)
  ['{EDA04938-441E-501B-AB5F-1AF36C5233A3}']
  end;

  [DNTypeName('System.Windows.Xps.XpsDocumentWriter')]
  DNXpsDocumentWriter = interface(DNObject)
  ['{F398D7C3-13B0-3A47-90DD-C739F949136B}']
  { events } 


  { methods } 

    procedure Write(fixedPage: DDN.PresentationFramework.DNFixedPage; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure Write(fixedPage: DDN.PresentationFramework.DNFixedPage); overload;
    procedure Write(fixedDocument: DDN.PresentationFramework.DNFixedDocument; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure Write(fixedDocument: DDN.PresentationFramework.DNFixedDocument); overload;
    procedure Write(fixedDocumentSequence: DDN.PresentationFramework.DNFixedDocumentSequence; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure Write(fixedDocumentSequence: DDN.PresentationFramework.DNFixedDocumentSequence); overload;
    procedure Write(visual: DDN.PresentationCore.DNVisual; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure Write(visual: DDN.PresentationCore.DNVisual); overload;
    procedure Write(documentPaginator: DDN.PresentationCore.DNDocumentPaginator; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure Write(documentPaginator: DDN.PresentationCore.DNDocumentPaginator); overload;
    procedure Write(documentPath: string; notificationLevel: DNXpsDocumentNotificationLevel); overload;
    procedure Write(documentPath: string); overload;
    procedure WriteAsync(fixedPage: DDN.PresentationFramework.DNFixedPage; printTicket: DDN.ReachFramework.DNPrintTicket; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(fixedPage: DDN.PresentationFramework.DNFixedPage; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(fixedPage: DDN.PresentationFramework.DNFixedPage; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure WriteAsync(fixedPage: DDN.PresentationFramework.DNFixedPage); overload;
    procedure WriteAsync(fixedDocument: DDN.PresentationFramework.DNFixedDocument; printTicket: DDN.ReachFramework.DNPrintTicket; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(fixedDocument: DDN.PresentationFramework.DNFixedDocument; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(fixedDocument: DDN.PresentationFramework.DNFixedDocument; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure WriteAsync(fixedDocument: DDN.PresentationFramework.DNFixedDocument); overload;
    procedure WriteAsync(fixedDocumentSequence: DDN.PresentationFramework.DNFixedDocumentSequence; printTicket: DDN.ReachFramework.DNPrintTicket; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(fixedDocumentSequence: DDN.PresentationFramework.DNFixedDocumentSequence; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(fixedDocumentSequence: DDN.PresentationFramework.DNFixedDocumentSequence; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure WriteAsync(fixedDocumentSequence: DDN.PresentationFramework.DNFixedDocumentSequence); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual; printTicket: DDN.ReachFramework.DNPrintTicket; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual); overload;
    procedure WriteAsync(documentPaginator: DDN.PresentationCore.DNDocumentPaginator; printTicket: DDN.ReachFramework.DNPrintTicket; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(documentPaginator: DDN.PresentationCore.DNDocumentPaginator; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(documentPaginator: DDN.PresentationCore.DNDocumentPaginator; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure WriteAsync(documentPaginator: DDN.PresentationCore.DNDocumentPaginator); overload;
    procedure WriteAsync(documentPath: string; notificationLevel: DNXpsDocumentNotificationLevel); overload;
    procedure WriteAsync(documentPath: string); overload;
    procedure CancelAsync;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNXpsDocumentWriter = class(TDNGenericImport<DNXpsDocumentWriterClass, DNXpsDocumentWriter>) end;

  //-------------namespace: System.Windows.Xps----------------
  DNVisualsToXpsDocumentClass = interface(DNObjectClass)
  ['{3EACA6E5-DEB6-5D97-88B0-B253816007B9}']
  end;

  [DNTypeName('System.Windows.Xps.VisualsToXpsDocument')]
  DNVisualsToXpsDocument = interface(DNObject)
  ['{7A0C58B6-6D57-31EB-AF35-A3FC337B5249}']
  { methods } 

    procedure BeginBatchWrite;
    procedure EndBatchWrite;
    procedure Write(visual: DDN.PresentationCore.DNVisual; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure Write(visual: DDN.PresentationCore.DNVisual); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual; printTicket: DDN.ReachFramework.DNPrintTicket; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual; userSuppliedState: DDN.mscorlib.DNObject); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual; printTicket: DDN.ReachFramework.DNPrintTicket); overload;
    procedure WriteAsync(visual: DDN.PresentationCore.DNVisual); overload;
    procedure CancelAsync;
    procedure Cancel;
    function Equals(obj: DDN.mscorlib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDN.mscorlib.DNType;
    function ToString: string;

  end;

  TDNVisualsToXpsDocument = class(TDNGenericImport<DNVisualsToXpsDocumentClass, DNVisualsToXpsDocument>) end;


implementation

end.
