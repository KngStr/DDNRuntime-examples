//----------------------------------------------------------------------------
//  System.Reflection.TypeExtensions.dll: System.Reflection.TypeExtensions, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
//----------------------------------------------------------------------------
//  The code is automatically generated by the GenCodeNET tool.
//----------------------------------------------------------------------------
//  .NET Core 2.1.30
//----------------------------------------------------------------------------
//  UnitName: DDNC.System.Reflection.TypeExtensions
//  Author: ying32
//----------------------------------------------------------------------------

{$IFNDEF DDNCSYSTEMREFLECTIONTYPEEXTENSIONS}
unit DDNC.System.Reflection.TypeExtensions;
{$ENDIF}

{$IFDEF FPC}
  {$mode delphi}//{$H+}
  {$modeswitch advancedrecords}
  {$modeswitch prefixedattributes} // Custom attributes featureï¼Œfpc3.2.2+
{$ENDIF}

interface

uses
  DDN.Runtime,
  DDNC.System.Private.CoreLib;

type


{ declares }

  DNAssemblyExtensions = interface; // type: System.Reflection.AssemblyExtensions, namespace: System.Reflection
  DNEventInfoExtensions = interface; // type: System.Reflection.EventInfoExtensions, namespace: System.Reflection
  DNMemberInfoExtensions = interface; // type: System.Reflection.MemberInfoExtensions, namespace: System.Reflection
  DNMethodInfoExtensions = interface; // type: System.Reflection.MethodInfoExtensions, namespace: System.Reflection
  DNModuleExtensions = interface; // type: System.Reflection.ModuleExtensions, namespace: System.Reflection
  DNPropertyInfoExtensions = interface; // type: System.Reflection.PropertyInfoExtensions, namespace: System.Reflection
  DNTypeExtensions = interface; // type: System.Reflection.TypeExtensions, namespace: System.Reflection


{ objects }

  //-------------namespace: System.Reflection----------------
  DNAssemblyExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{8CD0A5CB-8AC5-5D6B-B8F8-4316A40DF9B8}']
  { static methods } 

    {class} function GetExportedTypes(assembly: DDNC.System.Private.CoreLib.DNAssembly): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetModules(assembly: DDNC.System.Private.CoreLib.DNAssembly): TArray<DDNC.System.Private.CoreLib.DNModule>;
    {class} function GetTypes(assembly: DDNC.System.Private.CoreLib.DNAssembly): TArray<DDNC.System.Private.CoreLib.DNType>;

  end;

  [DNTypeName('System.Reflection.AssemblyExtensions')]
  DNAssemblyExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{83383F6D-733F-3EA9-97AC-0E2A073F57EC}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNAssemblyExtensions = class(TDNGenericImport<DNAssemblyExtensionsClass, DNAssemblyExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNEventInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{018EEFC1-35EE-5B14-872F-E1CE9226C063}']
  { static methods } 

    {class} function GetAddMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetAddMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRaiseMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRaiseMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRemoveMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetRemoveMethod(eventInfo: DDNC.System.Private.CoreLib.DNEventInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;

  end;

  [DNTypeName('System.Reflection.EventInfoExtensions')]
  DNEventInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{8E002843-2644-3812-8A0A-DAD2D0C9F503}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNEventInfoExtensions = class(TDNGenericImport<DNEventInfoExtensionsClass, DNEventInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNMemberInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{46982584-0488-5B63-81D1-D0B0F210DDAE}']
  { static methods } 

    {class} function HasMetadataToken(member: DDNC.System.Private.CoreLib.DNMemberInfo): Boolean;
    {class} function GetMetadataToken(member: DDNC.System.Private.CoreLib.DNMemberInfo): Int32;

  end;

  [DNTypeName('System.Reflection.MemberInfoExtensions')]
  DNMemberInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{F9E52604-B77B-38B5-8D90-5D0451892BB1}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNMemberInfoExtensions = class(TDNGenericImport<DNMemberInfoExtensionsClass, DNMemberInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNMethodInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{D52831FA-5941-5E14-AE7C-AECD19B9FA47}']
  { static methods } 

    {class} function GetBaseDefinition(method: DDNC.System.Private.CoreLib.DNMethodInfo): DDNC.System.Private.CoreLib.DNMethodInfo;

  end;

  [DNTypeName('System.Reflection.MethodInfoExtensions')]
  DNMethodInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{47093CFF-B690-3DB7-B2D2-164A93801C57}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNMethodInfoExtensions = class(TDNGenericImport<DNMethodInfoExtensionsClass, DNMethodInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNModuleExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{0FD713EF-06F8-5E36-BC13-7F0233EC1071}']
  { static methods } 

    {class} function HasModuleVersionId(module: DDNC.System.Private.CoreLib.DNModule): Boolean;
    {class} function GetModuleVersionId(module: DDNC.System.Private.CoreLib.DNModule): DDNC.System.Private.CoreLib.DNGuid;

  end;

  [DNTypeName('System.Reflection.ModuleExtensions')]
  DNModuleExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{18C8EE9F-ADC7-3FC8-8991-157FE50F6666}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNModuleExtensions = class(TDNGenericImport<DNModuleExtensionsClass, DNModuleExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNPropertyInfoExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{29E49C91-2F6C-564A-94AA-68CBDA4FBA09}']
  { static methods } 

    {class} function GetAccessors(&property: DDNC.System.Private.CoreLib.DNPropertyInfo): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetAccessors(&property: DDNC.System.Private.CoreLib.DNPropertyInfo; nonPublic: Boolean): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetGetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetGetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetSetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetSetMethod(&property: DDNC.System.Private.CoreLib.DNPropertyInfo; nonPublic: Boolean): DDNC.System.Private.CoreLib.DNMethodInfo; overload;

  end;

  [DNTypeName('System.Reflection.PropertyInfoExtensions')]
  DNPropertyInfoExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{FF61FF4A-1BBA-3F67-98CF-B268B820FB30}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNPropertyInfoExtensions = class(TDNGenericImport<DNPropertyInfoExtensionsClass, DNPropertyInfoExtensions>) end;

  //-------------namespace: System.Reflection----------------
  DNTypeExtensionsClass = interface(DDNC.System.Private.CoreLib.DNObjectClass)
  ['{9DCFFD43-0952-5E19-B071-E152087DA171}']
  { static methods } 

    {class} function GetConstructor(&type: DDNC.System.Private.CoreLib.DNType; types: TArray<DDNC.System.Private.CoreLib.DNType>): DDNC.System.Private.CoreLib.DNConstructorInfo;
    {class} function GetConstructors(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNConstructorInfo>; overload;
    {class} function GetConstructors(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNConstructorInfo>; overload;
    {class} function GetDefaultMembers(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>;
    {class} function GetEvent(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNEventInfo; overload;
    {class} function GetEvent(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNEventInfo; overload;
    {class} function GetEvents(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNEventInfo>; overload;
    {class} function GetEvents(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNEventInfo>; overload;
    {class} function GetField(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNFieldInfo; overload;
    {class} function GetField(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNFieldInfo; overload;
    {class} function GetFields(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNFieldInfo>; overload;
    {class} function GetFields(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNFieldInfo>; overload;
    {class} function GetGenericArguments(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetInterfaces(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetMember(&type: DDNC.System.Private.CoreLib.DNType; name: string): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMember(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMembers(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMembers(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNMemberInfo>; overload;
    {class} function GetMethod(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetMethod(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetMethod(&type: DDNC.System.Private.CoreLib.DNType; name: string; types: TArray<DDNC.System.Private.CoreLib.DNType>): DDNC.System.Private.CoreLib.DNMethodInfo; overload;
    {class} function GetMethods(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetMethods(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNMethodInfo>; overload;
    {class} function GetNestedType(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNType;
    {class} function GetNestedTypes(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNType>;
    {class} function GetProperties(&type: DDNC.System.Private.CoreLib.DNType): TArray<DDNC.System.Private.CoreLib.DNPropertyInfo>; overload;
    {class} function GetProperties(&type: DDNC.System.Private.CoreLib.DNType; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): TArray<DDNC.System.Private.CoreLib.DNPropertyInfo>; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string; bindingAttr: DDNC.System.Private.CoreLib.DNBindingFlags): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string; returnType: DDNC.System.Private.CoreLib.DNType): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function GetProperty(&type: DDNC.System.Private.CoreLib.DNType; name: string; returnType: DDNC.System.Private.CoreLib.DNType; types: TArray<DDNC.System.Private.CoreLib.DNType>): DDNC.System.Private.CoreLib.DNPropertyInfo; overload;
    {class} function IsAssignableFrom(&type: DDNC.System.Private.CoreLib.DNType; c: DDNC.System.Private.CoreLib.DNType): Boolean;
    {class} function IsInstanceOfType(&type: DDNC.System.Private.CoreLib.DNType; o: DDNC.System.Private.CoreLib.DNObject): Boolean;

  end;

  [DNTypeName('System.Reflection.TypeExtensions')]
  DNTypeExtensions = interface(DDNC.System.Private.CoreLib.DNObject)
  ['{77054B5A-1AD3-376B-AE5E-B3DAB91E0C52}']
  { methods } 

    function ToString: string;
    function Equals(obj: DDNC.System.Private.CoreLib.DNObject): Boolean;
    function GetHashCode: Int32;
    function GetType: DDNC.System.Private.CoreLib.DNType;

  end;

  TDNTypeExtensions = class(TDNGenericImport<DNTypeExtensionsClass, DNTypeExtensions>) end;


implementation


initialization
  LoadAssemblyModule('System.Reflection.TypeExtensions.dll', True, 'System.Reflection.TypeExtensions, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a');

finalization

end.
